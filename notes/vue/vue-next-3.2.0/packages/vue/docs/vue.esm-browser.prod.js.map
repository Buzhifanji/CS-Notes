{"version":3,"file":"vue.esm-browser.prod.js","sources":["../../shared/src/makeMap.ts","../../shared/src/globalsWhitelist.ts","../../shared/src/domAttrConfig.ts","../../shared/src/normalizeProp.ts","../../shared/src/domTagConfig.ts","../../shared/src/looseEqual.ts","../../shared/src/toDisplayString.ts","../../shared/src/index.ts","../../reactivity/src/dep.ts","../../reactivity/src/effectScope.ts","../../reactivity/src/effect.ts","../../reactivity/src/baseHandlers.ts","../../reactivity/src/collectionHandlers.ts","../../reactivity/src/reactive.ts","../../reactivity/src/ref.ts","../../reactivity/src/computed.ts","../../runtime-core/src/devtools.ts","../../runtime-core/src/componentEmits.ts","../../runtime-core/src/componentRenderContext.ts","../../runtime-core/src/componentRenderUtils.ts","../../runtime-core/src/components/Suspense.ts","../../runtime-core/src/apiInject.ts","../../runtime-core/src/components/BaseTransition.ts","../../runtime-core/src/apiDefineComponent.ts","../../runtime-core/src/apiAsyncComponent.ts","../../runtime-core/src/components/KeepAlive.ts","../../runtime-core/src/apiLifecycle.ts","../../runtime-core/src/componentOptions.ts","../../runtime-core/src/componentProps.ts","../../runtime-core/src/componentSlots.ts","../../runtime-core/src/directives.ts","../../runtime-core/src/apiCreateApp.ts","../../runtime-core/src/hydration.ts","../../runtime-core/src/renderer.ts","../../runtime-core/src/component.ts","../../runtime-core/src/scheduler.ts","../../runtime-core/src/components/Teleport.ts","../../runtime-core/src/helpers/resolveAssets.ts","../../runtime-core/src/vnode.ts","../../runtime-core/src/helpers/renderList.ts","../../runtime-core/src/helpers/createSlots.ts","../../runtime-core/src/helpers/renderSlot.ts","../../runtime-core/src/helpers/toHandlers.ts","../../runtime-core/src/componentPublicInstance.ts","../../runtime-core/src/warning.ts","../../runtime-core/src/errorHandling.ts","../../runtime-core/src/apiWatch.ts","../../runtime-core/src/apiSetupHelpers.ts","../../runtime-core/src/h.ts","../../runtime-core/src/helpers/useSsrContext.ts","../../runtime-core/src/customFormatter.ts","../../runtime-core/src/helpers/withMemo.ts","../../runtime-core/src/helpers/refSugar.ts","../../runtime-core/src/index.ts","../../runtime-dom/src/nodeOps.ts","../../runtime-dom/src/modules/style.ts","../../runtime-dom/src/modules/attrs.ts","../../runtime-dom/src/modules/events.ts","../../runtime-dom/src/patchProp.ts","../../runtime-dom/src/apiCustomElement.ts","../../runtime-dom/src/helpers/useCssModule.ts","../../runtime-dom/src/helpers/useCssVars.ts","../../runtime-dom/src/components/Transition.ts","../../runtime-dom/src/components/TransitionGroup.ts","../../runtime-dom/src/directives/vModel.ts","../../runtime-dom/src/directives/vOn.ts","../../runtime-dom/src/directives/vShow.ts","../../runtime-dom/src/index.ts","../../runtime-dom/src/modules/class.ts","../../runtime-dom/src/modules/props.ts","../../compiler-core/src/errors.ts","../../compiler-core/src/runtimeHelpers.ts","../../compiler-core/src/ast.ts","../../compiler-core/src/utils.ts","../../compiler-core/src/parse.ts","../../compiler-core/src/transforms/hoistStatic.ts","../../compiler-core/src/transform.ts","../../compiler-core/src/codegen.ts","../../compiler-core/src/transforms/vIf.ts","../../compiler-core/src/transforms/vFor.ts","../../compiler-core/src/transforms/vSlot.ts","../../compiler-core/src/transforms/transformElement.ts","../../compiler-core/src/transforms/transformSlotOutlet.ts","../../compiler-core/src/transforms/vOn.ts","../../compiler-core/src/transforms/vBind.ts","../../compiler-core/src/transforms/transformText.ts","../../compiler-core/src/transforms/vOnce.ts","../../compiler-core/src/transforms/vModel.ts","../../compiler-core/src/transforms/vMemo.ts","../../compiler-core/src/compile.ts","../../compiler-core/src/transforms/noopDirectiveTransform.ts","../../compiler-dom/src/runtimeHelpers.ts","../../compiler-dom/src/decodeHtmlBrowser.ts","../../compiler-dom/src/parserOptions.ts","../../compiler-dom/src/transforms/transformStyle.ts","../../compiler-dom/src/transforms/vHtml.ts","../../compiler-dom/src/transforms/vOn.ts","../../compiler-dom/src/transforms/ignoreSideEffectTags.ts","../../compiler-dom/src/index.ts","../../compiler-dom/src/transforms/vText.ts","../../compiler-dom/src/transforms/vModel.ts","../../compiler-dom/src/transforms/vShow.ts","../src/index.ts"],"sourcesContent":["/**\r\n * Make a map and return a function for checking if a key\r\n * is in that map.\r\n * IMPORTANT: all calls of this function must be prefixed with\r\n * \\/\\*#\\_\\_PURE\\_\\_\\*\\/\r\n * So that rollup can tree-shake them if necessary.\r\n */\r\nexport function makeMap(\r\n  str: string,\r\n  expectsLowerCase?: boolean\r\n): (key: string) => boolean {\r\n  const map: Record<string, boolean> = Object.create(null)\r\n  const list: Array<string> = str.split(',')\r\n  for (let i = 0; i < list.length; i++) {\r\n    map[list[i]] = true\r\n  }\r\n  return expectsLowerCase ? val => !!map[val.toLowerCase()] : val => !!map[val]\r\n}\r\n","import { makeMap } from './makeMap'\r\n\r\nconst GLOBALS_WHITE_LISTED =\r\n  'Infinity,undefined,NaN,isFinite,isNaN,parseFloat,parseInt,decodeURI,' +\r\n  'decodeURIComponent,encodeURI,encodeURIComponent,Math,Number,Date,Array,' +\r\n  'Object,Boolean,String,RegExp,Map,Set,JSON,Intl,BigInt'\r\n\r\nexport const isGloballyWhitelisted = /*#__PURE__*/ makeMap(GLOBALS_WHITE_LISTED)\r\n","import { makeMap } from './makeMap'\r\n\r\n/**\r\n * On the client we only need to offer special cases for boolean attributes that\r\n * have different names from their corresponding dom properties:\r\n * - itemscope -> N/A\r\n * - allowfullscreen -> allowFullscreen\r\n * - formnovalidate -> formNoValidate\r\n * - ismap -> isMap\r\n * - nomodule -> noModule\r\n * - novalidate -> noValidate\r\n * - readonly -> readOnly\r\n */\r\nconst specialBooleanAttrs = `itemscope,allowfullscreen,formnovalidate,ismap,nomodule,novalidate,readonly`\r\nexport const isSpecialBooleanAttr = /*#__PURE__*/ makeMap(specialBooleanAttrs)\r\n\r\n/**\r\n * The full list is needed during SSR to produce the correct initial markup.\r\n */\r\nexport const isBooleanAttr = /*#__PURE__*/ makeMap(\r\n  specialBooleanAttrs +\r\n    `,async,autofocus,autoplay,controls,default,defer,disabled,hidden,` +\r\n    `loop,open,required,reversed,scoped,seamless,` +\r\n    `checked,muted,multiple,selected`\r\n)\r\n\r\nconst unsafeAttrCharRE = /[>/=\"'\\u0009\\u000a\\u000c\\u0020]/\r\nconst attrValidationCache: Record<string, boolean> = {}\r\n\r\nexport function isSSRSafeAttrName(name: string): boolean {\r\n  if (attrValidationCache.hasOwnProperty(name)) {\r\n    return attrValidationCache[name]\r\n  }\r\n  const isUnsafe = unsafeAttrCharRE.test(name)\r\n  if (isUnsafe) {\r\n    console.error(`unsafe attribute name: ${name}`)\r\n  }\r\n  return (attrValidationCache[name] = !isUnsafe)\r\n}\r\n\r\nexport const propsToAttrMap: Record<string, string | undefined> = {\r\n  acceptCharset: 'accept-charset',\r\n  className: 'class',\r\n  htmlFor: 'for',\r\n  httpEquiv: 'http-equiv'\r\n}\r\n\r\n/**\r\n * CSS properties that accept plain numbers\r\n */\r\nexport const isNoUnitNumericStyleProp = /*#__PURE__*/ makeMap(\r\n  `animation-iteration-count,border-image-outset,border-image-slice,` +\r\n    `border-image-width,box-flex,box-flex-group,box-ordinal-group,column-count,` +\r\n    `columns,flex,flex-grow,flex-positive,flex-shrink,flex-negative,flex-order,` +\r\n    `grid-row,grid-row-end,grid-row-span,grid-row-start,grid-column,` +\r\n    `grid-column-end,grid-column-span,grid-column-start,font-weight,line-clamp,` +\r\n    `line-height,opacity,order,orphans,tab-size,widows,z-index,zoom,` +\r\n    // SVG\r\n    `fill-opacity,flood-opacity,stop-opacity,stroke-dasharray,stroke-dashoffset,` +\r\n    `stroke-miterlimit,stroke-opacity,stroke-width`\r\n)\r\n\r\n/**\r\n * Known attributes, this is used for stringification of runtime static nodes\r\n * so that we don't stringify bindings that cannot be set from HTML.\r\n * Don't also forget to allow `data-*` and `aria-*`!\r\n * Generated from https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes\r\n */\r\nexport const isKnownHtmlAttr = /*#__PURE__*/ makeMap(\r\n  `accept,accept-charset,accesskey,action,align,allow,alt,async,` +\r\n    `autocapitalize,autocomplete,autofocus,autoplay,background,bgcolor,` +\r\n    `border,buffered,capture,challenge,charset,checked,cite,class,code,` +\r\n    `codebase,color,cols,colspan,content,contenteditable,contextmenu,controls,` +\r\n    `coords,crossorigin,csp,data,datetime,decoding,default,defer,dir,dirname,` +\r\n    `disabled,download,draggable,dropzone,enctype,enterkeyhint,for,form,` +\r\n    `formaction,formenctype,formmethod,formnovalidate,formtarget,headers,` +\r\n    `height,hidden,high,href,hreflang,http-equiv,icon,id,importance,integrity,` +\r\n    `ismap,itemprop,keytype,kind,label,lang,language,loading,list,loop,low,` +\r\n    `manifest,max,maxlength,minlength,media,min,multiple,muted,name,novalidate,` +\r\n    `open,optimum,pattern,ping,placeholder,poster,preload,radiogroup,readonly,` +\r\n    `referrerpolicy,rel,required,reversed,rows,rowspan,sandbox,scope,scoped,` +\r\n    `selected,shape,size,sizes,slot,span,spellcheck,src,srcdoc,srclang,srcset,` +\r\n    `start,step,style,summary,tabindex,target,title,translate,type,usemap,` +\r\n    `value,width,wrap`\r\n)\r\n\r\n/**\r\n * Generated from https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute\r\n */\r\nexport const isKnownSvgAttr = /*#__PURE__*/ makeMap(\r\n  `xmlns,accent-height,accumulate,additive,alignment-baseline,alphabetic,amplitude,` +\r\n    `arabic-form,ascent,attributeName,attributeType,azimuth,baseFrequency,` +\r\n    `baseline-shift,baseProfile,bbox,begin,bias,by,calcMode,cap-height,class,` +\r\n    `clip,clipPathUnits,clip-path,clip-rule,color,color-interpolation,` +\r\n    `color-interpolation-filters,color-profile,color-rendering,` +\r\n    `contentScriptType,contentStyleType,crossorigin,cursor,cx,cy,d,decelerate,` +\r\n    `descent,diffuseConstant,direction,display,divisor,dominant-baseline,dur,dx,` +\r\n    `dy,edgeMode,elevation,enable-background,end,exponent,fill,fill-opacity,` +\r\n    `fill-rule,filter,filterRes,filterUnits,flood-color,flood-opacity,` +\r\n    `font-family,font-size,font-size-adjust,font-stretch,font-style,` +\r\n    `font-variant,font-weight,format,from,fr,fx,fy,g1,g2,glyph-name,` +\r\n    `glyph-orientation-horizontal,glyph-orientation-vertical,glyphRef,` +\r\n    `gradientTransform,gradientUnits,hanging,height,href,hreflang,horiz-adv-x,` +\r\n    `horiz-origin-x,id,ideographic,image-rendering,in,in2,intercept,k,k1,k2,k3,` +\r\n    `k4,kernelMatrix,kernelUnitLength,kerning,keyPoints,keySplines,keyTimes,` +\r\n    `lang,lengthAdjust,letter-spacing,lighting-color,limitingConeAngle,local,` +\r\n    `marker-end,marker-mid,marker-start,markerHeight,markerUnits,markerWidth,` +\r\n    `mask,maskContentUnits,maskUnits,mathematical,max,media,method,min,mode,` +\r\n    `name,numOctaves,offset,opacity,operator,order,orient,orientation,origin,` +\r\n    `overflow,overline-position,overline-thickness,panose-1,paint-order,path,` +\r\n    `pathLength,patternContentUnits,patternTransform,patternUnits,ping,` +\r\n    `pointer-events,points,pointsAtX,pointsAtY,pointsAtZ,preserveAlpha,` +\r\n    `preserveAspectRatio,primitiveUnits,r,radius,referrerPolicy,refX,refY,rel,` +\r\n    `rendering-intent,repeatCount,repeatDur,requiredExtensions,requiredFeatures,` +\r\n    `restart,result,rotate,rx,ry,scale,seed,shape-rendering,slope,spacing,` +\r\n    `specularConstant,specularExponent,speed,spreadMethod,startOffset,` +\r\n    `stdDeviation,stemh,stemv,stitchTiles,stop-color,stop-opacity,` +\r\n    `strikethrough-position,strikethrough-thickness,string,stroke,` +\r\n    `stroke-dasharray,stroke-dashoffset,stroke-linecap,stroke-linejoin,` +\r\n    `stroke-miterlimit,stroke-opacity,stroke-width,style,surfaceScale,` +\r\n    `systemLanguage,tabindex,tableValues,target,targetX,targetY,text-anchor,` +\r\n    `text-decoration,text-rendering,textLength,to,transform,transform-origin,` +\r\n    `type,u1,u2,underline-position,underline-thickness,unicode,unicode-bidi,` +\r\n    `unicode-range,units-per-em,v-alphabetic,v-hanging,v-ideographic,` +\r\n    `v-mathematical,values,vector-effect,version,vert-adv-y,vert-origin-x,` +\r\n    `vert-origin-y,viewBox,viewTarget,visibility,width,widths,word-spacing,` +\r\n    `writing-mode,x,x-height,x1,x2,xChannelSelector,xlink:actuate,xlink:arcrole,` +\r\n    `xlink:href,xlink:role,xlink:show,xlink:title,xlink:type,xml:base,xml:lang,` +\r\n    `xml:space,y,y1,y2,yChannelSelector,z,zoomAndPan`\r\n)\r\n","import { isArray, isString, isObject, hyphenate } from './'\r\nimport { isNoUnitNumericStyleProp } from './domAttrConfig'\r\n\r\nexport type NormalizedStyle = Record<string, string | number>\r\n\r\nexport function normalizeStyle(\r\n  value: unknown\r\n): NormalizedStyle | string | undefined {\r\n  if (isArray(value)) {\r\n    const res: NormalizedStyle = {}\r\n    for (let i = 0; i < value.length; i++) {\r\n      const item = value[i]\r\n      const normalized = isString(item)\r\n        ? parseStringStyle(item)\r\n        : (normalizeStyle(item) as NormalizedStyle)\r\n      if (normalized) {\r\n        for (const key in normalized) {\r\n          res[key] = normalized[key]\r\n        }\r\n      }\r\n    }\r\n    return res\r\n  } else if (isString(value)) {\r\n    return value\r\n  } else if (isObject(value)) {\r\n    return value\r\n  }\r\n}\r\n\r\nconst listDelimiterRE = /;(?![^(]*\\))/g\r\nconst propertyDelimiterRE = /:(.+)/\r\n\r\nexport function parseStringStyle(cssText: string): NormalizedStyle {\r\n  const ret: NormalizedStyle = {}\r\n  cssText.split(listDelimiterRE).forEach(item => {\r\n    if (item) {\r\n      const tmp = item.split(propertyDelimiterRE)\r\n      tmp.length > 1 && (ret[tmp[0].trim()] = tmp[1].trim())\r\n    }\r\n  })\r\n  return ret\r\n}\r\n\r\nexport function stringifyStyle(\r\n  styles: NormalizedStyle | string | undefined\r\n): string {\r\n  let ret = ''\r\n  if (!styles || isString(styles)) {\r\n    return ret\r\n  }\r\n  for (const key in styles) {\r\n    const value = styles[key]\r\n    const normalizedKey = key.startsWith(`--`) ? key : hyphenate(key)\r\n    if (\r\n      isString(value) ||\r\n      (typeof value === 'number' && isNoUnitNumericStyleProp(normalizedKey))\r\n    ) {\r\n      // only render valid values\r\n      ret += `${normalizedKey}:${value};`\r\n    }\r\n  }\r\n  return ret\r\n}\r\n\r\nexport function normalizeClass(value: unknown): string {\r\n  let res = ''\r\n  if (isString(value)) {\r\n    res = value\r\n  } else if (isArray(value)) {\r\n    for (let i = 0; i < value.length; i++) {\r\n      const normalized = normalizeClass(value[i])\r\n      if (normalized) {\r\n        res += normalized + ' '\r\n      }\r\n    }\r\n  } else if (isObject(value)) {\r\n    for (const name in value) {\r\n      if (value[name]) {\r\n        res += name + ' '\r\n      }\r\n    }\r\n  }\r\n  return res.trim()\r\n}\r\n\r\nexport function normalizeProps(props: Record<string, any> | null) {\r\n  if (!props) return null\r\n  let { class: klass, style } = props\r\n  if (klass && !isString(klass)) {\r\n    props.class = normalizeClass(klass)\r\n  }\r\n  if (style) {\r\n    props.style = normalizeStyle(style)\r\n  }\r\n  return props\r\n}\r\n","// These tag configs are shared between compiler-dom and runtime-dom, so they\r\n// must be extracted in shared to avoid creating a dependency between the two.\r\nimport { makeMap } from './makeMap'\r\n\r\n// https://developer.mozilla.org/en-US/docs/Web/HTML/Element\r\nconst HTML_TAGS =\r\n  'html,body,base,head,link,meta,style,title,address,article,aside,footer,' +\r\n  'header,h1,h2,h3,h4,h5,h6,nav,section,div,dd,dl,dt,figcaption,' +\r\n  'figure,picture,hr,img,li,main,ol,p,pre,ul,a,b,abbr,bdi,bdo,br,cite,code,' +\r\n  'data,dfn,em,i,kbd,mark,q,rp,rt,ruby,s,samp,small,span,strong,sub,sup,' +\r\n  'time,u,var,wbr,area,audio,map,track,video,embed,object,param,source,' +\r\n  'canvas,script,noscript,del,ins,caption,col,colgroup,table,thead,tbody,td,' +\r\n  'th,tr,button,datalist,fieldset,form,input,label,legend,meter,optgroup,' +\r\n  'option,output,progress,select,textarea,details,dialog,menu,' +\r\n  'summary,template,blockquote,iframe,tfoot'\r\n\r\n// https://developer.mozilla.org/en-US/docs/Web/SVG/Element\r\nconst SVG_TAGS =\r\n  'svg,animate,animateMotion,animateTransform,circle,clipPath,color-profile,' +\r\n  'defs,desc,discard,ellipse,feBlend,feColorMatrix,feComponentTransfer,' +\r\n  'feComposite,feConvolveMatrix,feDiffuseLighting,feDisplacementMap,' +\r\n  'feDistanceLight,feDropShadow,feFlood,feFuncA,feFuncB,feFuncG,feFuncR,' +\r\n  'feGaussianBlur,feImage,feMerge,feMergeNode,feMorphology,feOffset,' +\r\n  'fePointLight,feSpecularLighting,feSpotLight,feTile,feTurbulence,filter,' +\r\n  'foreignObject,g,hatch,hatchpath,image,line,linearGradient,marker,mask,' +\r\n  'mesh,meshgradient,meshpatch,meshrow,metadata,mpath,path,pattern,' +\r\n  'polygon,polyline,radialGradient,rect,set,solidcolor,stop,switch,symbol,' +\r\n  'text,textPath,title,tspan,unknown,use,view'\r\n\r\nconst VOID_TAGS =\r\n  'area,base,br,col,embed,hr,img,input,link,meta,param,source,track,wbr'\r\n\r\nexport const isHTMLTag = /*#__PURE__*/ makeMap(HTML_TAGS)\r\nexport const isSVGTag = /*#__PURE__*/ makeMap(SVG_TAGS)\r\nexport const isVoidTag = /*#__PURE__*/ makeMap(VOID_TAGS)\r\n","import { isArray, isDate, isObject } from './'\r\n\r\nfunction looseCompareArrays(a: any[], b: any[]) {\r\n  if (a.length !== b.length) return false\r\n  let equal = true\r\n  for (let i = 0; equal && i < a.length; i++) {\r\n    equal = looseEqual(a[i], b[i])\r\n  }\r\n  return equal\r\n}\r\n\r\nexport function looseEqual(a: any, b: any): boolean {\r\n  if (a === b) return true\r\n  let aValidType = isDate(a)\r\n  let bValidType = isDate(b)\r\n  if (aValidType || bValidType) {\r\n    return aValidType && bValidType ? a.getTime() === b.getTime() : false\r\n  }\r\n  aValidType = isArray(a)\r\n  bValidType = isArray(b)\r\n  if (aValidType || bValidType) {\r\n    return aValidType && bValidType ? looseCompareArrays(a, b) : false\r\n  }\r\n  aValidType = isObject(a)\r\n  bValidType = isObject(b)\r\n  if (aValidType || bValidType) {\r\n    /* istanbul ignore if: this if will probably never be called */\r\n    if (!aValidType || !bValidType) {\r\n      return false\r\n    }\r\n    const aKeysCount = Object.keys(a).length\r\n    const bKeysCount = Object.keys(b).length\r\n    if (aKeysCount !== bKeysCount) {\r\n      return false\r\n    }\r\n    for (const key in a) {\r\n      const aHasKey = a.hasOwnProperty(key)\r\n      const bHasKey = b.hasOwnProperty(key)\r\n      if (\r\n        (aHasKey && !bHasKey) ||\r\n        (!aHasKey && bHasKey) ||\r\n        !looseEqual(a[key], b[key])\r\n      ) {\r\n        return false\r\n      }\r\n    }\r\n  }\r\n  return String(a) === String(b)\r\n}\r\n\r\nexport function looseIndexOf(arr: any[], val: any): number {\r\n  return arr.findIndex(item => looseEqual(item, val))\r\n}\r\n","import {\r\n  isArray,\r\n  isMap,\r\n  isObject,\r\n  isPlainObject,\r\n  isSet,\r\n  objectToString\r\n} from './index'\r\n\r\n/**\r\n * For converting {{ interpolation }} values to displayed strings.\r\n * @private\r\n */\r\nexport const toDisplayString = (val: unknown): string => {\r\n  return val == null\r\n    ? ''\r\n    : isArray(val) || (isObject(val) && val.toString === objectToString)\r\n    ? JSON.stringify(val, replacer, 2)\r\n    : String(val)\r\n}\r\n\r\nconst replacer = (_key: string, val: any): any => {\r\n  // can't use isRef here since @vue/shared has no deps\r\n  if (val && val.__v_isRef) {\r\n    return replacer(_key, val.value)\r\n  } else if (isMap(val)) {\r\n    return {\r\n      [`Map(${val.size})`]: [...val.entries()].reduce((entries, [key, val]) => {\r\n        ;(entries as any)[`${key} =>`] = val\r\n        return entries\r\n      }, {})\r\n    }\r\n  } else if (isSet(val)) {\r\n    return {\r\n      [`Set(${val.size})`]: [...val.values()]\r\n    }\r\n  } else if (isObject(val) && !isArray(val) && !isPlainObject(val)) {\r\n    return String(val)\r\n  }\r\n  return val\r\n}\r\n","import { makeMap } from './makeMap'\r\n\r\nexport { makeMap }\r\nexport * from './patchFlags'\r\nexport * from './shapeFlags'\r\nexport * from './slotFlags'\r\nexport * from './globalsWhitelist'\r\nexport * from './codeframe'\r\nexport * from './normalizeProp'\r\nexport * from './domTagConfig'\r\nexport * from './domAttrConfig'\r\nexport * from './escapeHtml'\r\nexport * from './looseEqual'\r\nexport * from './toDisplayString'\r\n\r\n/**\r\n * List of @babel/parser plugins that are used for template expression\r\n * transforms and SFC script transforms. By default we enable proposals slated\r\n * for ES2020. This will need to be updated as the spec moves forward.\r\n * Full list at https://babeljs.io/docs/en/next/babel-parser#plugins\r\n */\r\nexport const babelParserDefaultPlugins = [\r\n  'bigInt',\r\n  'optionalChaining',\r\n  'nullishCoalescingOperator'\r\n] as const\r\n\r\nexport const EMPTY_OBJ: { readonly [key: string]: any } = __DEV__\r\n  ? Object.freeze({})\r\n  : {}\r\nexport const EMPTY_ARR = __DEV__ ? Object.freeze([]) : []\r\n\r\nexport const NOOP = () => {}\r\n\r\n/**\r\n * Always return false.\r\n */\r\nexport const NO = () => false\r\n\r\nconst onRE = /^on[^a-z]/\r\nexport const isOn = (key: string) => onRE.test(key)\r\n\r\nexport const isModelListener = (key: string) => key.startsWith('onUpdate:')\r\n\r\nexport const extend = Object.assign\r\n\r\nexport const remove = <T>(arr: T[], el: T) => {\r\n  const i = arr.indexOf(el)\r\n  if (i > -1) {\r\n    arr.splice(i, 1)\r\n  }\r\n}\r\n\r\nconst hasOwnProperty = Object.prototype.hasOwnProperty\r\nexport const hasOwn = (\r\n  val: object,\r\n  key: string | symbol\r\n): key is keyof typeof val => hasOwnProperty.call(val, key)\r\n\r\nexport const isArray = Array.isArray\r\nexport const isMap = (val: unknown): val is Map<any, any> =>\r\n  toTypeString(val) === '[object Map]'\r\nexport const isSet = (val: unknown): val is Set<any> =>\r\n  toTypeString(val) === '[object Set]'\r\n\r\nexport const isDate = (val: unknown): val is Date => val instanceof Date\r\nexport const isFunction = (val: unknown): val is Function =>\r\n  typeof val === 'function'\r\nexport const isString = (val: unknown): val is string => typeof val === 'string'\r\nexport const isSymbol = (val: unknown): val is symbol => typeof val === 'symbol'\r\nexport const isObject = (val: unknown): val is Record<any, any> =>\r\n  val !== null && typeof val === 'object'\r\n\r\nexport const isPromise = <T = any>(val: unknown): val is Promise<T> => {\r\n  return isObject(val) && isFunction(val.then) && isFunction(val.catch)\r\n}\r\n\r\nexport const objectToString = Object.prototype.toString\r\nexport const toTypeString = (value: unknown): string =>\r\n  objectToString.call(value)\r\n\r\nexport const toRawType = (value: unknown): string => {\r\n  // extract \"RawType\" from strings like \"[object RawType]\"\r\n  return toTypeString(value).slice(8, -1)\r\n}\r\n\r\nexport const isPlainObject = (val: unknown): val is object =>\r\n  toTypeString(val) === '[object Object]'\r\n\r\nexport const isIntegerKey = (key: unknown) =>\r\n  isString(key) &&\r\n  key !== 'NaN' &&\r\n  key[0] !== '-' &&\r\n  '' + parseInt(key, 10) === key\r\n\r\nexport const isReservedProp = /*#__PURE__*/ makeMap(\r\n  // the leading comma is intentional so empty string \"\" is also included\r\n  ',key,ref,' +\r\n    'onVnodeBeforeMount,onVnodeMounted,' +\r\n    'onVnodeBeforeUpdate,onVnodeUpdated,' +\r\n    'onVnodeBeforeUnmount,onVnodeUnmounted'\r\n)\r\n\r\nconst cacheStringFunction = <T extends (str: string) => string>(fn: T): T => {\r\n  const cache: Record<string, string> = Object.create(null)\r\n  return ((str: string) => {\r\n    const hit = cache[str]\r\n    return hit || (cache[str] = fn(str))\r\n  }) as any\r\n}\r\n\r\nconst camelizeRE = /-(\\w)/g\r\n/**\r\n * @private\r\n */\r\nexport const camelize = cacheStringFunction((str: string): string => {\r\n  return str.replace(camelizeRE, (_, c) => (c ? c.toUpperCase() : ''))\r\n})\r\n\r\nconst hyphenateRE = /\\B([A-Z])/g\r\n/**\r\n * @private\r\n */\r\nexport const hyphenate = cacheStringFunction((str: string) =>\r\n  str.replace(hyphenateRE, '-$1').toLowerCase()\r\n)\r\n\r\n/**\r\n * @private\r\n */\r\nexport const capitalize = cacheStringFunction(\r\n  (str: string) => str.charAt(0).toUpperCase() + str.slice(1)\r\n)\r\n\r\n/**\r\n * @private\r\n */\r\nexport const toHandlerKey = cacheStringFunction((str: string) =>\r\n  str ? `on${capitalize(str)}` : ``\r\n)\r\n\r\n// compare whether a value has changed, accounting for NaN.\r\nexport const hasChanged = (value: any, oldValue: any): boolean =>\r\n  !Object.is(value, oldValue)\r\n\r\nexport const invokeArrayFns = (fns: Function[], arg?: any) => {\r\n  for (let i = 0; i < fns.length; i++) {\r\n    fns[i](arg)\r\n  }\r\n}\r\n\r\nexport const def = (obj: object, key: string | symbol, value: any) => {\r\n  Object.defineProperty(obj, key, {\r\n    configurable: true,\r\n    enumerable: false,\r\n    value\r\n  })\r\n}\r\n\r\nexport const toNumber = (val: any): any => {\r\n  const n = parseFloat(val)\r\n  return isNaN(n) ? val : n\r\n}\r\n\r\nlet _globalThis: any\r\nexport const getGlobalThis = (): any => {\r\n  return (\r\n    _globalThis ||\r\n    (_globalThis =\r\n      typeof globalThis !== 'undefined'\r\n        ? globalThis\r\n        : typeof self !== 'undefined'\r\n        ? self\r\n        : typeof window !== 'undefined'\r\n        ? window\r\n        : typeof global !== 'undefined'\r\n        ? global\r\n        : {})\r\n  )\r\n}\r\n","import { ReactiveEffect, trackOpBit } from './effect'\r\n\r\nexport type Dep = Set<ReactiveEffect> & TrackedMarkers\r\n\r\n/**\r\n * wasTracked and newTracked maintain the status for several levels of effect\r\n * tracking recursion. One bit per level is used to define wheter the dependency\r\n * was/is tracked.\r\n */\r\ntype TrackedMarkers = {\r\n  /**\r\n   * wasTracked\r\n   */\r\n  w: number\r\n  /**\r\n   * newTracked\r\n   */\r\n  n: number\r\n}\r\n\r\nexport const createDep = (effects?: ReactiveEffect[]): Dep => {\r\n  const dep = new Set<ReactiveEffect>(effects) as Dep\r\n  dep.w = 0\r\n  dep.n = 0\r\n  return dep\r\n}\r\n\r\nexport const wasTracked = (dep: Dep): boolean => (dep.w & trackOpBit) > 0\r\n\r\nexport const newTracked = (dep: Dep): boolean => (dep.n & trackOpBit) > 0\r\n\r\nexport const initDepMarkers = ({ deps }: ReactiveEffect) => {\r\n  if (deps.length) {\r\n    for (let i = 0; i < deps.length; i++) {\r\n      deps[i].w |= trackOpBit // set was tracked\r\n    }\r\n  }\r\n}\r\n\r\nexport const finalizeDepMarkers = (effect: ReactiveEffect) => {\r\n  const { deps } = effect\r\n  if (deps.length) {\r\n    let ptr = 0\r\n    for (let i = 0; i < deps.length; i++) {\r\n      const dep = deps[i]\r\n      if (wasTracked(dep) && !newTracked(dep)) {\r\n        dep.delete(effect)\r\n      } else {\r\n        deps[ptr++] = dep\r\n      }\r\n      // clear bits\r\n      dep.w &= ~trackOpBit\r\n      dep.n &= ~trackOpBit\r\n    }\r\n    deps.length = ptr\r\n  }\r\n}\r\n","import { ReactiveEffect } from './effect'\r\nimport { warn } from './warning'\r\n\r\nlet activeEffectScope: EffectScope | undefined\r\nconst effectScopeStack: EffectScope[] = []\r\n\r\nexport class EffectScope {\r\n  active = true\r\n  effects: ReactiveEffect[] = []\r\n  cleanups: (() => void)[] = []\r\n\r\n  parent: EffectScope | undefined\r\n  scopes: EffectScope[] | undefined\r\n  /**\r\n   * track a child scope's index in its parent's scopes array for optimized\r\n   * removal\r\n   */\r\n  private index: number | undefined\r\n\r\n  constructor(detached = false) {\r\n    if (!detached && activeEffectScope) {\r\n      this.parent = activeEffectScope\r\n      this.index =\r\n        (activeEffectScope.scopes || (activeEffectScope.scopes = [])).push(\r\n          this\r\n        ) - 1\r\n    }\r\n  }\r\n\r\n  run<T>(fn: () => T): T | undefined {\r\n    if (this.active) {\r\n      try {\r\n        this.on()\r\n        return fn()\r\n      } finally {\r\n        this.off()\r\n      }\r\n    } else if (__DEV__) {\r\n      warn(`cannot run an inactive effect scope.`)\r\n    }\r\n  }\r\n\r\n  on() {\r\n    if (this.active) {\r\n      effectScopeStack.push(this)\r\n      activeEffectScope = this\r\n    }\r\n  }\r\n\r\n  off() {\r\n    if (this.active) {\r\n      effectScopeStack.pop()\r\n      activeEffectScope = effectScopeStack[effectScopeStack.length - 1]\r\n    }\r\n  }\r\n\r\n  stop(fromParent?: boolean) {\r\n    if (this.active) {\r\n      this.effects.forEach(e => e.stop())\r\n      this.cleanups.forEach(cleanup => cleanup())\r\n      if (this.scopes) {\r\n        this.scopes.forEach(e => e.stop(true))\r\n      }\r\n      // nested scope, dereference from parent to avoid memory leaks\r\n      if (this.parent && !fromParent) {\r\n        // optimized O(1) removal\r\n        const last = this.parent.scopes!.pop()\r\n        if (last && last !== this) {\r\n          this.parent.scopes![this.index!] = last\r\n          last.index = this.index!\r\n        }\r\n      }\r\n      this.active = false\r\n    }\r\n  }\r\n}\r\n\r\nexport function effectScope(detached?: boolean) {\r\n  return new EffectScope(detached)\r\n}\r\n\r\nexport function recordEffectScope(\r\n  effect: ReactiveEffect,\r\n  scope?: EffectScope | null\r\n) {\r\n  scope = scope || activeEffectScope\r\n  if (scope && scope.active) {\r\n    scope.effects.push(effect)\r\n  }\r\n}\r\n\r\nexport function getCurrentScope() {\r\n  return activeEffectScope\r\n}\r\n\r\nexport function onScopeDispose(fn: () => void) {\r\n  if (activeEffectScope) {\r\n    activeEffectScope.cleanups.push(fn)\r\n  } else if (__DEV__) {\r\n    warn(\r\n      `onDispose() is called when there is no active effect scope ` +\r\n        ` to be associated with.`\r\n    )\r\n  }\r\n}\r\n","import { extend, isArray, isIntegerKey, isMap } from '@vue/shared'\r\nimport {\r\n  createDep,\r\n  Dep,\r\n  finalizeDepMarkers,\r\n  initDepMarkers,\r\n  newTracked,\r\n  wasTracked\r\n} from './dep'\r\nimport { EffectScope, recordEffectScope } from './effectScope'\r\nimport { TrackOpTypes, TriggerOpTypes } from './operations'\r\n\r\n// The main WeakMap that stores {target -> key -> dep} connections.\r\n// Conceptually, it's easier to think of a dependency as a Dep class\r\n// which maintains a Set of subscribers, but we simply store them as\r\n// raw Sets to reduce memory overhead.\r\ntype KeyToDepMap = Map<any, Dep>\r\nconst targetMap = new WeakMap<any, KeyToDepMap>()\r\n\r\n// The number of effects currently being tracked recursively.\r\nlet effectTrackDepth = 0\r\n\r\nexport let trackOpBit = 1\r\n\r\n/**\r\n * The bitwise track markers support at most 30 levels op recursion.\r\n * This value is chosen to enable modern JS engines to use a SMI on all platforms.\r\n * When recursion depth is greater, fall back to using a full cleanup.\r\n */\r\nconst maxMarkerBits = 30\r\n\r\nexport type EffectScheduler = (...args: any[]) => any\r\n\r\nexport type DebuggerEvent = {\r\n  effect: ReactiveEffect\r\n} & DebuggerEventExtraInfo\r\n\r\nexport type DebuggerEventExtraInfo = {\r\n  target: object\r\n  type: TrackOpTypes | TriggerOpTypes\r\n  key: any\r\n  newValue?: any\r\n  oldValue?: any\r\n  oldTarget?: Map<any, any> | Set<any>\r\n}\r\n\r\nconst effectStack: ReactiveEffect[] = []\r\nlet activeEffect: ReactiveEffect | undefined\r\n\r\nexport const ITERATE_KEY = Symbol(__DEV__ ? 'iterate' : '')\r\nexport const MAP_KEY_ITERATE_KEY = Symbol(__DEV__ ? 'Map key iterate' : '')\r\n\r\nexport class ReactiveEffect<T = any> {\r\n  active = true\r\n  deps: Dep[] = []\r\n\r\n  // can be attached after creation\r\n  computed?: boolean\r\n  allowRecurse?: boolean\r\n  onStop?: () => void\r\n  // dev only\r\n  onTrack?: (event: DebuggerEvent) => void\r\n  // dev only\r\n  onTrigger?: (event: DebuggerEvent) => void\r\n\r\n  constructor(\r\n    public fn: () => T,\r\n    public scheduler: EffectScheduler | null = null,\r\n    scope?: EffectScope | null\r\n  ) {\r\n    recordEffectScope(this, scope)\r\n  }\r\n\r\n  run() {\r\n    if (!this.active) {\r\n      return this.fn()\r\n    }\r\n    if (!effectStack.includes(this)) {\r\n      try {\r\n        //\r\n        effectStack.push((activeEffect = this))\r\n        enableTracking()\r\n\r\n        trackOpBit = 1 << ++effectTrackDepth\r\n\r\n        if (effectTrackDepth <= maxMarkerBits) {\r\n          initDepMarkers(this)\r\n        } else {\r\n          cleanupEffect(this)\r\n        }\r\n        return this.fn()\r\n      } finally {\r\n        if (effectTrackDepth <= maxMarkerBits) {\r\n          finalizeDepMarkers(this)\r\n        }\r\n\r\n        trackOpBit = 1 << --effectTrackDepth\r\n\r\n        resetTracking()\r\n        effectStack.pop()\r\n        const n = effectStack.length\r\n        activeEffect = n > 0 ? effectStack[n - 1] : undefined\r\n      }\r\n    }\r\n  }\r\n\r\n  stop() {\r\n    if (this.active) {\r\n      cleanupEffect(this)\r\n      if (this.onStop) {\r\n        this.onStop()\r\n      }\r\n      this.active = false\r\n    }\r\n  }\r\n}\r\n\r\nfunction cleanupEffect(effect: ReactiveEffect) {\r\n  const { deps } = effect\r\n  if (deps.length) {\r\n    for (let i = 0; i < deps.length; i++) {\r\n      deps[i].delete(effect)\r\n    }\r\n    deps.length = 0\r\n  }\r\n}\r\n\r\nexport interface DebuggerOptions {\r\n  onTrack?: (event: DebuggerEvent) => void\r\n  onTrigger?: (event: DebuggerEvent) => void\r\n}\r\n\r\nexport interface ReactiveEffectOptions extends DebuggerOptions {\r\n  lazy?: boolean\r\n  scheduler?: EffectScheduler\r\n  scope?: EffectScope\r\n  allowRecurse?: boolean\r\n  onStop?: () => void\r\n}\r\n\r\nexport interface ReactiveEffectRunner<T = any> {\r\n  (): T\r\n  effect: ReactiveEffect\r\n}\r\n\r\nexport function effect<T = any>(\r\n  fn: () => T,\r\n  options?: ReactiveEffectOptions\r\n): ReactiveEffectRunner {\r\n  if ((fn as ReactiveEffectRunner).effect) {\r\n    fn = (fn as ReactiveEffectRunner).effect.fn\r\n  }\r\n  // 实例化 ReactiveEffect,并赋值给_effect,\r\n  const _effect = new ReactiveEffect(fn)\r\n  if (options) {\r\n    extend(_effect, options)\r\n    if (options.scope) recordEffectScope(_effect, options.scope)\r\n  }\r\n  // 如果 用户 延迟执行\r\n  if (!options || !options.lazy) {\r\n    _effect.run()\r\n  }\r\n\r\n  // 执行 run,并把run函数的中this指向给_effect\r\n  const runner = _effect.run.bind(_effect) as ReactiveEffectRunner\r\n  runner.effect = _effect\r\n  return runner\r\n}\r\n\r\nexport function stop(runner: ReactiveEffectRunner) {\r\n  runner.effect.stop()\r\n}\r\n\r\nlet shouldTrack = true\r\nconst trackStack: boolean[] = []\r\n\r\nexport function pauseTracking() {\r\n  trackStack.push(shouldTrack)\r\n  shouldTrack = false\r\n}\r\n\r\nexport function enableTracking() {\r\n  trackStack.push(shouldTrack)\r\n  shouldTrack = true\r\n}\r\n\r\nexport function resetTracking() {\r\n  const last = trackStack.pop()\r\n  shouldTrack = last === undefined ? true : last\r\n}\r\n\r\nexport function track(target: object, type: TrackOpTypes, key: unknown) {\r\n  if (!isTracking()) {\r\n    return\r\n  }\r\n  let depsMap = targetMap.get(target)\r\n  if (!depsMap) {\r\n    targetMap.set(target, (depsMap = new Map()))\r\n  }\r\n  let dep = depsMap.get(key)\r\n  if (!dep) {\r\n    depsMap.set(key, (dep = createDep()))\r\n  }\r\n\r\n  const eventInfo = __DEV__\r\n    ? { effect: activeEffect, target, type, key }\r\n    : undefined\r\n\r\n  trackEffects(dep, eventInfo)\r\n}\r\n\r\nexport function isTracking() {\r\n  return shouldTrack && activeEffect !== undefined\r\n}\r\n\r\nexport function trackEffects(\r\n  dep: Dep,\r\n  debuggerEventExtraInfo?: DebuggerEventExtraInfo\r\n) {\r\n  let shouldTrack = false\r\n  if (effectTrackDepth <= maxMarkerBits) {\r\n    if (!newTracked(dep)) {\r\n      dep.n |= trackOpBit // set newly tracked\r\n      shouldTrack = !wasTracked(dep)\r\n    }\r\n  } else {\r\n    // Full cleanup mode.\r\n    shouldTrack = !dep.has(activeEffect!)\r\n  }\r\n\r\n  if (shouldTrack) {\r\n    dep.add(activeEffect!)\r\n    activeEffect!.deps.push(dep)\r\n    if (__DEV__ && activeEffect!.onTrack) {\r\n      activeEffect!.onTrack(\r\n        Object.assign(\r\n          {\r\n            effect: activeEffect!\r\n          },\r\n          debuggerEventExtraInfo\r\n        )\r\n      )\r\n    }\r\n  }\r\n}\r\n\r\nexport function trigger(\r\n  target: object,\r\n  type: TriggerOpTypes,\r\n  key?: unknown,\r\n  newValue?: unknown,\r\n  oldValue?: unknown,\r\n  oldTarget?: Map<unknown, unknown> | Set<unknown>\r\n) {\r\n  const depsMap = targetMap.get(target)\r\n  if (!depsMap) {\r\n    // never been tracked\r\n    return\r\n  }\r\n\r\n  let deps: (Dep | undefined)[] = []\r\n  if (type === TriggerOpTypes.CLEAR) {\r\n    // collection being cleared\r\n    // trigger all effects for target\r\n    deps = [...depsMap.values()]\r\n  } else if (key === 'length' && isArray(target)) {\r\n    depsMap.forEach((dep, key) => {\r\n      if (key === 'length' || key >= (newValue as number)) {\r\n        deps.push(dep)\r\n      }\r\n    })\r\n  } else {\r\n    // schedule runs for SET | ADD | DELETE\r\n    if (key !== void 0) {\r\n      deps.push(depsMap.get(key))\r\n    }\r\n\r\n    // also run for iteration key on ADD | DELETE | Map.SET\r\n    switch (type) {\r\n      case TriggerOpTypes.ADD:\r\n        if (!isArray(target)) {\r\n          deps.push(depsMap.get(ITERATE_KEY))\r\n          if (isMap(target)) {\r\n            deps.push(depsMap.get(MAP_KEY_ITERATE_KEY))\r\n          }\r\n        } else if (isIntegerKey(key)) {\r\n          // new index added to array -> length changes\r\n          deps.push(depsMap.get('length'))\r\n        }\r\n        break\r\n      case TriggerOpTypes.DELETE:\r\n        if (!isArray(target)) {\r\n          deps.push(depsMap.get(ITERATE_KEY))\r\n          if (isMap(target)) {\r\n            deps.push(depsMap.get(MAP_KEY_ITERATE_KEY))\r\n          }\r\n        }\r\n        break\r\n      case TriggerOpTypes.SET:\r\n        if (isMap(target)) {\r\n          deps.push(depsMap.get(ITERATE_KEY))\r\n        }\r\n        break\r\n    }\r\n  }\r\n\r\n  const eventInfo = __DEV__\r\n    ? { target, type, key, newValue, oldValue, oldTarget }\r\n    : undefined\r\n\r\n  if (deps.length === 1) {\r\n    if (deps[0]) {\r\n      if (__DEV__) {\r\n        triggerEffects(deps[0], eventInfo)\r\n      } else {\r\n        triggerEffects(deps[0])\r\n      }\r\n    }\r\n  } else {\r\n    const effects: ReactiveEffect[] = []\r\n    for (const dep of deps) {\r\n      if (dep) {\r\n        effects.push(...dep)\r\n      }\r\n    }\r\n    if (__DEV__) {\r\n      triggerEffects(createDep(effects), eventInfo)\r\n    } else {\r\n      triggerEffects(createDep(effects))\r\n    }\r\n  }\r\n}\r\n\r\nexport function triggerEffects(\r\n  dep: Dep | ReactiveEffect[],\r\n  debuggerEventExtraInfo?: DebuggerEventExtraInfo\r\n) {\r\n  // spread into array for stabilization\r\n  for (const effect of isArray(dep) ? dep : [...dep]) {\r\n    if (effect !== activeEffect || effect.allowRecurse) {\r\n      if (__DEV__ && effect.onTrigger) {\r\n        effect.onTrigger(extend({ effect }, debuggerEventExtraInfo))\r\n      }\r\n      if (effect.scheduler) {\r\n        effect.scheduler()\r\n      } else {\r\n        effect.run()\r\n      }\r\n    }\r\n  }\r\n}\r\n","import {\r\n  reactive,\r\n  readonly,\r\n  toRaw,\r\n  ReactiveFlags,\r\n  Target,\r\n  readonlyMap,\r\n  reactiveMap,\r\n  shallowReactiveMap,\r\n  shallowReadonlyMap\r\n} from './reactive'\r\nimport { TrackOpTypes, TriggerOpTypes } from './operations'\r\nimport {\r\n  track,\r\n  trigger,\r\n  ITERATE_KEY,\r\n  pauseTracking,\r\n  resetTracking\r\n} from './effect'\r\nimport {\r\n  isObject,\r\n  hasOwn,\r\n  isSymbol,\r\n  hasChanged,\r\n  isArray,\r\n  isIntegerKey,\r\n  extend,\r\n  makeMap\r\n} from '@vue/shared'\r\nimport { isRef } from './ref'\r\n\r\nconst isNonTrackableKeys = /*#__PURE__*/ makeMap(`__proto__,__v_isRef,__isVue`)\r\n\r\nconst builtInSymbols = new Set(\r\n  Object.getOwnPropertyNames(Symbol)\r\n    .map(key => (Symbol as any)[key])\r\n    .filter(isSymbol)\r\n)\r\n\r\nconst get = /*#__PURE__*/ createGetter()\r\nconst shallowGet = /*#__PURE__*/ createGetter(false, true)\r\nconst readonlyGet = /*#__PURE__*/ createGetter(true)\r\nconst shallowReadonlyGet = /*#__PURE__*/ createGetter(true, true)\r\n\r\nconst arrayInstrumentations = /*#__PURE__*/ createArrayInstrumentations()\r\n\r\nfunction createArrayInstrumentations() {\r\n  const instrumentations: Record<string, Function> = {}\r\n  // instrument identity-sensitive Array methods to account for possible reactive\r\n  // values\r\n  ;(['includes', 'indexOf', 'lastIndexOf'] as const).forEach(key => {\r\n    instrumentations[key] = function (this: unknown[], ...args: unknown[]) {\r\n      const arr = toRaw(this) as any\r\n      for (let i = 0, l = this.length; i < l; i++) {\r\n        track(arr, TrackOpTypes.GET, i + '')\r\n      }\r\n      // we run the method using the original args first (which may be reactive)\r\n      const res = arr[key](...args)\r\n      if (res === -1 || res === false) {\r\n        // if that didn't work, run it again using raw values.\r\n        return arr[key](...args.map(toRaw))\r\n      } else {\r\n        return res\r\n      }\r\n    }\r\n  })\r\n  // instrument length-altering mutation methods to avoid length being tracked\r\n  // which leads to infinite loops in some cases (#2137)\r\n  ;(['push', 'pop', 'shift', 'unshift', 'splice'] as const).forEach(key => {\r\n    instrumentations[key] = function (this: unknown[], ...args: unknown[]) {\r\n      pauseTracking()\r\n      const res = (toRaw(this) as any)[key].apply(this, args)\r\n      resetTracking()\r\n      return res\r\n    }\r\n  })\r\n  return instrumentations\r\n}\r\n\r\nfunction createGetter(isReadonly = false, shallow = false) {\r\n  return function get(target: Target, key: string | symbol, receiver: object) {\r\n    if (key === ReactiveFlags.IS_REACTIVE) {\r\n      return !isReadonly\r\n    } else if (key === ReactiveFlags.IS_READONLY) {\r\n      return isReadonly\r\n    } else if (\r\n      key === ReactiveFlags.RAW &&\r\n      receiver ===\r\n        (isReadonly\r\n          ? shallow\r\n            ? shallowReadonlyMap\r\n            : readonlyMap\r\n          : shallow\r\n          ? shallowReactiveMap\r\n          : reactiveMap\r\n        ).get(target)\r\n    ) {\r\n      return target\r\n    }\r\n\r\n    const targetIsArray = isArray(target)\r\n\r\n    if (!isReadonly && targetIsArray && hasOwn(arrayInstrumentations, key)) {\r\n      return Reflect.get(arrayInstrumentations, key, receiver)\r\n    }\r\n\r\n    const res = Reflect.get(target, key, receiver)\r\n\r\n    if (isSymbol(key) ? builtInSymbols.has(key) : isNonTrackableKeys(key)) {\r\n      return res\r\n    }\r\n\r\n    if (!isReadonly) {\r\n      track(target, TrackOpTypes.GET, key)\r\n    }\r\n\r\n    if (shallow) {\r\n      return res\r\n    }\r\n\r\n    if (isRef(res)) {\r\n      // ref unwrapping - does not apply for Array + integer key.\r\n      const shouldUnwrap = !targetIsArray || !isIntegerKey(key)\r\n      return shouldUnwrap ? res.value : res\r\n    }\r\n\r\n    if (isObject(res)) {\r\n      // Convert returned value into a proxy as well. we do the isObject check\r\n      // here to avoid invalid value warning. Also need to lazy access readonly\r\n      // and reactive here to avoid circular dependency.\r\n      return isReadonly ? readonly(res) : reactive(res)\r\n    }\r\n\r\n    return res\r\n  }\r\n}\r\n\r\nconst set = /*#__PURE__*/ createSetter()\r\nconst shallowSet = /*#__PURE__*/ createSetter(true)\r\n\r\nfunction createSetter(shallow = false) {\r\n  return function set(\r\n    target: object,\r\n    key: string | symbol,\r\n    value: unknown,\r\n    receiver: object\r\n  ): boolean {\r\n    let oldValue = (target as any)[key]\r\n    if (!shallow) {\r\n      value = toRaw(value)\r\n      oldValue = toRaw(oldValue)\r\n      if (!isArray(target) && isRef(oldValue) && !isRef(value)) {\r\n        oldValue.value = value\r\n        return true\r\n      }\r\n    } else {\r\n      // in shallow mode, objects are set as-is regardless of reactive or not\r\n    }\r\n\r\n    const hadKey =\r\n      isArray(target) && isIntegerKey(key)\r\n        ? Number(key) < target.length\r\n        : hasOwn(target, key)\r\n    const result = Reflect.set(target, key, value, receiver)\r\n    // don't trigger if target is something up in the prototype chain of original\r\n    if (target === toRaw(receiver)) {\r\n      if (!hadKey) {\r\n        trigger(target, TriggerOpTypes.ADD, key, value)\r\n      } else if (hasChanged(value, oldValue)) {\r\n        trigger(target, TriggerOpTypes.SET, key, value, oldValue)\r\n      }\r\n    }\r\n    return result\r\n  }\r\n}\r\n\r\nfunction deleteProperty(target: object, key: string | symbol): boolean {\r\n  const hadKey = hasOwn(target, key)\r\n  const oldValue = (target as any)[key]\r\n  const result = Reflect.deleteProperty(target, key)\r\n  if (result && hadKey) {\r\n    trigger(target, TriggerOpTypes.DELETE, key, undefined, oldValue)\r\n  }\r\n  return result\r\n}\r\n\r\nfunction has(target: object, key: string | symbol): boolean {\r\n  const result = Reflect.has(target, key)\r\n  if (!isSymbol(key) || !builtInSymbols.has(key)) {\r\n    track(target, TrackOpTypes.HAS, key)\r\n  }\r\n  return result\r\n}\r\n\r\nfunction ownKeys(target: object): (string | symbol)[] {\r\n  track(target, TrackOpTypes.ITERATE, isArray(target) ? 'length' : ITERATE_KEY)\r\n  return Reflect.ownKeys(target)\r\n}\r\n\r\nexport const mutableHandlers: ProxyHandler<object> = {\r\n  get,\r\n  set,\r\n  deleteProperty,\r\n  has,\r\n  ownKeys\r\n}\r\n\r\nexport const readonlyHandlers: ProxyHandler<object> = {\r\n  get: readonlyGet,\r\n  set(target, key) {\r\n    if (__DEV__) {\r\n      console.warn(\r\n        `Set operation on key \"${String(key)}\" failed: target is readonly.`,\r\n        target\r\n      )\r\n    }\r\n    return true\r\n  },\r\n  deleteProperty(target, key) {\r\n    if (__DEV__) {\r\n      console.warn(\r\n        `Delete operation on key \"${String(key)}\" failed: target is readonly.`,\r\n        target\r\n      )\r\n    }\r\n    return true\r\n  }\r\n}\r\n\r\nexport const shallowReactiveHandlers = /*#__PURE__*/ extend(\r\n  {},\r\n  mutableHandlers,\r\n  {\r\n    get: shallowGet,\r\n    set: shallowSet\r\n  }\r\n)\r\n\r\n// Props handlers are special in the sense that it should not unwrap top-level\r\n// refs (in order to allow refs to be explicitly passed down), but should\r\n// retain the reactivity of the normal readonly object.\r\nexport const shallowReadonlyHandlers = /*#__PURE__*/ extend(\r\n  {},\r\n  readonlyHandlers,\r\n  {\r\n    get: shallowReadonlyGet\r\n  }\r\n)\r\n","import { toRaw, reactive, readonly, ReactiveFlags } from './reactive'\r\nimport { track, trigger, ITERATE_KEY, MAP_KEY_ITERATE_KEY } from './effect'\r\nimport { TrackOpTypes, TriggerOpTypes } from './operations'\r\nimport {\r\n  isObject,\r\n  capitalize,\r\n  hasOwn,\r\n  hasChanged,\r\n  toRawType,\r\n  isMap\r\n} from '@vue/shared'\r\n\r\nexport type CollectionTypes = IterableCollections | WeakCollections\r\n\r\ntype IterableCollections = Map<any, any> | Set<any>\r\ntype WeakCollections = WeakMap<any, any> | WeakSet<any>\r\ntype MapTypes = Map<any, any> | WeakMap<any, any>\r\ntype SetTypes = Set<any> | WeakSet<any>\r\n\r\nconst toReactive = <T extends unknown>(value: T): T =>\r\n  isObject(value) ? reactive(value) : value\r\n\r\nconst toReadonly = <T extends unknown>(value: T): T =>\r\n  isObject(value) ? readonly(value as Record<any, any>) : value\r\n\r\nconst toShallow = <T extends unknown>(value: T): T => value\r\n\r\nconst getProto = <T extends CollectionTypes>(v: T): any =>\r\n  Reflect.getPrototypeOf(v)\r\n\r\nfunction get(\r\n  target: MapTypes,\r\n  key: unknown,\r\n  isReadonly = false,\r\n  isShallow = false\r\n) {\r\n  // #1772: readonly(reactive(Map)) should return readonly + reactive version\r\n  // of the value\r\n  target = (target as any)[ReactiveFlags.RAW]\r\n  const rawTarget = toRaw(target)\r\n  const rawKey = toRaw(key)\r\n  if (key !== rawKey) {\r\n    !isReadonly && track(rawTarget, TrackOpTypes.GET, key)\r\n  }\r\n  !isReadonly && track(rawTarget, TrackOpTypes.GET, rawKey)\r\n  const { has } = getProto(rawTarget)\r\n  const wrap = isShallow ? toShallow : isReadonly ? toReadonly : toReactive\r\n  if (has.call(rawTarget, key)) {\r\n    return wrap(target.get(key))\r\n  } else if (has.call(rawTarget, rawKey)) {\r\n    return wrap(target.get(rawKey))\r\n  } else if (target !== rawTarget) {\r\n    // #3602 readonly(reactive(Map))\r\n    // ensure that the nested reactive `Map` can do tracking for itself\r\n    target.get(key)\r\n  }\r\n}\r\n\r\nfunction has(this: CollectionTypes, key: unknown, isReadonly = false): boolean {\r\n  const target = (this as any)[ReactiveFlags.RAW]\r\n  const rawTarget = toRaw(target)\r\n  const rawKey = toRaw(key)\r\n  if (key !== rawKey) {\r\n    !isReadonly && track(rawTarget, TrackOpTypes.HAS, key)\r\n  }\r\n  !isReadonly && track(rawTarget, TrackOpTypes.HAS, rawKey)\r\n  return key === rawKey\r\n    ? target.has(key)\r\n    : target.has(key) || target.has(rawKey)\r\n}\r\n\r\nfunction size(target: IterableCollections, isReadonly = false) {\r\n  target = (target as any)[ReactiveFlags.RAW]\r\n  !isReadonly && track(toRaw(target), TrackOpTypes.ITERATE, ITERATE_KEY)\r\n  return Reflect.get(target, 'size', target)\r\n}\r\n\r\nfunction add(this: SetTypes, value: unknown) {\r\n  value = toRaw(value)\r\n  const target = toRaw(this)\r\n  const proto = getProto(target)\r\n  const hadKey = proto.has.call(target, value)\r\n  if (!hadKey) {\r\n    target.add(value)\r\n    trigger(target, TriggerOpTypes.ADD, value, value)\r\n  }\r\n  return this\r\n}\r\n\r\nfunction set(this: MapTypes, key: unknown, value: unknown) {\r\n  value = toRaw(value)\r\n  const target = toRaw(this)\r\n  const { has, get } = getProto(target)\r\n\r\n  let hadKey = has.call(target, key)\r\n  if (!hadKey) {\r\n    key = toRaw(key)\r\n    hadKey = has.call(target, key)\r\n  } else if (__DEV__) {\r\n    checkIdentityKeys(target, has, key)\r\n  }\r\n\r\n  const oldValue = get.call(target, key)\r\n  target.set(key, value)\r\n  if (!hadKey) {\r\n    trigger(target, TriggerOpTypes.ADD, key, value)\r\n  } else if (hasChanged(value, oldValue)) {\r\n    trigger(target, TriggerOpTypes.SET, key, value, oldValue)\r\n  }\r\n  return this\r\n}\r\n\r\nfunction deleteEntry(this: CollectionTypes, key: unknown) {\r\n  const target = toRaw(this)\r\n  const { has, get } = getProto(target)\r\n  let hadKey = has.call(target, key)\r\n  if (!hadKey) {\r\n    key = toRaw(key)\r\n    hadKey = has.call(target, key)\r\n  } else if (__DEV__) {\r\n    checkIdentityKeys(target, has, key)\r\n  }\r\n\r\n  const oldValue = get ? get.call(target, key) : undefined\r\n  // forward the operation before queueing reactions\r\n  const result = target.delete(key)\r\n  if (hadKey) {\r\n    trigger(target, TriggerOpTypes.DELETE, key, undefined, oldValue)\r\n  }\r\n  return result\r\n}\r\n\r\nfunction clear(this: IterableCollections) {\r\n  const target = toRaw(this)\r\n  const hadItems = target.size !== 0\r\n  const oldTarget = __DEV__\r\n    ? isMap(target)\r\n      ? new Map(target)\r\n      : new Set(target)\r\n    : undefined\r\n  // forward the operation before queueing reactions\r\n  const result = target.clear()\r\n  if (hadItems) {\r\n    trigger(target, TriggerOpTypes.CLEAR, undefined, undefined, oldTarget)\r\n  }\r\n  return result\r\n}\r\n\r\nfunction createForEach(isReadonly: boolean, isShallow: boolean) {\r\n  return function forEach(\r\n    this: IterableCollections,\r\n    callback: Function,\r\n    thisArg?: unknown\r\n  ) {\r\n    const observed = this as any\r\n    const target = observed[ReactiveFlags.RAW]\r\n    const rawTarget = toRaw(target)\r\n    const wrap = isShallow ? toShallow : isReadonly ? toReadonly : toReactive\r\n    !isReadonly && track(rawTarget, TrackOpTypes.ITERATE, ITERATE_KEY)\r\n    return target.forEach((value: unknown, key: unknown) => {\r\n      // important: make sure the callback is\r\n      // 1. invoked with the reactive map as `this` and 3rd arg\r\n      // 2. the value received should be a corresponding reactive/readonly.\r\n      return callback.call(thisArg, wrap(value), wrap(key), observed)\r\n    })\r\n  }\r\n}\r\n\r\ninterface Iterable {\r\n  [Symbol.iterator](): Iterator\r\n}\r\n\r\ninterface Iterator {\r\n  next(value?: any): IterationResult\r\n}\r\n\r\ninterface IterationResult {\r\n  value: any\r\n  done: boolean\r\n}\r\n\r\nfunction createIterableMethod(\r\n  method: string | symbol,\r\n  isReadonly: boolean,\r\n  isShallow: boolean\r\n) {\r\n  return function (\r\n    this: IterableCollections,\r\n    ...args: unknown[]\r\n  ): Iterable & Iterator {\r\n    const target = (this as any)[ReactiveFlags.RAW]\r\n    const rawTarget = toRaw(target)\r\n    const targetIsMap = isMap(rawTarget)\r\n    const isPair =\r\n      method === 'entries' || (method === Symbol.iterator && targetIsMap)\r\n    const isKeyOnly = method === 'keys' && targetIsMap\r\n    const innerIterator = target[method](...args)\r\n    const wrap = isShallow ? toShallow : isReadonly ? toReadonly : toReactive\r\n    !isReadonly &&\r\n      track(\r\n        rawTarget,\r\n        TrackOpTypes.ITERATE,\r\n        isKeyOnly ? MAP_KEY_ITERATE_KEY : ITERATE_KEY\r\n      )\r\n    // return a wrapped iterator which returns observed versions of the\r\n    // values emitted from the real iterator\r\n    return {\r\n      // iterator protocol\r\n      next() {\r\n        const { value, done } = innerIterator.next()\r\n        return done\r\n          ? { value, done }\r\n          : {\r\n              value: isPair ? [wrap(value[0]), wrap(value[1])] : wrap(value),\r\n              done\r\n            }\r\n      },\r\n      // iterable protocol\r\n      [Symbol.iterator]() {\r\n        return this\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nfunction createReadonlyMethod(type: TriggerOpTypes): Function {\r\n  return function (this: CollectionTypes, ...args: unknown[]) {\r\n    if (__DEV__) {\r\n      const key = args[0] ? `on key \"${args[0]}\" ` : ``\r\n      console.warn(\r\n        `${capitalize(type)} operation ${key}failed: target is readonly.`,\r\n        toRaw(this)\r\n      )\r\n    }\r\n    return type === TriggerOpTypes.DELETE ? false : this\r\n  }\r\n}\r\n\r\nfunction createInstrumentations() {\r\n  const mutableInstrumentations: Record<string, Function> = {\r\n    get(this: MapTypes, key: unknown) {\r\n      return get(this, key)\r\n    },\r\n    get size() {\r\n      return size(this as unknown as IterableCollections)\r\n    },\r\n    has,\r\n    add,\r\n    set,\r\n    delete: deleteEntry,\r\n    clear,\r\n    forEach: createForEach(false, false)\r\n  }\r\n\r\n  const shallowInstrumentations: Record<string, Function> = {\r\n    get(this: MapTypes, key: unknown) {\r\n      return get(this, key, false, true)\r\n    },\r\n    get size() {\r\n      return size(this as unknown as IterableCollections)\r\n    },\r\n    has,\r\n    add,\r\n    set,\r\n    delete: deleteEntry,\r\n    clear,\r\n    forEach: createForEach(false, true)\r\n  }\r\n\r\n  const readonlyInstrumentations: Record<string, Function> = {\r\n    get(this: MapTypes, key: unknown) {\r\n      return get(this, key, true)\r\n    },\r\n    get size() {\r\n      return size(this as unknown as IterableCollections, true)\r\n    },\r\n    has(this: MapTypes, key: unknown) {\r\n      return has.call(this, key, true)\r\n    },\r\n    add: createReadonlyMethod(TriggerOpTypes.ADD),\r\n    set: createReadonlyMethod(TriggerOpTypes.SET),\r\n    delete: createReadonlyMethod(TriggerOpTypes.DELETE),\r\n    clear: createReadonlyMethod(TriggerOpTypes.CLEAR),\r\n    forEach: createForEach(true, false)\r\n  }\r\n\r\n  const shallowReadonlyInstrumentations: Record<string, Function> = {\r\n    get(this: MapTypes, key: unknown) {\r\n      return get(this, key, true, true)\r\n    },\r\n    get size() {\r\n      return size(this as unknown as IterableCollections, true)\r\n    },\r\n    has(this: MapTypes, key: unknown) {\r\n      return has.call(this, key, true)\r\n    },\r\n    add: createReadonlyMethod(TriggerOpTypes.ADD),\r\n    set: createReadonlyMethod(TriggerOpTypes.SET),\r\n    delete: createReadonlyMethod(TriggerOpTypes.DELETE),\r\n    clear: createReadonlyMethod(TriggerOpTypes.CLEAR),\r\n    forEach: createForEach(true, true)\r\n  }\r\n\r\n  const iteratorMethods = ['keys', 'values', 'entries', Symbol.iterator]\r\n  iteratorMethods.forEach(method => {\r\n    mutableInstrumentations[method as string] = createIterableMethod(\r\n      method,\r\n      false,\r\n      false\r\n    )\r\n    readonlyInstrumentations[method as string] = createIterableMethod(\r\n      method,\r\n      true,\r\n      false\r\n    )\r\n    shallowInstrumentations[method as string] = createIterableMethod(\r\n      method,\r\n      false,\r\n      true\r\n    )\r\n    shallowReadonlyInstrumentations[method as string] = createIterableMethod(\r\n      method,\r\n      true,\r\n      true\r\n    )\r\n  })\r\n\r\n  return [\r\n    mutableInstrumentations,\r\n    readonlyInstrumentations,\r\n    shallowInstrumentations,\r\n    shallowReadonlyInstrumentations\r\n  ]\r\n}\r\n\r\nconst [\r\n  mutableInstrumentations,\r\n  readonlyInstrumentations,\r\n  shallowInstrumentations,\r\n  shallowReadonlyInstrumentations\r\n] = /* #__PURE__*/ createInstrumentations()\r\n\r\nfunction createInstrumentationGetter(isReadonly: boolean, shallow: boolean) {\r\n  const instrumentations = shallow\r\n    ? isReadonly\r\n      ? shallowReadonlyInstrumentations\r\n      : shallowInstrumentations\r\n    : isReadonly\r\n    ? readonlyInstrumentations\r\n    : mutableInstrumentations\r\n\r\n  return (\r\n    target: CollectionTypes,\r\n    key: string | symbol,\r\n    receiver: CollectionTypes\r\n  ) => {\r\n    if (key === ReactiveFlags.IS_REACTIVE) {\r\n      return !isReadonly\r\n    } else if (key === ReactiveFlags.IS_READONLY) {\r\n      return isReadonly\r\n    } else if (key === ReactiveFlags.RAW) {\r\n      return target\r\n    }\r\n\r\n    return Reflect.get(\r\n      hasOwn(instrumentations, key) && key in target\r\n        ? instrumentations\r\n        : target,\r\n      key,\r\n      receiver\r\n    )\r\n  }\r\n}\r\n\r\nexport const mutableCollectionHandlers: ProxyHandler<CollectionTypes> = {\r\n  get: /*#__PURE__*/ createInstrumentationGetter(false, false)\r\n}\r\n\r\nexport const shallowCollectionHandlers: ProxyHandler<CollectionTypes> = {\r\n  get: /*#__PURE__*/ createInstrumentationGetter(false, true)\r\n}\r\n\r\nexport const readonlyCollectionHandlers: ProxyHandler<CollectionTypes> = {\r\n  get: /*#__PURE__*/ createInstrumentationGetter(true, false)\r\n}\r\n\r\nexport const shallowReadonlyCollectionHandlers: ProxyHandler<CollectionTypes> =\r\n  {\r\n    get: /*#__PURE__*/ createInstrumentationGetter(true, true)\r\n  }\r\n\r\nfunction checkIdentityKeys(\r\n  target: CollectionTypes,\r\n  has: (key: unknown) => boolean,\r\n  key: unknown\r\n) {\r\n  const rawKey = toRaw(key)\r\n  if (rawKey !== key && has.call(target, rawKey)) {\r\n    const type = toRawType(target)\r\n    console.warn(\r\n      `Reactive ${type} contains both the raw and reactive ` +\r\n        `versions of the same object${type === `Map` ? ` as keys` : ``}, ` +\r\n        `which can lead to inconsistencies. ` +\r\n        `Avoid differentiating between the raw and reactive versions ` +\r\n        `of an object and only use the reactive version if possible.`\r\n    )\r\n  }\r\n}\r\n","import { isObject, toRawType, def } from '@vue/shared'\r\nimport {\r\n  mutableHandlers,\r\n  readonlyHandlers,\r\n  shallowReactiveHandlers,\r\n  shallowReadonlyHandlers\r\n} from './baseHandlers'\r\nimport {\r\n  mutableCollectionHandlers,\r\n  readonlyCollectionHandlers,\r\n  shallowCollectionHandlers,\r\n  shallowReadonlyCollectionHandlers\r\n} from './collectionHandlers'\r\nimport { UnwrapRefSimple, Ref } from './ref'\r\n\r\nexport const enum ReactiveFlags {\r\n  SKIP = '__v_skip',\r\n  IS_REACTIVE = '__v_isReactive',\r\n  IS_READONLY = '__v_isReadonly',\r\n  RAW = '__v_raw'\r\n}\r\n\r\nexport interface Target {\r\n  [ReactiveFlags.SKIP]?: boolean\r\n  [ReactiveFlags.IS_REACTIVE]?: boolean\r\n  [ReactiveFlags.IS_READONLY]?: boolean\r\n  [ReactiveFlags.RAW]?: any\r\n}\r\n\r\nexport const reactiveMap = new WeakMap<Target, any>()\r\nexport const shallowReactiveMap = new WeakMap<Target, any>()\r\nexport const readonlyMap = new WeakMap<Target, any>()\r\nexport const shallowReadonlyMap = new WeakMap<Target, any>()\r\n\r\nconst enum TargetType {\r\n  INVALID = 0,\r\n  COMMON = 1,\r\n  COLLECTION = 2\r\n}\r\n\r\nfunction targetTypeMap(rawType: string) {\r\n  switch (rawType) {\r\n    case 'Object':\r\n    case 'Array':\r\n      return TargetType.COMMON\r\n    case 'Map':\r\n    case 'Set':\r\n    case 'WeakMap':\r\n    case 'WeakSet':\r\n      return TargetType.COLLECTION\r\n    default:\r\n      return TargetType.INVALID\r\n  }\r\n}\r\n\r\nfunction getTargetType(value: Target) {\r\n  return value[ReactiveFlags.SKIP] || !Object.isExtensible(value)\r\n    ? TargetType.INVALID\r\n    : targetTypeMap(toRawType(value))\r\n}\r\n\r\n// only unwrap nested ref\r\nexport type UnwrapNestedRefs<T> = T extends Ref ? T : UnwrapRefSimple<T>\r\n\r\n/**\r\n * Creates a reactive copy of the original object.\r\n *\r\n * The reactive conversion is \"deep\"—it affects all nested properties. In the\r\n * ES2015 Proxy based implementation, the returned proxy is **not** equal to the\r\n * original object. It is recommended to work exclusively with the reactive\r\n * proxy and avoid relying on the original object.\r\n *\r\n * A reactive object also automatically unwraps refs contained in it, so you\r\n * don't need to use `.value` when accessing and mutating their value:\r\n *\r\n * ```js\r\n * const count = ref(0)\r\n * const obj = reactive({\r\n *   count\r\n * })\r\n *\r\n * obj.count++\r\n * obj.count // -> 1\r\n * count.value // -> 1\r\n * ```\r\n */\r\nexport function reactive<T extends object>(target: T): UnwrapNestedRefs<T>\r\nexport function reactive(target: object) {\r\n  // if trying to observe a readonly proxy, return the readonly version.\r\n  if (target && (target as Target)[ReactiveFlags.IS_READONLY]) {\r\n    return target\r\n  }\r\n  return createReactiveObject(\r\n    target,\r\n    false,\r\n    mutableHandlers,\r\n    mutableCollectionHandlers,\r\n    reactiveMap\r\n  )\r\n}\r\n\r\n/**\r\n * Return a shallowly-reactive copy of the original object, where only the root\r\n * level properties are reactive. It also does not auto-unwrap refs (even at the\r\n * root level).\r\n */\r\nexport function shallowReactive<T extends object>(target: T): T {\r\n  return createReactiveObject(\r\n    target,\r\n    false,\r\n    shallowReactiveHandlers,\r\n    shallowCollectionHandlers,\r\n    shallowReactiveMap\r\n  )\r\n}\r\n\r\ntype Primitive = string | number | boolean | bigint | symbol | undefined | null\r\ntype Builtin = Primitive | Function | Date | Error | RegExp\r\nexport type DeepReadonly<T> = T extends Builtin\r\n  ? T\r\n  : T extends Map<infer K, infer V>\r\n  ? ReadonlyMap<DeepReadonly<K>, DeepReadonly<V>>\r\n  : T extends ReadonlyMap<infer K, infer V>\r\n  ? ReadonlyMap<DeepReadonly<K>, DeepReadonly<V>>\r\n  : T extends WeakMap<infer K, infer V>\r\n  ? WeakMap<DeepReadonly<K>, DeepReadonly<V>>\r\n  : T extends Set<infer U>\r\n  ? ReadonlySet<DeepReadonly<U>>\r\n  : T extends ReadonlySet<infer U>\r\n  ? ReadonlySet<DeepReadonly<U>>\r\n  : T extends WeakSet<infer U>\r\n  ? WeakSet<DeepReadonly<U>>\r\n  : T extends Promise<infer U>\r\n  ? Promise<DeepReadonly<U>>\r\n  : T extends {}\r\n  ? { readonly [K in keyof T]: DeepReadonly<T[K]> }\r\n  : Readonly<T>\r\n\r\n/**\r\n * Creates a readonly copy of the original object. Note the returned copy is not\r\n * made reactive, but `readonly` can be called on an already reactive object.\r\n */\r\nexport function readonly<T extends object>(\r\n  target: T\r\n): DeepReadonly<UnwrapNestedRefs<T>> {\r\n  return createReactiveObject(\r\n    target,\r\n    true,\r\n    readonlyHandlers,\r\n    readonlyCollectionHandlers,\r\n    readonlyMap\r\n  )\r\n}\r\n\r\n/**\r\n * Returns a reactive-copy of the original object, where only the root level\r\n * properties are readonly, and does NOT unwrap refs nor recursively convert\r\n * returned properties.\r\n * This is used for creating the props proxy object for stateful components.\r\n */\r\nexport function shallowReadonly<T extends object>(\r\n  target: T\r\n): Readonly<{ [K in keyof T]: UnwrapNestedRefs<T[K]> }> {\r\n  return createReactiveObject(\r\n    target,\r\n    true,\r\n    shallowReadonlyHandlers,\r\n    shallowReadonlyCollectionHandlers,\r\n    shallowReadonlyMap\r\n  )\r\n}\r\n\r\nfunction createReactiveObject(\r\n  target: Target,\r\n  isReadonly: boolean,\r\n  baseHandlers: ProxyHandler<any>,\r\n  collectionHandlers: ProxyHandler<any>,\r\n  proxyMap: WeakMap<Target, any>\r\n) {\r\n  if (!isObject(target)) {\r\n    if (__DEV__) {\r\n      console.warn(`value cannot be made reactive: ${String(target)}`)\r\n    }\r\n    return target\r\n  }\r\n  // target is already a Proxy, return it.\r\n  // exception: calling readonly() on a reactive object\r\n  if (\r\n    target[ReactiveFlags.RAW] &&\r\n    !(isReadonly && target[ReactiveFlags.IS_REACTIVE])\r\n  ) {\r\n    return target\r\n  }\r\n  // target already has corresponding Proxy\r\n  const existingProxy = proxyMap.get(target)\r\n  if (existingProxy) {\r\n    return existingProxy\r\n  }\r\n  // only a whitelist of value types can be observed.\r\n  const targetType = getTargetType(target)\r\n  if (targetType === TargetType.INVALID) {\r\n    return target\r\n  }\r\n  const proxy = new Proxy(\r\n    target,\r\n    targetType === TargetType.COLLECTION ? collectionHandlers : baseHandlers\r\n  )\r\n  proxyMap.set(target, proxy)\r\n  return proxy\r\n}\r\n\r\nexport function isReactive(value: unknown): boolean {\r\n  if (isReadonly(value)) {\r\n    return isReactive((value as Target)[ReactiveFlags.RAW])\r\n  }\r\n  return !!(value && (value as Target)[ReactiveFlags.IS_REACTIVE])\r\n}\r\n\r\nexport function isReadonly(value: unknown): boolean {\r\n  return !!(value && (value as Target)[ReactiveFlags.IS_READONLY])\r\n}\r\n\r\nexport function isProxy(value: unknown): boolean {\r\n  return isReactive(value) || isReadonly(value)\r\n}\r\n\r\nexport function toRaw<T>(observed: T): T {\r\n  const raw = observed && (observed as Target)[ReactiveFlags.RAW]\r\n  return raw ? toRaw(raw) : observed\r\n}\r\n\r\nexport function markRaw<T extends object>(value: T): T {\r\n  def(value, ReactiveFlags.SKIP, true)\r\n  return value\r\n}\r\n","import { isTracking, trackEffects, triggerEffects } from './effect'\r\nimport { TrackOpTypes, TriggerOpTypes } from './operations'\r\nimport { isArray, isObject, hasChanged } from '@vue/shared'\r\nimport { reactive, isProxy, toRaw, isReactive } from './reactive'\r\nimport { CollectionTypes } from './collectionHandlers'\r\nimport { createDep, Dep } from './dep'\r\n\r\nexport declare const RefSymbol: unique symbol\r\n\r\nexport interface Ref<T = any> {\r\n  value: T\r\n  /**\r\n   * Type differentiator only.\r\n   * We need this to be in public d.ts but don't want it to show up in IDE\r\n   * autocomplete, so we use a private Symbol instead.\r\n   */\r\n  [RefSymbol]: true\r\n  /**\r\n   * @internal\r\n   */\r\n  _shallow?: boolean\r\n}\r\n\r\ntype RefBase<T> = {\r\n  dep?: Dep\r\n  value: T\r\n}\r\n\r\nexport function trackRefValue(ref: RefBase<any>) {\r\n  if (isTracking()) {\r\n    ref = toRaw(ref)\r\n    if (!ref.dep) {\r\n      ref.dep = createDep()\r\n    }\r\n    if (__DEV__) {\r\n      trackEffects(ref.dep, {\r\n        target: ref,\r\n        type: TrackOpTypes.GET,\r\n        key: 'value'\r\n      })\r\n    } else {\r\n      trackEffects(ref.dep)\r\n    }\r\n  }\r\n}\r\n\r\nexport function triggerRefValue(ref: RefBase<any>, newVal?: any) {\r\n  ref = toRaw(ref)\r\n  if (ref.dep) {\r\n    if (__DEV__) {\r\n      triggerEffects(ref.dep, {\r\n        target: ref,\r\n        type: TriggerOpTypes.SET,\r\n        key: 'value',\r\n        newValue: newVal\r\n      })\r\n    } else {\r\n      triggerEffects(ref.dep)\r\n    }\r\n  }\r\n}\r\n\r\nexport type ToRef<T> = [T] extends [Ref] ? T : Ref<UnwrapRef<T>>\r\nexport type ToRefs<T = any> = {\r\n  // #2687: somehow using ToRef<T[K]> here turns the resulting type into\r\n  // a union of multiple Ref<*> types instead of a single Ref<* | *> type.\r\n  [K in keyof T]: T[K] extends Ref ? T[K] : Ref<UnwrapRef<T[K]>>\r\n}\r\n\r\nconst convert = <T extends unknown>(val: T): T =>\r\n  isObject(val) ? reactive(val) : val\r\n\r\nexport function isRef<T>(r: Ref<T> | unknown): r is Ref<T>\r\nexport function isRef(r: any): r is Ref {\r\n  return Boolean(r && r.__v_isRef === true)\r\n}\r\n\r\nexport function ref<T extends object>(value: T): ToRef<T>\r\nexport function ref<T>(value: T): Ref<UnwrapRef<T>>\r\nexport function ref<T = any>(): Ref<T | undefined>\r\nexport function ref(value?: unknown) {\r\n  return createRef(value)\r\n}\r\n\r\nexport function shallowRef<T extends object>(\r\n  value: T\r\n): T extends Ref ? T : Ref<T>\r\nexport function shallowRef<T>(value: T): Ref<T>\r\nexport function shallowRef<T = any>(): Ref<T | undefined>\r\nexport function shallowRef(value?: unknown) {\r\n  return createRef(value, true)\r\n}\r\n\r\nclass RefImpl<T> {\r\n  private _value: T\r\n  private _rawValue: T\r\n\r\n  public dep?: Dep = undefined\r\n  public readonly __v_isRef = true\r\n\r\n  constructor(value: T, public readonly _shallow = false) {\r\n    this._rawValue = _shallow ? value : toRaw(value)\r\n    this._value = _shallow ? value : convert(value)\r\n  }\r\n\r\n  get value() {\r\n    trackRefValue(this)\r\n    return this._value\r\n  }\r\n\r\n  set value(newVal) {\r\n    newVal = this._shallow ? newVal : toRaw(newVal)\r\n    if (hasChanged(newVal, this._rawValue)) {\r\n      this._rawValue = newVal\r\n      this._value = this._shallow ? newVal : convert(newVal)\r\n      triggerRefValue(this, newVal)\r\n    }\r\n  }\r\n}\r\n\r\nfunction createRef(rawValue: unknown, shallow = false) {\r\n  if (isRef(rawValue)) {\r\n    return rawValue\r\n  }\r\n  return new RefImpl(rawValue, shallow)\r\n}\r\n\r\nexport function triggerRef(ref: Ref) {\r\n  triggerRefValue(ref, __DEV__ ? ref.value : void 0)\r\n}\r\n\r\nexport function unref<T>(ref: T | Ref<T>): T {\r\n  return isRef(ref) ? (ref.value as any) : ref\r\n}\r\n\r\nconst shallowUnwrapHandlers: ProxyHandler<any> = {\r\n  get: (target, key, receiver) => unref(Reflect.get(target, key, receiver)),\r\n  set: (target, key, value, receiver) => {\r\n    const oldValue = target[key]\r\n    if (isRef(oldValue) && !isRef(value)) {\r\n      oldValue.value = value\r\n      return true\r\n    } else {\r\n      return Reflect.set(target, key, value, receiver)\r\n    }\r\n  }\r\n}\r\n\r\nexport function proxyRefs<T extends object>(\r\n  objectWithRefs: T\r\n): ShallowUnwrapRef<T> {\r\n  return isReactive(objectWithRefs)\r\n    ? objectWithRefs\r\n    : new Proxy(objectWithRefs, shallowUnwrapHandlers)\r\n}\r\n\r\nexport type CustomRefFactory<T> = (\r\n  track: () => void,\r\n  trigger: () => void\r\n) => {\r\n  get: () => T\r\n  set: (value: T) => void\r\n}\r\n\r\nclass CustomRefImpl<T> {\r\n  public dep?: Dep = undefined\r\n\r\n  private readonly _get: ReturnType<CustomRefFactory<T>>['get']\r\n  private readonly _set: ReturnType<CustomRefFactory<T>>['set']\r\n\r\n  public readonly __v_isRef = true\r\n\r\n  constructor(factory: CustomRefFactory<T>) {\r\n    const { get, set } = factory(\r\n      () => trackRefValue(this),\r\n      () => triggerRefValue(this)\r\n    )\r\n    this._get = get\r\n    this._set = set\r\n  }\r\n\r\n  get value() {\r\n    return this._get()\r\n  }\r\n\r\n  set value(newVal) {\r\n    this._set(newVal)\r\n  }\r\n}\r\n\r\nexport function customRef<T>(factory: CustomRefFactory<T>): Ref<T> {\r\n  return new CustomRefImpl(factory) as any\r\n}\r\n\r\nexport function toRefs<T extends object>(object: T): ToRefs<T> {\r\n  if (__DEV__ && !isProxy(object)) {\r\n    console.warn(`toRefs() expects a reactive object but received a plain one.`)\r\n  }\r\n  const ret: any = isArray(object) ? new Array(object.length) : {}\r\n  for (const key in object) {\r\n    ret[key] = toRef(object, key)\r\n  }\r\n  return ret\r\n}\r\n\r\nclass ObjectRefImpl<T extends object, K extends keyof T> {\r\n  public readonly __v_isRef = true\r\n\r\n  constructor(private readonly _object: T, private readonly _key: K) {}\r\n\r\n  get value() {\r\n    return this._object[this._key]\r\n  }\r\n\r\n  set value(newVal) {\r\n    this._object[this._key] = newVal\r\n  }\r\n}\r\n\r\nexport function toRef<T extends object, K extends keyof T>(\r\n  object: T,\r\n  key: K\r\n): ToRef<T[K]> {\r\n  return isRef(object[key])\r\n    ? object[key]\r\n    : (new ObjectRefImpl(object, key) as any)\r\n}\r\n\r\n// corner case when use narrows type\r\n// Ex. type RelativePath = string & { __brand: unknown }\r\n// RelativePath extends object -> true\r\ntype BaseTypes = string | number | boolean\r\n\r\n/**\r\n * This is a special exported interface for other packages to declare\r\n * additional types that should bail out for ref unwrapping. For example\r\n * \\@vue/runtime-dom can declare it like so in its d.ts:\r\n *\r\n * ``` ts\r\n * declare module '@vue/reactivity' {\r\n *   export interface RefUnwrapBailTypes {\r\n *     runtimeDOMBailTypes: Node | Window\r\n *   }\r\n * }\r\n * ```\r\n *\r\n * Note that api-extractor somehow refuses to include `declare module`\r\n * augmentations in its generated d.ts, so we have to manually append them\r\n * to the final generated d.ts in our build process.\r\n */\r\nexport interface RefUnwrapBailTypes {}\r\n\r\nexport type ShallowUnwrapRef<T> = {\r\n  [K in keyof T]: T[K] extends Ref<infer V>\r\n    ? V\r\n    : T[K] extends Ref<infer V> | undefined // if `V` is `unknown` that means it does not extend `Ref` and is undefined\r\n    ? unknown extends V\r\n      ? undefined\r\n      : V | undefined\r\n    : T[K]\r\n}\r\n\r\nexport type UnwrapRef<T> = T extends Ref<infer V>\r\n  ? UnwrapRefSimple<V>\r\n  : UnwrapRefSimple<T>\r\n\r\nexport type UnwrapRefSimple<T> = T extends\r\n  | Function\r\n  | CollectionTypes\r\n  | BaseTypes\r\n  | Ref\r\n  | RefUnwrapBailTypes[keyof RefUnwrapBailTypes]\r\n  ? T\r\n  : T extends Array<any>\r\n  ? { [K in keyof T]: UnwrapRefSimple<T[K]> }\r\n  : T extends object\r\n  ? {\r\n      [P in keyof T]: P extends symbol ? T[P] : UnwrapRef<T[P]>\r\n    }\r\n  : T\r\n","import { DebuggerOptions, ReactiveEffect } from './effect'\r\nimport { Ref, trackRefValue, triggerRefValue } from './ref'\r\nimport { isFunction, NOOP } from '@vue/shared'\r\nimport { ReactiveFlags, toRaw } from './reactive'\r\nimport { Dep } from './dep'\r\n\r\nexport interface ComputedRef<T = any> extends WritableComputedRef<T> {\r\n  readonly value: T\r\n}\r\n\r\nexport interface WritableComputedRef<T> extends Ref<T> {\r\n  readonly effect: ReactiveEffect<T>\r\n}\r\n\r\nexport type ComputedGetter<T> = (...args: any[]) => T\r\nexport type ComputedSetter<T> = (v: T) => void\r\n\r\nexport interface WritableComputedOptions<T> {\r\n  get: ComputedGetter<T>\r\n  set: ComputedSetter<T>\r\n}\r\n\r\nclass ComputedRefImpl<T> {\r\n  public dep?: Dep = undefined\r\n\r\n  private _value!: T\r\n  private _dirty = true\r\n  public readonly effect: ReactiveEffect<T>\r\n\r\n  public readonly __v_isRef = true\r\n  public readonly [ReactiveFlags.IS_READONLY]: boolean\r\n\r\n  constructor(\r\n    getter: ComputedGetter<T>,\r\n    private readonly _setter: ComputedSetter<T>,\r\n    isReadonly: boolean\r\n  ) {\r\n    this.effect = new ReactiveEffect(getter, () => {\r\n      if (!this._dirty) {\r\n        this._dirty = true\r\n        triggerRefValue(this)\r\n      }\r\n    })\r\n    this[ReactiveFlags.IS_READONLY] = isReadonly\r\n  }\r\n\r\n  get value() {\r\n    // the computed ref may get wrapped by other proxies e.g. readonly() #3376\r\n    const self = toRaw(this)\r\n    trackRefValue(self)\r\n    if (self._dirty) {\r\n      self._dirty = false\r\n      self._value = self.effect.run()!\r\n    }\r\n    return self._value\r\n  }\r\n\r\n  set value(newValue: T) {\r\n    this._setter(newValue)\r\n  }\r\n}\r\n\r\nexport function computed<T>(\r\n  getter: ComputedGetter<T>,\r\n  debugOptions?: DebuggerOptions\r\n): ComputedRef<T>\r\nexport function computed<T>(\r\n  options: WritableComputedOptions<T>,\r\n  debugOptions?: DebuggerOptions\r\n): WritableComputedRef<T>\r\nexport function computed<T>(\r\n  getterOrOptions: ComputedGetter<T> | WritableComputedOptions<T>,\r\n  debugOptions?: DebuggerOptions\r\n) {\r\n  let getter: ComputedGetter<T>\r\n  let setter: ComputedSetter<T>\r\n\r\n  if (isFunction(getterOrOptions)) {\r\n    getter = getterOrOptions\r\n    setter = __DEV__\r\n      ? () => {\r\n          console.warn('Write operation failed: computed value is readonly')\r\n        }\r\n      : NOOP\r\n  } else {\r\n    getter = getterOrOptions.get\r\n    setter = getterOrOptions.set\r\n  }\r\n\r\n  const cRef = new ComputedRefImpl(\r\n    getter,\r\n    setter,\r\n    isFunction(getterOrOptions) || !getterOrOptions.set\r\n  )\r\n\r\n  if (__DEV__ && debugOptions) {\r\n    cRef.effect.onTrack = debugOptions.onTrack\r\n    cRef.effect.onTrigger = debugOptions.onTrigger\r\n  }\r\n\r\n  return cRef as any\r\n}\r\n","import { App } from './apiCreateApp'\r\nimport { Fragment, Text, Comment, Static } from './vnode'\r\nimport { ComponentInternalInstance } from './component'\r\n\r\ninterface AppRecord {\r\n  id: number\r\n  app: App\r\n  version: string\r\n  types: Record<string, string | Symbol>\r\n}\r\n\r\nconst enum DevtoolsHooks {\r\n  APP_INIT = 'app:init',\r\n  APP_UNMOUNT = 'app:unmount',\r\n  COMPONENT_UPDATED = 'component:updated',\r\n  COMPONENT_ADDED = 'component:added',\r\n  COMPONENT_REMOVED = 'component:removed',\r\n  COMPONENT_EMIT = 'component:emit',\r\n  PERFORMANCE_START = 'perf:start',\r\n  PERFORMANCE_END = 'perf:end'\r\n}\r\n\r\ninterface DevtoolsHook {\r\n  emit: (event: string, ...payload: any[]) => void\r\n  on: (event: string, handler: Function) => void\r\n  once: (event: string, handler: Function) => void\r\n  off: (event: string, handler: Function) => void\r\n  appRecords: AppRecord[]\r\n}\r\n\r\nexport let devtools: DevtoolsHook\r\n\r\nexport function setDevtoolsHook(hook: DevtoolsHook) {\r\n  devtools = hook\r\n}\r\n\r\nexport function devtoolsInitApp(app: App, version: string) {\r\n  // TODO queue if devtools is undefined\r\n  if (!devtools) return\r\n  devtools.emit(DevtoolsHooks.APP_INIT, app, version, {\r\n    Fragment,\r\n    Text,\r\n    Comment,\r\n    Static\r\n  })\r\n}\r\n\r\nexport function devtoolsUnmountApp(app: App) {\r\n  if (!devtools) return\r\n  devtools.emit(DevtoolsHooks.APP_UNMOUNT, app)\r\n}\r\n\r\nexport const devtoolsComponentAdded = /*#__PURE__*/ createDevtoolsComponentHook(\r\n  DevtoolsHooks.COMPONENT_ADDED\r\n)\r\n\r\nexport const devtoolsComponentUpdated =\r\n  /*#__PURE__*/ createDevtoolsComponentHook(DevtoolsHooks.COMPONENT_UPDATED)\r\n\r\nexport const devtoolsComponentRemoved =\r\n  /*#__PURE__*/ createDevtoolsComponentHook(DevtoolsHooks.COMPONENT_REMOVED)\r\n\r\nfunction createDevtoolsComponentHook(hook: DevtoolsHooks) {\r\n  return (component: ComponentInternalInstance) => {\r\n    if (!devtools) return\r\n    devtools.emit(\r\n      hook,\r\n      component.appContext.app,\r\n      component.uid,\r\n      component.parent ? component.parent.uid : undefined,\r\n      component\r\n    )\r\n  }\r\n}\r\n\r\nexport const devtoolsPerfStart = /*#__PURE__*/ createDevtoolsPerformanceHook(\r\n  DevtoolsHooks.PERFORMANCE_START\r\n)\r\n\r\nexport const devtoolsPerfEnd = /*#__PURE__*/ createDevtoolsPerformanceHook(\r\n  DevtoolsHooks.PERFORMANCE_END\r\n)\r\n\r\nfunction createDevtoolsPerformanceHook(hook: DevtoolsHooks) {\r\n  return (component: ComponentInternalInstance, type: string, time: number) => {\r\n    if (!devtools) return\r\n    devtools.emit(\r\n      hook,\r\n      component.appContext.app,\r\n      component.uid,\r\n      component,\r\n      type,\r\n      time\r\n    )\r\n  }\r\n}\r\n\r\nexport function devtoolsComponentEmit(\r\n  component: ComponentInternalInstance,\r\n  event: string,\r\n  params: any[]\r\n) {\r\n  if (!devtools) return\r\n  devtools.emit(\r\n    DevtoolsHooks.COMPONENT_EMIT,\r\n    component.appContext.app,\r\n    component,\r\n    event,\r\n    params\r\n  )\r\n}\r\n","import {\r\n  camelize,\r\n  EMPTY_OBJ,\r\n  toHandlerKey,\r\n  extend,\r\n  hasOwn,\r\n  hyphenate,\r\n  isArray,\r\n  isFunction,\r\n  isOn,\r\n  toNumber\r\n} from '@vue/shared'\r\nimport {\r\n  ComponentInternalInstance,\r\n  ComponentOptions,\r\n  ConcreteComponent,\r\n  formatComponentName\r\n} from './component'\r\nimport { callWithAsyncErrorHandling, ErrorCodes } from './errorHandling'\r\nimport { warn } from './warning'\r\nimport { UnionToIntersection } from './helpers/typeUtils'\r\nimport { devtoolsComponentEmit } from './devtools'\r\nimport { AppContext } from './apiCreateApp'\r\nimport { emit as compatInstanceEmit } from './compat/instanceEventEmitter'\r\nimport {\r\n  compatModelEventPrefix,\r\n  compatModelEmit\r\n} from './compat/componentVModel'\r\n\r\nexport type ObjectEmitsOptions = Record<\r\n  string,\r\n  ((...args: any[]) => any) | null\r\n>\r\n\r\nexport type EmitsOptions = ObjectEmitsOptions | string[]\r\n\r\nexport type EmitsToProps<T extends EmitsOptions> = T extends string[]\r\n  ? {\r\n      [K in string & `on${Capitalize<T[number]>}`]?: (...args: any[]) => any\r\n    }\r\n  : T extends ObjectEmitsOptions\r\n  ? {\r\n      [K in string &\r\n        `on${Capitalize<string & keyof T>}`]?: K extends `on${infer C}`\r\n        ? T[Uncapitalize<C>] extends null\r\n          ? (...args: any[]) => any\r\n          : T[Uncapitalize<C>]\r\n        : never\r\n    }\r\n  : {}\r\n\r\nexport type EmitFn<\r\n  Options = ObjectEmitsOptions,\r\n  Event extends keyof Options = keyof Options\r\n> = Options extends Array<infer V>\r\n  ? (event: V, ...args: any[]) => void\r\n  : {} extends Options // if the emit is empty object (usually the default value for emit) should be converted to function\r\n  ? (event: string, ...args: any[]) => void\r\n  : UnionToIntersection<\r\n      {\r\n        [key in Event]: Options[key] extends (...args: infer Args) => any\r\n          ? (event: key, ...args: Args) => void\r\n          : (event: key, ...args: any[]) => void\r\n      }[Event]\r\n    >\r\n\r\nexport function emit(\r\n  instance: ComponentInternalInstance,\r\n  event: string,\r\n  ...rawArgs: any[]\r\n) {\r\n  const props = instance.vnode.props || EMPTY_OBJ\r\n\r\n  if (__DEV__) {\r\n    const {\r\n      emitsOptions,\r\n      propsOptions: [propsOptions]\r\n    } = instance\r\n    if (emitsOptions) {\r\n      if (\r\n        !(event in emitsOptions) &&\r\n        !(\r\n          __COMPAT__ &&\r\n          (event.startsWith('hook:') ||\r\n            event.startsWith(compatModelEventPrefix))\r\n        )\r\n      ) {\r\n        if (!propsOptions || !(toHandlerKey(event) in propsOptions)) {\r\n          warn(\r\n            `Component emitted event \"${event}\" but it is neither declared in ` +\r\n              `the emits option nor as an \"${toHandlerKey(event)}\" prop.`\r\n          )\r\n        }\r\n      } else {\r\n        const validator = emitsOptions[event]\r\n        if (isFunction(validator)) {\r\n          const isValid = validator(...rawArgs)\r\n          if (!isValid) {\r\n            warn(\r\n              `Invalid event arguments: event validation failed for event \"${event}\".`\r\n            )\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  let args = rawArgs\r\n  const isModelListener = event.startsWith('update:')\r\n\r\n  // for v-model update:xxx events, apply modifiers on args\r\n  const modelArg = isModelListener && event.slice(7)\r\n  if (modelArg && modelArg in props) {\r\n    const modifiersKey = `${\r\n      modelArg === 'modelValue' ? 'model' : modelArg\r\n    }Modifiers`\r\n    const { number, trim } = props[modifiersKey] || EMPTY_OBJ\r\n    if (trim) {\r\n      args = rawArgs.map(a => a.trim())\r\n    } else if (number) {\r\n      args = rawArgs.map(toNumber)\r\n    }\r\n  }\r\n\r\n  if (__DEV__ || __FEATURE_PROD_DEVTOOLS__) {\r\n    devtoolsComponentEmit(instance, event, args)\r\n  }\r\n\r\n  if (__DEV__) {\r\n    const lowerCaseEvent = event.toLowerCase()\r\n    if (lowerCaseEvent !== event && props[toHandlerKey(lowerCaseEvent)]) {\r\n      warn(\r\n        `Event \"${lowerCaseEvent}\" is emitted in component ` +\r\n          `${formatComponentName(\r\n            instance,\r\n            instance.type\r\n          )} but the handler is registered for \"${event}\". ` +\r\n          `Note that HTML attributes are case-insensitive and you cannot use ` +\r\n          `v-on to listen to camelCase events when using in-DOM templates. ` +\r\n          `You should probably use \"${hyphenate(event)}\" instead of \"${event}\".`\r\n      )\r\n    }\r\n  }\r\n\r\n  let handlerName\r\n  let handler =\r\n    props[(handlerName = toHandlerKey(event))] ||\r\n    // also try camelCase event handler (#2249)\r\n    props[(handlerName = toHandlerKey(camelize(event)))]\r\n  // for v-model update:xxx events, also trigger kebab-case equivalent\r\n  // for props passed via kebab-case\r\n  if (!handler && isModelListener) {\r\n    handler = props[(handlerName = toHandlerKey(hyphenate(event)))]\r\n  }\r\n\r\n  if (handler) {\r\n    callWithAsyncErrorHandling(\r\n      handler,\r\n      instance,\r\n      ErrorCodes.COMPONENT_EVENT_HANDLER,\r\n      args\r\n    )\r\n  }\r\n\r\n  const onceHandler = props[handlerName + `Once`]\r\n  if (onceHandler) {\r\n    if (!instance.emitted) {\r\n      instance.emitted = {} as Record<any, boolean>\r\n    } else if (instance.emitted[handlerName]) {\r\n      return\r\n    }\r\n    instance.emitted[handlerName] = true\r\n    callWithAsyncErrorHandling(\r\n      onceHandler,\r\n      instance,\r\n      ErrorCodes.COMPONENT_EVENT_HANDLER,\r\n      args\r\n    )\r\n  }\r\n\r\n  if (__COMPAT__) {\r\n    compatModelEmit(instance, event, args)\r\n    return compatInstanceEmit(instance, event, args)\r\n  }\r\n}\r\n\r\nexport function normalizeEmitsOptions(\r\n  comp: ConcreteComponent,\r\n  appContext: AppContext,\r\n  asMixin = false\r\n): ObjectEmitsOptions | null {\r\n  const cache = appContext.emitsCache\r\n  const cached = cache.get(comp)\r\n  if (cached !== undefined) {\r\n    return cached\r\n  }\r\n\r\n  const raw = comp.emits\r\n  let normalized: ObjectEmitsOptions = {}\r\n\r\n  // apply mixin/extends props\r\n  let hasExtends = false\r\n  if (__FEATURE_OPTIONS_API__ && !isFunction(comp)) {\r\n    const extendEmits = (raw: ComponentOptions) => {\r\n      const normalizedFromExtend = normalizeEmitsOptions(raw, appContext, true)\r\n      if (normalizedFromExtend) {\r\n        hasExtends = true\r\n        extend(normalized, normalizedFromExtend)\r\n      }\r\n    }\r\n    if (!asMixin && appContext.mixins.length) {\r\n      appContext.mixins.forEach(extendEmits)\r\n    }\r\n    if (comp.extends) {\r\n      extendEmits(comp.extends)\r\n    }\r\n    if (comp.mixins) {\r\n      comp.mixins.forEach(extendEmits)\r\n    }\r\n  }\r\n\r\n  if (!raw && !hasExtends) {\r\n    cache.set(comp, null)\r\n    return null\r\n  }\r\n\r\n  if (isArray(raw)) {\r\n    raw.forEach(key => (normalized[key] = null))\r\n  } else {\r\n    extend(normalized, raw)\r\n  }\r\n\r\n  cache.set(comp, normalized)\r\n  return normalized\r\n}\r\n\r\n// Check if an incoming prop key is a declared emit event listener.\r\n// e.g. With `emits: { click: null }`, props named `onClick` and `onclick` are\r\n// both considered matched listeners.\r\nexport function isEmitListener(\r\n  options: ObjectEmitsOptions | null,\r\n  key: string\r\n): boolean {\r\n  if (!options || !isOn(key)) {\r\n    return false\r\n  }\r\n\r\n  if (__COMPAT__ && key.startsWith(compatModelEventPrefix)) {\r\n    return true\r\n  }\r\n\r\n  key = key.slice(2).replace(/Once$/, '')\r\n  return (\r\n    hasOwn(options, key[0].toLowerCase() + key.slice(1)) ||\r\n    hasOwn(options, hyphenate(key)) ||\r\n    hasOwn(options, key)\r\n  )\r\n}\r\n","import { ComponentInternalInstance } from './component'\r\nimport { devtoolsComponentUpdated } from './devtools'\r\nimport { setBlockTracking } from './vnode'\r\n\r\n/**\r\n * mark the current rendering instance for asset resolution (e.g.\r\n * resolveComponent, resolveDirective) during render\r\n */\r\nexport let currentRenderingInstance: ComponentInternalInstance | null = null\r\nexport let currentScopeId: string | null = null\r\n\r\n/**\r\n * Note: rendering calls maybe nested. The function returns the parent rendering\r\n * instance if present, which should be restored after the render is done:\r\n *\r\n * ```js\r\n * const prev = setCurrentRenderingInstance(i)\r\n * // ...render\r\n * setCurrentRenderingInstance(prev)\r\n * ```\r\n */\r\nexport function setCurrentRenderingInstance(\r\n  instance: ComponentInternalInstance | null\r\n): ComponentInternalInstance | null {\r\n  const prev = currentRenderingInstance\r\n  currentRenderingInstance = instance\r\n  currentScopeId = (instance && instance.type.__scopeId) || null\r\n  // v2 pre-compiled components uses _scopeId instead of __scopeId\r\n  if (__COMPAT__ && !currentScopeId) {\r\n    currentScopeId = (instance && (instance.type as any)._scopeId) || null\r\n  }\r\n  return prev\r\n}\r\n\r\n/**\r\n * Set scope id when creating hoisted vnodes.\r\n * @private compiler helper\r\n */\r\nexport function pushScopeId(id: string | null) {\r\n  currentScopeId = id\r\n}\r\n\r\n/**\r\n * Technically we no longer need this after 3.0.8 but we need to keep the same\r\n * API for backwards compat w/ code generated by compilers.\r\n * @private\r\n */\r\nexport function popScopeId() {\r\n  currentScopeId = null\r\n}\r\n\r\n/**\r\n * Only for backwards compat\r\n * @private\r\n */\r\nexport const withScopeId = (_id: string) => withCtx\r\n\r\nexport type ContextualRenderFn = {\r\n  (...args: any[]): any\r\n  _n: boolean /* already normalized */\r\n  _c: boolean /* compiled */\r\n  _d: boolean /* disableTracking */\r\n  _ns: boolean /* nonScoped */\r\n}\r\n\r\n/**\r\n * Wrap a slot function to memoize current rendering instance\r\n * @private compiler helper\r\n */\r\nexport function withCtx(\r\n  fn: Function,\r\n  ctx: ComponentInternalInstance | null = currentRenderingInstance,\r\n  isNonScopedSlot?: boolean // __COMPAT__ only\r\n) {\r\n  if (!ctx) return fn\r\n\r\n  // already normalized\r\n  if ((fn as ContextualRenderFn)._n) {\r\n    return fn\r\n  }\r\n\r\n  const renderFnWithContext: ContextualRenderFn = (...args: any[]) => {\r\n    // If a user calls a compiled slot inside a template expression (#1745), it\r\n    // can mess up block tracking, so by default we disable block tracking and\r\n    // force bail out when invoking a compiled slot (indicated by the ._d flag).\r\n    // This isn't necessary if rendering a compiled `<slot>`, so we flip the\r\n    // ._d flag off when invoking the wrapped fn inside `renderSlot`.\r\n    if (renderFnWithContext._d) {\r\n      setBlockTracking(-1)\r\n    }\r\n    const prevInstance = setCurrentRenderingInstance(ctx)\r\n    const res = fn(...args)\r\n    setCurrentRenderingInstance(prevInstance)\r\n    if (renderFnWithContext._d) {\r\n      setBlockTracking(1)\r\n    }\r\n\r\n    if (__DEV__ || __FEATURE_PROD_DEVTOOLS__) {\r\n      devtoolsComponentUpdated(ctx)\r\n    }\r\n\r\n    return res\r\n  }\r\n\r\n  // mark normalized to avoid duplicated wrapping\r\n  renderFnWithContext._n = true\r\n  // mark this as compiled by default\r\n  // this is used in vnode.ts -> normalizeChildren() to set the slot\r\n  // rendering flag.\r\n  renderFnWithContext._c = true\r\n  // disable block tracking by default\r\n  renderFnWithContext._d = true\r\n  // compat build only flag to distinguish scoped slots from non-scoped ones\r\n  if (__COMPAT__ && isNonScopedSlot) {\r\n    renderFnWithContext._ns = true\r\n  }\r\n  return renderFnWithContext\r\n}\r\n","import {\r\n  ComponentInternalInstance,\r\n  FunctionalComponent,\r\n  Data,\r\n  getComponentName\r\n} from './component'\r\nimport {\r\n  VNode,\r\n  normalizeVNode,\r\n  createVNode,\r\n  Comment,\r\n  cloneVNode,\r\n  VNodeArrayChildren,\r\n  isVNode,\r\n  blockStack\r\n} from './vnode'\r\nimport { handleError, ErrorCodes } from './errorHandling'\r\nimport { PatchFlags, ShapeFlags, isOn, isModelListener } from '@vue/shared'\r\nimport { warn } from './warning'\r\nimport { isHmrUpdating } from './hmr'\r\nimport { NormalizedProps } from './componentProps'\r\nimport { isEmitListener } from './componentEmits'\r\nimport { setCurrentRenderingInstance } from './componentRenderContext'\r\nimport {\r\n  DeprecationTypes,\r\n  isCompatEnabled,\r\n  warnDeprecation\r\n} from './compat/compatConfig'\r\n\r\n/**\r\n * dev only flag to track whether $attrs was used during render.\r\n * If $attrs was used during render then the warning for failed attrs\r\n * fallthrough can be suppressed.\r\n */\r\nlet accessedAttrs: boolean = false\r\n\r\nexport function markAttrsAccessed() {\r\n  accessedAttrs = true\r\n}\r\n\r\nexport function renderComponentRoot(\r\n  instance: ComponentInternalInstance\r\n): VNode {\r\n  const {\r\n    type: Component,\r\n    vnode,\r\n    proxy,\r\n    withProxy,\r\n    props,\r\n    propsOptions: [propsOptions],\r\n    slots,\r\n    attrs,\r\n    emit,\r\n    render,\r\n    renderCache,\r\n    data,\r\n    setupState,\r\n    ctx,\r\n    inheritAttrs\r\n  } = instance\r\n\r\n  let result\r\n  const prev = setCurrentRenderingInstance(instance)\r\n  if (__DEV__) {\r\n    accessedAttrs = false\r\n  }\r\n  try {\r\n    let fallthroughAttrs\r\n    if (vnode.shapeFlag & ShapeFlags.STATEFUL_COMPONENT) {\r\n      // withProxy is a proxy with a different `has` trap only for\r\n      // runtime-compiled render functions using `with` block.\r\n      const proxyToUse = withProxy || proxy\r\n      result = normalizeVNode(\r\n        render!.call(\r\n          proxyToUse,\r\n          proxyToUse!,\r\n          renderCache,\r\n          props,\r\n          setupState,\r\n          data,\r\n          ctx\r\n        )\r\n      )\r\n      fallthroughAttrs = attrs\r\n    } else {\r\n      // functional\r\n      const render = Component as FunctionalComponent\r\n      // in dev, mark attrs accessed if optional props (attrs === props)\r\n      if (__DEV__ && attrs === props) {\r\n        markAttrsAccessed()\r\n      }\r\n      result = normalizeVNode(\r\n        render.length > 1\r\n          ? render(\r\n              props,\r\n              __DEV__\r\n                ? {\r\n                    get attrs() {\r\n                      markAttrsAccessed()\r\n                      return attrs\r\n                    },\r\n                    slots,\r\n                    emit\r\n                  }\r\n                : { attrs, slots, emit }\r\n            )\r\n          : render(props, null as any /* we know it doesn't need it */)\r\n      )\r\n      fallthroughAttrs = Component.props\r\n        ? attrs\r\n        : getFunctionalFallthrough(attrs)\r\n    }\r\n\r\n    // attr merging\r\n    // in dev mode, comments are preserved, and it's possible for a template\r\n    // to have comments along side the root element which makes it a fragment\r\n    let root = result\r\n    let setRoot: ((root: VNode) => void) | undefined = undefined\r\n    if (\r\n      __DEV__ &&\r\n      result.patchFlag > 0 &&\r\n      result.patchFlag & PatchFlags.DEV_ROOT_FRAGMENT\r\n    ) {\r\n      ;[root, setRoot] = getChildRoot(result)\r\n    }\r\n\r\n    if (fallthroughAttrs && inheritAttrs !== false) {\r\n      const keys = Object.keys(fallthroughAttrs)\r\n      const { shapeFlag } = root\r\n      if (keys.length) {\r\n        if (\r\n          shapeFlag & ShapeFlags.ELEMENT ||\r\n          shapeFlag & ShapeFlags.COMPONENT\r\n        ) {\r\n          if (propsOptions && keys.some(isModelListener)) {\r\n            // If a v-model listener (onUpdate:xxx) has a corresponding declared\r\n            // prop, it indicates this component expects to handle v-model and\r\n            // it should not fallthrough.\r\n            // related: #1543, #1643, #1989\r\n            fallthroughAttrs = filterModelListeners(\r\n              fallthroughAttrs,\r\n              propsOptions\r\n            )\r\n          }\r\n          root = cloneVNode(root, fallthroughAttrs)\r\n        } else if (__DEV__ && !accessedAttrs && root.type !== Comment) {\r\n          const allAttrs = Object.keys(attrs)\r\n          const eventAttrs: string[] = []\r\n          const extraAttrs: string[] = []\r\n          for (let i = 0, l = allAttrs.length; i < l; i++) {\r\n            const key = allAttrs[i]\r\n            if (isOn(key)) {\r\n              // ignore v-model handlers when they fail to fallthrough\r\n              if (!isModelListener(key)) {\r\n                // remove `on`, lowercase first letter to reflect event casing\r\n                // accurately\r\n                eventAttrs.push(key[2].toLowerCase() + key.slice(3))\r\n              }\r\n            } else {\r\n              extraAttrs.push(key)\r\n            }\r\n          }\r\n          if (extraAttrs.length) {\r\n            warn(\r\n              `Extraneous non-props attributes (` +\r\n                `${extraAttrs.join(', ')}) ` +\r\n                `were passed to component but could not be automatically inherited ` +\r\n                `because component renders fragment or text root nodes.`\r\n            )\r\n          }\r\n          if (eventAttrs.length) {\r\n            warn(\r\n              `Extraneous non-emits event listeners (` +\r\n                `${eventAttrs.join(', ')}) ` +\r\n                `were passed to component but could not be automatically inherited ` +\r\n                `because component renders fragment or text root nodes. ` +\r\n                `If the listener is intended to be a component custom event listener only, ` +\r\n                `declare it using the \"emits\" option.`\r\n            )\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    if (\r\n      __COMPAT__ &&\r\n      isCompatEnabled(DeprecationTypes.INSTANCE_ATTRS_CLASS_STYLE, instance) &&\r\n      vnode.shapeFlag & ShapeFlags.STATEFUL_COMPONENT &&\r\n      (root.shapeFlag & ShapeFlags.ELEMENT ||\r\n        root.shapeFlag & ShapeFlags.COMPONENT)\r\n    ) {\r\n      const { class: cls, style } = vnode.props || {}\r\n      if (cls || style) {\r\n        if (__DEV__ && inheritAttrs === false) {\r\n          warnDeprecation(\r\n            DeprecationTypes.INSTANCE_ATTRS_CLASS_STYLE,\r\n            instance,\r\n            getComponentName(instance.type)\r\n          )\r\n        }\r\n        root = cloneVNode(root, {\r\n          class: cls,\r\n          style: style\r\n        })\r\n      }\r\n    }\r\n\r\n    // inherit directives\r\n    if (vnode.dirs) {\r\n      if (__DEV__ && !isElementRoot(root)) {\r\n        warn(\r\n          `Runtime directive used on component with non-element root node. ` +\r\n            `The directives will not function as intended.`\r\n        )\r\n      }\r\n      root.dirs = root.dirs ? root.dirs.concat(vnode.dirs) : vnode.dirs\r\n    }\r\n    // inherit transition data\r\n    if (vnode.transition) {\r\n      if (__DEV__ && !isElementRoot(root)) {\r\n        warn(\r\n          `Component inside <Transition> renders non-element root node ` +\r\n            `that cannot be animated.`\r\n        )\r\n      }\r\n      root.transition = vnode.transition\r\n    }\r\n\r\n    if (__DEV__ && setRoot) {\r\n      setRoot(root)\r\n    } else {\r\n      result = root\r\n    }\r\n  } catch (err) {\r\n    blockStack.length = 0\r\n    handleError(err, instance, ErrorCodes.RENDER_FUNCTION)\r\n    result = createVNode(Comment)\r\n  }\r\n\r\n  setCurrentRenderingInstance(prev)\r\n  return result\r\n}\r\n\r\n/**\r\n * dev only\r\n * In dev mode, template root level comments are rendered, which turns the\r\n * template into a fragment root, but we need to locate the single element\r\n * root for attrs and scope id processing.\r\n */\r\nconst getChildRoot = (\r\n  vnode: VNode\r\n): [VNode, ((root: VNode) => void) | undefined] => {\r\n  const rawChildren = vnode.children as VNodeArrayChildren\r\n  const dynamicChildren = vnode.dynamicChildren\r\n  const childRoot = filterSingleRoot(rawChildren)\r\n  if (!childRoot) {\r\n    return [vnode, undefined]\r\n  }\r\n  const index = rawChildren.indexOf(childRoot)\r\n  const dynamicIndex = dynamicChildren ? dynamicChildren.indexOf(childRoot) : -1\r\n  const setRoot = (updatedRoot: VNode) => {\r\n    rawChildren[index] = updatedRoot\r\n    if (dynamicChildren) {\r\n      if (dynamicIndex > -1) {\r\n        dynamicChildren[dynamicIndex] = updatedRoot\r\n      } else if (updatedRoot.patchFlag > 0) {\r\n        vnode.dynamicChildren = [...dynamicChildren, updatedRoot]\r\n      }\r\n    }\r\n  }\r\n  return [normalizeVNode(childRoot), setRoot]\r\n}\r\n\r\nexport function filterSingleRoot(\r\n  children: VNodeArrayChildren\r\n): VNode | undefined {\r\n  let singleRoot\r\n  for (let i = 0; i < children.length; i++) {\r\n    const child = children[i]\r\n    if (isVNode(child)) {\r\n      // ignore user comment\r\n      if (child.type !== Comment || child.children === 'v-if') {\r\n        if (singleRoot) {\r\n          // has more than 1 non-comment child, return now\r\n          return\r\n        } else {\r\n          singleRoot = child\r\n        }\r\n      }\r\n    } else {\r\n      return\r\n    }\r\n  }\r\n  return singleRoot\r\n}\r\n\r\nconst getFunctionalFallthrough = (attrs: Data): Data | undefined => {\r\n  let res: Data | undefined\r\n  for (const key in attrs) {\r\n    if (key === 'class' || key === 'style' || isOn(key)) {\r\n      ;(res || (res = {}))[key] = attrs[key]\r\n    }\r\n  }\r\n  return res\r\n}\r\n\r\nconst filterModelListeners = (attrs: Data, props: NormalizedProps): Data => {\r\n  const res: Data = {}\r\n  for (const key in attrs) {\r\n    if (!isModelListener(key) || !(key.slice(9) in props)) {\r\n      res[key] = attrs[key]\r\n    }\r\n  }\r\n  return res\r\n}\r\n\r\nconst isElementRoot = (vnode: VNode) => {\r\n  return (\r\n    vnode.shapeFlag & ShapeFlags.COMPONENT ||\r\n    vnode.shapeFlag & ShapeFlags.ELEMENT ||\r\n    vnode.type === Comment // potential v-if branch switch\r\n  )\r\n}\r\n\r\nexport function shouldUpdateComponent(\r\n  prevVNode: VNode,\r\n  nextVNode: VNode,\r\n  optimized?: boolean\r\n): boolean {\r\n  const { props: prevProps, children: prevChildren, component } = prevVNode\r\n  const { props: nextProps, children: nextChildren, patchFlag } = nextVNode\r\n  const emits = component!.emitsOptions\r\n\r\n  // Parent component's render function was hot-updated. Since this may have\r\n  // caused the child component's slots content to have changed, we need to\r\n  // force the child to update as well.\r\n  if (__DEV__ && (prevChildren || nextChildren) && isHmrUpdating) {\r\n    return true\r\n  }\r\n\r\n  // force child update for runtime directive or transition on component vnode.\r\n  if (nextVNode.dirs || nextVNode.transition) {\r\n    return true\r\n  }\r\n\r\n  if (optimized && patchFlag >= 0) {\r\n    if (patchFlag & PatchFlags.DYNAMIC_SLOTS) {\r\n      // slot content that references values that might have changed,\r\n      // e.g. in a v-for\r\n      return true\r\n    }\r\n    if (patchFlag & PatchFlags.FULL_PROPS) {\r\n      if (!prevProps) {\r\n        return !!nextProps\r\n      }\r\n      // presence of this flag indicates props are always non-null\r\n      return hasPropsChanged(prevProps, nextProps!, emits)\r\n    } else if (patchFlag & PatchFlags.PROPS) {\r\n      const dynamicProps = nextVNode.dynamicProps!\r\n      for (let i = 0; i < dynamicProps.length; i++) {\r\n        const key = dynamicProps[i]\r\n        if (\r\n          nextProps![key] !== prevProps![key] &&\r\n          !isEmitListener(emits, key)\r\n        ) {\r\n          return true\r\n        }\r\n      }\r\n    }\r\n  } else {\r\n    // this path is only taken by manually written render functions\r\n    // so presence of any children leads to a forced update\r\n    if (prevChildren || nextChildren) {\r\n      if (!nextChildren || !(nextChildren as any).$stable) {\r\n        return true\r\n      }\r\n    }\r\n    if (prevProps === nextProps) {\r\n      return false\r\n    }\r\n    if (!prevProps) {\r\n      return !!nextProps\r\n    }\r\n    if (!nextProps) {\r\n      return true\r\n    }\r\n    return hasPropsChanged(prevProps, nextProps, emits)\r\n  }\r\n\r\n  return false\r\n}\r\n\r\nfunction hasPropsChanged(\r\n  prevProps: Data,\r\n  nextProps: Data,\r\n  emitsOptions: ComponentInternalInstance['emitsOptions']\r\n): boolean {\r\n  const nextKeys = Object.keys(nextProps)\r\n  if (nextKeys.length !== Object.keys(prevProps).length) {\r\n    return true\r\n  }\r\n  for (let i = 0; i < nextKeys.length; i++) {\r\n    const key = nextKeys[i]\r\n    if (\r\n      nextProps[key] !== prevProps[key] &&\r\n      !isEmitListener(emitsOptions, key)\r\n    ) {\r\n      return true\r\n    }\r\n  }\r\n  return false\r\n}\r\n\r\nexport function updateHOCHostEl(\r\n  { vnode, parent }: ComponentInternalInstance,\r\n  el: typeof vnode.el // HostNode\r\n) {\r\n  while (parent && parent.subTree === vnode) {\r\n    ;(vnode = parent.vnode).el = el\r\n    parent = parent.parent\r\n  }\r\n}\r\n","import {\r\n  VNode,\r\n  normalizeVNode,\r\n  VNodeProps,\r\n  isSameVNodeType,\r\n  openBlock,\r\n  closeBlock,\r\n  currentBlock,\r\n  createVNode\r\n} from '../vnode'\r\nimport { isFunction, isArray, ShapeFlags, toNumber } from '@vue/shared'\r\nimport { ComponentInternalInstance, handleSetupResult } from '../component'\r\nimport { Slots } from '../componentSlots'\r\nimport {\r\n  RendererInternals,\r\n  MoveType,\r\n  SetupRenderEffectFn,\r\n  RendererNode,\r\n  RendererElement\r\n} from '../renderer'\r\nimport { queuePostFlushCb } from '../scheduler'\r\nimport { filterSingleRoot, updateHOCHostEl } from '../componentRenderUtils'\r\nimport { pushWarningContext, popWarningContext, warn } from '../warning'\r\nimport { handleError, ErrorCodes } from '../errorHandling'\r\n\r\nexport interface SuspenseProps {\r\n  onResolve?: () => void\r\n  onPending?: () => void\r\n  onFallback?: () => void\r\n  timeout?: string | number\r\n}\r\n\r\nexport const isSuspense = (type: any): boolean => type.__isSuspense\r\n\r\n// Suspense exposes a component-like API, and is treated like a component\r\n// in the compiler, but internally it's a special built-in type that hooks\r\n// directly into the renderer.\r\nexport const SuspenseImpl = {\r\n  name: 'Suspense',\r\n  // In order to make Suspense tree-shakable, we need to avoid importing it\r\n  // directly in the renderer. The renderer checks for the __isSuspense flag\r\n  // on a vnode's type and calls the `process` method, passing in renderer\r\n  // internals.\r\n  __isSuspense: true,\r\n  process(\r\n    n1: VNode | null,\r\n    n2: VNode,\r\n    container: RendererElement,\r\n    anchor: RendererNode | null,\r\n    parentComponent: ComponentInternalInstance | null,\r\n    parentSuspense: SuspenseBoundary | null,\r\n    isSVG: boolean,\r\n    slotScopeIds: string[] | null,\r\n    optimized: boolean,\r\n    // platform-specific impl passed from renderer\r\n    rendererInternals: RendererInternals\r\n  ) {\r\n    if (n1 == null) {\r\n      mountSuspense(\r\n        n2,\r\n        container,\r\n        anchor,\r\n        parentComponent,\r\n        parentSuspense,\r\n        isSVG,\r\n        slotScopeIds,\r\n        optimized,\r\n        rendererInternals\r\n      )\r\n    } else {\r\n      patchSuspense(\r\n        n1,\r\n        n2,\r\n        container,\r\n        anchor,\r\n        parentComponent,\r\n        isSVG,\r\n        slotScopeIds,\r\n        optimized,\r\n        rendererInternals\r\n      )\r\n    }\r\n  },\r\n  hydrate: hydrateSuspense,\r\n  create: createSuspenseBoundary,\r\n  normalize: normalizeSuspenseChildren\r\n}\r\n\r\n// Force-casted public typing for h and TSX props inference\r\nexport const Suspense = (__FEATURE_SUSPENSE__ ? SuspenseImpl : null) as any as {\r\n  __isSuspense: true\r\n  new (): { $props: VNodeProps & SuspenseProps }\r\n}\r\n\r\nfunction triggerEvent(\r\n  vnode: VNode,\r\n  name: 'onResolve' | 'onPending' | 'onFallback'\r\n) {\r\n  const eventListener = vnode.props && vnode.props[name]\r\n  if (isFunction(eventListener)) {\r\n    eventListener()\r\n  }\r\n}\r\n\r\nfunction mountSuspense(\r\n  vnode: VNode,\r\n  container: RendererElement,\r\n  anchor: RendererNode | null,\r\n  parentComponent: ComponentInternalInstance | null,\r\n  parentSuspense: SuspenseBoundary | null,\r\n  isSVG: boolean,\r\n  slotScopeIds: string[] | null,\r\n  optimized: boolean,\r\n  rendererInternals: RendererInternals\r\n) {\r\n  const {\r\n    p: patch,\r\n    o: { createElement }\r\n  } = rendererInternals\r\n  const hiddenContainer = createElement('div')\r\n  const suspense = (vnode.suspense = createSuspenseBoundary(\r\n    vnode,\r\n    parentSuspense,\r\n    parentComponent,\r\n    container,\r\n    hiddenContainer,\r\n    anchor,\r\n    isSVG,\r\n    slotScopeIds,\r\n    optimized,\r\n    rendererInternals\r\n  ))\r\n\r\n  // start mounting the content subtree in an off-dom container\r\n  patch(\r\n    null,\r\n    (suspense.pendingBranch = vnode.ssContent!),\r\n    hiddenContainer,\r\n    null,\r\n    parentComponent,\r\n    suspense,\r\n    isSVG,\r\n    slotScopeIds\r\n  )\r\n  // now check if we have encountered any async deps\r\n  if (suspense.deps > 0) {\r\n    // has async\r\n    // invoke @fallback event\r\n    triggerEvent(vnode, 'onPending')\r\n    triggerEvent(vnode, 'onFallback')\r\n\r\n    // mount the fallback tree\r\n    patch(\r\n      null,\r\n      vnode.ssFallback!,\r\n      container,\r\n      anchor,\r\n      parentComponent,\r\n      null, // fallback tree will not have suspense context\r\n      isSVG,\r\n      slotScopeIds\r\n    )\r\n    setActiveBranch(suspense, vnode.ssFallback!)\r\n  } else {\r\n    // Suspense has no async deps. Just resolve.\r\n    suspense.resolve()\r\n  }\r\n}\r\n\r\nfunction patchSuspense(\r\n  n1: VNode,\r\n  n2: VNode,\r\n  container: RendererElement,\r\n  anchor: RendererNode | null,\r\n  parentComponent: ComponentInternalInstance | null,\r\n  isSVG: boolean,\r\n  slotScopeIds: string[] | null,\r\n  optimized: boolean,\r\n  { p: patch, um: unmount, o: { createElement } }: RendererInternals\r\n) {\r\n  const suspense = (n2.suspense = n1.suspense)!\r\n  suspense.vnode = n2\r\n  n2.el = n1.el\r\n  const newBranch = n2.ssContent!\r\n  const newFallback = n2.ssFallback!\r\n\r\n  const { activeBranch, pendingBranch, isInFallback, isHydrating } = suspense\r\n  if (pendingBranch) {\r\n    suspense.pendingBranch = newBranch\r\n    if (isSameVNodeType(newBranch, pendingBranch)) {\r\n      // same root type but content may have changed.\r\n      patch(\r\n        pendingBranch,\r\n        newBranch,\r\n        suspense.hiddenContainer,\r\n        null,\r\n        parentComponent,\r\n        suspense,\r\n        isSVG,\r\n        slotScopeIds,\r\n        optimized\r\n      )\r\n      if (suspense.deps <= 0) {\r\n        suspense.resolve()\r\n      } else if (isInFallback) {\r\n        patch(\r\n          activeBranch,\r\n          newFallback,\r\n          container,\r\n          anchor,\r\n          parentComponent,\r\n          null, // fallback tree will not have suspense context\r\n          isSVG,\r\n          slotScopeIds,\r\n          optimized\r\n        )\r\n        setActiveBranch(suspense, newFallback)\r\n      }\r\n    } else {\r\n      // toggled before pending tree is resolved\r\n      suspense.pendingId++\r\n      if (isHydrating) {\r\n        // if toggled before hydration is finished, the current DOM tree is\r\n        // no longer valid. set it as the active branch so it will be unmounted\r\n        // when resolved\r\n        suspense.isHydrating = false\r\n        suspense.activeBranch = pendingBranch\r\n      } else {\r\n        unmount(pendingBranch, parentComponent, suspense)\r\n      }\r\n      // increment pending ID. this is used to invalidate async callbacks\r\n      // reset suspense state\r\n      suspense.deps = 0\r\n      // discard effects from pending branch\r\n      suspense.effects.length = 0\r\n      // discard previous container\r\n      suspense.hiddenContainer = createElement('div')\r\n\r\n      if (isInFallback) {\r\n        // already in fallback state\r\n        patch(\r\n          null,\r\n          newBranch,\r\n          suspense.hiddenContainer,\r\n          null,\r\n          parentComponent,\r\n          suspense,\r\n          isSVG,\r\n          slotScopeIds,\r\n          optimized\r\n        )\r\n        if (suspense.deps <= 0) {\r\n          suspense.resolve()\r\n        } else {\r\n          patch(\r\n            activeBranch,\r\n            newFallback,\r\n            container,\r\n            anchor,\r\n            parentComponent,\r\n            null, // fallback tree will not have suspense context\r\n            isSVG,\r\n            slotScopeIds,\r\n            optimized\r\n          )\r\n          setActiveBranch(suspense, newFallback)\r\n        }\r\n      } else if (activeBranch && isSameVNodeType(newBranch, activeBranch)) {\r\n        // toggled \"back\" to current active branch\r\n        patch(\r\n          activeBranch,\r\n          newBranch,\r\n          container,\r\n          anchor,\r\n          parentComponent,\r\n          suspense,\r\n          isSVG,\r\n          slotScopeIds,\r\n          optimized\r\n        )\r\n        // force resolve\r\n        suspense.resolve(true)\r\n      } else {\r\n        // switched to a 3rd branch\r\n        patch(\r\n          null,\r\n          newBranch,\r\n          suspense.hiddenContainer,\r\n          null,\r\n          parentComponent,\r\n          suspense,\r\n          isSVG,\r\n          slotScopeIds,\r\n          optimized\r\n        )\r\n        if (suspense.deps <= 0) {\r\n          suspense.resolve()\r\n        }\r\n      }\r\n    }\r\n  } else {\r\n    if (activeBranch && isSameVNodeType(newBranch, activeBranch)) {\r\n      // root did not change, just normal patch\r\n      patch(\r\n        activeBranch,\r\n        newBranch,\r\n        container,\r\n        anchor,\r\n        parentComponent,\r\n        suspense,\r\n        isSVG,\r\n        slotScopeIds,\r\n        optimized\r\n      )\r\n      setActiveBranch(suspense, newBranch)\r\n    } else {\r\n      // root node toggled\r\n      // invoke @pending event\r\n      triggerEvent(n2, 'onPending')\r\n      // mount pending branch in off-dom container\r\n      suspense.pendingBranch = newBranch\r\n      suspense.pendingId++\r\n      patch(\r\n        null,\r\n        newBranch,\r\n        suspense.hiddenContainer,\r\n        null,\r\n        parentComponent,\r\n        suspense,\r\n        isSVG,\r\n        slotScopeIds,\r\n        optimized\r\n      )\r\n      if (suspense.deps <= 0) {\r\n        // incoming branch has no async deps, resolve now.\r\n        suspense.resolve()\r\n      } else {\r\n        const { timeout, pendingId } = suspense\r\n        if (timeout > 0) {\r\n          setTimeout(() => {\r\n            if (suspense.pendingId === pendingId) {\r\n              suspense.fallback(newFallback)\r\n            }\r\n          }, timeout)\r\n        } else if (timeout === 0) {\r\n          suspense.fallback(newFallback)\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport interface SuspenseBoundary {\r\n  vnode: VNode<RendererNode, RendererElement, SuspenseProps>\r\n  parent: SuspenseBoundary | null\r\n  parentComponent: ComponentInternalInstance | null\r\n  isSVG: boolean\r\n  container: RendererElement\r\n  hiddenContainer: RendererElement\r\n  anchor: RendererNode | null\r\n  activeBranch: VNode | null\r\n  pendingBranch: VNode | null\r\n  deps: number\r\n  pendingId: number\r\n  timeout: number\r\n  isInFallback: boolean\r\n  isHydrating: boolean\r\n  isUnmounted: boolean\r\n  effects: Function[]\r\n  resolve(force?: boolean): void\r\n  fallback(fallbackVNode: VNode): void\r\n  move(\r\n    container: RendererElement,\r\n    anchor: RendererNode | null,\r\n    type: MoveType\r\n  ): void\r\n  next(): RendererNode | null\r\n  registerDep(\r\n    instance: ComponentInternalInstance,\r\n    setupRenderEffect: SetupRenderEffectFn\r\n  ): void\r\n  unmount(parentSuspense: SuspenseBoundary | null, doRemove?: boolean): void\r\n}\r\n\r\nlet hasWarned = false\r\n\r\nfunction createSuspenseBoundary(\r\n  vnode: VNode,\r\n  parent: SuspenseBoundary | null,\r\n  parentComponent: ComponentInternalInstance | null,\r\n  container: RendererElement,\r\n  hiddenContainer: RendererElement,\r\n  anchor: RendererNode | null,\r\n  isSVG: boolean,\r\n  slotScopeIds: string[] | null,\r\n  optimized: boolean,\r\n  rendererInternals: RendererInternals,\r\n  isHydrating = false\r\n): SuspenseBoundary {\r\n  /* istanbul ignore if */\r\n  if (__DEV__ && !__TEST__ && !hasWarned) {\r\n    hasWarned = true\r\n    // @ts-ignore `console.info` cannot be null error\r\n    console[console.info ? 'info' : 'log'](\r\n      `<Suspense> is an experimental feature and its API will likely change.`\r\n    )\r\n  }\r\n\r\n  const {\r\n    p: patch,\r\n    m: move,\r\n    um: unmount,\r\n    n: next,\r\n    o: { parentNode, remove }\r\n  } = rendererInternals\r\n\r\n  const timeout = toNumber(vnode.props && vnode.props.timeout)\r\n  const suspense: SuspenseBoundary = {\r\n    vnode,\r\n    parent,\r\n    parentComponent,\r\n    isSVG,\r\n    container,\r\n    hiddenContainer,\r\n    anchor,\r\n    deps: 0,\r\n    pendingId: 0,\r\n    timeout: typeof timeout === 'number' ? timeout : -1,\r\n    activeBranch: null,\r\n    pendingBranch: null,\r\n    isInFallback: true,\r\n    isHydrating,\r\n    isUnmounted: false,\r\n    effects: [],\r\n\r\n    resolve(resume = false) {\r\n      if (__DEV__) {\r\n        if (!resume && !suspense.pendingBranch) {\r\n          throw new Error(\r\n            `suspense.resolve() is called without a pending branch.`\r\n          )\r\n        }\r\n        if (suspense.isUnmounted) {\r\n          throw new Error(\r\n            `suspense.resolve() is called on an already unmounted suspense boundary.`\r\n          )\r\n        }\r\n      }\r\n      const {\r\n        vnode,\r\n        activeBranch,\r\n        pendingBranch,\r\n        pendingId,\r\n        effects,\r\n        parentComponent,\r\n        container\r\n      } = suspense\r\n\r\n      if (suspense.isHydrating) {\r\n        suspense.isHydrating = false\r\n      } else if (!resume) {\r\n        const delayEnter =\r\n          activeBranch &&\r\n          pendingBranch!.transition &&\r\n          pendingBranch!.transition.mode === 'out-in'\r\n        if (delayEnter) {\r\n          activeBranch!.transition!.afterLeave = () => {\r\n            if (pendingId === suspense.pendingId) {\r\n              move(pendingBranch!, container, anchor, MoveType.ENTER)\r\n            }\r\n          }\r\n        }\r\n        // this is initial anchor on mount\r\n        let { anchor } = suspense\r\n        // unmount current active tree\r\n        if (activeBranch) {\r\n          // if the fallback tree was mounted, it may have been moved\r\n          // as part of a parent suspense. get the latest anchor for insertion\r\n          anchor = next(activeBranch)\r\n          unmount(activeBranch, parentComponent, suspense, true)\r\n        }\r\n        if (!delayEnter) {\r\n          // move content from off-dom container to actual container\r\n          move(pendingBranch!, container, anchor, MoveType.ENTER)\r\n        }\r\n      }\r\n\r\n      setActiveBranch(suspense, pendingBranch!)\r\n      suspense.pendingBranch = null\r\n      suspense.isInFallback = false\r\n\r\n      // flush buffered effects\r\n      // check if there is a pending parent suspense\r\n      let parent = suspense.parent\r\n      let hasUnresolvedAncestor = false\r\n      while (parent) {\r\n        if (parent.pendingBranch) {\r\n          // found a pending parent suspense, merge buffered post jobs\r\n          // into that parent\r\n          parent.effects.push(...effects)\r\n          hasUnresolvedAncestor = true\r\n          break\r\n        }\r\n        parent = parent.parent\r\n      }\r\n      // no pending parent suspense, flush all jobs\r\n      if (!hasUnresolvedAncestor) {\r\n        queuePostFlushCb(effects)\r\n      }\r\n      suspense.effects = []\r\n\r\n      // invoke @resolve event\r\n      triggerEvent(vnode, 'onResolve')\r\n    },\r\n\r\n    fallback(fallbackVNode) {\r\n      if (!suspense.pendingBranch) {\r\n        return\r\n      }\r\n\r\n      const { vnode, activeBranch, parentComponent, container, isSVG } =\r\n        suspense\r\n\r\n      // invoke @fallback event\r\n      triggerEvent(vnode, 'onFallback')\r\n\r\n      const anchor = next(activeBranch!)\r\n      const mountFallback = () => {\r\n        if (!suspense.isInFallback) {\r\n          return\r\n        }\r\n        // mount the fallback tree\r\n        patch(\r\n          null,\r\n          fallbackVNode,\r\n          container,\r\n          anchor,\r\n          parentComponent,\r\n          null, // fallback tree will not have suspense context\r\n          isSVG,\r\n          slotScopeIds,\r\n          optimized\r\n        )\r\n        setActiveBranch(suspense, fallbackVNode)\r\n      }\r\n\r\n      const delayEnter =\r\n        fallbackVNode.transition && fallbackVNode.transition.mode === 'out-in'\r\n      if (delayEnter) {\r\n        activeBranch!.transition!.afterLeave = mountFallback\r\n      }\r\n      suspense.isInFallback = true\r\n\r\n      // unmount current active branch\r\n      unmount(\r\n        activeBranch!,\r\n        parentComponent,\r\n        null, // no suspense so unmount hooks fire now\r\n        true // shouldRemove\r\n      )\r\n\r\n      if (!delayEnter) {\r\n        mountFallback()\r\n      }\r\n    },\r\n\r\n    move(container, anchor, type) {\r\n      suspense.activeBranch &&\r\n        move(suspense.activeBranch, container, anchor, type)\r\n      suspense.container = container\r\n    },\r\n\r\n    next() {\r\n      return suspense.activeBranch && next(suspense.activeBranch)\r\n    },\r\n\r\n    registerDep(instance, setupRenderEffect) {\r\n      const isInPendingSuspense = !!suspense.pendingBranch\r\n      if (isInPendingSuspense) {\r\n        suspense.deps++\r\n      }\r\n      const hydratedEl = instance.vnode.el\r\n      instance\r\n        .asyncDep!.catch(err => {\r\n          handleError(err, instance, ErrorCodes.SETUP_FUNCTION)\r\n        })\r\n        .then(asyncSetupResult => {\r\n          // retry when the setup() promise resolves.\r\n          // component may have been unmounted before resolve.\r\n          if (\r\n            instance.isUnmounted ||\r\n            suspense.isUnmounted ||\r\n            suspense.pendingId !== instance.suspenseId\r\n          ) {\r\n            return\r\n          }\r\n          // retry from this component\r\n          instance.asyncResolved = true\r\n          const { vnode } = instance\r\n          if (__DEV__) {\r\n            pushWarningContext(vnode)\r\n          }\r\n          handleSetupResult(instance, asyncSetupResult, false)\r\n          if (hydratedEl) {\r\n            // vnode may have been replaced if an update happened before the\r\n            // async dep is resolved.\r\n            vnode.el = hydratedEl\r\n          }\r\n          const placeholder = !hydratedEl && instance.subTree.el\r\n          setupRenderEffect(\r\n            instance,\r\n            vnode,\r\n            // component may have been moved before resolve.\r\n            // if this is not a hydration, instance.subTree will be the comment\r\n            // placeholder.\r\n            parentNode(hydratedEl || instance.subTree.el!)!,\r\n            // anchor will not be used if this is hydration, so only need to\r\n            // consider the comment placeholder case.\r\n            hydratedEl ? null : next(instance.subTree),\r\n            suspense,\r\n            isSVG,\r\n            optimized\r\n          )\r\n          if (placeholder) {\r\n            remove(placeholder)\r\n          }\r\n          updateHOCHostEl(instance, vnode.el)\r\n          if (__DEV__) {\r\n            popWarningContext()\r\n          }\r\n          // only decrease deps count if suspense is not already resolved\r\n          if (isInPendingSuspense && --suspense.deps === 0) {\r\n            suspense.resolve()\r\n          }\r\n        })\r\n    },\r\n\r\n    unmount(parentSuspense, doRemove) {\r\n      suspense.isUnmounted = true\r\n      if (suspense.activeBranch) {\r\n        unmount(\r\n          suspense.activeBranch,\r\n          parentComponent,\r\n          parentSuspense,\r\n          doRemove\r\n        )\r\n      }\r\n      if (suspense.pendingBranch) {\r\n        unmount(\r\n          suspense.pendingBranch,\r\n          parentComponent,\r\n          parentSuspense,\r\n          doRemove\r\n        )\r\n      }\r\n    }\r\n  }\r\n\r\n  return suspense\r\n}\r\n\r\nfunction hydrateSuspense(\r\n  node: Node,\r\n  vnode: VNode,\r\n  parentComponent: ComponentInternalInstance | null,\r\n  parentSuspense: SuspenseBoundary | null,\r\n  isSVG: boolean,\r\n  slotScopeIds: string[] | null,\r\n  optimized: boolean,\r\n  rendererInternals: RendererInternals,\r\n  hydrateNode: (\r\n    node: Node,\r\n    vnode: VNode,\r\n    parentComponent: ComponentInternalInstance | null,\r\n    parentSuspense: SuspenseBoundary | null,\r\n    slotScopeIds: string[] | null,\r\n    optimized: boolean\r\n  ) => Node | null\r\n): Node | null {\r\n  /* eslint-disable no-restricted-globals */\r\n  const suspense = (vnode.suspense = createSuspenseBoundary(\r\n    vnode,\r\n    parentSuspense,\r\n    parentComponent,\r\n    node.parentNode!,\r\n    document.createElement('div'),\r\n    null,\r\n    isSVG,\r\n    slotScopeIds,\r\n    optimized,\r\n    rendererInternals,\r\n    true /* hydrating */\r\n  ))\r\n  // there are two possible scenarios for server-rendered suspense:\r\n  // - success: ssr content should be fully resolved\r\n  // - failure: ssr content should be the fallback branch.\r\n  // however, on the client we don't really know if it has failed or not\r\n  // attempt to hydrate the DOM assuming it has succeeded, but we still\r\n  // need to construct a suspense boundary first\r\n  const result = hydrateNode(\r\n    node,\r\n    (suspense.pendingBranch = vnode.ssContent!),\r\n    parentComponent,\r\n    suspense,\r\n    slotScopeIds,\r\n    optimized\r\n  )\r\n  if (suspense.deps === 0) {\r\n    suspense.resolve()\r\n  }\r\n  return result\r\n  /* eslint-enable no-restricted-globals */\r\n}\r\n\r\nfunction normalizeSuspenseChildren(vnode: VNode) {\r\n  const { shapeFlag, children } = vnode\r\n  const isSlotChildren = shapeFlag & ShapeFlags.SLOTS_CHILDREN\r\n  vnode.ssContent = normalizeSuspenseSlot(\r\n    isSlotChildren ? (children as Slots).default : children\r\n  )\r\n  vnode.ssFallback = isSlotChildren\r\n    ? normalizeSuspenseSlot((children as Slots).fallback)\r\n    : createVNode(Comment)\r\n}\r\n\r\nfunction normalizeSuspenseSlot(s: any) {\r\n  let block: VNode[] | null | undefined\r\n  if (isFunction(s)) {\r\n    const isCompiledSlot = s._c\r\n    if (isCompiledSlot) {\r\n      // disableTracking: false\r\n      // allow block tracking for compiled slots\r\n      // (see ./componentRenderContext.ts)\r\n      s._d = false\r\n      openBlock()\r\n    }\r\n    s = s()\r\n    if (isCompiledSlot) {\r\n      s._d = true\r\n      block = currentBlock\r\n      closeBlock()\r\n    }\r\n  }\r\n  if (isArray(s)) {\r\n    const singleChild = filterSingleRoot(s)\r\n    if (__DEV__ && !singleChild) {\r\n      warn(`<Suspense> slots expect a single root node.`)\r\n    }\r\n    s = singleChild\r\n  }\r\n  s = normalizeVNode(s)\r\n  if (block && !s.dynamicChildren) {\r\n    s.dynamicChildren = block.filter(c => c !== s)\r\n  }\r\n  return s\r\n}\r\n\r\nexport function queueEffectWithSuspense(\r\n  fn: Function | Function[],\r\n  suspense: SuspenseBoundary | null\r\n): void {\r\n  if (suspense && suspense.pendingBranch) {\r\n    if (isArray(fn)) {\r\n      suspense.effects.push(...fn)\r\n    } else {\r\n      suspense.effects.push(fn)\r\n    }\r\n  } else {\r\n    queuePostFlushCb(fn)\r\n  }\r\n}\r\n\r\nfunction setActiveBranch(suspense: SuspenseBoundary, branch: VNode) {\r\n  suspense.activeBranch = branch\r\n  const { vnode, parentComponent } = suspense\r\n  const el = (vnode.el = branch.el)\r\n  // in case suspense is the root node of a component,\r\n  // recursively update the HOC el\r\n  if (parentComponent && parentComponent.subTree === vnode) {\r\n    parentComponent.vnode.el = el\r\n    updateHOCHostEl(parentComponent, el)\r\n  }\r\n}\r\n","import { isFunction } from '@vue/shared'\r\nimport { currentInstance } from './component'\r\nimport { currentRenderingInstance } from './componentRenderContext'\r\nimport { warn } from './warning'\r\n\r\nexport interface InjectionKey<T> extends Symbol {}\r\n\r\nexport function provide<T>(key: InjectionKey<T> | string | number, value: T) {\r\n  if (!currentInstance) {\r\n    if (__DEV__) {\r\n      warn(`provide() can only be used inside setup().`)\r\n    }\r\n  } else {\r\n    let provides = currentInstance.provides\r\n    // by default an instance inherits its parent's provides object\r\n    // but when it needs to provide values of its own, it creates its\r\n    // own provides object using parent provides object as prototype.\r\n    // this way in `inject` we can simply look up injections from direct\r\n    // parent and let the prototype chain do the work.\r\n    const parentProvides =\r\n      currentInstance.parent && currentInstance.parent.provides\r\n    if (parentProvides === provides) {\r\n      provides = currentInstance.provides = Object.create(parentProvides)\r\n    }\r\n    // TS doesn't allow symbol as index type\r\n    provides[key as string] = value\r\n  }\r\n}\r\n\r\nexport function inject<T>(key: InjectionKey<T> | string): T | undefined\r\nexport function inject<T>(\r\n  key: InjectionKey<T> | string,\r\n  defaultValue: T,\r\n  treatDefaultAsFactory?: false\r\n): T\r\nexport function inject<T>(\r\n  key: InjectionKey<T> | string,\r\n  defaultValue: T | (() => T),\r\n  treatDefaultAsFactory: true\r\n): T\r\nexport function inject(\r\n  key: InjectionKey<any> | string,\r\n  defaultValue?: unknown,\r\n  treatDefaultAsFactory = false\r\n) {\r\n  // fallback to `currentRenderingInstance` so that this can be called in\r\n  // a functional component\r\n  const instance = currentInstance || currentRenderingInstance\r\n  if (instance) {\r\n    // #2400\r\n    // to support `app.use` plugins,\r\n    // fallback to appContext's `provides` if the intance is at root\r\n    const provides =\r\n      instance.parent == null\r\n        ? instance.vnode.appContext && instance.vnode.appContext.provides\r\n        : instance.parent.provides\r\n\r\n    if (provides && (key as string | symbol) in provides) {\r\n      // TS doesn't allow symbol as index type\r\n      return provides[key as string]\r\n    } else if (arguments.length > 1) {\r\n      return treatDefaultAsFactory && isFunction(defaultValue)\r\n        ? defaultValue.call(instance.proxy)\r\n        : defaultValue\r\n    } else if (__DEV__) {\r\n      warn(`injection \"${String(key)}\" not found.`)\r\n    }\r\n  } else if (__DEV__) {\r\n    warn(`inject() can only be used inside setup() or functional components.`)\r\n  }\r\n}\r\n","import {\r\n  getCurrentInstance,\r\n  SetupContext,\r\n  ComponentInternalInstance,\r\n  ComponentOptions\r\n} from '../component'\r\nimport {\r\n  cloneVNode,\r\n  Comment,\r\n  isSameVNodeType,\r\n  VNode,\r\n  VNodeArrayChildren,\r\n  Fragment\r\n} from '../vnode'\r\nimport { warn } from '../warning'\r\nimport { isKeepAlive } from './KeepAlive'\r\nimport { toRaw } from '@vue/reactivity'\r\nimport { callWithAsyncErrorHandling, ErrorCodes } from '../errorHandling'\r\nimport { ShapeFlags, PatchFlags } from '@vue/shared'\r\nimport { onBeforeUnmount, onMounted } from '../apiLifecycle'\r\nimport { RendererElement } from '../renderer'\r\n\r\nexport interface BaseTransitionProps<HostElement = RendererElement> {\r\n  mode?: 'in-out' | 'out-in' | 'default'\r\n  appear?: boolean\r\n\r\n  // If true, indicates this is a transition that doesn't actually insert/remove\r\n  // the element, but toggles the show / hidden status instead.\r\n  // The transition hooks are injected, but will be skipped by the renderer.\r\n  // Instead, a custom directive can control the transition by calling the\r\n  // injected hooks (e.g. v-show).\r\n  persisted?: boolean\r\n\r\n  // Hooks. Using camel case for easier usage in render functions & JSX.\r\n  // In templates these can be written as @before-enter=\"xxx\" as prop names\r\n  // are camelized.\r\n  onBeforeEnter?: (el: HostElement) => void\r\n  onEnter?: (el: HostElement, done: () => void) => void\r\n  onAfterEnter?: (el: HostElement) => void\r\n  onEnterCancelled?: (el: HostElement) => void\r\n  // leave\r\n  onBeforeLeave?: (el: HostElement) => void\r\n  onLeave?: (el: HostElement, done: () => void) => void\r\n  onAfterLeave?: (el: HostElement) => void\r\n  onLeaveCancelled?: (el: HostElement) => void // only fired in persisted mode\r\n  // appear\r\n  onBeforeAppear?: (el: HostElement) => void\r\n  onAppear?: (el: HostElement, done: () => void) => void\r\n  onAfterAppear?: (el: HostElement) => void\r\n  onAppearCancelled?: (el: HostElement) => void\r\n}\r\n\r\nexport interface TransitionHooks<\r\n  HostElement extends RendererElement = RendererElement\r\n> {\r\n  mode: BaseTransitionProps['mode']\r\n  persisted: boolean\r\n  beforeEnter(el: HostElement): void\r\n  enter(el: HostElement): void\r\n  leave(el: HostElement, remove: () => void): void\r\n  clone(vnode: VNode): TransitionHooks<HostElement>\r\n  // optional\r\n  afterLeave?(): void\r\n  delayLeave?(\r\n    el: HostElement,\r\n    earlyRemove: () => void,\r\n    delayedLeave: () => void\r\n  ): void\r\n  delayedLeave?(): void\r\n}\r\n\r\nexport type TransitionHookCaller = (\r\n  hook: ((el: any) => void) | Array<(el: any) => void> | undefined,\r\n  args?: any[]\r\n) => void\r\n\r\nexport type PendingCallback = (cancelled?: boolean) => void\r\n\r\nexport interface TransitionState {\r\n  isMounted: boolean\r\n  isLeaving: boolean\r\n  isUnmounting: boolean\r\n  // Track pending leave callbacks for children of the same key.\r\n  // This is used to force remove leaving a child when a new copy is entering.\r\n  leavingVNodes: Map<any, Record<string, VNode>>\r\n}\r\n\r\nexport interface TransitionElement {\r\n  // in persisted mode (e.g. v-show), the same element is toggled, so the\r\n  // pending enter/leave callbacks may need to be cancelled if the state is toggled\r\n  // before it finishes.\r\n  _enterCb?: PendingCallback\r\n  _leaveCb?: PendingCallback\r\n}\r\n\r\nexport function useTransitionState(): TransitionState {\r\n  const state: TransitionState = {\r\n    isMounted: false,\r\n    isLeaving: false,\r\n    isUnmounting: false,\r\n    leavingVNodes: new Map()\r\n  }\r\n  onMounted(() => {\r\n    state.isMounted = true\r\n  })\r\n  onBeforeUnmount(() => {\r\n    state.isUnmounting = true\r\n  })\r\n  return state\r\n}\r\n\r\nconst TransitionHookValidator = [Function, Array]\r\n\r\nconst BaseTransitionImpl: ComponentOptions = {\r\n  name: `BaseTransition`,\r\n\r\n  props: {\r\n    mode: String,\r\n    appear: Boolean,\r\n    persisted: Boolean,\r\n    // enter\r\n    onBeforeEnter: TransitionHookValidator,\r\n    onEnter: TransitionHookValidator,\r\n    onAfterEnter: TransitionHookValidator,\r\n    onEnterCancelled: TransitionHookValidator,\r\n    // leave\r\n    onBeforeLeave: TransitionHookValidator,\r\n    onLeave: TransitionHookValidator,\r\n    onAfterLeave: TransitionHookValidator,\r\n    onLeaveCancelled: TransitionHookValidator,\r\n    // appear\r\n    onBeforeAppear: TransitionHookValidator,\r\n    onAppear: TransitionHookValidator,\r\n    onAfterAppear: TransitionHookValidator,\r\n    onAppearCancelled: TransitionHookValidator\r\n  },\r\n\r\n  setup(props: BaseTransitionProps, { slots }: SetupContext) {\r\n    const instance = getCurrentInstance()!\r\n    const state = useTransitionState()\r\n\r\n    let prevTransitionKey: any\r\n\r\n    return () => {\r\n      const children =\r\n        slots.default && getTransitionRawChildren(slots.default(), true)\r\n      if (!children || !children.length) {\r\n        return\r\n      }\r\n\r\n      // warn multiple elements\r\n      if (__DEV__ && children.length > 1) {\r\n        warn(\r\n          '<transition> can only be used on a single element or component. Use ' +\r\n            '<transition-group> for lists.'\r\n        )\r\n      }\r\n\r\n      // there's no need to track reactivity for these props so use the raw\r\n      // props for a bit better perf\r\n      const rawProps = toRaw(props)\r\n      const { mode } = rawProps\r\n      // check mode\r\n      if (__DEV__ && mode && !['in-out', 'out-in', 'default'].includes(mode)) {\r\n        warn(`invalid <transition> mode: ${mode}`)\r\n      }\r\n\r\n      // at this point children has a guaranteed length of 1.\r\n      const child = children[0]\r\n      if (state.isLeaving) {\r\n        return emptyPlaceholder(child)\r\n      }\r\n\r\n      // in the case of <transition><keep-alive/></transition>, we need to\r\n      // compare the type of the kept-alive children.\r\n      const innerChild = getKeepAliveChild(child)\r\n      if (!innerChild) {\r\n        return emptyPlaceholder(child)\r\n      }\r\n\r\n      const enterHooks = resolveTransitionHooks(\r\n        innerChild,\r\n        rawProps,\r\n        state,\r\n        instance\r\n      )\r\n      setTransitionHooks(innerChild, enterHooks)\r\n\r\n      const oldChild = instance.subTree\r\n      const oldInnerChild = oldChild && getKeepAliveChild(oldChild)\r\n\r\n      let transitionKeyChanged = false\r\n      const { getTransitionKey } = innerChild.type as any\r\n      if (getTransitionKey) {\r\n        const key = getTransitionKey()\r\n        if (prevTransitionKey === undefined) {\r\n          prevTransitionKey = key\r\n        } else if (key !== prevTransitionKey) {\r\n          prevTransitionKey = key\r\n          transitionKeyChanged = true\r\n        }\r\n      }\r\n\r\n      // handle mode\r\n      if (\r\n        oldInnerChild &&\r\n        oldInnerChild.type !== Comment &&\r\n        (!isSameVNodeType(innerChild, oldInnerChild) || transitionKeyChanged)\r\n      ) {\r\n        const leavingHooks = resolveTransitionHooks(\r\n          oldInnerChild,\r\n          rawProps,\r\n          state,\r\n          instance\r\n        )\r\n        // update old tree's hooks in case of dynamic transition\r\n        setTransitionHooks(oldInnerChild, leavingHooks)\r\n        // switching between different views\r\n        if (mode === 'out-in') {\r\n          state.isLeaving = true\r\n          // return placeholder node and queue update when leave finishes\r\n          leavingHooks.afterLeave = () => {\r\n            state.isLeaving = false\r\n            instance.update()\r\n          }\r\n          return emptyPlaceholder(child)\r\n        } else if (mode === 'in-out' && innerChild.type !== Comment) {\r\n          leavingHooks.delayLeave = (\r\n            el: TransitionElement,\r\n            earlyRemove,\r\n            delayedLeave\r\n          ) => {\r\n            const leavingVNodesCache = getLeavingNodesForType(\r\n              state,\r\n              oldInnerChild\r\n            )\r\n            leavingVNodesCache[String(oldInnerChild.key)] = oldInnerChild\r\n            // early removal callback\r\n            el._leaveCb = () => {\r\n              earlyRemove()\r\n              el._leaveCb = undefined\r\n              delete enterHooks.delayedLeave\r\n            }\r\n            enterHooks.delayedLeave = delayedLeave\r\n          }\r\n        }\r\n      }\r\n\r\n      return child\r\n    }\r\n  }\r\n}\r\n\r\nif (__COMPAT__) {\r\n  BaseTransitionImpl.__isBuiltIn = true\r\n}\r\n\r\n// export the public type for h/tsx inference\r\n// also to avoid inline import() in generated d.ts files\r\nexport const BaseTransition = BaseTransitionImpl as any as {\r\n  new (): {\r\n    $props: BaseTransitionProps<any>\r\n  }\r\n}\r\n\r\nfunction getLeavingNodesForType(\r\n  state: TransitionState,\r\n  vnode: VNode\r\n): Record<string, VNode> {\r\n  const { leavingVNodes } = state\r\n  let leavingVNodesCache = leavingVNodes.get(vnode.type)!\r\n  if (!leavingVNodesCache) {\r\n    leavingVNodesCache = Object.create(null)\r\n    leavingVNodes.set(vnode.type, leavingVNodesCache)\r\n  }\r\n  return leavingVNodesCache\r\n}\r\n\r\n// The transition hooks are attached to the vnode as vnode.transition\r\n// and will be called at appropriate timing in the renderer.\r\nexport function resolveTransitionHooks(\r\n  vnode: VNode,\r\n  props: BaseTransitionProps<any>,\r\n  state: TransitionState,\r\n  instance: ComponentInternalInstance\r\n): TransitionHooks {\r\n  const {\r\n    appear,\r\n    mode,\r\n    persisted = false,\r\n    onBeforeEnter,\r\n    onEnter,\r\n    onAfterEnter,\r\n    onEnterCancelled,\r\n    onBeforeLeave,\r\n    onLeave,\r\n    onAfterLeave,\r\n    onLeaveCancelled,\r\n    onBeforeAppear,\r\n    onAppear,\r\n    onAfterAppear,\r\n    onAppearCancelled\r\n  } = props\r\n  const key = String(vnode.key)\r\n  const leavingVNodesCache = getLeavingNodesForType(state, vnode)\r\n\r\n  const callHook: TransitionHookCaller = (hook, args) => {\r\n    hook &&\r\n      callWithAsyncErrorHandling(\r\n        hook,\r\n        instance,\r\n        ErrorCodes.TRANSITION_HOOK,\r\n        args\r\n      )\r\n  }\r\n\r\n  const hooks: TransitionHooks<TransitionElement> = {\r\n    mode,\r\n    persisted,\r\n    beforeEnter(el) {\r\n      let hook = onBeforeEnter\r\n      if (!state.isMounted) {\r\n        if (appear) {\r\n          hook = onBeforeAppear || onBeforeEnter\r\n        } else {\r\n          return\r\n        }\r\n      }\r\n      // for same element (v-show)\r\n      if (el._leaveCb) {\r\n        el._leaveCb(true /* cancelled */)\r\n      }\r\n      // for toggled element with same key (v-if)\r\n      const leavingVNode = leavingVNodesCache[key]\r\n      if (\r\n        leavingVNode &&\r\n        isSameVNodeType(vnode, leavingVNode) &&\r\n        leavingVNode.el!._leaveCb\r\n      ) {\r\n        // force early removal (not cancelled)\r\n        leavingVNode.el!._leaveCb()\r\n      }\r\n      callHook(hook, [el])\r\n    },\r\n\r\n    enter(el) {\r\n      let hook = onEnter\r\n      let afterHook = onAfterEnter\r\n      let cancelHook = onEnterCancelled\r\n      if (!state.isMounted) {\r\n        if (appear) {\r\n          hook = onAppear || onEnter\r\n          afterHook = onAfterAppear || onAfterEnter\r\n          cancelHook = onAppearCancelled || onEnterCancelled\r\n        } else {\r\n          return\r\n        }\r\n      }\r\n      let called = false\r\n      const done = (el._enterCb = (cancelled?) => {\r\n        if (called) return\r\n        called = true\r\n        if (cancelled) {\r\n          callHook(cancelHook, [el])\r\n        } else {\r\n          callHook(afterHook, [el])\r\n        }\r\n        if (hooks.delayedLeave) {\r\n          hooks.delayedLeave()\r\n        }\r\n        el._enterCb = undefined\r\n      })\r\n      if (hook) {\r\n        hook(el, done)\r\n        if (hook.length <= 1) {\r\n          done()\r\n        }\r\n      } else {\r\n        done()\r\n      }\r\n    },\r\n\r\n    leave(el, remove) {\r\n      const key = String(vnode.key)\r\n      if (el._enterCb) {\r\n        el._enterCb(true /* cancelled */)\r\n      }\r\n      if (state.isUnmounting) {\r\n        return remove()\r\n      }\r\n      callHook(onBeforeLeave, [el])\r\n      let called = false\r\n      const done = (el._leaveCb = (cancelled?) => {\r\n        if (called) return\r\n        called = true\r\n        remove()\r\n        if (cancelled) {\r\n          callHook(onLeaveCancelled, [el])\r\n        } else {\r\n          callHook(onAfterLeave, [el])\r\n        }\r\n        el._leaveCb = undefined\r\n        if (leavingVNodesCache[key] === vnode) {\r\n          delete leavingVNodesCache[key]\r\n        }\r\n      })\r\n      leavingVNodesCache[key] = vnode\r\n      if (onLeave) {\r\n        onLeave(el, done)\r\n        if (onLeave.length <= 1) {\r\n          done()\r\n        }\r\n      } else {\r\n        done()\r\n      }\r\n    },\r\n\r\n    clone(vnode) {\r\n      return resolveTransitionHooks(vnode, props, state, instance)\r\n    }\r\n  }\r\n\r\n  return hooks\r\n}\r\n\r\n// the placeholder really only handles one special case: KeepAlive\r\n// in the case of a KeepAlive in a leave phase we need to return a KeepAlive\r\n// placeholder with empty content to avoid the KeepAlive instance from being\r\n// unmounted.\r\nfunction emptyPlaceholder(vnode: VNode): VNode | undefined {\r\n  if (isKeepAlive(vnode)) {\r\n    vnode = cloneVNode(vnode)\r\n    vnode.children = null\r\n    return vnode\r\n  }\r\n}\r\n\r\nfunction getKeepAliveChild(vnode: VNode): VNode | undefined {\r\n  return isKeepAlive(vnode)\r\n    ? vnode.children\r\n      ? ((vnode.children as VNodeArrayChildren)[0] as VNode)\r\n      : undefined\r\n    : vnode\r\n}\r\n\r\nexport function setTransitionHooks(vnode: VNode, hooks: TransitionHooks) {\r\n  if (vnode.shapeFlag & ShapeFlags.COMPONENT && vnode.component) {\r\n    setTransitionHooks(vnode.component.subTree, hooks)\r\n  } else if (__FEATURE_SUSPENSE__ && vnode.shapeFlag & ShapeFlags.SUSPENSE) {\r\n    vnode.ssContent!.transition = hooks.clone(vnode.ssContent!)\r\n    vnode.ssFallback!.transition = hooks.clone(vnode.ssFallback!)\r\n  } else {\r\n    vnode.transition = hooks\r\n  }\r\n}\r\n\r\nexport function getTransitionRawChildren(\r\n  children: VNode[],\r\n  keepComment: boolean = false\r\n): VNode[] {\r\n  let ret: VNode[] = []\r\n  let keyedFragmentCount = 0\r\n  for (let i = 0; i < children.length; i++) {\r\n    const child = children[i]\r\n    // handle fragment children case, e.g. v-for\r\n    if (child.type === Fragment) {\r\n      if (child.patchFlag & PatchFlags.KEYED_FRAGMENT) keyedFragmentCount++\r\n      ret = ret.concat(\r\n        getTransitionRawChildren(child.children as VNode[], keepComment)\r\n      )\r\n    }\r\n    // comment placeholders should be skipped, e.g. v-if\r\n    else if (keepComment || child.type !== Comment) {\r\n      ret.push(child)\r\n    }\r\n  }\r\n  // #1126 if a transition children list contains multiple sub fragments, these\r\n  // fragments will be merged into a flat children array. Since each v-for\r\n  // fragment may contain different static bindings inside, we need to de-op\r\n  // these children to force full diffs to ensure correct behavior.\r\n  if (keyedFragmentCount > 1) {\r\n    for (let i = 0; i < ret.length; i++) {\r\n      ret[i].patchFlag = PatchFlags.BAIL\r\n    }\r\n  }\r\n  return ret\r\n}\r\n","import {\r\n  ComputedOptions,\r\n  MethodOptions,\r\n  ComponentOptionsWithoutProps,\r\n  ComponentOptionsWithArrayProps,\r\n  ComponentOptionsWithObjectProps,\r\n  ComponentOptionsMixin,\r\n  RenderFunction,\r\n  ComponentOptionsBase\r\n} from './componentOptions'\r\nimport {\r\n  SetupContext,\r\n  AllowedComponentProps,\r\n  ComponentCustomProps\r\n} from './component'\r\nimport {\r\n  ExtractPropTypes,\r\n  ComponentPropsOptions,\r\n  ExtractDefaultPropTypes\r\n} from './componentProps'\r\nimport { EmitsOptions, EmitsToProps } from './componentEmits'\r\nimport { isFunction } from '@vue/shared'\r\nimport { VNodeProps } from './vnode'\r\nimport {\r\n  CreateComponentPublicInstance,\r\n  ComponentPublicInstanceConstructor\r\n} from './componentPublicInstance'\r\n\r\nexport type PublicProps = VNodeProps &\r\n  AllowedComponentProps &\r\n  ComponentCustomProps\r\n\r\nexport type DefineComponent<\r\n  PropsOrPropOptions = {},\r\n  RawBindings = {},\r\n  D = {},\r\n  C extends ComputedOptions = ComputedOptions,\r\n  M extends MethodOptions = MethodOptions,\r\n  Mixin extends ComponentOptionsMixin = ComponentOptionsMixin,\r\n  Extends extends ComponentOptionsMixin = ComponentOptionsMixin,\r\n  E extends EmitsOptions = Record<string, any>,\r\n  EE extends string = string,\r\n  PP = PublicProps,\r\n  Props = Readonly<ExtractPropTypes<PropsOrPropOptions>> & EmitsToProps<E>,\r\n  Defaults = ExtractDefaultPropTypes<PropsOrPropOptions>\r\n> = ComponentPublicInstanceConstructor<\r\n  CreateComponentPublicInstance<\r\n    Props,\r\n    RawBindings,\r\n    D,\r\n    C,\r\n    M,\r\n    Mixin,\r\n    Extends,\r\n    E,\r\n    PP & Props,\r\n    Defaults,\r\n    true\r\n  > &\r\n    Props\r\n> &\r\n  ComponentOptionsBase<\r\n    Props,\r\n    RawBindings,\r\n    D,\r\n    C,\r\n    M,\r\n    Mixin,\r\n    Extends,\r\n    E,\r\n    EE,\r\n    Defaults\r\n  > &\r\n  PP\r\n\r\n// defineComponent is a utility that is primarily used for type inference\r\n// when declaring components. Type inference is provided in the component\r\n// options (provided as the argument). The returned value has artificial types\r\n// for TSX / manual render function / IDE support.\r\n\r\n// overload 1: direct setup function\r\n// (uses user defined props interface)\r\nexport function defineComponent<Props, RawBindings = object>(\r\n  setup: (\r\n    props: Readonly<Props>,\r\n    ctx: SetupContext\r\n  ) => RawBindings | RenderFunction\r\n): DefineComponent<Props, RawBindings>\r\n\r\n// overload 2: object format with no props\r\n// (uses user defined props interface)\r\n// return type is for Vetur and TSX support\r\nexport function defineComponent<\r\n  Props = {},\r\n  RawBindings = {},\r\n  D = {},\r\n  C extends ComputedOptions = {},\r\n  M extends MethodOptions = {},\r\n  Mixin extends ComponentOptionsMixin = ComponentOptionsMixin,\r\n  Extends extends ComponentOptionsMixin = ComponentOptionsMixin,\r\n  E extends EmitsOptions = EmitsOptions,\r\n  EE extends string = string\r\n>(\r\n  options: ComponentOptionsWithoutProps<\r\n    Props,\r\n    RawBindings,\r\n    D,\r\n    C,\r\n    M,\r\n    Mixin,\r\n    Extends,\r\n    E,\r\n    EE\r\n  >\r\n): DefineComponent<Props, RawBindings, D, C, M, Mixin, Extends, E, EE>\r\n\r\n// overload 3: object format with array props declaration\r\n// props inferred as { [key in PropNames]?: any }\r\n// return type is for Vetur and TSX support\r\nexport function defineComponent<\r\n  PropNames extends string,\r\n  RawBindings,\r\n  D,\r\n  C extends ComputedOptions = {},\r\n  M extends MethodOptions = {},\r\n  Mixin extends ComponentOptionsMixin = ComponentOptionsMixin,\r\n  Extends extends ComponentOptionsMixin = ComponentOptionsMixin,\r\n  E extends EmitsOptions = Record<string, any>,\r\n  EE extends string = string\r\n>(\r\n  options: ComponentOptionsWithArrayProps<\r\n    PropNames,\r\n    RawBindings,\r\n    D,\r\n    C,\r\n    M,\r\n    Mixin,\r\n    Extends,\r\n    E,\r\n    EE\r\n  >\r\n): DefineComponent<\r\n  Readonly<{ [key in PropNames]?: any }>,\r\n  RawBindings,\r\n  D,\r\n  C,\r\n  M,\r\n  Mixin,\r\n  Extends,\r\n  E,\r\n  EE\r\n>\r\n\r\n// overload 4: object format with object props declaration\r\n// see `ExtractPropTypes` in ./componentProps.ts\r\nexport function defineComponent<\r\n  // the Readonly constraint allows TS to treat the type of { required: true }\r\n  // as constant instead of boolean.\r\n  PropsOptions extends Readonly<ComponentPropsOptions>,\r\n  RawBindings,\r\n  D,\r\n  C extends ComputedOptions = {},\r\n  M extends MethodOptions = {},\r\n  Mixin extends ComponentOptionsMixin = ComponentOptionsMixin,\r\n  Extends extends ComponentOptionsMixin = ComponentOptionsMixin,\r\n  E extends EmitsOptions = Record<string, any>,\r\n  EE extends string = string\r\n>(\r\n  options: ComponentOptionsWithObjectProps<\r\n    PropsOptions,\r\n    RawBindings,\r\n    D,\r\n    C,\r\n    M,\r\n    Mixin,\r\n    Extends,\r\n    E,\r\n    EE\r\n  >\r\n): DefineComponent<PropsOptions, RawBindings, D, C, M, Mixin, Extends, E, EE>\r\n\r\n// implementation, close to no-op\r\nexport function defineComponent(options: unknown) {\r\n  return isFunction(options) ? { setup: options, name: options.name } : options\r\n}\r\n","import {\r\n  Component,\r\n  ConcreteComponent,\r\n  currentInstance,\r\n  ComponentInternalInstance,\r\n  isInSSRComponentSetup,\r\n  ComponentOptions\r\n} from './component'\r\nimport { isFunction, isObject } from '@vue/shared'\r\nimport { ComponentPublicInstance } from './componentPublicInstance'\r\nimport { createVNode, VNode } from './vnode'\r\nimport { defineComponent } from './apiDefineComponent'\r\nimport { warn } from './warning'\r\nimport { ref } from '@vue/reactivity'\r\nimport { handleError, ErrorCodes } from './errorHandling'\r\nimport { isKeepAlive } from './components/KeepAlive'\r\nimport { queueJob } from './scheduler'\r\n\r\nexport type AsyncComponentResolveResult<T = Component> = T | { default: T } // es modules\r\n\r\nexport type AsyncComponentLoader<T = any> = () => Promise<\r\n  AsyncComponentResolveResult<T>\r\n>\r\n\r\nexport interface AsyncComponentOptions<T = any> {\r\n  loader: AsyncComponentLoader<T>\r\n  loadingComponent?: Component\r\n  errorComponent?: Component\r\n  delay?: number\r\n  timeout?: number\r\n  suspensible?: boolean\r\n  onError?: (\r\n    error: Error,\r\n    retry: () => void,\r\n    fail: () => void,\r\n    attempts: number\r\n  ) => any\r\n}\r\n\r\nexport const isAsyncWrapper = (i: ComponentInternalInstance | VNode): boolean =>\r\n  !!(i.type as ComponentOptions).__asyncLoader\r\n\r\nexport function defineAsyncComponent<\r\n  T extends Component = { new (): ComponentPublicInstance }\r\n>(source: AsyncComponentLoader<T> | AsyncComponentOptions<T>): T {\r\n  if (isFunction(source)) {\r\n    source = { loader: source }\r\n  }\r\n\r\n  const {\r\n    loader,\r\n    loadingComponent,\r\n    errorComponent,\r\n    delay = 200,\r\n    timeout, // undefined = never times out\r\n    suspensible = true,\r\n    onError: userOnError\r\n  } = source\r\n\r\n  let pendingRequest: Promise<ConcreteComponent> | null = null\r\n  let resolvedComp: ConcreteComponent | undefined\r\n\r\n  let retries = 0\r\n  const retry = () => {\r\n    retries++\r\n    pendingRequest = null\r\n    return load()\r\n  }\r\n\r\n  const load = (): Promise<ConcreteComponent> => {\r\n    let thisRequest: Promise<ConcreteComponent>\r\n    return (\r\n      pendingRequest ||\r\n      (thisRequest = pendingRequest =\r\n        loader()\r\n          .catch(err => {\r\n            err = err instanceof Error ? err : new Error(String(err))\r\n            if (userOnError) {\r\n              return new Promise((resolve, reject) => {\r\n                const userRetry = () => resolve(retry())\r\n                const userFail = () => reject(err)\r\n                userOnError(err, userRetry, userFail, retries + 1)\r\n              })\r\n            } else {\r\n              throw err\r\n            }\r\n          })\r\n          .then((comp: any) => {\r\n            if (thisRequest !== pendingRequest && pendingRequest) {\r\n              return pendingRequest\r\n            }\r\n            if (__DEV__ && !comp) {\r\n              warn(\r\n                `Async component loader resolved to undefined. ` +\r\n                  `If you are using retry(), make sure to return its return value.`\r\n              )\r\n            }\r\n            // interop module default\r\n            if (\r\n              comp &&\r\n              (comp.__esModule || comp[Symbol.toStringTag] === 'Module')\r\n            ) {\r\n              comp = comp.default\r\n            }\r\n            if (__DEV__ && comp && !isObject(comp) && !isFunction(comp)) {\r\n              throw new Error(`Invalid async component load result: ${comp}`)\r\n            }\r\n            resolvedComp = comp\r\n            return comp\r\n          }))\r\n    )\r\n  }\r\n\r\n  return defineComponent({\r\n    name: 'AsyncComponentWrapper',\r\n\r\n    __asyncLoader: load,\r\n\r\n    get __asyncResolved() {\r\n      return resolvedComp\r\n    },\r\n\r\n    setup() {\r\n      const instance = currentInstance!\r\n\r\n      // already resolved\r\n      if (resolvedComp) {\r\n        return () => createInnerComp(resolvedComp!, instance)\r\n      }\r\n\r\n      const onError = (err: Error) => {\r\n        pendingRequest = null\r\n        handleError(\r\n          err,\r\n          instance,\r\n          ErrorCodes.ASYNC_COMPONENT_LOADER,\r\n          !errorComponent /* do not throw in dev if user provided error component */\r\n        )\r\n      }\r\n\r\n      // suspense-controlled or SSR.\r\n      if (\r\n        (__FEATURE_SUSPENSE__ && suspensible && instance.suspense) ||\r\n        (__NODE_JS__ && isInSSRComponentSetup)\r\n      ) {\r\n        return load()\r\n          .then(comp => {\r\n            return () => createInnerComp(comp, instance)\r\n          })\r\n          .catch(err => {\r\n            onError(err)\r\n            return () =>\r\n              errorComponent\r\n                ? createVNode(errorComponent as ConcreteComponent, {\r\n                    error: err\r\n                  })\r\n                : null\r\n          })\r\n      }\r\n\r\n      const loaded = ref(false)\r\n      const error = ref()\r\n      const delayed = ref(!!delay)\r\n\r\n      if (delay) {\r\n        setTimeout(() => {\r\n          delayed.value = false\r\n        }, delay)\r\n      }\r\n\r\n      if (timeout != null) {\r\n        setTimeout(() => {\r\n          if (!loaded.value && !error.value) {\r\n            const err = new Error(\r\n              `Async component timed out after ${timeout}ms.`\r\n            )\r\n            onError(err)\r\n            error.value = err\r\n          }\r\n        }, timeout)\r\n      }\r\n\r\n      load()\r\n        .then(() => {\r\n          loaded.value = true\r\n          if (instance.parent && isKeepAlive(instance.parent.vnode)) {\r\n            // parent is keep-alive, force update so the loaded component's\r\n            // name is taken into account\r\n            queueJob(instance.parent.update)\r\n          }\r\n        })\r\n        .catch(err => {\r\n          onError(err)\r\n          error.value = err\r\n        })\r\n\r\n      return () => {\r\n        if (loaded.value && resolvedComp) {\r\n          return createInnerComp(resolvedComp, instance)\r\n        } else if (error.value && errorComponent) {\r\n          return createVNode(errorComponent as ConcreteComponent, {\r\n            error: error.value\r\n          })\r\n        } else if (loadingComponent && !delayed.value) {\r\n          return createVNode(loadingComponent as ConcreteComponent)\r\n        }\r\n      }\r\n    }\r\n  }) as any\r\n}\r\n\r\nfunction createInnerComp(\r\n  comp: ConcreteComponent,\r\n  { vnode: { ref, props, children } }: ComponentInternalInstance\r\n) {\r\n  const vnode = createVNode(comp, props, children)\r\n  // ensure inner component inherits the async wrapper's ref owner\r\n  vnode.ref = ref\r\n  return vnode\r\n}\r\n","import {\r\n  ConcreteComponent,\r\n  getCurrentInstance,\r\n  SetupContext,\r\n  ComponentInternalInstance,\r\n  LifecycleHooks,\r\n  currentInstance,\r\n  getComponentName,\r\n  ComponentOptions\r\n} from '../component'\r\nimport { VNode, cloneVNode, isVNode, VNodeProps } from '../vnode'\r\nimport { warn } from '../warning'\r\nimport {\r\n  onBeforeUnmount,\r\n  injectHook,\r\n  onUnmounted,\r\n  onMounted,\r\n  onUpdated\r\n} from '../apiLifecycle'\r\nimport {\r\n  isString,\r\n  isArray,\r\n  ShapeFlags,\r\n  remove,\r\n  invokeArrayFns\r\n} from '@vue/shared'\r\nimport { watch } from '../apiWatch'\r\nimport {\r\n  RendererInternals,\r\n  queuePostRenderEffect,\r\n  MoveType,\r\n  RendererElement,\r\n  RendererNode,\r\n  invokeVNodeHook\r\n} from '../renderer'\r\nimport { setTransitionHooks } from './BaseTransition'\r\nimport { ComponentRenderContext } from '../componentPublicInstance'\r\nimport { devtoolsComponentAdded } from '../devtools'\r\nimport { isAsyncWrapper } from '../apiAsyncComponent'\r\n\r\ntype MatchPattern = string | RegExp | string[] | RegExp[]\r\n\r\nexport interface KeepAliveProps {\r\n  include?: MatchPattern\r\n  exclude?: MatchPattern\r\n  max?: number | string\r\n}\r\n\r\ntype CacheKey = string | number | symbol | ConcreteComponent\r\ntype Cache = Map<CacheKey, VNode>\r\ntype Keys = Set<CacheKey>\r\n\r\nexport interface KeepAliveContext extends ComponentRenderContext {\r\n  renderer: RendererInternals\r\n  activate: (\r\n    vnode: VNode,\r\n    container: RendererElement,\r\n    anchor: RendererNode | null,\r\n    isSVG: boolean,\r\n    optimized: boolean\r\n  ) => void\r\n  deactivate: (vnode: VNode) => void\r\n}\r\n\r\nexport const isKeepAlive = (vnode: VNode): boolean =>\r\n  (vnode.type as any).__isKeepAlive\r\n\r\nconst KeepAliveImpl: ComponentOptions = {\r\n  name: `KeepAlive`,\r\n\r\n  // Marker for special handling inside the renderer. We are not using a ===\r\n  // check directly on KeepAlive in the renderer, because importing it directly\r\n  // would prevent it from being tree-shaken.\r\n  __isKeepAlive: true,\r\n\r\n  props: {\r\n    include: [String, RegExp, Array],\r\n    exclude: [String, RegExp, Array],\r\n    max: [String, Number]\r\n  },\r\n\r\n  setup(props: KeepAliveProps, { slots }: SetupContext) {\r\n    const instance = getCurrentInstance()!\r\n    // KeepAlive communicates with the instantiated renderer via the\r\n    // ctx where the renderer passes in its internals,\r\n    // and the KeepAlive instance exposes activate/deactivate implementations.\r\n    // The whole point of this is to avoid importing KeepAlive directly in the\r\n    // renderer to facilitate tree-shaking.\r\n    const sharedContext = instance.ctx as KeepAliveContext\r\n\r\n    // if the internal renderer is not registered, it indicates that this is server-side rendering,\r\n    // for KeepAlive, we just need to render its children\r\n    if (!sharedContext.renderer) {\r\n      return slots.default\r\n    }\r\n\r\n    const cache: Cache = new Map()\r\n    const keys: Keys = new Set()\r\n    let current: VNode | null = null\r\n\r\n    if (__DEV__ || __FEATURE_PROD_DEVTOOLS__) {\r\n      ;(instance as any).__v_cache = cache\r\n    }\r\n\r\n    const parentSuspense = instance.suspense\r\n\r\n    const {\r\n      renderer: {\r\n        p: patch,\r\n        m: move,\r\n        um: _unmount,\r\n        o: { createElement }\r\n      }\r\n    } = sharedContext\r\n    const storageContainer = createElement('div')\r\n\r\n    sharedContext.activate = (vnode, container, anchor, isSVG, optimized) => {\r\n      const instance = vnode.component!\r\n      move(vnode, container, anchor, MoveType.ENTER, parentSuspense)\r\n      // in case props have changed\r\n      patch(\r\n        instance.vnode,\r\n        vnode,\r\n        container,\r\n        anchor,\r\n        instance,\r\n        parentSuspense,\r\n        isSVG,\r\n        vnode.slotScopeIds,\r\n        optimized\r\n      )\r\n      queuePostRenderEffect(() => {\r\n        instance.isDeactivated = false\r\n        if (instance.a) {\r\n          invokeArrayFns(instance.a)\r\n        }\r\n        const vnodeHook = vnode.props && vnode.props.onVnodeMounted\r\n        if (vnodeHook) {\r\n          invokeVNodeHook(vnodeHook, instance.parent, vnode)\r\n        }\r\n      }, parentSuspense)\r\n\r\n      if (__DEV__ || __FEATURE_PROD_DEVTOOLS__) {\r\n        // Update components tree\r\n        devtoolsComponentAdded(instance)\r\n      }\r\n    }\r\n\r\n    sharedContext.deactivate = (vnode: VNode) => {\r\n      const instance = vnode.component!\r\n      move(vnode, storageContainer, null, MoveType.LEAVE, parentSuspense)\r\n      queuePostRenderEffect(() => {\r\n        if (instance.da) {\r\n          invokeArrayFns(instance.da)\r\n        }\r\n        const vnodeHook = vnode.props && vnode.props.onVnodeUnmounted\r\n        if (vnodeHook) {\r\n          invokeVNodeHook(vnodeHook, instance.parent, vnode)\r\n        }\r\n        instance.isDeactivated = true\r\n      }, parentSuspense)\r\n\r\n      if (__DEV__ || __FEATURE_PROD_DEVTOOLS__) {\r\n        // Update components tree\r\n        devtoolsComponentAdded(instance)\r\n      }\r\n    }\r\n\r\n    function unmount(vnode: VNode) {\r\n      // reset the shapeFlag so it can be properly unmounted\r\n      resetShapeFlag(vnode)\r\n      _unmount(vnode, instance, parentSuspense)\r\n    }\r\n\r\n    function pruneCache(filter?: (name: string) => boolean) {\r\n      cache.forEach((vnode, key) => {\r\n        const name = getComponentName(vnode.type as ConcreteComponent)\r\n        if (name && (!filter || !filter(name))) {\r\n          pruneCacheEntry(key)\r\n        }\r\n      })\r\n    }\r\n\r\n    function pruneCacheEntry(key: CacheKey) {\r\n      const cached = cache.get(key) as VNode\r\n      if (!current || cached.type !== current.type) {\r\n        unmount(cached)\r\n      } else if (current) {\r\n        // current active instance should no longer be kept-alive.\r\n        // we can't unmount it now but it might be later, so reset its flag now.\r\n        resetShapeFlag(current)\r\n      }\r\n      cache.delete(key)\r\n      keys.delete(key)\r\n    }\r\n\r\n    // prune cache on include/exclude prop change\r\n    watch(\r\n      () => [props.include, props.exclude],\r\n      ([include, exclude]) => {\r\n        include && pruneCache(name => matches(include, name))\r\n        exclude && pruneCache(name => !matches(exclude, name))\r\n      },\r\n      // prune post-render after `current` has been updated\r\n      { flush: 'post', deep: true }\r\n    )\r\n\r\n    // cache sub tree after render\r\n    let pendingCacheKey: CacheKey | null = null\r\n    const cacheSubtree = () => {\r\n      // fix #1621, the pendingCacheKey could be 0\r\n      if (pendingCacheKey != null) {\r\n        cache.set(pendingCacheKey, getInnerChild(instance.subTree))\r\n      }\r\n    }\r\n    onMounted(cacheSubtree)\r\n    onUpdated(cacheSubtree)\r\n\r\n    onBeforeUnmount(() => {\r\n      cache.forEach(cached => {\r\n        const { subTree, suspense } = instance\r\n        const vnode = getInnerChild(subTree)\r\n        if (cached.type === vnode.type) {\r\n          // current instance will be unmounted as part of keep-alive's unmount\r\n          resetShapeFlag(vnode)\r\n          // but invoke its deactivated hook here\r\n          const da = vnode.component!.da\r\n          da && queuePostRenderEffect(da, suspense)\r\n          return\r\n        }\r\n        unmount(cached)\r\n      })\r\n    })\r\n\r\n    return () => {\r\n      pendingCacheKey = null\r\n\r\n      if (!slots.default) {\r\n        return null\r\n      }\r\n\r\n      const children = slots.default()\r\n      const rawVNode = children[0]\r\n      if (children.length > 1) {\r\n        if (__DEV__) {\r\n          warn(`KeepAlive should contain exactly one component child.`)\r\n        }\r\n        current = null\r\n        return children\r\n      } else if (\r\n        !isVNode(rawVNode) ||\r\n        (!(rawVNode.shapeFlag & ShapeFlags.STATEFUL_COMPONENT) &&\r\n          !(rawVNode.shapeFlag & ShapeFlags.SUSPENSE))\r\n      ) {\r\n        current = null\r\n        return rawVNode\r\n      }\r\n\r\n      let vnode = getInnerChild(rawVNode)\r\n      const comp = vnode.type as ConcreteComponent\r\n\r\n      // for async components, name check should be based in its loaded\r\n      // inner component if available\r\n      const name = getComponentName(\r\n        isAsyncWrapper(vnode)\r\n          ? (vnode.type as ComponentOptions).__asyncResolved || {}\r\n          : comp\r\n      )\r\n\r\n      const { include, exclude, max } = props\r\n\r\n      if (\r\n        (include && (!name || !matches(include, name))) ||\r\n        (exclude && name && matches(exclude, name))\r\n      ) {\r\n        current = vnode\r\n        return rawVNode\r\n      }\r\n\r\n      const key = vnode.key == null ? comp : vnode.key\r\n      const cachedVNode = cache.get(key)\r\n\r\n      // clone vnode if it's reused because we are going to mutate it\r\n      if (vnode.el) {\r\n        vnode = cloneVNode(vnode)\r\n        if (rawVNode.shapeFlag & ShapeFlags.SUSPENSE) {\r\n          rawVNode.ssContent = vnode\r\n        }\r\n      }\r\n      // #1513 it's possible for the returned vnode to be cloned due to attr\r\n      // fallthrough or scopeId, so the vnode here may not be the final vnode\r\n      // that is mounted. Instead of caching it directly, we store the pending\r\n      // key and cache `instance.subTree` (the normalized vnode) in\r\n      // beforeMount/beforeUpdate hooks.\r\n      pendingCacheKey = key\r\n\r\n      if (cachedVNode) {\r\n        // copy over mounted state\r\n        vnode.el = cachedVNode.el\r\n        vnode.component = cachedVNode.component\r\n        if (vnode.transition) {\r\n          // recursively update transition hooks on subTree\r\n          setTransitionHooks(vnode, vnode.transition!)\r\n        }\r\n        // avoid vnode being mounted as fresh\r\n        vnode.shapeFlag |= ShapeFlags.COMPONENT_KEPT_ALIVE\r\n        // make this key the freshest\r\n        keys.delete(key)\r\n        keys.add(key)\r\n      } else {\r\n        keys.add(key)\r\n        // prune oldest entry\r\n        if (max && keys.size > parseInt(max as string, 10)) {\r\n          pruneCacheEntry(keys.values().next().value)\r\n        }\r\n      }\r\n      // avoid vnode being unmounted\r\n      vnode.shapeFlag |= ShapeFlags.COMPONENT_SHOULD_KEEP_ALIVE\r\n\r\n      current = vnode\r\n      return rawVNode\r\n    }\r\n  }\r\n}\r\n\r\nif (__COMPAT__) {\r\n  KeepAliveImpl.__isBuildIn = true\r\n}\r\n\r\n// export the public type for h/tsx inference\r\n// also to avoid inline import() in generated d.ts files\r\nexport const KeepAlive = KeepAliveImpl as any as {\r\n  __isKeepAlive: true\r\n  new (): {\r\n    $props: VNodeProps & KeepAliveProps\r\n  }\r\n}\r\n\r\nfunction matches(pattern: MatchPattern, name: string): boolean {\r\n  if (isArray(pattern)) {\r\n    return pattern.some((p: string | RegExp) => matches(p, name))\r\n  } else if (isString(pattern)) {\r\n    return pattern.split(',').indexOf(name) > -1\r\n  } else if (pattern.test) {\r\n    return pattern.test(name)\r\n  }\r\n  /* istanbul ignore next */\r\n  return false\r\n}\r\n\r\nexport function onActivated(\r\n  hook: Function,\r\n  target?: ComponentInternalInstance | null\r\n) {\r\n  registerKeepAliveHook(hook, LifecycleHooks.ACTIVATED, target)\r\n}\r\n\r\nexport function onDeactivated(\r\n  hook: Function,\r\n  target?: ComponentInternalInstance | null\r\n) {\r\n  registerKeepAliveHook(hook, LifecycleHooks.DEACTIVATED, target)\r\n}\r\n\r\nfunction registerKeepAliveHook(\r\n  hook: Function & { __wdc?: Function },\r\n  type: LifecycleHooks,\r\n  target: ComponentInternalInstance | null = currentInstance\r\n) {\r\n  // cache the deactivate branch check wrapper for injected hooks so the same\r\n  // hook can be properly deduped by the scheduler. \"__wdc\" stands for \"with\r\n  // deactivation check\".\r\n  const wrappedHook =\r\n    hook.__wdc ||\r\n    (hook.__wdc = () => {\r\n      // only fire the hook if the target instance is NOT in a deactivated branch.\r\n      let current: ComponentInternalInstance | null = target\r\n      while (current) {\r\n        if (current.isDeactivated) {\r\n          return\r\n        }\r\n        current = current.parent\r\n      }\r\n      hook()\r\n    })\r\n  injectHook(type, wrappedHook, target)\r\n  // In addition to registering it on the target instance, we walk up the parent\r\n  // chain and register it on all ancestor instances that are keep-alive roots.\r\n  // This avoids the need to walk the entire component tree when invoking these\r\n  // hooks, and more importantly, avoids the need to track child components in\r\n  // arrays.\r\n  if (target) {\r\n    let current = target.parent\r\n    while (current && current.parent) {\r\n      if (isKeepAlive(current.parent.vnode)) {\r\n        injectToKeepAliveRoot(wrappedHook, type, target, current)\r\n      }\r\n      current = current.parent\r\n    }\r\n  }\r\n}\r\n\r\nfunction injectToKeepAliveRoot(\r\n  hook: Function & { __weh?: Function },\r\n  type: LifecycleHooks,\r\n  target: ComponentInternalInstance,\r\n  keepAliveRoot: ComponentInternalInstance\r\n) {\r\n  // injectHook wraps the original for error handling, so make sure to remove\r\n  // the wrapped version.\r\n  const injected = injectHook(type, hook, keepAliveRoot, true /* prepend */)\r\n  onUnmounted(() => {\r\n    remove(keepAliveRoot[type]!, injected)\r\n  }, target)\r\n}\r\n\r\nfunction resetShapeFlag(vnode: VNode) {\r\n  let shapeFlag = vnode.shapeFlag\r\n  if (shapeFlag & ShapeFlags.COMPONENT_SHOULD_KEEP_ALIVE) {\r\n    shapeFlag -= ShapeFlags.COMPONENT_SHOULD_KEEP_ALIVE\r\n  }\r\n  if (shapeFlag & ShapeFlags.COMPONENT_KEPT_ALIVE) {\r\n    shapeFlag -= ShapeFlags.COMPONENT_KEPT_ALIVE\r\n  }\r\n  vnode.shapeFlag = shapeFlag\r\n}\r\n\r\nfunction getInnerChild(vnode: VNode) {\r\n  return vnode.shapeFlag & ShapeFlags.SUSPENSE ? vnode.ssContent! : vnode\r\n}\r\n","import {\r\n  ComponentInternalInstance,\r\n  currentInstance,\r\n  isInSSRComponentSetup,\r\n  LifecycleHooks,\r\n  setCurrentInstance,\r\n  unsetCurrentInstance\r\n} from './component'\r\nimport { ComponentPublicInstance } from './componentPublicInstance'\r\nimport { callWithAsyncErrorHandling, ErrorTypeStrings } from './errorHandling'\r\nimport { warn } from './warning'\r\nimport { toHandlerKey } from '@vue/shared'\r\nimport { DebuggerEvent, pauseTracking, resetTracking } from '@vue/reactivity'\r\n\r\nexport { onActivated, onDeactivated } from './components/KeepAlive'\r\n\r\nexport function injectHook(\r\n  type: LifecycleHooks,\r\n  hook: Function & { __weh?: Function },\r\n  target: ComponentInternalInstance | null = currentInstance,\r\n  prepend: boolean = false\r\n): Function | undefined {\r\n  if (target) {\r\n    const hooks = target[type] || (target[type] = [])\r\n    // cache the error handling wrapper for injected hooks so the same hook\r\n    // can be properly deduped by the scheduler. \"__weh\" stands for \"with error\r\n    // handling\".\r\n    const wrappedHook =\r\n      hook.__weh ||\r\n      (hook.__weh = (...args: unknown[]) => {\r\n        if (target.isUnmounted) {\r\n          return\r\n        }\r\n        // disable tracking inside all lifecycle hooks\r\n        // since they can potentially be called inside effects.\r\n        pauseTracking()\r\n        // Set currentInstance during hook invocation.\r\n        // This assumes the hook does not synchronously trigger other hooks, which\r\n        // can only be false when the user does something really funky.\r\n        setCurrentInstance(target)\r\n        const res = callWithAsyncErrorHandling(hook, target, type, args)\r\n        unsetCurrentInstance()\r\n        resetTracking()\r\n        return res\r\n      })\r\n    if (prepend) {\r\n      hooks.unshift(wrappedHook)\r\n    } else {\r\n      hooks.push(wrappedHook)\r\n    }\r\n    return wrappedHook\r\n  } else if (__DEV__) {\r\n    const apiName = toHandlerKey(ErrorTypeStrings[type].replace(/ hook$/, ''))\r\n    warn(\r\n      `${apiName} is called when there is no active component instance to be ` +\r\n        `associated with. ` +\r\n        `Lifecycle injection APIs can only be used during execution of setup().` +\r\n        (__FEATURE_SUSPENSE__\r\n          ? ` If you are using async setup(), make sure to register lifecycle ` +\r\n            `hooks before the first await statement.`\r\n          : ``)\r\n    )\r\n  }\r\n}\r\n\r\nexport const createHook =\r\n  <T extends Function = () => any>(lifecycle: LifecycleHooks) =>\r\n  (hook: T, target: ComponentInternalInstance | null = currentInstance) =>\r\n    // post-create lifecycle registrations are noops during SSR (except for serverPrefetch)\r\n    (!isInSSRComponentSetup || lifecycle === LifecycleHooks.SERVER_PREFETCH) &&\r\n    injectHook(lifecycle, hook, target)\r\n\r\nexport const onBeforeMount = createHook(LifecycleHooks.BEFORE_MOUNT)\r\nexport const onMounted = createHook(LifecycleHooks.MOUNTED)\r\nexport const onBeforeUpdate = createHook(LifecycleHooks.BEFORE_UPDATE)\r\nexport const onUpdated = createHook(LifecycleHooks.UPDATED)\r\nexport const onBeforeUnmount = createHook(LifecycleHooks.BEFORE_UNMOUNT)\r\nexport const onUnmounted = createHook(LifecycleHooks.UNMOUNTED)\r\nexport const onServerPrefetch = createHook(LifecycleHooks.SERVER_PREFETCH)\r\n\r\nexport type DebuggerHook = (e: DebuggerEvent) => void\r\nexport const onRenderTriggered = createHook<DebuggerHook>(\r\n  LifecycleHooks.RENDER_TRIGGERED\r\n)\r\nexport const onRenderTracked = createHook<DebuggerHook>(\r\n  LifecycleHooks.RENDER_TRACKED\r\n)\r\n\r\nexport type ErrorCapturedHook<TError = unknown> = (\r\n  err: TError,\r\n  instance: ComponentPublicInstance | null,\r\n  info: string\r\n) => boolean | void\r\n\r\nexport function onErrorCaptured<TError = Error>(\r\n  hook: ErrorCapturedHook<TError>,\r\n  target: ComponentInternalInstance | null = currentInstance\r\n) {\r\n  injectHook(LifecycleHooks.ERROR_CAPTURED, hook, target)\r\n}\r\n","import {\r\n  ComponentInternalInstance,\r\n  Data,\r\n  SetupContext,\r\n  ComponentInternalOptions,\r\n  Component,\r\n  ConcreteComponent,\r\n  InternalRenderFunction,\r\n  LifecycleHooks\r\n} from './component'\r\nimport {\r\n  isFunction,\r\n  extend,\r\n  isString,\r\n  isObject,\r\n  isArray,\r\n  NOOP,\r\n  isPromise\r\n} from '@vue/shared'\r\nimport { computed, isRef, Ref } from '@vue/reactivity'\r\nimport {\r\n  watch,\r\n  WatchOptions,\r\n  WatchCallback,\r\n  createPathGetter\r\n} from './apiWatch'\r\nimport { provide, inject } from './apiInject'\r\nimport {\r\n  onBeforeMount,\r\n  onMounted,\r\n  onBeforeUpdate,\r\n  onUpdated,\r\n  onErrorCaptured,\r\n  onRenderTracked,\r\n  onBeforeUnmount,\r\n  onUnmounted,\r\n  onActivated,\r\n  onDeactivated,\r\n  onRenderTriggered,\r\n  DebuggerHook,\r\n  ErrorCapturedHook,\r\n  onServerPrefetch\r\n} from './apiLifecycle'\r\nimport {\r\n  reactive,\r\n  ComputedGetter,\r\n  WritableComputedOptions\r\n} from '@vue/reactivity'\r\nimport {\r\n  ComponentObjectPropsOptions,\r\n  ExtractPropTypes,\r\n  ExtractDefaultPropTypes\r\n} from './componentProps'\r\nimport { EmitsOptions, EmitsToProps } from './componentEmits'\r\nimport { Directive } from './directives'\r\nimport {\r\n  CreateComponentPublicInstance,\r\n  ComponentPublicInstance\r\n} from './componentPublicInstance'\r\nimport { warn } from './warning'\r\nimport { VNodeChild } from './vnode'\r\nimport { callWithAsyncErrorHandling } from './errorHandling'\r\nimport { LooseRequired, UnionToIntersection } from './helpers/typeUtils'\r\nimport { deepMergeData } from './compat/data'\r\nimport { DeprecationTypes } from './compat/compatConfig'\r\nimport {\r\n  CompatConfig,\r\n  isCompatEnabled,\r\n  softAssertCompatEnabled\r\n} from './compat/compatConfig'\r\nimport { OptionMergeFunction } from './apiCreateApp'\r\n\r\n/**\r\n * Interface for declaring custom options.\r\n *\r\n * @example\r\n * ```ts\r\n * declare module '@vue/runtime-core' {\r\n *   interface ComponentCustomOptions {\r\n *     beforeRouteUpdate?(\r\n *       to: Route,\r\n *       from: Route,\r\n *       next: () => void\r\n *     ): void\r\n *   }\r\n * }\r\n * ```\r\n */\r\nexport interface ComponentCustomOptions {}\r\n\r\nexport type RenderFunction = () => VNodeChild\r\n\r\ntype ExtractOptionProp<T> = T extends ComponentOptionsBase<\r\n  infer P, // Props\r\n  any, // RawBindings\r\n  any, // D\r\n  any, // C\r\n  any, // M\r\n  any, // Mixin\r\n  any, // Extends\r\n  any // EmitsOptions\r\n>\r\n  ? unknown extends P\r\n    ? {}\r\n    : P\r\n  : {}\r\n\r\nexport interface ComponentOptionsBase<\r\n  Props,\r\n  RawBindings,\r\n  D,\r\n  C extends ComputedOptions,\r\n  M extends MethodOptions,\r\n  Mixin extends ComponentOptionsMixin,\r\n  Extends extends ComponentOptionsMixin,\r\n  E extends EmitsOptions,\r\n  EE extends string = string,\r\n  Defaults = {}\r\n> extends LegacyOptions<Props, D, C, M, Mixin, Extends>,\r\n    ComponentInternalOptions,\r\n    ComponentCustomOptions {\r\n  setup?: (\r\n    this: void,\r\n    props: Readonly<\r\n      LooseRequired<\r\n        Props &\r\n          UnionToIntersection<ExtractOptionProp<Mixin>> &\r\n          UnionToIntersection<ExtractOptionProp<Extends>>\r\n      >\r\n    >,\r\n    ctx: SetupContext<E>\r\n  ) => Promise<RawBindings> | RawBindings | RenderFunction | void\r\n  name?: string\r\n  template?: string | object // can be a direct DOM node\r\n  // Note: we are intentionally using the signature-less `Function` type here\r\n  // since any type with signature will cause the whole inference to fail when\r\n  // the return expression contains reference to `this`.\r\n  // Luckily `render()` doesn't need any arguments nor does it care about return\r\n  // type.\r\n  render?: Function\r\n  components?: Record<string, Component>\r\n  directives?: Record<string, Directive>\r\n  inheritAttrs?: boolean\r\n  emits?: (E | EE[]) & ThisType<void>\r\n  // TODO infer public instance type based on exposed keys\r\n  expose?: string[]\r\n  serverPrefetch?(): Promise<any>\r\n\r\n  // Runtime compiler only -----------------------------------------------------\r\n  compilerOptions?: RuntimeCompilerOptions\r\n\r\n  // Internal ------------------------------------------------------------------\r\n\r\n  /**\r\n   * SSR only. This is produced by compiler-ssr and attached in compiler-sfc\r\n   * not user facing, so the typing is lax and for test only.\r\n   * @internal\r\n   */\r\n  ssrRender?: (\r\n    ctx: any,\r\n    push: (item: any) => void,\r\n    parentInstance: ComponentInternalInstance,\r\n    attrs: Data | undefined,\r\n    // for compiler-optimized bindings\r\n    $props: ComponentInternalInstance['props'],\r\n    $setup: ComponentInternalInstance['setupState'],\r\n    $data: ComponentInternalInstance['data'],\r\n    $options: ComponentInternalInstance['ctx']\r\n  ) => void\r\n\r\n  /**\r\n   * Only generated by compiler-sfc to mark a ssr render function inlined and\r\n   * returned from setup()\r\n   * @internal\r\n   */\r\n  __ssrInlineRender?: boolean\r\n\r\n  /**\r\n   * marker for AsyncComponentWrapper\r\n   * @internal\r\n   */\r\n  __asyncLoader?: () => Promise<ConcreteComponent>\r\n  /**\r\n   * the inner component resolved by the AsyncComponentWrapper\r\n   * @internal\r\n   */\r\n  __asyncResolved?: ConcreteComponent\r\n\r\n  // Type differentiators ------------------------------------------------------\r\n\r\n  // Note these are internal but need to be exposed in d.ts for type inference\r\n  // to work!\r\n\r\n  // type-only differentiator to separate OptionWithoutProps from a constructor\r\n  // type returned by defineComponent() or FunctionalComponent\r\n  call?: (this: unknown, ...args: unknown[]) => never\r\n  // type-only differentiators for built-in Vnode types\r\n  __isFragment?: never\r\n  __isTeleport?: never\r\n  __isSuspense?: never\r\n\r\n  __defaults?: Defaults\r\n}\r\n\r\n/**\r\n * Subset of compiler options that makes sense for the runtime.\r\n */\r\nexport interface RuntimeCompilerOptions {\r\n  isCustomElement?: (tag: string) => boolean\r\n  whitespace?: 'preserve' | 'condense'\r\n  comments?: boolean\r\n  delimiters?: [string, string]\r\n}\r\n\r\nexport type ComponentOptionsWithoutProps<\r\n  Props = {},\r\n  RawBindings = {},\r\n  D = {},\r\n  C extends ComputedOptions = {},\r\n  M extends MethodOptions = {},\r\n  Mixin extends ComponentOptionsMixin = ComponentOptionsMixin,\r\n  Extends extends ComponentOptionsMixin = ComponentOptionsMixin,\r\n  E extends EmitsOptions = EmitsOptions,\r\n  EE extends string = string,\r\n  PE = Props & EmitsToProps<E>\r\n> = ComponentOptionsBase<\r\n  PE,\r\n  RawBindings,\r\n  D,\r\n  C,\r\n  M,\r\n  Mixin,\r\n  Extends,\r\n  E,\r\n  EE,\r\n  {}\r\n> & {\r\n  props?: undefined\r\n} & ThisType<\r\n    CreateComponentPublicInstance<PE, RawBindings, D, C, M, Mixin, Extends, E>\r\n  >\r\n\r\nexport type ComponentOptionsWithArrayProps<\r\n  PropNames extends string = string,\r\n  RawBindings = {},\r\n  D = {},\r\n  C extends ComputedOptions = {},\r\n  M extends MethodOptions = {},\r\n  Mixin extends ComponentOptionsMixin = ComponentOptionsMixin,\r\n  Extends extends ComponentOptionsMixin = ComponentOptionsMixin,\r\n  E extends EmitsOptions = EmitsOptions,\r\n  EE extends string = string,\r\n  Props = Readonly<{ [key in PropNames]?: any }> & EmitsToProps<E>\r\n> = ComponentOptionsBase<\r\n  Props,\r\n  RawBindings,\r\n  D,\r\n  C,\r\n  M,\r\n  Mixin,\r\n  Extends,\r\n  E,\r\n  EE,\r\n  {}\r\n> & {\r\n  props: PropNames[]\r\n} & ThisType<\r\n    CreateComponentPublicInstance<\r\n      Props,\r\n      RawBindings,\r\n      D,\r\n      C,\r\n      M,\r\n      Mixin,\r\n      Extends,\r\n      E\r\n    >\r\n  >\r\n\r\nexport type ComponentOptionsWithObjectProps<\r\n  PropsOptions = ComponentObjectPropsOptions,\r\n  RawBindings = {},\r\n  D = {},\r\n  C extends ComputedOptions = {},\r\n  M extends MethodOptions = {},\r\n  Mixin extends ComponentOptionsMixin = ComponentOptionsMixin,\r\n  Extends extends ComponentOptionsMixin = ComponentOptionsMixin,\r\n  E extends EmitsOptions = EmitsOptions,\r\n  EE extends string = string,\r\n  Props = Readonly<ExtractPropTypes<PropsOptions>> & EmitsToProps<E>,\r\n  Defaults = ExtractDefaultPropTypes<PropsOptions>\r\n> = ComponentOptionsBase<\r\n  Props,\r\n  RawBindings,\r\n  D,\r\n  C,\r\n  M,\r\n  Mixin,\r\n  Extends,\r\n  E,\r\n  EE,\r\n  Defaults\r\n> & {\r\n  props: PropsOptions & ThisType<void>\r\n} & ThisType<\r\n    CreateComponentPublicInstance<\r\n      Props,\r\n      RawBindings,\r\n      D,\r\n      C,\r\n      M,\r\n      Mixin,\r\n      Extends,\r\n      E,\r\n      Props,\r\n      Defaults,\r\n      false\r\n    >\r\n  >\r\n\r\nexport type ComponentOptions<\r\n  Props = {},\r\n  RawBindings = any,\r\n  D = any,\r\n  C extends ComputedOptions = any,\r\n  M extends MethodOptions = any,\r\n  Mixin extends ComponentOptionsMixin = any,\r\n  Extends extends ComponentOptionsMixin = any,\r\n  E extends EmitsOptions = any\r\n> = ComponentOptionsBase<Props, RawBindings, D, C, M, Mixin, Extends, E> &\r\n  ThisType<\r\n    CreateComponentPublicInstance<\r\n      {},\r\n      RawBindings,\r\n      D,\r\n      C,\r\n      M,\r\n      Mixin,\r\n      Extends,\r\n      E,\r\n      Readonly<Props>\r\n    >\r\n  >\r\n\r\nexport type ComponentOptionsMixin = ComponentOptionsBase<\r\n  any,\r\n  any,\r\n  any,\r\n  any,\r\n  any,\r\n  any,\r\n  any,\r\n  any,\r\n  any,\r\n  any\r\n>\r\n\r\nexport type ComputedOptions = Record<\r\n  string,\r\n  ComputedGetter<any> | WritableComputedOptions<any>\r\n>\r\n\r\nexport interface MethodOptions {\r\n  [key: string]: Function\r\n}\r\n\r\nexport type ExtractComputedReturns<T extends any> = {\r\n  [key in keyof T]: T[key] extends { get: (...args: any[]) => infer TReturn }\r\n    ? TReturn\r\n    : T[key] extends (...args: any[]) => infer TReturn\r\n    ? TReturn\r\n    : never\r\n}\r\n\r\nexport type ObjectWatchOptionItem = {\r\n  handler: WatchCallback | string\r\n} & WatchOptions\r\n\r\ntype WatchOptionItem = string | WatchCallback | ObjectWatchOptionItem\r\n\r\ntype ComponentWatchOptionItem = WatchOptionItem | WatchOptionItem[]\r\n\r\ntype ComponentWatchOptions = Record<string, ComponentWatchOptionItem>\r\n\r\ntype ComponentInjectOptions = string[] | ObjectInjectOptions\r\n\r\ntype ObjectInjectOptions = Record<\r\n  string | symbol,\r\n  string | symbol | { from?: string | symbol; default?: unknown }\r\n>\r\n\r\ninterface LegacyOptions<\r\n  Props,\r\n  D,\r\n  C extends ComputedOptions,\r\n  M extends MethodOptions,\r\n  Mixin extends ComponentOptionsMixin,\r\n  Extends extends ComponentOptionsMixin\r\n> {\r\n  compatConfig?: CompatConfig\r\n\r\n  // allow any custom options\r\n  [key: string]: any\r\n\r\n  // state\r\n  // Limitation: we cannot expose RawBindings on the `this` context for data\r\n  // since that leads to some sort of circular inference and breaks ThisType\r\n  // for the entire component.\r\n  data?: (\r\n    this: CreateComponentPublicInstance<\r\n      Props,\r\n      {},\r\n      {},\r\n      {},\r\n      MethodOptions,\r\n      Mixin,\r\n      Extends\r\n    >,\r\n    vm: CreateComponentPublicInstance<\r\n      Props,\r\n      {},\r\n      {},\r\n      {},\r\n      MethodOptions,\r\n      Mixin,\r\n      Extends\r\n    >\r\n  ) => D\r\n  computed?: C\r\n  methods?: M\r\n  watch?: ComponentWatchOptions\r\n  provide?: Data | Function\r\n  inject?: ComponentInjectOptions\r\n\r\n  // assets\r\n  filters?: Record<string, Function>\r\n\r\n  // composition\r\n  mixins?: Mixin[]\r\n  extends?: Extends\r\n\r\n  // lifecycle\r\n  beforeCreate?(): void\r\n  created?(): void\r\n  beforeMount?(): void\r\n  mounted?(): void\r\n  beforeUpdate?(): void\r\n  updated?(): void\r\n  activated?(): void\r\n  deactivated?(): void\r\n  /** @deprecated use `beforeUnmount` instead */\r\n  beforeDestroy?(): void\r\n  beforeUnmount?(): void\r\n  /** @deprecated use `unmounted` instead */\r\n  destroyed?(): void\r\n  unmounted?(): void\r\n  renderTracked?: DebuggerHook\r\n  renderTriggered?: DebuggerHook\r\n  errorCaptured?: ErrorCapturedHook\r\n\r\n  /**\r\n   * runtime compile only\r\n   * @deprecated use `compilerOptions.delimiters` instead.\r\n   */\r\n  delimiters?: [string, string]\r\n\r\n  /**\r\n   * #3468\r\n   *\r\n   * type-only, used to assist Mixin's type inference,\r\n   * typescript will try to simplify the inferred `Mixin` type,\r\n   * with the `__differenciator`, typescript won't be able to combine different mixins,\r\n   * because the `__differenciator` will be different\r\n   */\r\n  __differentiator?: keyof D | keyof C | keyof M\r\n}\r\n\r\ntype MergedHook<T = () => void> = T | T[]\r\n\r\nexport type MergedComponentOptions = ComponentOptions &\r\n  MergedComponentOptionsOverride\r\n\r\nexport type MergedComponentOptionsOverride = {\r\n  beforeCreate?: MergedHook\r\n  created?: MergedHook\r\n  beforeMount?: MergedHook\r\n  mounted?: MergedHook\r\n  beforeUpdate?: MergedHook\r\n  updated?: MergedHook\r\n  activated?: MergedHook\r\n  deactivated?: MergedHook\r\n  /** @deprecated use `beforeUnmount` instead */\r\n  beforeDestroy?: MergedHook\r\n  beforeUnmount?: MergedHook\r\n  /** @deprecated use `unmounted` instead */\r\n  destroyed?: MergedHook\r\n  unmounted?: MergedHook\r\n  renderTracked?: MergedHook<DebuggerHook>\r\n  renderTriggered?: MergedHook<DebuggerHook>\r\n  errorCaptured?: MergedHook<ErrorCapturedHook>\r\n}\r\n\r\nexport type OptionTypesKeys = 'P' | 'B' | 'D' | 'C' | 'M' | 'Defaults'\r\n\r\nexport type OptionTypesType<\r\n  P = {},\r\n  B = {},\r\n  D = {},\r\n  C extends ComputedOptions = {},\r\n  M extends MethodOptions = {},\r\n  Defaults = {}\r\n> = {\r\n  P: P\r\n  B: B\r\n  D: D\r\n  C: C\r\n  M: M\r\n  Defaults: Defaults\r\n}\r\n\r\nconst enum OptionTypes {\r\n  PROPS = 'Props',\r\n  DATA = 'Data',\r\n  COMPUTED = 'Computed',\r\n  METHODS = 'Methods',\r\n  INJECT = 'Inject'\r\n}\r\n\r\nfunction createDuplicateChecker() {\r\n  const cache = Object.create(null)\r\n  return (type: OptionTypes, key: string) => {\r\n    if (cache[key]) {\r\n      warn(`${type} property \"${key}\" is already defined in ${cache[key]}.`)\r\n    } else {\r\n      cache[key] = type\r\n    }\r\n  }\r\n}\r\n\r\nexport let shouldCacheAccess = true\r\n\r\nexport function applyOptions(instance: ComponentInternalInstance) {\r\n  const options = resolveMergedOptions(instance)\r\n  const publicThis = instance.proxy! as any\r\n  const ctx = instance.ctx\r\n\r\n  // do not cache property access on public proxy during state initialization\r\n  shouldCacheAccess = false\r\n\r\n  // call beforeCreate first before accessing other options since\r\n  // the hook may mutate resolved options (#2791)\r\n  if (options.beforeCreate) {\r\n    callHook(options.beforeCreate, instance, LifecycleHooks.BEFORE_CREATE)\r\n  }\r\n\r\n  const {\r\n    // state\r\n    data: dataOptions,\r\n    computed: computedOptions,\r\n    methods,\r\n    watch: watchOptions,\r\n    provide: provideOptions,\r\n    inject: injectOptions,\r\n    // lifecycle\r\n    created,\r\n    beforeMount,\r\n    mounted,\r\n    beforeUpdate,\r\n    updated,\r\n    activated,\r\n    deactivated,\r\n    beforeDestroy,\r\n    beforeUnmount,\r\n    destroyed,\r\n    unmounted,\r\n    render,\r\n    renderTracked,\r\n    renderTriggered,\r\n    errorCaptured,\r\n    serverPrefetch,\r\n    // public API\r\n    expose,\r\n    inheritAttrs,\r\n    // assets\r\n    components,\r\n    directives,\r\n    filters\r\n  } = options\r\n\r\n  const checkDuplicateProperties = __DEV__ ? createDuplicateChecker() : null\r\n\r\n  if (__DEV__) {\r\n    const [propsOptions] = instance.propsOptions\r\n    if (propsOptions) {\r\n      for (const key in propsOptions) {\r\n        checkDuplicateProperties!(OptionTypes.PROPS, key)\r\n      }\r\n    }\r\n  }\r\n\r\n  // options initialization order (to be consistent with Vue 2):\r\n  // - props (already done outside of this function)\r\n  // - inject\r\n  // - methods\r\n  // - data (deferred since it relies on `this` access)\r\n  // - computed\r\n  // - watch (deferred since it relies on `this` access)\r\n\r\n  if (injectOptions) {\r\n    resolveInjections(\r\n      injectOptions,\r\n      ctx,\r\n      checkDuplicateProperties,\r\n      instance.appContext.config.unwrapInjectedRef\r\n    )\r\n  }\r\n\r\n  if (methods) {\r\n    for (const key in methods) {\r\n      const methodHandler = (methods as MethodOptions)[key]\r\n      if (isFunction(methodHandler)) {\r\n        // In dev mode, we use the `createRenderContext` function to define\r\n        // methods to the proxy target, and those are read-only but\r\n        // reconfigurable, so it needs to be redefined here\r\n        if (__DEV__) {\r\n          Object.defineProperty(ctx, key, {\r\n            value: methodHandler.bind(publicThis),\r\n            configurable: true,\r\n            enumerable: true,\r\n            writable: true\r\n          })\r\n        } else {\r\n          ctx[key] = methodHandler.bind(publicThis)\r\n        }\r\n        if (__DEV__) {\r\n          checkDuplicateProperties!(OptionTypes.METHODS, key)\r\n        }\r\n      } else if (__DEV__) {\r\n        warn(\r\n          `Method \"${key}\" has type \"${typeof methodHandler}\" in the component definition. ` +\r\n            `Did you reference the function correctly?`\r\n        )\r\n      }\r\n    }\r\n  }\r\n\r\n  if (dataOptions) {\r\n    if (__DEV__ && !isFunction(dataOptions)) {\r\n      warn(\r\n        `The data option must be a function. ` +\r\n          `Plain object usage is no longer supported.`\r\n      )\r\n    }\r\n    const data = (dataOptions as any).call(publicThis, publicThis)\r\n    if (__DEV__ && isPromise(data)) {\r\n      warn(\r\n        `data() returned a Promise - note data() cannot be async; If you ` +\r\n          `intend to perform data fetching before component renders, use ` +\r\n          `async setup() + <Suspense>.`\r\n      )\r\n    }\r\n    if (!isObject(data)) {\r\n      __DEV__ && warn(`data() should return an object.`)\r\n    } else {\r\n      instance.data = reactive(data)\r\n      if (__DEV__) {\r\n        for (const key in data) {\r\n          checkDuplicateProperties!(OptionTypes.DATA, key)\r\n          // expose data on ctx during dev\r\n          if (key[0] !== '$' && key[0] !== '_') {\r\n            Object.defineProperty(ctx, key, {\r\n              configurable: true,\r\n              enumerable: true,\r\n              get: () => data[key],\r\n              set: NOOP\r\n            })\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  // state initialization complete at this point - start caching access\r\n  shouldCacheAccess = true\r\n\r\n  if (computedOptions) {\r\n    for (const key in computedOptions) {\r\n      const opt = (computedOptions as ComputedOptions)[key]\r\n      const get = isFunction(opt)\r\n        ? opt.bind(publicThis, publicThis)\r\n        : isFunction(opt.get)\r\n        ? opt.get.bind(publicThis, publicThis)\r\n        : NOOP\r\n      if (__DEV__ && get === NOOP) {\r\n        warn(`Computed property \"${key}\" has no getter.`)\r\n      }\r\n      const set =\r\n        !isFunction(opt) && isFunction(opt.set)\r\n          ? opt.set.bind(publicThis)\r\n          : __DEV__\r\n          ? () => {\r\n              warn(\r\n                `Write operation failed: computed property \"${key}\" is readonly.`\r\n              )\r\n            }\r\n          : NOOP\r\n      const c = computed({\r\n        get,\r\n        set\r\n      })\r\n      Object.defineProperty(ctx, key, {\r\n        enumerable: true,\r\n        configurable: true,\r\n        get: () => c.value,\r\n        set: v => (c.value = v)\r\n      })\r\n      if (__DEV__) {\r\n        checkDuplicateProperties!(OptionTypes.COMPUTED, key)\r\n      }\r\n    }\r\n  }\r\n\r\n  if (watchOptions) {\r\n    for (const key in watchOptions) {\r\n      createWatcher(watchOptions[key], ctx, publicThis, key)\r\n    }\r\n  }\r\n\r\n  if (provideOptions) {\r\n    const provides = isFunction(provideOptions)\r\n      ? provideOptions.call(publicThis)\r\n      : provideOptions\r\n    Reflect.ownKeys(provides).forEach(key => {\r\n      provide(key, provides[key])\r\n    })\r\n  }\r\n\r\n  if (created) {\r\n    callHook(created, instance, LifecycleHooks.CREATED)\r\n  }\r\n\r\n  function registerLifecycleHook(\r\n    register: Function,\r\n    hook?: Function | Function[]\r\n  ) {\r\n    if (isArray(hook)) {\r\n      hook.forEach(_hook => register(_hook.bind(publicThis)))\r\n    } else if (hook) {\r\n      register((hook as Function).bind(publicThis))\r\n    }\r\n  }\r\n\r\n  registerLifecycleHook(onBeforeMount, beforeMount)\r\n  registerLifecycleHook(onMounted, mounted)\r\n  registerLifecycleHook(onBeforeUpdate, beforeUpdate)\r\n  registerLifecycleHook(onUpdated, updated)\r\n  registerLifecycleHook(onActivated, activated)\r\n  registerLifecycleHook(onDeactivated, deactivated)\r\n  registerLifecycleHook(onErrorCaptured, errorCaptured)\r\n  registerLifecycleHook(onRenderTracked, renderTracked)\r\n  registerLifecycleHook(onRenderTriggered, renderTriggered)\r\n  registerLifecycleHook(onBeforeUnmount, beforeUnmount)\r\n  registerLifecycleHook(onUnmounted, unmounted)\r\n  registerLifecycleHook(onServerPrefetch, serverPrefetch)\r\n\r\n  if (__COMPAT__) {\r\n    if (\r\n      beforeDestroy &&\r\n      softAssertCompatEnabled(DeprecationTypes.OPTIONS_BEFORE_DESTROY, instance)\r\n    ) {\r\n      registerLifecycleHook(onBeforeUnmount, beforeDestroy)\r\n    }\r\n    if (\r\n      destroyed &&\r\n      softAssertCompatEnabled(DeprecationTypes.OPTIONS_DESTROYED, instance)\r\n    ) {\r\n      registerLifecycleHook(onUnmounted, destroyed)\r\n    }\r\n  }\r\n\r\n  if (isArray(expose)) {\r\n    if (expose.length) {\r\n      const exposed = instance.exposed || (instance.exposed = {})\r\n      expose.forEach(key => {\r\n        Object.defineProperty(exposed, key, {\r\n          get: () => publicThis[key],\r\n          set: val => (publicThis[key] = val)\r\n        })\r\n      })\r\n    } else if (!instance.exposed) {\r\n      instance.exposed = {}\r\n    }\r\n  }\r\n\r\n  // options that are handled when creating the instance but also need to be\r\n  // applied from mixins\r\n  if (render && instance.render === NOOP) {\r\n    instance.render = render as InternalRenderFunction\r\n  }\r\n  if (inheritAttrs != null) {\r\n    instance.inheritAttrs = inheritAttrs\r\n  }\r\n\r\n  // asset options.\r\n  if (components) instance.components = components as any\r\n  if (directives) instance.directives = directives\r\n  if (\r\n    __COMPAT__ &&\r\n    filters &&\r\n    isCompatEnabled(DeprecationTypes.FILTERS, instance)\r\n  ) {\r\n    instance.filters = filters\r\n  }\r\n}\r\n\r\nexport function resolveInjections(\r\n  injectOptions: ComponentInjectOptions,\r\n  ctx: any,\r\n  checkDuplicateProperties = NOOP as any,\r\n  unwrapRef = false\r\n) {\r\n  if (isArray(injectOptions)) {\r\n    injectOptions = normalizeInject(injectOptions)!\r\n  }\r\n  for (const key in injectOptions) {\r\n    const opt = (injectOptions as ObjectInjectOptions)[key]\r\n    let injected: unknown\r\n    if (isObject(opt)) {\r\n      if ('default' in opt) {\r\n        injected = inject(\r\n          opt.from || key,\r\n          opt.default,\r\n          true /* treat default function as factory */\r\n        )\r\n      } else {\r\n        injected = inject(opt.from || key)\r\n      }\r\n    } else {\r\n      injected = inject(opt)\r\n    }\r\n    if (isRef(injected)) {\r\n      // TODO remove the check in 3.3\r\n      if (unwrapRef) {\r\n        Object.defineProperty(ctx, key, {\r\n          enumerable: true,\r\n          configurable: true,\r\n          get: () => (injected as Ref).value,\r\n          set: v => ((injected as Ref).value = v)\r\n        })\r\n      } else {\r\n        if (__DEV__) {\r\n          warn(\r\n            `injected property \"${key}\" is a ref and will be auto-unwrapped ` +\r\n              `and no longer needs \\`.value\\` in the next minor release. ` +\r\n              `To opt-in to the new behavior now, ` +\r\n              `set \\`app.config.unwrapInjectedRef = true\\` (this config is ` +\r\n              `temporary and will not be needed in the future.)`\r\n          )\r\n        }\r\n        ctx[key] = injected\r\n      }\r\n    } else {\r\n      ctx[key] = injected\r\n    }\r\n    if (__DEV__) {\r\n      checkDuplicateProperties!(OptionTypes.INJECT, key)\r\n    }\r\n  }\r\n}\r\n\r\nfunction callHook(\r\n  hook: Function,\r\n  instance: ComponentInternalInstance,\r\n  type: LifecycleHooks\r\n) {\r\n  callWithAsyncErrorHandling(\r\n    isArray(hook)\r\n      ? hook.map(h => h.bind(instance.proxy!))\r\n      : hook.bind(instance.proxy!),\r\n    instance,\r\n    type\r\n  )\r\n}\r\n\r\nexport function createWatcher(\r\n  raw: ComponentWatchOptionItem,\r\n  ctx: Data,\r\n  publicThis: ComponentPublicInstance,\r\n  key: string\r\n) {\r\n  const getter = key.includes('.')\r\n    ? createPathGetter(publicThis, key)\r\n    : () => (publicThis as any)[key]\r\n  if (isString(raw)) {\r\n    const handler = ctx[raw]\r\n    if (isFunction(handler)) {\r\n      watch(getter, handler as WatchCallback)\r\n    } else if (__DEV__) {\r\n      warn(`Invalid watch handler specified by key \"${raw}\"`, handler)\r\n    }\r\n  } else if (isFunction(raw)) {\r\n    watch(getter, raw.bind(publicThis))\r\n  } else if (isObject(raw)) {\r\n    if (isArray(raw)) {\r\n      raw.forEach(r => createWatcher(r, ctx, publicThis, key))\r\n    } else {\r\n      const handler = isFunction(raw.handler)\r\n        ? raw.handler.bind(publicThis)\r\n        : (ctx[raw.handler] as WatchCallback)\r\n      if (isFunction(handler)) {\r\n        watch(getter, handler, raw)\r\n      } else if (__DEV__) {\r\n        warn(`Invalid watch handler specified by key \"${raw.handler}\"`, handler)\r\n      }\r\n    }\r\n  } else if (__DEV__) {\r\n    warn(`Invalid watch option: \"${key}\"`, raw)\r\n  }\r\n}\r\n\r\n/**\r\n * Resolve merged options and cache it on the component.\r\n * This is done only once per-component since the merging does not involve\r\n * instances.\r\n */\r\nexport function resolveMergedOptions(\r\n  instance: ComponentInternalInstance\r\n): MergedComponentOptions {\r\n  const base = instance.type as ComponentOptions\r\n  const { mixins, extends: extendsOptions } = base\r\n  const {\r\n    mixins: globalMixins,\r\n    optionsCache: cache,\r\n    config: { optionMergeStrategies }\r\n  } = instance.appContext\r\n  const cached = cache.get(base)\r\n\r\n  let resolved: MergedComponentOptions\r\n\r\n  if (cached) {\r\n    resolved = cached\r\n  } else if (!globalMixins.length && !mixins && !extendsOptions) {\r\n    if (\r\n      __COMPAT__ &&\r\n      isCompatEnabled(DeprecationTypes.PRIVATE_APIS, instance)\r\n    ) {\r\n      resolved = extend({}, base) as MergedComponentOptions\r\n      resolved.parent = instance.parent && instance.parent.proxy\r\n      resolved.propsData = instance.vnode.props\r\n    } else {\r\n      resolved = base as MergedComponentOptions\r\n    }\r\n  } else {\r\n    resolved = {}\r\n    if (globalMixins.length) {\r\n      globalMixins.forEach(m =>\r\n        mergeOptions(resolved, m, optionMergeStrategies, true)\r\n      )\r\n    }\r\n    mergeOptions(resolved, base, optionMergeStrategies)\r\n  }\r\n\r\n  cache.set(base, resolved)\r\n  return resolved\r\n}\r\n\r\nexport function mergeOptions(\r\n  to: any,\r\n  from: any,\r\n  strats: Record<string, OptionMergeFunction>,\r\n  asMixin = false\r\n) {\r\n  if (__COMPAT__ && isFunction(from)) {\r\n    from = from.options\r\n  }\r\n\r\n  const { mixins, extends: extendsOptions } = from\r\n\r\n  if (extendsOptions) {\r\n    mergeOptions(to, extendsOptions, strats, true)\r\n  }\r\n  if (mixins) {\r\n    mixins.forEach((m: ComponentOptionsMixin) =>\r\n      mergeOptions(to, m, strats, true)\r\n    )\r\n  }\r\n\r\n  for (const key in from) {\r\n    if (asMixin && key === 'expose') {\r\n      __DEV__ &&\r\n        warn(\r\n          `\"expose\" option is ignored when declared in mixins or extends. ` +\r\n            `It should only be declared in the base component itself.`\r\n        )\r\n    } else {\r\n      const strat = internalOptionMergeStrats[key] || (strats && strats[key])\r\n      to[key] = strat ? strat(to[key], from[key]) : from[key]\r\n    }\r\n  }\r\n  return to\r\n}\r\n\r\nexport const internalOptionMergeStrats: Record<string, Function> = {\r\n  data: mergeDataFn,\r\n  props: mergeObjectOptions, // TODO\r\n  emits: mergeObjectOptions, // TODO\r\n  // objects\r\n  methods: mergeObjectOptions,\r\n  computed: mergeObjectOptions,\r\n  // lifecycle\r\n  beforeCreate: mergeAsArray,\r\n  created: mergeAsArray,\r\n  beforeMount: mergeAsArray,\r\n  mounted: mergeAsArray,\r\n  beforeUpdate: mergeAsArray,\r\n  updated: mergeAsArray,\r\n  beforeDestroy: mergeAsArray,\r\n  destroyed: mergeAsArray,\r\n  activated: mergeAsArray,\r\n  deactivated: mergeAsArray,\r\n  errorCaptured: mergeAsArray,\r\n  serverPrefetch: mergeAsArray,\r\n  // assets\r\n  components: mergeObjectOptions,\r\n  directives: mergeObjectOptions,\r\n  // watch\r\n  watch: mergeWatchOptions,\r\n  // provide / inject\r\n  provide: mergeDataFn,\r\n  inject: mergeInject\r\n}\r\n\r\nif (__COMPAT__) {\r\n  internalOptionMergeStrats.filters = mergeObjectOptions\r\n}\r\n\r\nfunction mergeDataFn(to: any, from: any) {\r\n  if (!from) {\r\n    return to\r\n  }\r\n  if (!to) {\r\n    return from\r\n  }\r\n  return function mergedDataFn(this: ComponentPublicInstance) {\r\n    return (\r\n      __COMPAT__ && isCompatEnabled(DeprecationTypes.OPTIONS_DATA_MERGE, null)\r\n        ? deepMergeData\r\n        : extend\r\n    )(\r\n      isFunction(to) ? to.call(this, this) : to,\r\n      isFunction(from) ? from.call(this, this) : from\r\n    )\r\n  }\r\n}\r\n\r\nfunction mergeInject(\r\n  to: ComponentInjectOptions | undefined,\r\n  from: ComponentInjectOptions\r\n) {\r\n  return mergeObjectOptions(normalizeInject(to), normalizeInject(from))\r\n}\r\n\r\nfunction normalizeInject(\r\n  raw: ComponentInjectOptions | undefined\r\n): ObjectInjectOptions | undefined {\r\n  if (isArray(raw)) {\r\n    const res: ObjectInjectOptions = {}\r\n    for (let i = 0; i < raw.length; i++) {\r\n      res[raw[i]] = raw[i]\r\n    }\r\n    return res\r\n  }\r\n  return raw\r\n}\r\n\r\nfunction mergeAsArray<T = Function>(to: T[] | T | undefined, from: T | T[]) {\r\n  return to ? [...new Set([].concat(to as any, from as any))] : from\r\n}\r\n\r\nfunction mergeObjectOptions(to: Object | undefined, from: Object | undefined) {\r\n  return to ? extend(extend(Object.create(null), to), from) : from\r\n}\r\n\r\nfunction mergeWatchOptions(\r\n  to: ComponentWatchOptions | undefined,\r\n  from: ComponentWatchOptions | undefined\r\n) {\r\n  if (!to) return from\r\n  if (!from) return to\r\n  const merged = extend(Object.create(null), to)\r\n  for (const key in from) {\r\n    merged[key] = mergeAsArray(to[key], from[key])\r\n  }\r\n  return merged\r\n}\r\n","import {\r\n  toRaw,\r\n  shallowReactive,\r\n  trigger,\r\n  TriggerOpTypes\r\n} from '@vue/reactivity'\r\nimport {\r\n  EMPTY_OBJ,\r\n  camelize,\r\n  hyphenate,\r\n  capitalize,\r\n  isString,\r\n  isFunction,\r\n  isArray,\r\n  isObject,\r\n  hasOwn,\r\n  toRawType,\r\n  PatchFlags,\r\n  makeMap,\r\n  isReservedProp,\r\n  EMPTY_ARR,\r\n  def,\r\n  extend,\r\n  isOn\r\n} from '@vue/shared'\r\nimport { warn } from './warning'\r\nimport {\r\n  Data,\r\n  ComponentInternalInstance,\r\n  ComponentOptions,\r\n  ConcreteComponent,\r\n  setCurrentInstance,\r\n  unsetCurrentInstance\r\n} from './component'\r\nimport { isEmitListener } from './componentEmits'\r\nimport { InternalObjectKey } from './vnode'\r\nimport { AppContext } from './apiCreateApp'\r\nimport { createPropsDefaultThis } from './compat/props'\r\nimport { isCompatEnabled, softAssertCompatEnabled } from './compat/compatConfig'\r\nimport { DeprecationTypes } from './compat/compatConfig'\r\nimport { shouldSkipAttr } from './compat/attrsFallthrough'\r\n\r\nexport type ComponentPropsOptions<P = Data> =\r\n  | ComponentObjectPropsOptions<P>\r\n  | string[]\r\n\r\nexport type ComponentObjectPropsOptions<P = Data> = {\r\n  [K in keyof P]: Prop<P[K]> | null\r\n}\r\n\r\nexport type Prop<T, D = T> = PropOptions<T, D> | PropType<T>\r\n\r\ntype DefaultFactory<T> = (props: Data) => T | null | undefined\r\n\r\nexport interface PropOptions<T = any, D = T> {\r\n  type?: PropType<T> | true | null\r\n  required?: boolean\r\n  default?: D | DefaultFactory<D> | null | undefined | object\r\n  validator?(value: unknown): boolean\r\n}\r\n\r\nexport type PropType<T> = PropConstructor<T> | PropConstructor<T>[]\r\n\r\ntype PropConstructor<T = any> =\r\n  | { new (...args: any[]): T & {} }\r\n  | { (): T }\r\n  | PropMethod<T>\r\n\r\ntype PropMethod<T, TConstructor = any> = [T] extends [(...args: any) => any] // if is function with args\r\n  ? { new (): TConstructor; (): T; readonly prototype: TConstructor } // Create Function like constructor\r\n  : never\r\n\r\ntype RequiredKeys<T> = {\r\n  [K in keyof T]: T[K] extends\r\n    | { required: true }\r\n    | { default: any }\r\n    // don't mark Boolean props as undefined\r\n    | BooleanConstructor\r\n    | { type: BooleanConstructor }\r\n    ? T[K] extends { default: undefined | (() => undefined) }\r\n      ? never\r\n      : K\r\n    : never\r\n}[keyof T]\r\n\r\ntype OptionalKeys<T> = Exclude<keyof T, RequiredKeys<T>>\r\n\r\ntype DefaultKeys<T> = {\r\n  [K in keyof T]: T[K] extends\r\n    | { default: any }\r\n    // Boolean implicitly defaults to false\r\n    | BooleanConstructor\r\n    | { type: BooleanConstructor }\r\n    ? T[K] extends { type: BooleanConstructor; required: true } // not default if Boolean is marked as required\r\n      ? never\r\n      : K\r\n    : never\r\n}[keyof T]\r\n\r\ntype InferPropType<T> = [T] extends [null]\r\n  ? any // null & true would fail to infer\r\n  : [T] extends [{ type: null | true }]\r\n  ? any // As TS issue https://github.com/Microsoft/TypeScript/issues/14829 // somehow `ObjectConstructor` when inferred from { (): T } becomes `any` // `BooleanConstructor` when inferred from PropConstructor(with PropMethod) becomes `Boolean`\r\n  : [T] extends [ObjectConstructor | { type: ObjectConstructor }]\r\n  ? Record<string, any>\r\n  : [T] extends [BooleanConstructor | { type: BooleanConstructor }]\r\n  ? boolean\r\n  : [T] extends [DateConstructor | { type: DateConstructor }]\r\n  ? Date\r\n  : [T] extends [Prop<infer V, infer D>]\r\n  ? unknown extends V\r\n    ? D\r\n    : V\r\n  : T\r\n\r\nexport type ExtractPropTypes<O> = O extends object\r\n  ? { [K in keyof O]?: unknown } & // This is needed to keep the relation between the option prop and the props, allowing to use ctrl+click to navigate to the prop options. see: #3656\r\n      { [K in RequiredKeys<O>]: InferPropType<O[K]> } &\r\n      { [K in OptionalKeys<O>]?: InferPropType<O[K]> }\r\n  : { [K in string]: any }\r\n\r\nconst enum BooleanFlags {\r\n  shouldCast,\r\n  shouldCastTrue\r\n}\r\n\r\n// extract props which defined with default from prop options\r\nexport type ExtractDefaultPropTypes<O> = O extends object\r\n  ? { [K in DefaultKeys<O>]: InferPropType<O[K]> }\r\n  : {}\r\n\r\ntype NormalizedProp =\r\n  | null\r\n  | (PropOptions & {\r\n      [BooleanFlags.shouldCast]?: boolean\r\n      [BooleanFlags.shouldCastTrue]?: boolean\r\n    })\r\n\r\n// normalized value is a tuple of the actual normalized options\r\n// and an array of prop keys that need value casting (booleans and defaults)\r\nexport type NormalizedProps = Record<string, NormalizedProp>\r\nexport type NormalizedPropsOptions = [NormalizedProps, string[]] | []\r\n\r\nexport function initProps(\r\n  instance: ComponentInternalInstance,\r\n  rawProps: Data | null,\r\n  isStateful: number, // result of bitwise flag comparison\r\n  isSSR = false\r\n) {\r\n  const props: Data = {}\r\n  const attrs: Data = {}\r\n  def(attrs, InternalObjectKey, 1)\r\n\r\n  instance.propsDefaults = Object.create(null)\r\n\r\n  setFullProps(instance, rawProps, props, attrs)\r\n\r\n  // ensure all declared prop keys are present\r\n  for (const key in instance.propsOptions[0]) {\r\n    if (!(key in props)) {\r\n      props[key] = undefined\r\n    }\r\n  }\r\n\r\n  // validation\r\n  if (__DEV__) {\r\n    validateProps(rawProps || {}, props, instance)\r\n  }\r\n\r\n  if (isStateful) {\r\n    // stateful\r\n    instance.props = isSSR ? props : shallowReactive(props)\r\n  } else {\r\n    if (!instance.type.props) {\r\n      // functional w/ optional props, props === attrs\r\n      instance.props = attrs\r\n    } else {\r\n      // functional w/ declared props\r\n      instance.props = props\r\n    }\r\n  }\r\n  instance.attrs = attrs\r\n}\r\n\r\nexport function updateProps(\r\n  instance: ComponentInternalInstance,\r\n  rawProps: Data | null,\r\n  rawPrevProps: Data | null,\r\n  optimized: boolean\r\n) {\r\n  const {\r\n    props,\r\n    attrs,\r\n    vnode: { patchFlag }\r\n  } = instance\r\n  const rawCurrentProps = toRaw(props)\r\n  const [options] = instance.propsOptions\r\n  let hasAttrsChanged = false\r\n\r\n  if (\r\n    // always force full diff in dev\r\n    // - #1942 if hmr is enabled with sfc component\r\n    // - vite#872 non-sfc component used by sfc component\r\n    !(\r\n      __DEV__ &&\r\n      (instance.type.__hmrId ||\r\n        (instance.parent && instance.parent.type.__hmrId))\r\n    ) &&\r\n    (optimized || patchFlag > 0) &&\r\n    !(patchFlag & PatchFlags.FULL_PROPS)\r\n  ) {\r\n    if (patchFlag & PatchFlags.PROPS) {\r\n      // Compiler-generated props & no keys change, just set the updated\r\n      // the props.\r\n      const propsToUpdate = instance.vnode.dynamicProps!\r\n      for (let i = 0; i < propsToUpdate.length; i++) {\r\n        let key = propsToUpdate[i]\r\n        // PROPS flag guarantees rawProps to be non-null\r\n        const value = rawProps![key]\r\n        if (options) {\r\n          // attr / props separation was done on init and will be consistent\r\n          // in this code path, so just check if attrs have it.\r\n          if (hasOwn(attrs, key)) {\r\n            if (value !== attrs[key]) {\r\n              attrs[key] = value\r\n              hasAttrsChanged = true\r\n            }\r\n          } else {\r\n            const camelizedKey = camelize(key)\r\n            props[camelizedKey] = resolvePropValue(\r\n              options,\r\n              rawCurrentProps,\r\n              camelizedKey,\r\n              value,\r\n              instance,\r\n              false /* isAbsent */\r\n            )\r\n          }\r\n        } else {\r\n          if (__COMPAT__) {\r\n            if (isOn(key) && key.endsWith('Native')) {\r\n              key = key.slice(0, -6) // remove Native postfix\r\n            } else if (shouldSkipAttr(key, instance)) {\r\n              continue\r\n            }\r\n          }\r\n          if (value !== attrs[key]) {\r\n            attrs[key] = value\r\n            hasAttrsChanged = true\r\n          }\r\n        }\r\n      }\r\n    }\r\n  } else {\r\n    // full props update.\r\n    if (setFullProps(instance, rawProps, props, attrs)) {\r\n      hasAttrsChanged = true\r\n    }\r\n    // in case of dynamic props, check if we need to delete keys from\r\n    // the props object\r\n    let kebabKey: string\r\n    for (const key in rawCurrentProps) {\r\n      if (\r\n        !rawProps ||\r\n        // for camelCase\r\n        (!hasOwn(rawProps, key) &&\r\n          // it's possible the original props was passed in as kebab-case\r\n          // and converted to camelCase (#955)\r\n          ((kebabKey = hyphenate(key)) === key || !hasOwn(rawProps, kebabKey)))\r\n      ) {\r\n        if (options) {\r\n          if (\r\n            rawPrevProps &&\r\n            // for camelCase\r\n            (rawPrevProps[key] !== undefined ||\r\n              // for kebab-case\r\n              rawPrevProps[kebabKey!] !== undefined)\r\n          ) {\r\n            props[key] = resolvePropValue(\r\n              options,\r\n              rawCurrentProps,\r\n              key,\r\n              undefined,\r\n              instance,\r\n              true /* isAbsent */\r\n            )\r\n          }\r\n        } else {\r\n          delete props[key]\r\n        }\r\n      }\r\n    }\r\n    // in the case of functional component w/o props declaration, props and\r\n    // attrs point to the same object so it should already have been updated.\r\n    if (attrs !== rawCurrentProps) {\r\n      for (const key in attrs) {\r\n        if (!rawProps || !hasOwn(rawProps, key)) {\r\n          delete attrs[key]\r\n          hasAttrsChanged = true\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  // trigger updates for $attrs in case it's used in component slots\r\n  if (hasAttrsChanged) {\r\n    trigger(instance, TriggerOpTypes.SET, '$attrs')\r\n  }\r\n\r\n  if (__DEV__) {\r\n    validateProps(rawProps || {}, props, instance)\r\n  }\r\n}\r\n\r\nfunction setFullProps(\r\n  instance: ComponentInternalInstance,\r\n  rawProps: Data | null,\r\n  props: Data,\r\n  attrs: Data\r\n) {\r\n  const [options, needCastKeys] = instance.propsOptions\r\n  let hasAttrsChanged = false\r\n  let rawCastValues: Data | undefined\r\n  if (rawProps) {\r\n    for (let key in rawProps) {\r\n      // key, ref are reserved and never passed down\r\n      if (isReservedProp(key)) {\r\n        continue\r\n      }\r\n\r\n      if (__COMPAT__) {\r\n        if (key.startsWith('onHook:')) {\r\n          softAssertCompatEnabled(\r\n            DeprecationTypes.INSTANCE_EVENT_HOOKS,\r\n            instance,\r\n            key.slice(2).toLowerCase()\r\n          )\r\n        }\r\n        if (key === 'inline-template') {\r\n          continue\r\n        }\r\n      }\r\n\r\n      const value = rawProps[key]\r\n      // prop option names are camelized during normalization, so to support\r\n      // kebab -> camel conversion here we need to camelize the key.\r\n      let camelKey\r\n      if (options && hasOwn(options, (camelKey = camelize(key)))) {\r\n        if (!needCastKeys || !needCastKeys.includes(camelKey)) {\r\n          props[camelKey] = value\r\n        } else {\r\n          ;(rawCastValues || (rawCastValues = {}))[camelKey] = value\r\n        }\r\n      } else if (!isEmitListener(instance.emitsOptions, key)) {\r\n        // Any non-declared (either as a prop or an emitted event) props are put\r\n        // into a separate `attrs` object for spreading. Make sure to preserve\r\n        // original key casing\r\n        if (__COMPAT__) {\r\n          if (isOn(key) && key.endsWith('Native')) {\r\n            key = key.slice(0, -6) // remove Native postfix\r\n          } else if (shouldSkipAttr(key, instance)) {\r\n            continue\r\n          }\r\n        }\r\n        if (value !== attrs[key]) {\r\n          attrs[key] = value\r\n          hasAttrsChanged = true\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  if (needCastKeys) {\r\n    const rawCurrentProps = toRaw(props)\r\n    const castValues = rawCastValues || EMPTY_OBJ\r\n    for (let i = 0; i < needCastKeys.length; i++) {\r\n      const key = needCastKeys[i]\r\n      props[key] = resolvePropValue(\r\n        options!,\r\n        rawCurrentProps,\r\n        key,\r\n        castValues[key],\r\n        instance,\r\n        !hasOwn(castValues, key)\r\n      )\r\n    }\r\n  }\r\n\r\n  return hasAttrsChanged\r\n}\r\n\r\nfunction resolvePropValue(\r\n  options: NormalizedProps,\r\n  props: Data,\r\n  key: string,\r\n  value: unknown,\r\n  instance: ComponentInternalInstance,\r\n  isAbsent: boolean\r\n) {\r\n  const opt = options[key]\r\n  if (opt != null) {\r\n    const hasDefault = hasOwn(opt, 'default')\r\n    // default values\r\n    if (hasDefault && value === undefined) {\r\n      const defaultValue = opt.default\r\n      if (opt.type !== Function && isFunction(defaultValue)) {\r\n        const { propsDefaults } = instance\r\n        if (key in propsDefaults) {\r\n          value = propsDefaults[key]\r\n        } else {\r\n          setCurrentInstance(instance)\r\n          value = propsDefaults[key] = defaultValue.call(\r\n            __COMPAT__ &&\r\n              isCompatEnabled(DeprecationTypes.PROPS_DEFAULT_THIS, instance)\r\n              ? createPropsDefaultThis(instance, props, key)\r\n              : null,\r\n            props\r\n          )\r\n          unsetCurrentInstance()\r\n        }\r\n      } else {\r\n        value = defaultValue\r\n      }\r\n    }\r\n    // boolean casting\r\n    if (opt[BooleanFlags.shouldCast]) {\r\n      if (isAbsent && !hasDefault) {\r\n        value = false\r\n      } else if (\r\n        opt[BooleanFlags.shouldCastTrue] &&\r\n        (value === '' || value === hyphenate(key))\r\n      ) {\r\n        value = true\r\n      }\r\n    }\r\n  }\r\n  return value\r\n}\r\n\r\nexport function normalizePropsOptions(\r\n  comp: ConcreteComponent,\r\n  appContext: AppContext,\r\n  asMixin = false\r\n): NormalizedPropsOptions {\r\n  const cache = appContext.propsCache\r\n  const cached = cache.get(comp)\r\n  if (cached) {\r\n    return cached\r\n  }\r\n\r\n  const raw = comp.props\r\n  const normalized: NormalizedPropsOptions[0] = {}\r\n  const needCastKeys: NormalizedPropsOptions[1] = []\r\n\r\n  // apply mixin/extends props\r\n  let hasExtends = false\r\n  if (__FEATURE_OPTIONS_API__ && !isFunction(comp)) {\r\n    const extendProps = (raw: ComponentOptions) => {\r\n      if (__COMPAT__ && isFunction(raw)) {\r\n        raw = raw.options\r\n      }\r\n      hasExtends = true\r\n      const [props, keys] = normalizePropsOptions(raw, appContext, true)\r\n      extend(normalized, props)\r\n      if (keys) needCastKeys.push(...keys)\r\n    }\r\n    if (!asMixin && appContext.mixins.length) {\r\n      appContext.mixins.forEach(extendProps)\r\n    }\r\n    if (comp.extends) {\r\n      extendProps(comp.extends)\r\n    }\r\n    if (comp.mixins) {\r\n      comp.mixins.forEach(extendProps)\r\n    }\r\n  }\r\n\r\n  if (!raw && !hasExtends) {\r\n    cache.set(comp, EMPTY_ARR as any)\r\n    return EMPTY_ARR as any\r\n  }\r\n\r\n  if (isArray(raw)) {\r\n    for (let i = 0; i < raw.length; i++) {\r\n      if (__DEV__ && !isString(raw[i])) {\r\n        warn(`props must be strings when using array syntax.`, raw[i])\r\n      }\r\n      const normalizedKey = camelize(raw[i])\r\n      if (validatePropName(normalizedKey)) {\r\n        normalized[normalizedKey] = EMPTY_OBJ\r\n      }\r\n    }\r\n  } else if (raw) {\r\n    if (__DEV__ && !isObject(raw)) {\r\n      warn(`invalid props options`, raw)\r\n    }\r\n    for (const key in raw) {\r\n      const normalizedKey = camelize(key)\r\n      if (validatePropName(normalizedKey)) {\r\n        const opt = raw[key]\r\n        const prop: NormalizedProp = (normalized[normalizedKey] =\r\n          isArray(opt) || isFunction(opt) ? { type: opt } : opt)\r\n        if (prop) {\r\n          const booleanIndex = getTypeIndex(Boolean, prop.type)\r\n          const stringIndex = getTypeIndex(String, prop.type)\r\n          prop[BooleanFlags.shouldCast] = booleanIndex > -1\r\n          prop[BooleanFlags.shouldCastTrue] =\r\n            stringIndex < 0 || booleanIndex < stringIndex\r\n          // if the prop needs boolean casting or default value\r\n          if (booleanIndex > -1 || hasOwn(prop, 'default')) {\r\n            needCastKeys.push(normalizedKey)\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  const res: NormalizedPropsOptions = [normalized, needCastKeys]\r\n  cache.set(comp, res)\r\n  return res\r\n}\r\n\r\nfunction validatePropName(key: string) {\r\n  if (key[0] !== '$') {\r\n    return true\r\n  } else if (__DEV__) {\r\n    warn(`Invalid prop name: \"${key}\" is a reserved property.`)\r\n  }\r\n  return false\r\n}\r\n\r\n// use function string name to check type constructors\r\n// so that it works across vms / iframes.\r\nfunction getType(ctor: Prop<any>): string {\r\n  const match = ctor && ctor.toString().match(/^\\s*function (\\w+)/)\r\n  return match ? match[1] : ctor === null ? 'null' : ''\r\n}\r\n\r\nfunction isSameType(a: Prop<any>, b: Prop<any>): boolean {\r\n  return getType(a) === getType(b)\r\n}\r\n\r\nfunction getTypeIndex(\r\n  type: Prop<any>,\r\n  expectedTypes: PropType<any> | void | null | true\r\n): number {\r\n  if (isArray(expectedTypes)) {\r\n    return expectedTypes.findIndex(t => isSameType(t, type))\r\n  } else if (isFunction(expectedTypes)) {\r\n    return isSameType(expectedTypes, type) ? 0 : -1\r\n  }\r\n  return -1\r\n}\r\n\r\n/**\r\n * dev only\r\n */\r\nfunction validateProps(\r\n  rawProps: Data,\r\n  props: Data,\r\n  instance: ComponentInternalInstance\r\n) {\r\n  const resolvedValues = toRaw(props)\r\n  const options = instance.propsOptions[0]\r\n  for (const key in options) {\r\n    let opt = options[key]\r\n    if (opt == null) continue\r\n    validateProp(\r\n      key,\r\n      resolvedValues[key],\r\n      opt,\r\n      !hasOwn(rawProps, key) && !hasOwn(rawProps, hyphenate(key))\r\n    )\r\n  }\r\n}\r\n\r\n/**\r\n * dev only\r\n */\r\nfunction validateProp(\r\n  name: string,\r\n  value: unknown,\r\n  prop: PropOptions,\r\n  isAbsent: boolean\r\n) {\r\n  const { type, required, validator } = prop\r\n  // required!\r\n  if (required && isAbsent) {\r\n    warn('Missing required prop: \"' + name + '\"')\r\n    return\r\n  }\r\n  // missing but optional\r\n  if (value == null && !prop.required) {\r\n    return\r\n  }\r\n  // type check\r\n  if (type != null && type !== true) {\r\n    let isValid = false\r\n    const types = isArray(type) ? type : [type]\r\n    const expectedTypes = []\r\n    // value is valid as long as one of the specified types match\r\n    for (let i = 0; i < types.length && !isValid; i++) {\r\n      const { valid, expectedType } = assertType(value, types[i])\r\n      expectedTypes.push(expectedType || '')\r\n      isValid = valid\r\n    }\r\n    if (!isValid) {\r\n      warn(getInvalidTypeMessage(name, value, expectedTypes))\r\n      return\r\n    }\r\n  }\r\n  // custom validator\r\n  if (validator && !validator(value)) {\r\n    warn('Invalid prop: custom validator check failed for prop \"' + name + '\".')\r\n  }\r\n}\r\n\r\nconst isSimpleType = /*#__PURE__*/ makeMap(\r\n  'String,Number,Boolean,Function,Symbol,BigInt'\r\n)\r\n\r\ntype AssertionResult = {\r\n  valid: boolean\r\n  expectedType: string\r\n}\r\n\r\n/**\r\n * dev only\r\n */\r\nfunction assertType(value: unknown, type: PropConstructor): AssertionResult {\r\n  let valid\r\n  const expectedType = getType(type)\r\n  if (isSimpleType(expectedType)) {\r\n    const t = typeof value\r\n    valid = t === expectedType.toLowerCase()\r\n    // for primitive wrapper objects\r\n    if (!valid && t === 'object') {\r\n      valid = value instanceof type\r\n    }\r\n  } else if (expectedType === 'Object') {\r\n    valid = isObject(value)\r\n  } else if (expectedType === 'Array') {\r\n    valid = isArray(value)\r\n  } else if (expectedType === 'null') {\r\n    valid = value === null\r\n  } else {\r\n    valid = value instanceof type\r\n  }\r\n  return {\r\n    valid,\r\n    expectedType\r\n  }\r\n}\r\n\r\n/**\r\n * dev only\r\n */\r\nfunction getInvalidTypeMessage(\r\n  name: string,\r\n  value: unknown,\r\n  expectedTypes: string[]\r\n): string {\r\n  let message =\r\n    `Invalid prop: type check failed for prop \"${name}\".` +\r\n    ` Expected ${expectedTypes.map(capitalize).join(' | ')}`\r\n  const expectedType = expectedTypes[0]\r\n  const receivedType = toRawType(value)\r\n  const expectedValue = styleValue(value, expectedType)\r\n  const receivedValue = styleValue(value, receivedType)\r\n  // check if we need to specify expected value\r\n  if (\r\n    expectedTypes.length === 1 &&\r\n    isExplicable(expectedType) &&\r\n    !isBoolean(expectedType, receivedType)\r\n  ) {\r\n    message += ` with value ${expectedValue}`\r\n  }\r\n  message += `, got ${receivedType} `\r\n  // check if we need to specify received value\r\n  if (isExplicable(receivedType)) {\r\n    message += `with value ${receivedValue}.`\r\n  }\r\n  return message\r\n}\r\n\r\n/**\r\n * dev only\r\n */\r\nfunction styleValue(value: unknown, type: string): string {\r\n  if (type === 'String') {\r\n    return `\"${value}\"`\r\n  } else if (type === 'Number') {\r\n    return `${Number(value)}`\r\n  } else {\r\n    return `${value}`\r\n  }\r\n}\r\n\r\n/**\r\n * dev only\r\n */\r\nfunction isExplicable(type: string): boolean {\r\n  const explicitTypes = ['string', 'number', 'boolean']\r\n  return explicitTypes.some(elem => type.toLowerCase() === elem)\r\n}\r\n\r\n/**\r\n * dev only\r\n */\r\nfunction isBoolean(...args: string[]): boolean {\r\n  return args.some(elem => elem.toLowerCase() === 'boolean')\r\n}\r\n","import { ComponentInternalInstance, currentInstance } from './component'\r\nimport {\r\n  VNode,\r\n  VNodeNormalizedChildren,\r\n  normalizeVNode,\r\n  VNodeChild,\r\n  InternalObjectKey\r\n} from './vnode'\r\nimport {\r\n  isArray,\r\n  isFunction,\r\n  EMPTY_OBJ,\r\n  ShapeFlags,\r\n  extend,\r\n  def,\r\n  SlotFlags\r\n} from '@vue/shared'\r\nimport { warn } from './warning'\r\nimport { isKeepAlive } from './components/KeepAlive'\r\nimport { ContextualRenderFn, withCtx } from './componentRenderContext'\r\nimport { isHmrUpdating } from './hmr'\r\nimport { DeprecationTypes, isCompatEnabled } from './compat/compatConfig'\r\nimport { toRaw } from '@vue/reactivity'\r\n\r\nexport type Slot = (...args: any[]) => VNode[]\r\n\r\nexport type InternalSlots = {\r\n  [name: string]: Slot | undefined\r\n}\r\n\r\nexport type Slots = Readonly<InternalSlots>\r\n\r\nexport type RawSlots = {\r\n  [name: string]: unknown\r\n  // manual render fn hint to skip forced children updates\r\n  $stable?: boolean\r\n  /**\r\n   * for tracking slot owner instance. This is attached during\r\n   * normalizeChildren when the component vnode is created.\r\n   * @internal\r\n   */\r\n  _ctx?: ComponentInternalInstance | null\r\n  /**\r\n   * indicates compiler generated slots\r\n   * we use a reserved property instead of a vnode patchFlag because the slots\r\n   * object may be directly passed down to a child component in a manual\r\n   * render function, and the optimization hint need to be on the slot object\r\n   * itself to be preserved.\r\n   * @internal\r\n   */\r\n  _?: SlotFlags\r\n}\r\n\r\nconst isInternalKey = (key: string) => key[0] === '_' || key === '$stable'\r\n\r\nconst normalizeSlotValue = (value: unknown): VNode[] =>\r\n  isArray(value)\r\n    ? value.map(normalizeVNode)\r\n    : [normalizeVNode(value as VNodeChild)]\r\n\r\nconst normalizeSlot = (\r\n  key: string,\r\n  rawSlot: Function,\r\n  ctx: ComponentInternalInstance | null | undefined\r\n): Slot => {\r\n  const normalized = withCtx((props: any) => {\r\n    if (__DEV__ && currentInstance) {\r\n      warn(\r\n        `Slot \"${key}\" invoked outside of the render function: ` +\r\n          `this will not track dependencies used in the slot. ` +\r\n          `Invoke the slot function inside the render function instead.`\r\n      )\r\n    }\r\n    return normalizeSlotValue(rawSlot(props))\r\n  }, ctx) as Slot\r\n  // NOT a compiled slot\r\n  ;(normalized as ContextualRenderFn)._c = false\r\n  return normalized\r\n}\r\n\r\nconst normalizeObjectSlots = (\r\n  rawSlots: RawSlots,\r\n  slots: InternalSlots,\r\n  instance: ComponentInternalInstance\r\n) => {\r\n  const ctx = rawSlots._ctx\r\n  for (const key in rawSlots) {\r\n    if (isInternalKey(key)) continue\r\n    const value = rawSlots[key]\r\n    if (isFunction(value)) {\r\n      slots[key] = normalizeSlot(key, value, ctx)\r\n    } else if (value != null) {\r\n      if (\r\n        __DEV__ &&\r\n        !(\r\n          __COMPAT__ &&\r\n          isCompatEnabled(DeprecationTypes.RENDER_FUNCTION, instance)\r\n        )\r\n      ) {\r\n        warn(\r\n          `Non-function value encountered for slot \"${key}\". ` +\r\n            `Prefer function slots for better performance.`\r\n        )\r\n      }\r\n      const normalized = normalizeSlotValue(value)\r\n      slots[key] = () => normalized\r\n    }\r\n  }\r\n}\r\n\r\nconst normalizeVNodeSlots = (\r\n  instance: ComponentInternalInstance,\r\n  children: VNodeNormalizedChildren\r\n) => {\r\n  if (\r\n    __DEV__ &&\r\n    !isKeepAlive(instance.vnode) &&\r\n    !(__COMPAT__ && isCompatEnabled(DeprecationTypes.RENDER_FUNCTION, instance))\r\n  ) {\r\n    warn(\r\n      `Non-function value encountered for default slot. ` +\r\n        `Prefer function slots for better performance.`\r\n    )\r\n  }\r\n  const normalized = normalizeSlotValue(children)\r\n  instance.slots.default = () => normalized\r\n}\r\n\r\nexport const initSlots = (\r\n  instance: ComponentInternalInstance,\r\n  children: VNodeNormalizedChildren\r\n) => {\r\n  if (instance.vnode.shapeFlag & ShapeFlags.SLOTS_CHILDREN) {\r\n    const type = (children as RawSlots)._\r\n    if (type) {\r\n      // users can get the shallow readonly version of the slots object through `this.$slots`,\r\n      // we should avoid the proxy object polluting the slots of the internal instance\r\n      instance.slots = toRaw(children as InternalSlots)\r\n      // make compiler marker non-enumerable\r\n      def(children as InternalSlots, '_', type)\r\n    } else {\r\n      normalizeObjectSlots(\r\n        children as RawSlots,\r\n        (instance.slots = {}),\r\n        instance\r\n      )\r\n    }\r\n  } else {\r\n    instance.slots = {}\r\n    if (children) {\r\n      normalizeVNodeSlots(instance, children)\r\n    }\r\n  }\r\n  def(instance.slots, InternalObjectKey, 1)\r\n}\r\n\r\nexport const updateSlots = (\r\n  instance: ComponentInternalInstance,\r\n  children: VNodeNormalizedChildren,\r\n  optimized: boolean\r\n) => {\r\n  const { vnode, slots } = instance\r\n  let needDeletionCheck = true\r\n  let deletionComparisonTarget = EMPTY_OBJ\r\n  if (vnode.shapeFlag & ShapeFlags.SLOTS_CHILDREN) {\r\n    const type = (children as RawSlots)._\r\n    if (type) {\r\n      // compiled slots.\r\n      if (__DEV__ && isHmrUpdating) {\r\n        // Parent was HMR updated so slot content may have changed.\r\n        // force update slots and mark instance for hmr as well\r\n        extend(slots, children as Slots)\r\n      } else if (optimized && type === SlotFlags.STABLE) {\r\n        // compiled AND stable.\r\n        // no need to update, and skip stale slots removal.\r\n        needDeletionCheck = false\r\n      } else {\r\n        // compiled but dynamic (v-if/v-for on slots) - update slots, but skip\r\n        // normalization.\r\n        extend(slots, children as Slots)\r\n        // #2893\r\n        // when rendering the optimized slots by manually written render function,\r\n        // we need to delete the `slots._` flag if necessary to make subsequent updates reliable,\r\n        // i.e. let the `renderSlot` create the bailed Fragment\r\n        if (!optimized && type === SlotFlags.STABLE) {\r\n          delete slots._\r\n        }\r\n      }\r\n    } else {\r\n      needDeletionCheck = !(children as RawSlots).$stable\r\n      normalizeObjectSlots(children as RawSlots, slots, instance)\r\n    }\r\n    deletionComparisonTarget = children as RawSlots\r\n  } else if (children) {\r\n    // non slot object children (direct value) passed to a component\r\n    normalizeVNodeSlots(instance, children)\r\n    deletionComparisonTarget = { default: 1 }\r\n  }\r\n\r\n  // delete stale slots\r\n  if (needDeletionCheck) {\r\n    for (const key in slots) {\r\n      if (!isInternalKey(key) && !(key in deletionComparisonTarget)) {\r\n        delete slots[key]\r\n      }\r\n    }\r\n  }\r\n}\r\n","/**\r\nRuntime helper for applying directives to a vnode. Example usage:\r\n\r\nconst comp = resolveComponent('comp')\r\nconst foo = resolveDirective('foo')\r\nconst bar = resolveDirective('bar')\r\n\r\nreturn withDirectives(h(comp), [\r\n  [foo, this.x],\r\n  [bar, this.y]\r\n])\r\n*/\r\n\r\nimport { VNode } from './vnode'\r\nimport { isFunction, EMPTY_OBJ, makeMap } from '@vue/shared'\r\nimport { warn } from './warning'\r\nimport { ComponentInternalInstance, Data } from './component'\r\nimport { currentRenderingInstance } from './componentRenderContext'\r\nimport { callWithAsyncErrorHandling, ErrorCodes } from './errorHandling'\r\nimport { ComponentPublicInstance } from './componentPublicInstance'\r\nimport { mapCompatDirectiveHook } from './compat/customDirective'\r\nimport { pauseTracking, resetTracking } from '@vue/reactivity'\r\nimport { traverse } from './apiWatch'\r\n\r\nexport interface DirectiveBinding<V = any> {\r\n  instance: ComponentPublicInstance | null\r\n  value: V\r\n  oldValue: V | null\r\n  arg?: string\r\n  modifiers: DirectiveModifiers\r\n  dir: ObjectDirective<any, V>\r\n}\r\n\r\nexport type DirectiveHook<T = any, Prev = VNode<any, T> | null, V = any> = (\r\n  el: T,\r\n  binding: DirectiveBinding<V>,\r\n  vnode: VNode<any, T>,\r\n  prevVNode: Prev\r\n) => void\r\n\r\nexport type SSRDirectiveHook = (\r\n  binding: DirectiveBinding,\r\n  vnode: VNode\r\n) => Data | undefined\r\n\r\nexport interface ObjectDirective<T = any, V = any> {\r\n  created?: DirectiveHook<T, null, V>\r\n  beforeMount?: DirectiveHook<T, null, V>\r\n  mounted?: DirectiveHook<T, null, V>\r\n  beforeUpdate?: DirectiveHook<T, VNode<any, T>, V>\r\n  updated?: DirectiveHook<T, VNode<any, T>, V>\r\n  beforeUnmount?: DirectiveHook<T, null, V>\r\n  unmounted?: DirectiveHook<T, null, V>\r\n  getSSRProps?: SSRDirectiveHook\r\n  deep?: boolean\r\n}\r\n\r\nexport type FunctionDirective<T = any, V = any> = DirectiveHook<T, any, V>\r\n\r\nexport type Directive<T = any, V = any> =\r\n  | ObjectDirective<T, V>\r\n  | FunctionDirective<T, V>\r\n\r\nexport type DirectiveModifiers = Record<string, boolean>\r\n\r\nconst isBuiltInDirective = /*#__PURE__*/ makeMap(\r\n  'bind,cloak,else-if,else,for,html,if,model,on,once,pre,show,slot,text'\r\n)\r\n\r\nexport function validateDirectiveName(name: string) {\r\n  if (isBuiltInDirective(name)) {\r\n    warn('Do not use built-in directive ids as custom directive id: ' + name)\r\n  }\r\n}\r\n\r\n// Directive, value, argument, modifiers\r\nexport type DirectiveArguments = Array<\r\n  | [Directive]\r\n  | [Directive, any]\r\n  | [Directive, any, string]\r\n  | [Directive, any, string, DirectiveModifiers]\r\n>\r\n\r\n/**\r\n * Adds directives to a VNode.\r\n */\r\nexport function withDirectives<T extends VNode>(\r\n  vnode: T,\r\n  directives: DirectiveArguments\r\n): T {\r\n  const internalInstance = currentRenderingInstance\r\n  if (internalInstance === null) {\r\n    __DEV__ && warn(`withDirectives can only be used inside render functions.`)\r\n    return vnode\r\n  }\r\n  const instance = internalInstance.proxy\r\n  const bindings: DirectiveBinding[] = vnode.dirs || (vnode.dirs = [])\r\n  for (let i = 0; i < directives.length; i++) {\r\n    let [dir, value, arg, modifiers = EMPTY_OBJ] = directives[i]\r\n    if (isFunction(dir)) {\r\n      dir = {\r\n        mounted: dir,\r\n        updated: dir\r\n      } as ObjectDirective\r\n    }\r\n    if (dir.deep) {\r\n      traverse(value)\r\n    }\r\n    bindings.push({\r\n      dir,\r\n      instance,\r\n      value,\r\n      oldValue: void 0,\r\n      arg,\r\n      modifiers\r\n    })\r\n  }\r\n  return vnode\r\n}\r\n\r\nexport function invokeDirectiveHook(\r\n  vnode: VNode,\r\n  prevVNode: VNode | null,\r\n  instance: ComponentInternalInstance | null,\r\n  name: keyof ObjectDirective\r\n) {\r\n  const bindings = vnode.dirs!\r\n  const oldBindings = prevVNode && prevVNode.dirs!\r\n  for (let i = 0; i < bindings.length; i++) {\r\n    const binding = bindings[i]\r\n    if (oldBindings) {\r\n      binding.oldValue = oldBindings[i].value\r\n    }\r\n    let hook = binding.dir[name] as DirectiveHook | DirectiveHook[] | undefined\r\n    if (__COMPAT__ && !hook) {\r\n      hook = mapCompatDirectiveHook(name, binding.dir, instance)\r\n    }\r\n    if (hook) {\r\n      // disable tracking inside all lifecycle hooks\r\n      // since they can potentially be called inside effects.\r\n      pauseTracking()\r\n      callWithAsyncErrorHandling(hook, instance, ErrorCodes.DIRECTIVE_HOOK, [\r\n        vnode.el,\r\n        binding,\r\n        vnode,\r\n        prevVNode\r\n      ])\r\n      resetTracking()\r\n    }\r\n  }\r\n}\r\n","import {\r\n  ConcreteComponent,\r\n  Data,\r\n  validateComponentName,\r\n  Component,\r\n  ComponentInternalInstance\r\n} from './component'\r\nimport {\r\n  ComponentOptions,\r\n  MergedComponentOptions,\r\n  RuntimeCompilerOptions\r\n} from './componentOptions'\r\nimport { ComponentPublicInstance } from './componentPublicInstance'\r\nimport { Directive, validateDirectiveName } from './directives'\r\nimport { RootRenderFunction } from './renderer'\r\nimport { InjectionKey } from './apiInject'\r\nimport { warn } from './warning'\r\nimport { createVNode, cloneVNode, VNode } from './vnode'\r\nimport { RootHydrateFunction } from './hydration'\r\nimport { devtoolsInitApp, devtoolsUnmountApp } from './devtools'\r\nimport { isFunction, NO, isObject } from '@vue/shared'\r\nimport { version } from '.'\r\nimport { installAppCompatProperties } from './compat/global'\r\nimport { NormalizedPropsOptions } from './componentProps'\r\nimport { ObjectEmitsOptions } from './componentEmits'\r\n\r\nexport interface App<HostElement = any> {\r\n  version: string\r\n  config: AppConfig\r\n  use(plugin: Plugin, ...options: any[]): this\r\n  mixin(mixin: ComponentOptions): this\r\n  component(name: string): Component | undefined\r\n  component(name: string, component: Component): this\r\n  directive(name: string): Directive | undefined\r\n  directive(name: string, directive: Directive): this\r\n  mount(\r\n    rootContainer: HostElement | string,\r\n    isHydrate?: boolean,\r\n    isSVG?: boolean\r\n  ): ComponentPublicInstance\r\n  unmount(): void\r\n  provide<T>(key: InjectionKey<T> | string, value: T): this\r\n\r\n  // internal, but we need to expose these for the server-renderer and devtools\r\n  _uid: number\r\n  _component: ConcreteComponent\r\n  _props: Data | null\r\n  _container: HostElement | null\r\n  _context: AppContext\r\n  _instance: ComponentInternalInstance | null\r\n\r\n  /**\r\n   * v2 compat only\r\n   */\r\n  filter?(name: string): Function | undefined\r\n  filter?(name: string, filter: Function): this\r\n\r\n  /**\r\n   * @internal v3 compat only\r\n   */\r\n  _createRoot?(options: ComponentOptions): ComponentPublicInstance\r\n}\r\n\r\nexport type OptionMergeFunction = (to: unknown, from: unknown) => any\r\n\r\nexport interface AppConfig {\r\n  // @private\r\n  readonly isNativeTag?: (tag: string) => boolean\r\n\r\n  performance: boolean\r\n  optionMergeStrategies: Record<string, OptionMergeFunction>\r\n  globalProperties: Record<string, any>\r\n  errorHandler?: (\r\n    err: unknown,\r\n    instance: ComponentPublicInstance | null,\r\n    info: string\r\n  ) => void\r\n  warnHandler?: (\r\n    msg: string,\r\n    instance: ComponentPublicInstance | null,\r\n    trace: string\r\n  ) => void\r\n\r\n  /**\r\n   * Options to pass to @vue/compiler-dom.\r\n   * Only supported in runtime compiler build.\r\n   */\r\n  compilerOptions: RuntimeCompilerOptions\r\n\r\n  /**\r\n   * @deprecated use config.compilerOptions.isCustomElement\r\n   */\r\n  isCustomElement?: (tag: string) => boolean\r\n\r\n  /**\r\n   * Temporary config for opt-in to unwrap injected refs.\r\n   * TODO deprecate in 3.3\r\n   */\r\n  unwrapInjectedRef?: boolean\r\n}\r\n\r\nexport interface AppContext {\r\n  app: App // for devtools\r\n  config: AppConfig\r\n  mixins: ComponentOptions[]\r\n  components: Record<string, Component>\r\n  directives: Record<string, Directive>\r\n  provides: Record<string | symbol, any>\r\n\r\n  /**\r\n   * Cache for merged/normalized component options\r\n   * Each app instance has its own cache because app-level global mixins and\r\n   * optionMergeStrategies can affect merge behavior.\r\n   * @internal\r\n   */\r\n  optionsCache: WeakMap<ComponentOptions, MergedComponentOptions>\r\n  /**\r\n   * Cache for normalized props options\r\n   * @internal\r\n   */\r\n  propsCache: WeakMap<ConcreteComponent, NormalizedPropsOptions>\r\n  /**\r\n   * Cache for normalized emits options\r\n   * @internal\r\n   */\r\n  emitsCache: WeakMap<ConcreteComponent, ObjectEmitsOptions | null>\r\n  /**\r\n   * HMR only\r\n   * @internal\r\n   */\r\n  reload?: () => void\r\n  /**\r\n   * v2 compat only\r\n   * @internal\r\n   */\r\n  filters?: Record<string, Function>\r\n}\r\n\r\ntype PluginInstallFunction = (app: App, ...options: any[]) => any\r\n\r\nexport type Plugin =\r\n  | (PluginInstallFunction & { install?: PluginInstallFunction })\r\n  | {\r\n      install: PluginInstallFunction\r\n    }\r\n\r\nexport function createAppContext(): AppContext {\r\n  return {\r\n    app: null as any,\r\n    config: {\r\n      isNativeTag: NO,\r\n      performance: false,\r\n      globalProperties: {},\r\n      optionMergeStrategies: {},\r\n      errorHandler: undefined,\r\n      warnHandler: undefined,\r\n      compilerOptions: {}\r\n    },\r\n    mixins: [],\r\n    components: {},\r\n    directives: {},\r\n    provides: Object.create(null),\r\n    optionsCache: new WeakMap(),\r\n    propsCache: new WeakMap(),\r\n    emitsCache: new WeakMap()\r\n  }\r\n}\r\n\r\nexport type CreateAppFunction<HostElement> = (\r\n  rootComponent: Component,\r\n  rootProps?: Data | null\r\n) => App<HostElement>\r\n\r\nlet uid = 0\r\n\r\nexport function createAppAPI<HostElement>(\r\n  render: RootRenderFunction,\r\n  hydrate?: RootHydrateFunction\r\n): CreateAppFunction<HostElement> {\r\n  return function createApp(rootComponent, rootProps = null) {\r\n    if (rootProps != null && !isObject(rootProps)) {\r\n      __DEV__ && warn(`root props passed to app.mount() must be an object.`)\r\n      rootProps = null\r\n    }\r\n\r\n    const context = createAppContext()\r\n    const installedPlugins = new Set()\r\n\r\n    let isMounted = false\r\n\r\n    const app: App = (context.app = {\r\n      _uid: uid++,\r\n      _component: rootComponent as ConcreteComponent,\r\n      _props: rootProps,\r\n      _container: null,\r\n      _context: context,\r\n      _instance: null,\r\n\r\n      version,\r\n\r\n      get config() {\r\n        return context.config\r\n      },\r\n\r\n      set config(v) {\r\n        if (__DEV__) {\r\n          warn(\r\n            `app.config cannot be replaced. Modify individual options instead.`\r\n          )\r\n        }\r\n      },\r\n\r\n      use(plugin: Plugin, ...options: any[]) {\r\n        if (installedPlugins.has(plugin)) {\r\n          __DEV__ && warn(`Plugin has already been applied to target app.`)\r\n        } else if (plugin && isFunction(plugin.install)) {\r\n          installedPlugins.add(plugin)\r\n          plugin.install(app, ...options)\r\n        } else if (isFunction(plugin)) {\r\n          installedPlugins.add(plugin)\r\n          plugin(app, ...options)\r\n        } else if (__DEV__) {\r\n          warn(\r\n            `A plugin must either be a function or an object with an \"install\" ` +\r\n              `function.`\r\n          )\r\n        }\r\n        return app\r\n      },\r\n\r\n      mixin(mixin: ComponentOptions) {\r\n        if (__FEATURE_OPTIONS_API__) {\r\n          if (!context.mixins.includes(mixin)) {\r\n            context.mixins.push(mixin)\r\n          } else if (__DEV__) {\r\n            warn(\r\n              'Mixin has already been applied to target app' +\r\n                (mixin.name ? `: ${mixin.name}` : '')\r\n            )\r\n          }\r\n        } else if (__DEV__) {\r\n          warn('Mixins are only available in builds supporting Options API')\r\n        }\r\n        return app\r\n      },\r\n\r\n      component(name: string, component?: Component): any {\r\n        if (__DEV__) {\r\n          validateComponentName(name, context.config)\r\n        }\r\n        if (!component) {\r\n          return context.components[name]\r\n        }\r\n        if (__DEV__ && context.components[name]) {\r\n          warn(`Component \"${name}\" has already been registered in target app.`)\r\n        }\r\n        context.components[name] = component\r\n        return app\r\n      },\r\n\r\n      directive(name: string, directive?: Directive) {\r\n        if (__DEV__) {\r\n          validateDirectiveName(name)\r\n        }\r\n\r\n        if (!directive) {\r\n          return context.directives[name] as any\r\n        }\r\n        if (__DEV__ && context.directives[name]) {\r\n          warn(`Directive \"${name}\" has already been registered in target app.`)\r\n        }\r\n        context.directives[name] = directive\r\n        return app\r\n      },\r\n\r\n      mount(\r\n        rootContainer: HostElement,\r\n        isHydrate?: boolean,\r\n        isSVG?: boolean\r\n      ): any {\r\n        if (!isMounted) {\r\n          const vnode = createVNode(\r\n            rootComponent as ConcreteComponent,\r\n            rootProps\r\n          )\r\n          // store app context on the root VNode.\r\n          // this will be set on the root instance on initial mount.\r\n          vnode.appContext = context\r\n\r\n          // HMR root reload\r\n          if (__DEV__) {\r\n            context.reload = () => {\r\n              render(cloneVNode(vnode), rootContainer, isSVG)\r\n            }\r\n          }\r\n\r\n          if (isHydrate && hydrate) {\r\n            hydrate(vnode as VNode<Node, Element>, rootContainer as any)\r\n          } else {\r\n            render(vnode, rootContainer, isSVG)\r\n          }\r\n          isMounted = true\r\n          app._container = rootContainer\r\n          // for devtools and telemetry\r\n          ;(rootContainer as any).__vue_app__ = app\r\n\r\n          if (__DEV__ || __FEATURE_PROD_DEVTOOLS__) {\r\n            app._instance = vnode.component\r\n            devtoolsInitApp(app, version)\r\n          }\r\n\r\n          return vnode.component!.proxy\r\n        } else if (__DEV__) {\r\n          warn(\r\n            `App has already been mounted.\\n` +\r\n              `If you want to remount the same app, move your app creation logic ` +\r\n              `into a factory function and create fresh app instances for each ` +\r\n              `mount - e.g. \\`const createMyApp = () => createApp(App)\\``\r\n          )\r\n        }\r\n      },\r\n\r\n      unmount() {\r\n        if (isMounted) {\r\n          render(null, app._container)\r\n          if (__DEV__ || __FEATURE_PROD_DEVTOOLS__) {\r\n            app._instance = null\r\n            devtoolsUnmountApp(app)\r\n          }\r\n          delete app._container.__vue_app__\r\n        } else if (__DEV__) {\r\n          warn(`Cannot unmount an app that is not mounted.`)\r\n        }\r\n      },\r\n\r\n      provide(key, value) {\r\n        if (__DEV__ && (key as string | symbol) in context.provides) {\r\n          warn(\r\n            `App already provides property with key \"${String(key)}\". ` +\r\n              `It will be overwritten with the new value.`\r\n          )\r\n        }\r\n        // TypeScript doesn't allow symbols as index type\r\n        // https://github.com/Microsoft/TypeScript/issues/24587\r\n        context.provides[key as string] = value\r\n\r\n        return app\r\n      }\r\n    })\r\n\r\n    if (__COMPAT__) {\r\n      installAppCompatProperties(app, context, render)\r\n    }\r\n\r\n    return app\r\n  }\r\n}\r\n","import {\r\n  VNode,\r\n  normalizeVNode,\r\n  Text,\r\n  Comment,\r\n  Static,\r\n  Fragment,\r\n  VNodeHook,\r\n  createVNode,\r\n  createTextVNode\r\n} from './vnode'\r\nimport { flushPostFlushCbs } from './scheduler'\r\nimport { ComponentInternalInstance } from './component'\r\nimport { invokeDirectiveHook } from './directives'\r\nimport { warn } from './warning'\r\nimport { PatchFlags, ShapeFlags, isReservedProp, isOn } from '@vue/shared'\r\nimport { RendererInternals, invokeVNodeHook, setRef } from './renderer'\r\nimport {\r\n  SuspenseImpl,\r\n  SuspenseBoundary,\r\n  queueEffectWithSuspense\r\n} from './components/Suspense'\r\nimport { TeleportImpl, TeleportVNode } from './components/Teleport'\r\nimport { isAsyncWrapper } from './apiAsyncComponent'\r\n\r\nexport type RootHydrateFunction = (\r\n  vnode: VNode<Node, Element>,\r\n  container: Element | ShadowRoot\r\n) => void\r\n\r\nconst enum DOMNodeTypes {\r\n  ELEMENT = 1,\r\n  TEXT = 3,\r\n  COMMENT = 8\r\n}\r\n\r\nlet hasMismatch = false\r\n\r\nconst isSVGContainer = (container: Element) =>\r\n  /svg/.test(container.namespaceURI!) && container.tagName !== 'foreignObject'\r\n\r\nconst isComment = (node: Node): node is Comment =>\r\n  node.nodeType === DOMNodeTypes.COMMENT\r\n\r\n// Note: hydration is DOM-specific\r\n// But we have to place it in core due to tight coupling with core - splitting\r\n// it out creates a ton of unnecessary complexity.\r\n// Hydration also depends on some renderer internal logic which needs to be\r\n// passed in via arguments.\r\nexport function createHydrationFunctions(\r\n  rendererInternals: RendererInternals<Node, Element>\r\n) {\r\n  const {\r\n    mt: mountComponent,\r\n    p: patch,\r\n    o: { patchProp, nextSibling, parentNode, remove, insert, createComment }\r\n  } = rendererInternals\r\n\r\n  const hydrate: RootHydrateFunction = (vnode, container) => {\r\n    if (!container.hasChildNodes()) {\r\n      __DEV__ &&\r\n        warn(\r\n          `Attempting to hydrate existing markup but container is empty. ` +\r\n            `Performing full mount instead.`\r\n        )\r\n      patch(null, vnode, container)\r\n      flushPostFlushCbs()\r\n      return\r\n    }\r\n    hasMismatch = false\r\n    hydrateNode(container.firstChild!, vnode, null, null, null)\r\n    flushPostFlushCbs()\r\n    if (hasMismatch && !__TEST__) {\r\n      // this error should show up in production\r\n      console.error(`Hydration completed but contains mismatches.`)\r\n    }\r\n  }\r\n\r\n  const hydrateNode = (\r\n    node: Node,\r\n    vnode: VNode,\r\n    parentComponent: ComponentInternalInstance | null,\r\n    parentSuspense: SuspenseBoundary | null,\r\n    slotScopeIds: string[] | null,\r\n    optimized = false\r\n  ): Node | null => {\r\n    const isFragmentStart = isComment(node) && node.data === '['\r\n    const onMismatch = () =>\r\n      handleMismatch(\r\n        node,\r\n        vnode,\r\n        parentComponent,\r\n        parentSuspense,\r\n        slotScopeIds,\r\n        isFragmentStart\r\n      )\r\n\r\n    const { type, ref, shapeFlag } = vnode\r\n    const domType = node.nodeType\r\n    vnode.el = node\r\n\r\n    let nextNode: Node | null = null\r\n    switch (type) {\r\n      case Text:\r\n        if (domType !== DOMNodeTypes.TEXT) {\r\n          nextNode = onMismatch()\r\n        } else {\r\n          if ((node as Text).data !== vnode.children) {\r\n            hasMismatch = true\r\n            __DEV__ &&\r\n              warn(\r\n                `Hydration text mismatch:` +\r\n                  `\\n- Client: ${JSON.stringify((node as Text).data)}` +\r\n                  `\\n- Server: ${JSON.stringify(vnode.children)}`\r\n              )\r\n            ;(node as Text).data = vnode.children as string\r\n          }\r\n          nextNode = nextSibling(node)\r\n        }\r\n        break\r\n      case Comment:\r\n        if (domType !== DOMNodeTypes.COMMENT || isFragmentStart) {\r\n          nextNode = onMismatch()\r\n        } else {\r\n          nextNode = nextSibling(node)\r\n        }\r\n        break\r\n      case Static:\r\n        if (domType !== DOMNodeTypes.ELEMENT) {\r\n          nextNode = onMismatch()\r\n        } else {\r\n          // determine anchor, adopt content\r\n          nextNode = node\r\n          // if the static vnode has its content stripped during build,\r\n          // adopt it from the server-rendered HTML.\r\n          const needToAdoptContent = !(vnode.children as string).length\r\n          for (let i = 0; i < vnode.staticCount!; i++) {\r\n            if (needToAdoptContent)\r\n              vnode.children += (nextNode as Element).outerHTML\r\n            if (i === vnode.staticCount! - 1) {\r\n              vnode.anchor = nextNode\r\n            }\r\n            nextNode = nextSibling(nextNode)!\r\n          }\r\n          return nextNode\r\n        }\r\n        break\r\n      case Fragment:\r\n        if (!isFragmentStart) {\r\n          nextNode = onMismatch()\r\n        } else {\r\n          nextNode = hydrateFragment(\r\n            node as Comment,\r\n            vnode,\r\n            parentComponent,\r\n            parentSuspense,\r\n            slotScopeIds,\r\n            optimized\r\n          )\r\n        }\r\n        break\r\n      default:\r\n        if (shapeFlag & ShapeFlags.ELEMENT) {\r\n          if (\r\n            domType !== DOMNodeTypes.ELEMENT ||\r\n            (vnode.type as string).toLowerCase() !==\r\n              (node as Element).tagName.toLowerCase()\r\n          ) {\r\n            nextNode = onMismatch()\r\n          } else {\r\n            nextNode = hydrateElement(\r\n              node as Element,\r\n              vnode,\r\n              parentComponent,\r\n              parentSuspense,\r\n              slotScopeIds,\r\n              optimized\r\n            )\r\n          }\r\n        } else if (shapeFlag & ShapeFlags.COMPONENT) {\r\n          // when setting up the render effect, if the initial vnode already\r\n          // has .el set, the component will perform hydration instead of mount\r\n          // on its sub-tree.\r\n          vnode.slotScopeIds = slotScopeIds\r\n          const container = parentNode(node)!\r\n          mountComponent(\r\n            vnode,\r\n            container,\r\n            null,\r\n            parentComponent,\r\n            parentSuspense,\r\n            isSVGContainer(container),\r\n            optimized\r\n          )\r\n\r\n          // component may be async, so in the case of fragments we cannot rely\r\n          // on component's rendered output to determine the end of the fragment\r\n          // instead, we do a lookahead to find the end anchor node.\r\n          nextNode = isFragmentStart\r\n            ? locateClosingAsyncAnchor(node)\r\n            : nextSibling(node)\r\n\r\n          // #3787\r\n          // if component is async, it may get moved / unmounted before its\r\n          // inner component is loaded, so we need to give it a placeholder\r\n          // vnode that matches its adopted DOM.\r\n          if (isAsyncWrapper(vnode)) {\r\n            let subTree\r\n            if (isFragmentStart) {\r\n              subTree = createVNode(Fragment)\r\n              subTree.anchor = nextNode\r\n                ? nextNode.previousSibling\r\n                : container.lastChild\r\n            } else {\r\n              subTree =\r\n                node.nodeType === 3 ? createTextVNode('') : createVNode('div')\r\n            }\r\n            subTree.el = node\r\n            vnode.component!.subTree = subTree\r\n          }\r\n        } else if (shapeFlag & ShapeFlags.TELEPORT) {\r\n          if (domType !== DOMNodeTypes.COMMENT) {\r\n            nextNode = onMismatch()\r\n          } else {\r\n            nextNode = (vnode.type as typeof TeleportImpl).hydrate(\r\n              node,\r\n              vnode as TeleportVNode,\r\n              parentComponent,\r\n              parentSuspense,\r\n              slotScopeIds,\r\n              optimized,\r\n              rendererInternals,\r\n              hydrateChildren\r\n            )\r\n          }\r\n        } else if (__FEATURE_SUSPENSE__ && shapeFlag & ShapeFlags.SUSPENSE) {\r\n          nextNode = (vnode.type as typeof SuspenseImpl).hydrate(\r\n            node,\r\n            vnode,\r\n            parentComponent,\r\n            parentSuspense,\r\n            isSVGContainer(parentNode(node)!),\r\n            slotScopeIds,\r\n            optimized,\r\n            rendererInternals,\r\n            hydrateNode\r\n          )\r\n        } else if (__DEV__) {\r\n          warn('Invalid HostVNode type:', type, `(${typeof type})`)\r\n        }\r\n    }\r\n\r\n    if (ref != null) {\r\n      setRef(ref, null, parentSuspense, vnode)\r\n    }\r\n\r\n    return nextNode\r\n  }\r\n\r\n  const hydrateElement = (\r\n    el: Element,\r\n    vnode: VNode,\r\n    parentComponent: ComponentInternalInstance | null,\r\n    parentSuspense: SuspenseBoundary | null,\r\n    slotScopeIds: string[] | null,\r\n    optimized: boolean\r\n  ) => {\r\n    optimized = optimized || !!vnode.dynamicChildren\r\n    const { type, props, patchFlag, shapeFlag, dirs } = vnode\r\n    // #4006 for form elements with non-string v-model value bindings\r\n    // e.g. <option :value=\"obj\">, <input type=\"checkbox\" :true-value=\"1\">\r\n    const forcePatchValue = (type === 'input' && dirs) || type === 'option'\r\n    // skip props & children if this is hoisted static nodes\r\n    if (forcePatchValue || patchFlag !== PatchFlags.HOISTED) {\r\n      if (dirs) {\r\n        invokeDirectiveHook(vnode, null, parentComponent, 'created')\r\n      }\r\n      // props\r\n      if (props) {\r\n        if (\r\n          forcePatchValue ||\r\n          !optimized ||\r\n          patchFlag & PatchFlags.FULL_PROPS ||\r\n          patchFlag & PatchFlags.HYDRATE_EVENTS\r\n        ) {\r\n          for (const key in props) {\r\n            if (\r\n              (forcePatchValue && key.endsWith('value')) ||\r\n              (isOn(key) && !isReservedProp(key))\r\n            ) {\r\n              patchProp(el, key, null, props[key])\r\n            }\r\n          }\r\n        } else if (props.onClick) {\r\n          // Fast path for click listeners (which is most often) to avoid\r\n          // iterating through props.\r\n          patchProp(el, 'onClick', null, props.onClick)\r\n        }\r\n      }\r\n      // vnode / directive hooks\r\n      let vnodeHooks: VNodeHook | null | undefined\r\n      if ((vnodeHooks = props && props.onVnodeBeforeMount)) {\r\n        invokeVNodeHook(vnodeHooks, parentComponent, vnode)\r\n      }\r\n      if (dirs) {\r\n        invokeDirectiveHook(vnode, null, parentComponent, 'beforeMount')\r\n      }\r\n      if ((vnodeHooks = props && props.onVnodeMounted) || dirs) {\r\n        queueEffectWithSuspense(() => {\r\n          vnodeHooks && invokeVNodeHook(vnodeHooks, parentComponent, vnode)\r\n          dirs && invokeDirectiveHook(vnode, null, parentComponent, 'mounted')\r\n        }, parentSuspense)\r\n      }\r\n      // children\r\n      if (\r\n        shapeFlag & ShapeFlags.ARRAY_CHILDREN &&\r\n        // skip if element has innerHTML / textContent\r\n        !(props && (props.innerHTML || props.textContent))\r\n      ) {\r\n        let next = hydrateChildren(\r\n          el.firstChild,\r\n          vnode,\r\n          el,\r\n          parentComponent,\r\n          parentSuspense,\r\n          slotScopeIds,\r\n          optimized\r\n        )\r\n        let hasWarned = false\r\n        while (next) {\r\n          hasMismatch = true\r\n          if (__DEV__ && !hasWarned) {\r\n            warn(\r\n              `Hydration children mismatch in <${vnode.type as string}>: ` +\r\n                `server rendered element contains more child nodes than client vdom.`\r\n            )\r\n            hasWarned = true\r\n          }\r\n          // The SSRed DOM contains more nodes than it should. Remove them.\r\n          const cur = next\r\n          next = next.nextSibling\r\n          remove(cur)\r\n        }\r\n      } else if (shapeFlag & ShapeFlags.TEXT_CHILDREN) {\r\n        if (el.textContent !== vnode.children) {\r\n          hasMismatch = true\r\n          __DEV__ &&\r\n            warn(\r\n              `Hydration text content mismatch in <${\r\n                vnode.type as string\r\n              }>:\\n` +\r\n                `- Client: ${el.textContent}\\n` +\r\n                `- Server: ${vnode.children as string}`\r\n            )\r\n          el.textContent = vnode.children as string\r\n        }\r\n      }\r\n    }\r\n    return el.nextSibling\r\n  }\r\n\r\n  const hydrateChildren = (\r\n    node: Node | null,\r\n    parentVNode: VNode,\r\n    container: Element,\r\n    parentComponent: ComponentInternalInstance | null,\r\n    parentSuspense: SuspenseBoundary | null,\r\n    slotScopeIds: string[] | null,\r\n    optimized: boolean\r\n  ): Node | null => {\r\n    optimized = optimized || !!parentVNode.dynamicChildren\r\n    const children = parentVNode.children as VNode[]\r\n    const l = children.length\r\n    let hasWarned = false\r\n    for (let i = 0; i < l; i++) {\r\n      const vnode = optimized\r\n        ? children[i]\r\n        : (children[i] = normalizeVNode(children[i]))\r\n      if (node) {\r\n        node = hydrateNode(\r\n          node,\r\n          vnode,\r\n          parentComponent,\r\n          parentSuspense,\r\n          slotScopeIds,\r\n          optimized\r\n        )\r\n      } else if (vnode.type === Text && !vnode.children) {\r\n        continue\r\n      } else {\r\n        hasMismatch = true\r\n        if (__DEV__ && !hasWarned) {\r\n          warn(\r\n            `Hydration children mismatch in <${container.tagName.toLowerCase()}>: ` +\r\n              `server rendered element contains fewer child nodes than client vdom.`\r\n          )\r\n          hasWarned = true\r\n        }\r\n        // the SSRed DOM didn't contain enough nodes. Mount the missing ones.\r\n        patch(\r\n          null,\r\n          vnode,\r\n          container,\r\n          null,\r\n          parentComponent,\r\n          parentSuspense,\r\n          isSVGContainer(container),\r\n          slotScopeIds\r\n        )\r\n      }\r\n    }\r\n    return node\r\n  }\r\n\r\n  const hydrateFragment = (\r\n    node: Comment,\r\n    vnode: VNode,\r\n    parentComponent: ComponentInternalInstance | null,\r\n    parentSuspense: SuspenseBoundary | null,\r\n    slotScopeIds: string[] | null,\r\n    optimized: boolean\r\n  ) => {\r\n    const { slotScopeIds: fragmentSlotScopeIds } = vnode\r\n    if (fragmentSlotScopeIds) {\r\n      slotScopeIds = slotScopeIds\r\n        ? slotScopeIds.concat(fragmentSlotScopeIds)\r\n        : fragmentSlotScopeIds\r\n    }\r\n\r\n    const container = parentNode(node)!\r\n    const next = hydrateChildren(\r\n      nextSibling(node)!,\r\n      vnode,\r\n      container,\r\n      parentComponent,\r\n      parentSuspense,\r\n      slotScopeIds,\r\n      optimized\r\n    )\r\n    if (next && isComment(next) && next.data === ']') {\r\n      return nextSibling((vnode.anchor = next))\r\n    } else {\r\n      // fragment didn't hydrate successfully, since we didn't get a end anchor\r\n      // back. This should have led to node/children mismatch warnings.\r\n      hasMismatch = true\r\n      // since the anchor is missing, we need to create one and insert it\r\n      insert((vnode.anchor = createComment(`]`)), container, next)\r\n      return next\r\n    }\r\n  }\r\n\r\n  const handleMismatch = (\r\n    node: Node,\r\n    vnode: VNode,\r\n    parentComponent: ComponentInternalInstance | null,\r\n    parentSuspense: SuspenseBoundary | null,\r\n    slotScopeIds: string[] | null,\r\n    isFragment: boolean\r\n  ): Node | null => {\r\n    hasMismatch = true\r\n    __DEV__ &&\r\n      warn(\r\n        `Hydration node mismatch:\\n- Client vnode:`,\r\n        vnode.type,\r\n        `\\n- Server rendered DOM:`,\r\n        node,\r\n        node.nodeType === DOMNodeTypes.TEXT\r\n          ? `(text)`\r\n          : isComment(node) && node.data === '['\r\n          ? `(start of fragment)`\r\n          : ``\r\n      )\r\n    vnode.el = null\r\n\r\n    if (isFragment) {\r\n      // remove excessive fragment nodes\r\n      const end = locateClosingAsyncAnchor(node)\r\n      while (true) {\r\n        const next = nextSibling(node)\r\n        if (next && next !== end) {\r\n          remove(next)\r\n        } else {\r\n          break\r\n        }\r\n      }\r\n    }\r\n\r\n    const next = nextSibling(node)\r\n    const container = parentNode(node)!\r\n    remove(node)\r\n\r\n    patch(\r\n      null,\r\n      vnode,\r\n      container,\r\n      next,\r\n      parentComponent,\r\n      parentSuspense,\r\n      isSVGContainer(container),\r\n      slotScopeIds\r\n    )\r\n    return next\r\n  }\r\n\r\n  const locateClosingAsyncAnchor = (node: Node | null): Node | null => {\r\n    let match = 0\r\n    while (node) {\r\n      node = nextSibling(node)\r\n      if (node && isComment(node)) {\r\n        if (node.data === '[') match++\r\n        if (node.data === ']') {\r\n          if (match === 0) {\r\n            return nextSibling(node)\r\n          } else {\r\n            match--\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return node\r\n  }\r\n\r\n  return [hydrate, hydrateNode] as const\r\n}\r\n","import {\r\n  Text,\r\n  Fragment,\r\n  Comment,\r\n  cloneIfMounted,\r\n  normalizeVNode,\r\n  VNode,\r\n  VNodeArrayChildren,\r\n  createVNode,\r\n  isSameVNodeType,\r\n  Static,\r\n  VNodeNormalizedRef,\r\n  VNodeHook,\r\n  VNodeNormalizedRefAtom,\r\n  VNodeProps\r\n} from './vnode'\r\nimport {\r\n  ComponentInternalInstance,\r\n  ComponentOptions,\r\n  createComponentInstance,\r\n  Data,\r\n  getExposeProxy,\r\n  setupComponent\r\n} from './component'\r\nimport {\r\n  filterSingleRoot,\r\n  renderComponentRoot,\r\n  shouldUpdateComponent,\r\n  updateHOCHostEl\r\n} from './componentRenderUtils'\r\nimport {\r\n  isString,\r\n  EMPTY_OBJ,\r\n  EMPTY_ARR,\r\n  isReservedProp,\r\n  isFunction,\r\n  PatchFlags,\r\n  ShapeFlags,\r\n  NOOP,\r\n  hasOwn,\r\n  invokeArrayFns,\r\n  isArray,\r\n  getGlobalThis\r\n} from '@vue/shared'\r\nimport {\r\n  queueJob,\r\n  queuePostFlushCb,\r\n  flushPostFlushCbs,\r\n  invalidateJob,\r\n  flushPreFlushCbs,\r\n  SchedulerJob\r\n} from './scheduler'\r\nimport {\r\n  isRef,\r\n  pauseTracking,\r\n  resetTracking,\r\n  ReactiveEffect\r\n} from '@vue/reactivity'\r\nimport { updateProps } from './componentProps'\r\nimport { updateSlots } from './componentSlots'\r\nimport { pushWarningContext, popWarningContext, warn } from './warning'\r\nimport { createAppAPI, CreateAppFunction } from './apiCreateApp'\r\nimport {\r\n  SuspenseBoundary,\r\n  queueEffectWithSuspense,\r\n  SuspenseImpl\r\n} from './components/Suspense'\r\nimport { TeleportImpl, TeleportVNode } from './components/Teleport'\r\nimport { isKeepAlive, KeepAliveContext } from './components/KeepAlive'\r\nimport { registerHMR, unregisterHMR, isHmrUpdating } from './hmr'\r\nimport {\r\n  ErrorCodes,\r\n  callWithErrorHandling,\r\n  callWithAsyncErrorHandling\r\n} from './errorHandling'\r\nimport { createHydrationFunctions, RootHydrateFunction } from './hydration'\r\nimport { invokeDirectiveHook } from './directives'\r\nimport { startMeasure, endMeasure } from './profiling'\r\nimport {\r\n  devtoolsComponentAdded,\r\n  devtoolsComponentRemoved,\r\n  devtoolsComponentUpdated,\r\n  setDevtoolsHook\r\n} from './devtools'\r\nimport { initFeatureFlags } from './featureFlags'\r\nimport { isAsyncWrapper } from './apiAsyncComponent'\r\nimport { isCompatEnabled } from './compat/compatConfig'\r\nimport { DeprecationTypes } from './compat/compatConfig'\r\nimport { registerLegacyRef } from './compat/ref'\r\n\r\nexport interface Renderer<HostElement = RendererElement> {\r\n  render: RootRenderFunction<HostElement>\r\n  createApp: CreateAppFunction<HostElement>\r\n}\r\n\r\nexport interface HydrationRenderer extends Renderer<Element | ShadowRoot> {\r\n  hydrate: RootHydrateFunction\r\n}\r\n\r\nexport type RootRenderFunction<HostElement = RendererElement> = (\r\n  vnode: VNode | null,\r\n  container: HostElement,\r\n  isSVG?: boolean\r\n) => void\r\n\r\nexport interface RendererOptions<\r\n  HostNode = RendererNode,\r\n  HostElement = RendererElement\r\n> {\r\n  patchProp(\r\n    el: HostElement,\r\n    key: string,\r\n    prevValue: any,\r\n    nextValue: any,\r\n    isSVG?: boolean,\r\n    prevChildren?: VNode<HostNode, HostElement>[],\r\n    parentComponent?: ComponentInternalInstance | null,\r\n    parentSuspense?: SuspenseBoundary | null,\r\n    unmountChildren?: UnmountChildrenFn\r\n  ): void\r\n  insert(el: HostNode, parent: HostElement, anchor?: HostNode | null): void\r\n  remove(el: HostNode): void\r\n  createElement(\r\n    type: string,\r\n    isSVG?: boolean,\r\n    isCustomizedBuiltIn?: string,\r\n    vnodeProps?: (VNodeProps & { [key: string]: any }) | null\r\n  ): HostElement\r\n  createText(text: string): HostNode\r\n  createComment(text: string): HostNode\r\n  setText(node: HostNode, text: string): void\r\n  setElementText(node: HostElement, text: string): void\r\n  parentNode(node: HostNode): HostElement | null\r\n  nextSibling(node: HostNode): HostNode | null\r\n  querySelector?(selector: string): HostElement | null\r\n  setScopeId?(el: HostElement, id: string): void\r\n  cloneNode?(node: HostNode): HostNode\r\n  insertStaticContent?(\r\n    content: string,\r\n    parent: HostElement,\r\n    anchor: HostNode | null,\r\n    isSVG: boolean\r\n  ): [HostNode, HostNode]\r\n}\r\n\r\n// Renderer Node can technically be any object in the context of core renderer\r\n// logic - they are never directly operated on and always passed to the node op\r\n// functions provided via options, so the internal constraint is really just\r\n// a generic object.\r\nexport interface RendererNode {\r\n  [key: string]: any\r\n}\r\n\r\nexport interface RendererElement extends RendererNode {}\r\n\r\n// An object exposing the internals of a renderer, passed to tree-shakeable\r\n// features so that they can be decoupled from this file. Keys are shortened\r\n// to optimize bundle size.\r\nexport interface RendererInternals<\r\n  HostNode = RendererNode,\r\n  HostElement = RendererElement\r\n> {\r\n  p: PatchFn\r\n  um: UnmountFn\r\n  r: RemoveFn\r\n  m: MoveFn\r\n  mt: MountComponentFn\r\n  mc: MountChildrenFn\r\n  pc: PatchChildrenFn\r\n  pbc: PatchBlockChildrenFn\r\n  n: NextFn\r\n  o: RendererOptions<HostNode, HostElement>\r\n}\r\n\r\n// These functions are created inside a closure and therefore their types cannot\r\n// be directly exported. In order to avoid maintaining function signatures in\r\n// two places, we declare them once here and use them inside the closure.\r\ntype PatchFn = (\r\n  n1: VNode | null, // null means this is a mount\r\n  n2: VNode,\r\n  container: RendererElement,\r\n  anchor?: RendererNode | null,\r\n  parentComponent?: ComponentInternalInstance | null,\r\n  parentSuspense?: SuspenseBoundary | null,\r\n  isSVG?: boolean,\r\n  slotScopeIds?: string[] | null,\r\n  optimized?: boolean\r\n) => void\r\n\r\ntype MountChildrenFn = (\r\n  children: VNodeArrayChildren,\r\n  container: RendererElement,\r\n  anchor: RendererNode | null,\r\n  parentComponent: ComponentInternalInstance | null,\r\n  parentSuspense: SuspenseBoundary | null,\r\n  isSVG: boolean,\r\n  slotScopeIds: string[] | null,\r\n  optimized: boolean,\r\n  start?: number\r\n) => void\r\n\r\ntype PatchChildrenFn = (\r\n  n1: VNode | null,\r\n  n2: VNode,\r\n  container: RendererElement,\r\n  anchor: RendererNode | null,\r\n  parentComponent: ComponentInternalInstance | null,\r\n  parentSuspense: SuspenseBoundary | null,\r\n  isSVG: boolean,\r\n  slotScopeIds: string[] | null,\r\n  optimized: boolean\r\n) => void\r\n\r\ntype PatchBlockChildrenFn = (\r\n  oldChildren: VNode[],\r\n  newChildren: VNode[],\r\n  fallbackContainer: RendererElement,\r\n  parentComponent: ComponentInternalInstance | null,\r\n  parentSuspense: SuspenseBoundary | null,\r\n  isSVG: boolean,\r\n  slotScopeIds: string[] | null\r\n) => void\r\n\r\ntype MoveFn = (\r\n  vnode: VNode,\r\n  container: RendererElement,\r\n  anchor: RendererNode | null,\r\n  type: MoveType,\r\n  parentSuspense?: SuspenseBoundary | null\r\n) => void\r\n\r\ntype NextFn = (vnode: VNode) => RendererNode | null\r\n\r\ntype UnmountFn = (\r\n  vnode: VNode,\r\n  parentComponent: ComponentInternalInstance | null,\r\n  parentSuspense: SuspenseBoundary | null,\r\n  doRemove?: boolean,\r\n  optimized?: boolean\r\n) => void\r\n\r\ntype RemoveFn = (vnode: VNode) => void\r\n\r\ntype UnmountChildrenFn = (\r\n  children: VNode[],\r\n  parentComponent: ComponentInternalInstance | null,\r\n  parentSuspense: SuspenseBoundary | null,\r\n  doRemove?: boolean,\r\n  optimized?: boolean,\r\n  start?: number\r\n) => void\r\n\r\nexport type MountComponentFn = (\r\n  initialVNode: VNode,\r\n  container: RendererElement,\r\n  anchor: RendererNode | null,\r\n  parentComponent: ComponentInternalInstance | null,\r\n  parentSuspense: SuspenseBoundary | null,\r\n  isSVG: boolean,\r\n  optimized: boolean\r\n) => void\r\n\r\ntype ProcessTextOrCommentFn = (\r\n  n1: VNode | null,\r\n  n2: VNode,\r\n  container: RendererElement,\r\n  anchor: RendererNode | null\r\n) => void\r\n\r\nexport type SetupRenderEffectFn = (\r\n  instance: ComponentInternalInstance,\r\n  initialVNode: VNode,\r\n  container: RendererElement,\r\n  anchor: RendererNode | null,\r\n  parentSuspense: SuspenseBoundary | null,\r\n  isSVG: boolean,\r\n  optimized: boolean\r\n) => void\r\n\r\nexport const enum MoveType {\r\n  ENTER,\r\n  LEAVE,\r\n  REORDER\r\n}\r\n\r\nexport const queuePostRenderEffect = __FEATURE_SUSPENSE__\r\n  ? queueEffectWithSuspense\r\n  : queuePostFlushCb\r\n\r\n/**\r\n * The createRenderer function accepts two generic arguments:\r\n * HostNode and HostElement, corresponding to Node and Element types in the\r\n * host environment. For example, for runtime-dom, HostNode would be the DOM\r\n * `Node` interface and HostElement would be the DOM `Element` interface.\r\n *\r\n * Custom renderers can pass in the platform specific types like this:\r\n *\r\n * ``` js\r\n * const { render, createApp } = createRenderer<Node, Element>({\r\n *   patchProp,\r\n *   ...nodeOps\r\n * })\r\n * ```\r\n */\r\nexport function createRenderer<\r\n  HostNode = RendererNode,\r\n  HostElement = RendererElement\r\n>(options: RendererOptions<HostNode, HostElement>) {\r\n  return baseCreateRenderer<HostNode, HostElement>(options)\r\n}\r\n\r\n// Separate API for creating hydration-enabled renderer.\r\n// Hydration logic is only used when calling this function, making it\r\n// tree-shakable.\r\nexport function createHydrationRenderer(\r\n  options: RendererOptions<Node, Element>\r\n) {\r\n  return baseCreateRenderer(options, createHydrationFunctions)\r\n}\r\n\r\n// overload 1: no hydration\r\nfunction baseCreateRenderer<\r\n  HostNode = RendererNode,\r\n  HostElement = RendererElement\r\n>(options: RendererOptions<HostNode, HostElement>): Renderer<HostElement>\r\n\r\n// overload 2: with hydration\r\nfunction baseCreateRenderer(\r\n  options: RendererOptions<Node, Element>,\r\n  createHydrationFns: typeof createHydrationFunctions\r\n): HydrationRenderer\r\n\r\n// implementation\r\nfunction baseCreateRenderer(\r\n  options: RendererOptions,\r\n  createHydrationFns?: typeof createHydrationFunctions\r\n): any {\r\n  // compile-time feature flags check\r\n  if (__ESM_BUNDLER__ && !__TEST__) {\r\n    initFeatureFlags()\r\n  }\r\n\r\n  if (__DEV__ || __FEATURE_PROD_DEVTOOLS__) {\r\n    const target = getGlobalThis()\r\n    target.__VUE__ = true\r\n    setDevtoolsHook(target.__VUE_DEVTOOLS_GLOBAL_HOOK__)\r\n  }\r\n\r\n  const {\r\n    insert: hostInsert,\r\n    remove: hostRemove,\r\n    patchProp: hostPatchProp,\r\n    createElement: hostCreateElement,\r\n    createText: hostCreateText,\r\n    createComment: hostCreateComment,\r\n    setText: hostSetText,\r\n    setElementText: hostSetElementText,\r\n    parentNode: hostParentNode,\r\n    nextSibling: hostNextSibling,\r\n    setScopeId: hostSetScopeId = NOOP,\r\n    cloneNode: hostCloneNode,\r\n    insertStaticContent: hostInsertStaticContent\r\n  } = options\r\n\r\n  // Note: functions inside this closure should use `const xxx = () => {}`\r\n  // style in order to prevent being inlined by minifiers.\r\n  const patch: PatchFn = (\r\n    n1,\r\n    n2,\r\n    container,\r\n    anchor = null,\r\n    parentComponent = null,\r\n    parentSuspense = null,\r\n    isSVG = false,\r\n    slotScopeIds = null,\r\n    optimized = __DEV__ && isHmrUpdating ? false : !!n2.dynamicChildren\r\n  ) => {\r\n    if (n1 === n2) {\r\n      return\r\n    }\r\n\r\n    // patching & not same type, unmount old tree\r\n    if (n1 && !isSameVNodeType(n1, n2)) {\r\n      anchor = getNextHostNode(n1)\r\n      unmount(n1, parentComponent, parentSuspense, true)\r\n      n1 = null\r\n    }\r\n\r\n    if (n2.patchFlag === PatchFlags.BAIL) {\r\n      optimized = false\r\n      n2.dynamicChildren = null\r\n    }\r\n\r\n    const { type, ref, shapeFlag } = n2\r\n    switch (type) {\r\n      case Text:\r\n        processText(n1, n2, container, anchor)\r\n        break\r\n      case Comment:\r\n        processCommentNode(n1, n2, container, anchor)\r\n        break\r\n      case Static:\r\n        if (n1 == null) {\r\n          mountStaticNode(n2, container, anchor, isSVG)\r\n        } else if (__DEV__) {\r\n          patchStaticNode(n1, n2, container, isSVG)\r\n        }\r\n        break\r\n      case Fragment:\r\n        processFragment(\r\n          n1,\r\n          n2,\r\n          container,\r\n          anchor,\r\n          parentComponent,\r\n          parentSuspense,\r\n          isSVG,\r\n          slotScopeIds,\r\n          optimized\r\n        )\r\n        break\r\n      default:\r\n        if (shapeFlag & ShapeFlags.ELEMENT) {\r\n          processElement(\r\n            n1,\r\n            n2,\r\n            container,\r\n            anchor,\r\n            parentComponent,\r\n            parentSuspense,\r\n            isSVG,\r\n            slotScopeIds,\r\n            optimized\r\n          )\r\n        } else if (shapeFlag & ShapeFlags.COMPONENT) {\r\n          processComponent(\r\n            n1,\r\n            n2,\r\n            container,\r\n            anchor,\r\n            parentComponent,\r\n            parentSuspense,\r\n            isSVG,\r\n            slotScopeIds,\r\n            optimized\r\n          )\r\n        } else if (shapeFlag & ShapeFlags.TELEPORT) {\r\n          ;(type as typeof TeleportImpl).process(\r\n            n1 as TeleportVNode,\r\n            n2 as TeleportVNode,\r\n            container,\r\n            anchor,\r\n            parentComponent,\r\n            parentSuspense,\r\n            isSVG,\r\n            slotScopeIds,\r\n            optimized,\r\n            internals\r\n          )\r\n        } else if (__FEATURE_SUSPENSE__ && shapeFlag & ShapeFlags.SUSPENSE) {\r\n          ;(type as typeof SuspenseImpl).process(\r\n            n1,\r\n            n2,\r\n            container,\r\n            anchor,\r\n            parentComponent,\r\n            parentSuspense,\r\n            isSVG,\r\n            slotScopeIds,\r\n            optimized,\r\n            internals\r\n          )\r\n        } else if (__DEV__) {\r\n          warn('Invalid VNode type:', type, `(${typeof type})`)\r\n        }\r\n    }\r\n\r\n    // set ref\r\n    if (ref != null && parentComponent) {\r\n      setRef(ref, n1 && n1.ref, parentSuspense, n2 || n1, !n2)\r\n    }\r\n  }\r\n\r\n  const processText: ProcessTextOrCommentFn = (n1, n2, container, anchor) => {\r\n    if (n1 == null) {\r\n      hostInsert(\r\n        (n2.el = hostCreateText(n2.children as string)),\r\n        container,\r\n        anchor\r\n      )\r\n    } else {\r\n      const el = (n2.el = n1.el!)\r\n      if (n2.children !== n1.children) {\r\n        hostSetText(el, n2.children as string)\r\n      }\r\n    }\r\n  }\r\n\r\n  const processCommentNode: ProcessTextOrCommentFn = (\r\n    n1,\r\n    n2,\r\n    container,\r\n    anchor\r\n  ) => {\r\n    if (n1 == null) {\r\n      hostInsert(\r\n        (n2.el = hostCreateComment((n2.children as string) || '')),\r\n        container,\r\n        anchor\r\n      )\r\n    } else {\r\n      // there's no support for dynamic comments\r\n      n2.el = n1.el\r\n    }\r\n  }\r\n\r\n  const mountStaticNode = (\r\n    n2: VNode,\r\n    container: RendererElement,\r\n    anchor: RendererNode | null,\r\n    isSVG: boolean\r\n  ) => {\r\n    // static nodes are only present when used with compiler-dom/runtime-dom\r\n    // which guarantees presence of hostInsertStaticContent.\r\n    ;[n2.el, n2.anchor] = hostInsertStaticContent!(\r\n      n2.children as string,\r\n      container,\r\n      anchor,\r\n      isSVG\r\n    )\r\n  }\r\n\r\n  /**\r\n   * Dev / HMR only\r\n   */\r\n  const patchStaticNode = (\r\n    n1: VNode,\r\n    n2: VNode,\r\n    container: RendererElement,\r\n    isSVG: boolean\r\n  ) => {\r\n    // static nodes are only patched during dev for HMR\r\n    if (n2.children !== n1.children) {\r\n      const anchor = hostNextSibling(n1.anchor!)\r\n      // remove existing\r\n      removeStaticNode(n1)\r\n      // insert new\r\n      ;[n2.el, n2.anchor] = hostInsertStaticContent!(\r\n        n2.children as string,\r\n        container,\r\n        anchor,\r\n        isSVG\r\n      )\r\n    } else {\r\n      n2.el = n1.el\r\n      n2.anchor = n1.anchor\r\n    }\r\n  }\r\n\r\n  const moveStaticNode = (\r\n    { el, anchor }: VNode,\r\n    container: RendererElement,\r\n    nextSibling: RendererNode | null\r\n  ) => {\r\n    let next\r\n    while (el && el !== anchor) {\r\n      next = hostNextSibling(el)\r\n      hostInsert(el, container, nextSibling)\r\n      el = next\r\n    }\r\n    hostInsert(anchor!, container, nextSibling)\r\n  }\r\n\r\n  const removeStaticNode = ({ el, anchor }: VNode) => {\r\n    let next\r\n    while (el && el !== anchor) {\r\n      next = hostNextSibling(el)\r\n      hostRemove(el)\r\n      el = next\r\n    }\r\n    hostRemove(anchor!)\r\n  }\r\n\r\n  const processElement = (\r\n    n1: VNode | null,\r\n    n2: VNode,\r\n    container: RendererElement,\r\n    anchor: RendererNode | null,\r\n    parentComponent: ComponentInternalInstance | null,\r\n    parentSuspense: SuspenseBoundary | null,\r\n    isSVG: boolean,\r\n    slotScopeIds: string[] | null,\r\n    optimized: boolean\r\n  ) => {\r\n    isSVG = isSVG || (n2.type as string) === 'svg'\r\n    if (n1 == null) {\r\n      mountElement(\r\n        n2,\r\n        container,\r\n        anchor,\r\n        parentComponent,\r\n        parentSuspense,\r\n        isSVG,\r\n        slotScopeIds,\r\n        optimized\r\n      )\r\n    } else {\r\n      patchElement(\r\n        n1,\r\n        n2,\r\n        parentComponent,\r\n        parentSuspense,\r\n        isSVG,\r\n        slotScopeIds,\r\n        optimized\r\n      )\r\n    }\r\n  }\r\n\r\n  const mountElement = (\r\n    vnode: VNode,\r\n    container: RendererElement,\r\n    anchor: RendererNode | null,\r\n    parentComponent: ComponentInternalInstance | null,\r\n    parentSuspense: SuspenseBoundary | null,\r\n    isSVG: boolean,\r\n    slotScopeIds: string[] | null,\r\n    optimized: boolean\r\n  ) => {\r\n    let el: RendererElement\r\n    let vnodeHook: VNodeHook | undefined | null\r\n    const { type, props, shapeFlag, transition, patchFlag, dirs } = vnode\r\n    if (\r\n      !__DEV__ &&\r\n      vnode.el &&\r\n      hostCloneNode !== undefined &&\r\n      patchFlag === PatchFlags.HOISTED\r\n    ) {\r\n      // If a vnode has non-null el, it means it's being reused.\r\n      // Only static vnodes can be reused, so its mounted DOM nodes should be\r\n      // exactly the same, and we can simply do a clone here.\r\n      // only do this in production since cloned trees cannot be HMR updated.\r\n      el = vnode.el = hostCloneNode(vnode.el)\r\n    } else {\r\n      el = vnode.el = hostCreateElement(\r\n        vnode.type as string,\r\n        isSVG,\r\n        props && props.is,\r\n        props\r\n      )\r\n\r\n      // mount children first, since some props may rely on child content\r\n      // being already rendered, e.g. `<select value>`\r\n      if (shapeFlag & ShapeFlags.TEXT_CHILDREN) {\r\n        hostSetElementText(el, vnode.children as string)\r\n      } else if (shapeFlag & ShapeFlags.ARRAY_CHILDREN) {\r\n        mountChildren(\r\n          vnode.children as VNodeArrayChildren,\r\n          el,\r\n          null,\r\n          parentComponent,\r\n          parentSuspense,\r\n          isSVG && type !== 'foreignObject',\r\n          slotScopeIds,\r\n          optimized\r\n        )\r\n      }\r\n\r\n      if (dirs) {\r\n        invokeDirectiveHook(vnode, null, parentComponent, 'created')\r\n      }\r\n      // props\r\n      if (props) {\r\n        for (const key in props) {\r\n          if (key !== 'value' && !isReservedProp(key)) {\r\n            hostPatchProp(\r\n              el,\r\n              key,\r\n              null,\r\n              props[key],\r\n              isSVG,\r\n              vnode.children as VNode[],\r\n              parentComponent,\r\n              parentSuspense,\r\n              unmountChildren\r\n            )\r\n          }\r\n        }\r\n        /**\r\n         * Special case for setting value on DOM elements:\r\n         * - it can be order-sensitive (e.g. should be set *after* min/max, #2325, #4024)\r\n         * - it needs to be forced (#1471)\r\n         * #2353 proposes adding another renderer option to configure this, but\r\n         * the properties affects are so finite it is worth special casing it\r\n         * here to reduce the complexity. (Special casing it also should not\r\n         * affect non-DOM renderers)\r\n         */\r\n        if ('value' in props) {\r\n          hostPatchProp(el, 'value', null, props.value)\r\n        }\r\n        if ((vnodeHook = props.onVnodeBeforeMount)) {\r\n          invokeVNodeHook(vnodeHook, parentComponent, vnode)\r\n        }\r\n      }\r\n      // scopeId\r\n      setScopeId(el, vnode, vnode.scopeId, slotScopeIds, parentComponent)\r\n    }\r\n    if (__DEV__ || __FEATURE_PROD_DEVTOOLS__) {\r\n      Object.defineProperty(el, '__vnode', {\r\n        value: vnode,\r\n        enumerable: false\r\n      })\r\n      Object.defineProperty(el, '__vueParentComponent', {\r\n        value: parentComponent,\r\n        enumerable: false\r\n      })\r\n    }\r\n    if (dirs) {\r\n      invokeDirectiveHook(vnode, null, parentComponent, 'beforeMount')\r\n    }\r\n    // #1583 For inside suspense + suspense not resolved case, enter hook should call when suspense resolved\r\n    // #1689 For inside suspense + suspense resolved case, just call it\r\n    const needCallTransitionHooks =\r\n      (!parentSuspense || (parentSuspense && !parentSuspense.pendingBranch)) &&\r\n      transition &&\r\n      !transition.persisted\r\n    if (needCallTransitionHooks) {\r\n      transition!.beforeEnter(el)\r\n    }\r\n    hostInsert(el, container, anchor)\r\n    if (\r\n      (vnodeHook = props && props.onVnodeMounted) ||\r\n      needCallTransitionHooks ||\r\n      dirs\r\n    ) {\r\n      queuePostRenderEffect(() => {\r\n        vnodeHook && invokeVNodeHook(vnodeHook, parentComponent, vnode)\r\n        needCallTransitionHooks && transition!.enter(el)\r\n        dirs && invokeDirectiveHook(vnode, null, parentComponent, 'mounted')\r\n      }, parentSuspense)\r\n    }\r\n  }\r\n\r\n  const setScopeId = (\r\n    el: RendererElement,\r\n    vnode: VNode,\r\n    scopeId: string | null,\r\n    slotScopeIds: string[] | null,\r\n    parentComponent: ComponentInternalInstance | null\r\n  ) => {\r\n    if (scopeId) {\r\n      hostSetScopeId(el, scopeId)\r\n    }\r\n    if (slotScopeIds) {\r\n      for (let i = 0; i < slotScopeIds.length; i++) {\r\n        hostSetScopeId(el, slotScopeIds[i])\r\n      }\r\n    }\r\n    if (parentComponent) {\r\n      let subTree = parentComponent.subTree\r\n      if (\r\n        __DEV__ &&\r\n        subTree.patchFlag > 0 &&\r\n        subTree.patchFlag & PatchFlags.DEV_ROOT_FRAGMENT\r\n      ) {\r\n        subTree =\r\n          filterSingleRoot(subTree.children as VNodeArrayChildren) || subTree\r\n      }\r\n      if (vnode === subTree) {\r\n        const parentVNode = parentComponent.vnode\r\n        setScopeId(\r\n          el,\r\n          parentVNode,\r\n          parentVNode.scopeId,\r\n          parentVNode.slotScopeIds,\r\n          parentComponent.parent\r\n        )\r\n      }\r\n    }\r\n  }\r\n\r\n  const mountChildren: MountChildrenFn = (\r\n    children,\r\n    container,\r\n    anchor,\r\n    parentComponent,\r\n    parentSuspense,\r\n    isSVG,\r\n    slotScopeIds,\r\n    optimized,\r\n    start = 0\r\n  ) => {\r\n    for (let i = start; i < children.length; i++) {\r\n      const child = (children[i] = optimized\r\n        ? cloneIfMounted(children[i] as VNode)\r\n        : normalizeVNode(children[i]))\r\n      patch(\r\n        null,\r\n        child,\r\n        container,\r\n        anchor,\r\n        parentComponent,\r\n        parentSuspense,\r\n        isSVG,\r\n        slotScopeIds,\r\n        optimized\r\n      )\r\n    }\r\n  }\r\n\r\n  const patchElement = (\r\n    n1: VNode,\r\n    n2: VNode,\r\n    parentComponent: ComponentInternalInstance | null,\r\n    parentSuspense: SuspenseBoundary | null,\r\n    isSVG: boolean,\r\n    slotScopeIds: string[] | null,\r\n    optimized: boolean\r\n  ) => {\r\n    const el = (n2.el = n1.el!)\r\n    let { patchFlag, dynamicChildren, dirs } = n2\r\n    // #1426 take the old vnode's patch flag into account since user may clone a\r\n    // compiler-generated vnode, which de-opts to FULL_PROPS\r\n    patchFlag |= n1.patchFlag & PatchFlags.FULL_PROPS\r\n    const oldProps = n1.props || EMPTY_OBJ\r\n    const newProps = n2.props || EMPTY_OBJ\r\n    let vnodeHook: VNodeHook | undefined | null\r\n\r\n    if ((vnodeHook = newProps.onVnodeBeforeUpdate)) {\r\n      invokeVNodeHook(vnodeHook, parentComponent, n2, n1)\r\n    }\r\n    if (dirs) {\r\n      invokeDirectiveHook(n2, n1, parentComponent, 'beforeUpdate')\r\n    }\r\n\r\n    if (__DEV__ && isHmrUpdating) {\r\n      // HMR updated, force full diff\r\n      patchFlag = 0\r\n      optimized = false\r\n      dynamicChildren = null\r\n    }\r\n\r\n    if (patchFlag > 0) {\r\n      // the presence of a patchFlag means this element's render code was\r\n      // generated by the compiler and can take the fast path.\r\n      // in this path old node and new node are guaranteed to have the same shape\r\n      // (i.e. at the exact same position in the source template)\r\n      if (patchFlag & PatchFlags.FULL_PROPS) {\r\n        // element props contain dynamic keys, full diff needed\r\n        patchProps(\r\n          el,\r\n          n2,\r\n          oldProps,\r\n          newProps,\r\n          parentComponent,\r\n          parentSuspense,\r\n          isSVG\r\n        )\r\n      } else {\r\n        // class\r\n        // this flag is matched when the element has dynamic class bindings.\r\n        if (patchFlag & PatchFlags.CLASS) {\r\n          if (oldProps.class !== newProps.class) {\r\n            hostPatchProp(el, 'class', null, newProps.class, isSVG)\r\n          }\r\n        }\r\n\r\n        // style\r\n        // this flag is matched when the element has dynamic style bindings\r\n        if (patchFlag & PatchFlags.STYLE) {\r\n          hostPatchProp(el, 'style', oldProps.style, newProps.style, isSVG)\r\n        }\r\n\r\n        // props\r\n        // This flag is matched when the element has dynamic prop/attr bindings\r\n        // other than class and style. The keys of dynamic prop/attrs are saved for\r\n        // faster iteration.\r\n        // Note dynamic keys like :[foo]=\"bar\" will cause this optimization to\r\n        // bail out and go through a full diff because we need to unset the old key\r\n        if (patchFlag & PatchFlags.PROPS) {\r\n          // if the flag is present then dynamicProps must be non-null\r\n          const propsToUpdate = n2.dynamicProps!\r\n          for (let i = 0; i < propsToUpdate.length; i++) {\r\n            const key = propsToUpdate[i]\r\n            const prev = oldProps[key]\r\n            const next = newProps[key]\r\n            // #1471 force patch value\r\n            if (next !== prev || key === 'value') {\r\n              hostPatchProp(\r\n                el,\r\n                key,\r\n                prev,\r\n                next,\r\n                isSVG,\r\n                n1.children as VNode[],\r\n                parentComponent,\r\n                parentSuspense,\r\n                unmountChildren\r\n              )\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      // text\r\n      // This flag is matched when the element has only dynamic text children.\r\n      if (patchFlag & PatchFlags.TEXT) {\r\n        if (n1.children !== n2.children) {\r\n          hostSetElementText(el, n2.children as string)\r\n        }\r\n      }\r\n    } else if (!optimized && dynamicChildren == null) {\r\n      // unoptimized, full diff\r\n      patchProps(\r\n        el,\r\n        n2,\r\n        oldProps,\r\n        newProps,\r\n        parentComponent,\r\n        parentSuspense,\r\n        isSVG\r\n      )\r\n    }\r\n\r\n    const areChildrenSVG = isSVG && n2.type !== 'foreignObject'\r\n    if (dynamicChildren) {\r\n      patchBlockChildren(\r\n        n1.dynamicChildren!,\r\n        dynamicChildren,\r\n        el,\r\n        parentComponent,\r\n        parentSuspense,\r\n        areChildrenSVG,\r\n        slotScopeIds\r\n      )\r\n      if (__DEV__ && parentComponent && parentComponent.type.__hmrId) {\r\n        traverseStaticChildren(n1, n2)\r\n      }\r\n    } else if (!optimized) {\r\n      // full diff\r\n      patchChildren(\r\n        n1,\r\n        n2,\r\n        el,\r\n        null,\r\n        parentComponent,\r\n        parentSuspense,\r\n        areChildrenSVG,\r\n        slotScopeIds,\r\n        false\r\n      )\r\n    }\r\n\r\n    if ((vnodeHook = newProps.onVnodeUpdated) || dirs) {\r\n      queuePostRenderEffect(() => {\r\n        vnodeHook && invokeVNodeHook(vnodeHook, parentComponent, n2, n1)\r\n        dirs && invokeDirectiveHook(n2, n1, parentComponent, 'updated')\r\n      }, parentSuspense)\r\n    }\r\n  }\r\n\r\n  // The fast path for blocks.\r\n  const patchBlockChildren: PatchBlockChildrenFn = (\r\n    oldChildren,\r\n    newChildren,\r\n    fallbackContainer,\r\n    parentComponent,\r\n    parentSuspense,\r\n    isSVG,\r\n    slotScopeIds\r\n  ) => {\r\n    for (let i = 0; i < newChildren.length; i++) {\r\n      const oldVNode = oldChildren[i]\r\n      const newVNode = newChildren[i]\r\n      // Determine the container (parent element) for the patch.\r\n      const container =\r\n        // oldVNode may be an errored async setup() component inside Suspense\r\n        // which will not have a mounted element\r\n        oldVNode.el &&\r\n        // - In the case of a Fragment, we need to provide the actual parent\r\n        // of the Fragment itself so it can move its children.\r\n        (oldVNode.type === Fragment ||\r\n          // - In the case of different nodes, there is going to be a replacement\r\n          // which also requires the correct parent container\r\n          !isSameVNodeType(oldVNode, newVNode) ||\r\n          // - In the case of a component, it could contain anything.\r\n          oldVNode.shapeFlag & ShapeFlags.COMPONENT ||\r\n          oldVNode.shapeFlag & ShapeFlags.TELEPORT)\r\n          ? hostParentNode(oldVNode.el)!\r\n          : // In other cases, the parent container is not actually used so we\r\n            // just pass the block element here to avoid a DOM parentNode call.\r\n            fallbackContainer\r\n      patch(\r\n        oldVNode,\r\n        newVNode,\r\n        container,\r\n        null,\r\n        parentComponent,\r\n        parentSuspense,\r\n        isSVG,\r\n        slotScopeIds,\r\n        true\r\n      )\r\n    }\r\n  }\r\n\r\n  const patchProps = (\r\n    el: RendererElement,\r\n    vnode: VNode,\r\n    oldProps: Data,\r\n    newProps: Data,\r\n    parentComponent: ComponentInternalInstance | null,\r\n    parentSuspense: SuspenseBoundary | null,\r\n    isSVG: boolean\r\n  ) => {\r\n    if (oldProps !== newProps) {\r\n      for (const key in newProps) {\r\n        // empty string is not valid prop\r\n        if (isReservedProp(key)) continue\r\n        const next = newProps[key]\r\n        const prev = oldProps[key]\r\n        // defer patching value\r\n        if (next !== prev && key !== 'value') {\r\n          hostPatchProp(\r\n            el,\r\n            key,\r\n            prev,\r\n            next,\r\n            isSVG,\r\n            vnode.children as VNode[],\r\n            parentComponent,\r\n            parentSuspense,\r\n            unmountChildren\r\n          )\r\n        }\r\n      }\r\n      if (oldProps !== EMPTY_OBJ) {\r\n        for (const key in oldProps) {\r\n          if (!isReservedProp(key) && !(key in newProps)) {\r\n            hostPatchProp(\r\n              el,\r\n              key,\r\n              oldProps[key],\r\n              null,\r\n              isSVG,\r\n              vnode.children as VNode[],\r\n              parentComponent,\r\n              parentSuspense,\r\n              unmountChildren\r\n            )\r\n          }\r\n        }\r\n      }\r\n      if ('value' in newProps) {\r\n        hostPatchProp(el, 'value', oldProps.value, newProps.value)\r\n      }\r\n    }\r\n  }\r\n\r\n  const processFragment = (\r\n    n1: VNode | null,\r\n    n2: VNode,\r\n    container: RendererElement,\r\n    anchor: RendererNode | null,\r\n    parentComponent: ComponentInternalInstance | null,\r\n    parentSuspense: SuspenseBoundary | null,\r\n    isSVG: boolean,\r\n    slotScopeIds: string[] | null,\r\n    optimized: boolean\r\n  ) => {\r\n    const fragmentStartAnchor = (n2.el = n1 ? n1.el : hostCreateText(''))!\r\n    const fragmentEndAnchor = (n2.anchor = n1 ? n1.anchor : hostCreateText(''))!\r\n\r\n    let { patchFlag, dynamicChildren, slotScopeIds: fragmentSlotScopeIds } = n2\r\n\r\n    if (__DEV__ && isHmrUpdating) {\r\n      // HMR updated, force full diff\r\n      patchFlag = 0\r\n      optimized = false\r\n      dynamicChildren = null\r\n    }\r\n\r\n    // check if this is a slot fragment with :slotted scope ids\r\n    if (fragmentSlotScopeIds) {\r\n      slotScopeIds = slotScopeIds\r\n        ? slotScopeIds.concat(fragmentSlotScopeIds)\r\n        : fragmentSlotScopeIds\r\n    }\r\n\r\n    if (n1 == null) {\r\n      hostInsert(fragmentStartAnchor, container, anchor)\r\n      hostInsert(fragmentEndAnchor, container, anchor)\r\n      // a fragment can only have array children\r\n      // since they are either generated by the compiler, or implicitly created\r\n      // from arrays.\r\n      mountChildren(\r\n        n2.children as VNodeArrayChildren,\r\n        container,\r\n        fragmentEndAnchor,\r\n        parentComponent,\r\n        parentSuspense,\r\n        isSVG,\r\n        slotScopeIds,\r\n        optimized\r\n      )\r\n    } else {\r\n      if (\r\n        patchFlag > 0 &&\r\n        patchFlag & PatchFlags.STABLE_FRAGMENT &&\r\n        dynamicChildren &&\r\n        // #2715 the previous fragment could've been a BAILed one as a result\r\n        // of renderSlot() with no valid children\r\n        n1.dynamicChildren\r\n      ) {\r\n        // a stable fragment (template root or <template v-for>) doesn't need to\r\n        // patch children order, but it may contain dynamicChildren.\r\n        patchBlockChildren(\r\n          n1.dynamicChildren,\r\n          dynamicChildren,\r\n          container,\r\n          parentComponent,\r\n          parentSuspense,\r\n          isSVG,\r\n          slotScopeIds\r\n        )\r\n        if (__DEV__ && parentComponent && parentComponent.type.__hmrId) {\r\n          traverseStaticChildren(n1, n2)\r\n        } else if (\r\n          // #2080 if the stable fragment has a key, it's a <template v-for> that may\r\n          //  get moved around. Make sure all root level vnodes inherit el.\r\n          // #2134 or if it's a component root, it may also get moved around\r\n          // as the component is being moved.\r\n          n2.key != null ||\r\n          (parentComponent && n2 === parentComponent.subTree)\r\n        ) {\r\n          traverseStaticChildren(n1, n2, true /* shallow */)\r\n        }\r\n      } else {\r\n        // keyed / unkeyed, or manual fragments.\r\n        // for keyed & unkeyed, since they are compiler generated from v-for,\r\n        // each child is guaranteed to be a block so the fragment will never\r\n        // have dynamicChildren.\r\n        patchChildren(\r\n          n1,\r\n          n2,\r\n          container,\r\n          fragmentEndAnchor,\r\n          parentComponent,\r\n          parentSuspense,\r\n          isSVG,\r\n          slotScopeIds,\r\n          optimized\r\n        )\r\n      }\r\n    }\r\n  }\r\n\r\n  const processComponent = (\r\n    n1: VNode | null,\r\n    n2: VNode,\r\n    container: RendererElement,\r\n    anchor: RendererNode | null,\r\n    parentComponent: ComponentInternalInstance | null,\r\n    parentSuspense: SuspenseBoundary | null,\r\n    isSVG: boolean,\r\n    slotScopeIds: string[] | null,\r\n    optimized: boolean\r\n  ) => {\r\n    n2.slotScopeIds = slotScopeIds\r\n    if (n1 == null) {\r\n      if (n2.shapeFlag & ShapeFlags.COMPONENT_KEPT_ALIVE) {\r\n        ;(parentComponent!.ctx as KeepAliveContext).activate(\r\n          n2,\r\n          container,\r\n          anchor,\r\n          isSVG,\r\n          optimized\r\n        )\r\n      } else {\r\n        mountComponent(\r\n          n2,\r\n          container,\r\n          anchor,\r\n          parentComponent,\r\n          parentSuspense,\r\n          isSVG,\r\n          optimized\r\n        )\r\n      }\r\n    } else {\r\n      updateComponent(n1, n2, optimized)\r\n    }\r\n  }\r\n\r\n  const mountComponent: MountComponentFn = (\r\n    initialVNode,\r\n    container,\r\n    anchor,\r\n    parentComponent,\r\n    parentSuspense,\r\n    isSVG,\r\n    optimized\r\n  ) => {\r\n    // 2.x compat may pre-creaate the component instance before actually\r\n    // mounting\r\n    const compatMountInstance =\r\n      __COMPAT__ && initialVNode.isCompatRoot && initialVNode.component\r\n    const instance: ComponentInternalInstance =\r\n      compatMountInstance ||\r\n      (initialVNode.component = createComponentInstance(\r\n        initialVNode,\r\n        parentComponent,\r\n        parentSuspense\r\n      ))\r\n\r\n    if (__DEV__ && instance.type.__hmrId) {\r\n      registerHMR(instance)\r\n    }\r\n\r\n    if (__DEV__) {\r\n      pushWarningContext(initialVNode)\r\n      startMeasure(instance, `mount`)\r\n    }\r\n\r\n    // inject renderer internals for keepAlive\r\n    if (isKeepAlive(initialVNode)) {\r\n      ;(instance.ctx as KeepAliveContext).renderer = internals\r\n    }\r\n\r\n    // resolve props and slots for setup context\r\n    if (!(__COMPAT__ && compatMountInstance)) {\r\n      if (__DEV__) {\r\n        startMeasure(instance, `init`)\r\n      }\r\n      setupComponent(instance)\r\n      if (__DEV__) {\r\n        endMeasure(instance, `init`)\r\n      }\r\n    }\r\n\r\n    // setup() is async. This component relies on async logic to be resolved\r\n    // before proceeding\r\n    if (__FEATURE_SUSPENSE__ && instance.asyncDep) {\r\n      parentSuspense && parentSuspense.registerDep(instance, setupRenderEffect)\r\n\r\n      // Give it a placeholder if this is not hydration\r\n      // TODO handle self-defined fallback\r\n      if (!initialVNode.el) {\r\n        const placeholder = (instance.subTree = createVNode(Comment))\r\n        processCommentNode(null, placeholder, container!, anchor)\r\n      }\r\n      return\r\n    }\r\n\r\n    setupRenderEffect(\r\n      instance,\r\n      initialVNode,\r\n      container,\r\n      anchor,\r\n      parentSuspense,\r\n      isSVG,\r\n      optimized\r\n    )\r\n\r\n    if (__DEV__) {\r\n      popWarningContext()\r\n      endMeasure(instance, `mount`)\r\n    }\r\n  }\r\n\r\n  const updateComponent = (n1: VNode, n2: VNode, optimized: boolean) => {\r\n    const instance = (n2.component = n1.component)!\r\n    if (shouldUpdateComponent(n1, n2, optimized)) {\r\n      if (\r\n        __FEATURE_SUSPENSE__ &&\r\n        instance.asyncDep &&\r\n        !instance.asyncResolved\r\n      ) {\r\n        // async & still pending - just update props and slots\r\n        // since the component's reactive effect for render isn't set-up yet\r\n        if (__DEV__) {\r\n          pushWarningContext(n2)\r\n        }\r\n        updateComponentPreRender(instance, n2, optimized)\r\n        if (__DEV__) {\r\n          popWarningContext()\r\n        }\r\n        return\r\n      } else {\r\n        // normal update\r\n        instance.next = n2\r\n        // in case the child component is also queued, remove it to avoid\r\n        // double updating the same child component in the same flush.\r\n        invalidateJob(instance.update)\r\n        // instance.update is the reactive effect.\r\n        instance.update()\r\n      }\r\n    } else {\r\n      // no update needed. just copy over properties\r\n      n2.component = n1.component\r\n      n2.el = n1.el\r\n      instance.vnode = n2\r\n    }\r\n  }\r\n\r\n  const setupRenderEffect: SetupRenderEffectFn = (\r\n    instance,\r\n    initialVNode,\r\n    container,\r\n    anchor,\r\n    parentSuspense,\r\n    isSVG,\r\n    optimized\r\n  ) => {\r\n    const componentUpdateFn = () => {\r\n      if (!instance.isMounted) {\r\n        let vnodeHook: VNodeHook | null | undefined\r\n        const { el, props } = initialVNode\r\n        const { bm, m, parent } = instance\r\n\r\n        effect.allowRecurse = false\r\n        // beforeMount hook\r\n        if (bm) {\r\n          invokeArrayFns(bm)\r\n        }\r\n        // onVnodeBeforeMount\r\n        if ((vnodeHook = props && props.onVnodeBeforeMount)) {\r\n          invokeVNodeHook(vnodeHook, parent, initialVNode)\r\n        }\r\n        if (\r\n          __COMPAT__ &&\r\n          isCompatEnabled(DeprecationTypes.INSTANCE_EVENT_HOOKS, instance)\r\n        ) {\r\n          instance.emit('hook:beforeMount')\r\n        }\r\n        effect.allowRecurse = true\r\n\r\n        if (el && hydrateNode) {\r\n          // vnode has adopted host node - perform hydration instead of mount.\r\n          const hydrateSubTree = () => {\r\n            if (__DEV__) {\r\n              startMeasure(instance, `render`)\r\n            }\r\n            instance.subTree = renderComponentRoot(instance)\r\n            if (__DEV__) {\r\n              endMeasure(instance, `render`)\r\n            }\r\n            if (__DEV__) {\r\n              startMeasure(instance, `hydrate`)\r\n            }\r\n            hydrateNode!(\r\n              el as Node,\r\n              instance.subTree,\r\n              instance,\r\n              parentSuspense,\r\n              null\r\n            )\r\n            if (__DEV__) {\r\n              endMeasure(instance, `hydrate`)\r\n            }\r\n          }\r\n\r\n          if (isAsyncWrapper(initialVNode)) {\r\n            ;(initialVNode.type as ComponentOptions).__asyncLoader!().then(\r\n              // note: we are moving the render call into an async callback,\r\n              // which means it won't track dependencies - but it's ok because\r\n              // a server-rendered async wrapper is already in resolved state\r\n              // and it will never need to change.\r\n              () => !instance.isUnmounted && hydrateSubTree()\r\n            )\r\n          } else {\r\n            hydrateSubTree()\r\n          }\r\n        } else {\r\n          if (__DEV__) {\r\n            startMeasure(instance, `render`)\r\n          }\r\n          const subTree = (instance.subTree = renderComponentRoot(instance))\r\n          if (__DEV__) {\r\n            endMeasure(instance, `render`)\r\n          }\r\n          if (__DEV__) {\r\n            startMeasure(instance, `patch`)\r\n          }\r\n          patch(\r\n            null,\r\n            subTree,\r\n            container,\r\n            anchor,\r\n            instance,\r\n            parentSuspense,\r\n            isSVG\r\n          )\r\n          if (__DEV__) {\r\n            endMeasure(instance, `patch`)\r\n          }\r\n          initialVNode.el = subTree.el\r\n        }\r\n        // mounted hook\r\n        if (m) {\r\n          queuePostRenderEffect(m, parentSuspense)\r\n        }\r\n        // onVnodeMounted\r\n        if ((vnodeHook = props && props.onVnodeMounted)) {\r\n          const scopedInitialVNode = initialVNode\r\n          queuePostRenderEffect(\r\n            () => invokeVNodeHook(vnodeHook!, parent, scopedInitialVNode),\r\n            parentSuspense\r\n          )\r\n        }\r\n        if (\r\n          __COMPAT__ &&\r\n          isCompatEnabled(DeprecationTypes.INSTANCE_EVENT_HOOKS, instance)\r\n        ) {\r\n          queuePostRenderEffect(\r\n            () => instance.emit('hook:mounted'),\r\n            parentSuspense\r\n          )\r\n        }\r\n\r\n        // activated hook for keep-alive roots.\r\n        // #1742 activated hook must be accessed after first render\r\n        // since the hook may be injected by a child keep-alive\r\n        if (initialVNode.shapeFlag & ShapeFlags.COMPONENT_SHOULD_KEEP_ALIVE) {\r\n          instance.a && queuePostRenderEffect(instance.a, parentSuspense)\r\n          if (\r\n            __COMPAT__ &&\r\n            isCompatEnabled(DeprecationTypes.INSTANCE_EVENT_HOOKS, instance)\r\n          ) {\r\n            queuePostRenderEffect(\r\n              () => instance.emit('hook:activated'),\r\n              parentSuspense\r\n            )\r\n          }\r\n        }\r\n        instance.isMounted = true\r\n\r\n        if (__DEV__ || __FEATURE_PROD_DEVTOOLS__) {\r\n          devtoolsComponentAdded(instance)\r\n        }\r\n\r\n        // #2458: deference mount-only object parameters to prevent memleaks\r\n        initialVNode = container = anchor = null as any\r\n      } else {\r\n        // updateComponent\r\n        // This is triggered by mutation of component's own state (next: null)\r\n        // OR parent calling processComponent (next: VNode)\r\n        let { next, bu, u, parent, vnode } = instance\r\n        let originNext = next\r\n        let vnodeHook: VNodeHook | null | undefined\r\n        if (__DEV__) {\r\n          pushWarningContext(next || instance.vnode)\r\n        }\r\n\r\n        if (next) {\r\n          next.el = vnode.el\r\n          updateComponentPreRender(instance, next, optimized)\r\n        } else {\r\n          next = vnode\r\n        }\r\n\r\n        // Disallow component effect recursion during pre-lifecycle hooks.\r\n        effect.allowRecurse = false\r\n        // beforeUpdate hook\r\n        if (bu) {\r\n          invokeArrayFns(bu)\r\n        }\r\n        // onVnodeBeforeUpdate\r\n        if ((vnodeHook = next.props && next.props.onVnodeBeforeUpdate)) {\r\n          invokeVNodeHook(vnodeHook, parent, next, vnode)\r\n        }\r\n        if (\r\n          __COMPAT__ &&\r\n          isCompatEnabled(DeprecationTypes.INSTANCE_EVENT_HOOKS, instance)\r\n        ) {\r\n          instance.emit('hook:beforeUpdate')\r\n        }\r\n        effect.allowRecurse = true\r\n\r\n        // render\r\n        if (__DEV__) {\r\n          startMeasure(instance, `render`)\r\n        }\r\n        const nextTree = renderComponentRoot(instance)\r\n        if (__DEV__) {\r\n          endMeasure(instance, `render`)\r\n        }\r\n        const prevTree = instance.subTree\r\n        instance.subTree = nextTree\r\n\r\n        if (__DEV__) {\r\n          startMeasure(instance, `patch`)\r\n        }\r\n        patch(\r\n          prevTree,\r\n          nextTree,\r\n          // parent may have changed if it's in a teleport\r\n          hostParentNode(prevTree.el!)!,\r\n          // anchor may have changed if it's in a fragment\r\n          getNextHostNode(prevTree),\r\n          instance,\r\n          parentSuspense,\r\n          isSVG\r\n        )\r\n        if (__DEV__) {\r\n          endMeasure(instance, `patch`)\r\n        }\r\n        next.el = nextTree.el\r\n        if (originNext === null) {\r\n          // self-triggered update. In case of HOC, update parent component\r\n          // vnode el. HOC is indicated by parent instance's subTree pointing\r\n          // to child component's vnode\r\n          updateHOCHostEl(instance, nextTree.el)\r\n        }\r\n        // updated hook\r\n        if (u) {\r\n          queuePostRenderEffect(u, parentSuspense)\r\n        }\r\n        // onVnodeUpdated\r\n        if ((vnodeHook = next.props && next.props.onVnodeUpdated)) {\r\n          queuePostRenderEffect(\r\n            () => invokeVNodeHook(vnodeHook!, parent, next!, vnode),\r\n            parentSuspense\r\n          )\r\n        }\r\n        if (\r\n          __COMPAT__ &&\r\n          isCompatEnabled(DeprecationTypes.INSTANCE_EVENT_HOOKS, instance)\r\n        ) {\r\n          queuePostRenderEffect(\r\n            () => instance.emit('hook:updated'),\r\n            parentSuspense\r\n          )\r\n        }\r\n\r\n        if (__DEV__ || __FEATURE_PROD_DEVTOOLS__) {\r\n          devtoolsComponentUpdated(instance)\r\n        }\r\n\r\n        if (__DEV__) {\r\n          popWarningContext()\r\n        }\r\n      }\r\n    }\r\n\r\n    // create reactive effect for rendering\r\n    const effect = new ReactiveEffect(\r\n      componentUpdateFn,\r\n      () => queueJob(instance.update),\r\n      instance.scope // track it in component's effect scope\r\n    )\r\n\r\n    const update = (instance.update = effect.run.bind(effect) as SchedulerJob)\r\n    update.id = instance.uid\r\n    // allowRecurse\r\n    // #1801, #2043 component render effects should allow recursive updates\r\n    effect.allowRecurse = update.allowRecurse = true\r\n\r\n    if (__DEV__) {\r\n      effect.onTrack = instance.rtc\r\n        ? e => invokeArrayFns(instance.rtc!, e)\r\n        : void 0\r\n      effect.onTrigger = instance.rtg\r\n        ? e => invokeArrayFns(instance.rtg!, e)\r\n        : void 0\r\n      // @ts-ignore (for scheduler)\r\n      update.ownerInstance = instance\r\n    }\r\n\r\n    update()\r\n  }\r\n\r\n  const updateComponentPreRender = (\r\n    instance: ComponentInternalInstance,\r\n    nextVNode: VNode,\r\n    optimized: boolean\r\n  ) => {\r\n    nextVNode.component = instance\r\n    const prevProps = instance.vnode.props\r\n    instance.vnode = nextVNode\r\n    instance.next = null\r\n    updateProps(instance, nextVNode.props, prevProps, optimized)\r\n    updateSlots(instance, nextVNode.children, optimized)\r\n\r\n    pauseTracking()\r\n    // props update may have triggered pre-flush watchers.\r\n    // flush them before the render update.\r\n    flushPreFlushCbs(undefined, instance.update)\r\n    resetTracking()\r\n  }\r\n\r\n  const patchChildren: PatchChildrenFn = (\r\n    n1,\r\n    n2,\r\n    container,\r\n    anchor,\r\n    parentComponent,\r\n    parentSuspense,\r\n    isSVG,\r\n    slotScopeIds,\r\n    optimized = false\r\n  ) => {\r\n    const c1 = n1 && n1.children\r\n    const prevShapeFlag = n1 ? n1.shapeFlag : 0\r\n    const c2 = n2.children\r\n\r\n    const { patchFlag, shapeFlag } = n2\r\n    // fast path\r\n    if (patchFlag > 0) {\r\n      if (patchFlag & PatchFlags.KEYED_FRAGMENT) {\r\n        // this could be either fully-keyed or mixed (some keyed some not)\r\n        // presence of patchFlag means children are guaranteed to be arrays\r\n        patchKeyedChildren(\r\n          c1 as VNode[],\r\n          c2 as VNodeArrayChildren,\r\n          container,\r\n          anchor,\r\n          parentComponent,\r\n          parentSuspense,\r\n          isSVG,\r\n          slotScopeIds,\r\n          optimized\r\n        )\r\n        return\r\n      } else if (patchFlag & PatchFlags.UNKEYED_FRAGMENT) {\r\n        // unkeyed\r\n        patchUnkeyedChildren(\r\n          c1 as VNode[],\r\n          c2 as VNodeArrayChildren,\r\n          container,\r\n          anchor,\r\n          parentComponent,\r\n          parentSuspense,\r\n          isSVG,\r\n          slotScopeIds,\r\n          optimized\r\n        )\r\n        return\r\n      }\r\n    }\r\n\r\n    // children has 3 possibilities: text, array or no children.\r\n    if (shapeFlag & ShapeFlags.TEXT_CHILDREN) {\r\n      // text children fast path\r\n      if (prevShapeFlag & ShapeFlags.ARRAY_CHILDREN) {\r\n        unmountChildren(c1 as VNode[], parentComponent, parentSuspense)\r\n      }\r\n      if (c2 !== c1) {\r\n        hostSetElementText(container, c2 as string)\r\n      }\r\n    } else {\r\n      if (prevShapeFlag & ShapeFlags.ARRAY_CHILDREN) {\r\n        // prev children was array\r\n        if (shapeFlag & ShapeFlags.ARRAY_CHILDREN) {\r\n          // two arrays, cannot assume anything, do full diff\r\n          patchKeyedChildren(\r\n            c1 as VNode[],\r\n            c2 as VNodeArrayChildren,\r\n            container,\r\n            anchor,\r\n            parentComponent,\r\n            parentSuspense,\r\n            isSVG,\r\n            slotScopeIds,\r\n            optimized\r\n          )\r\n        } else {\r\n          // no new children, just unmount old\r\n          unmountChildren(c1 as VNode[], parentComponent, parentSuspense, true)\r\n        }\r\n      } else {\r\n        // prev children was text OR null\r\n        // new children is array OR null\r\n        if (prevShapeFlag & ShapeFlags.TEXT_CHILDREN) {\r\n          hostSetElementText(container, '')\r\n        }\r\n        // mount new if array\r\n        if (shapeFlag & ShapeFlags.ARRAY_CHILDREN) {\r\n          mountChildren(\r\n            c2 as VNodeArrayChildren,\r\n            container,\r\n            anchor,\r\n            parentComponent,\r\n            parentSuspense,\r\n            isSVG,\r\n            slotScopeIds,\r\n            optimized\r\n          )\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  const patchUnkeyedChildren = (\r\n    c1: VNode[],\r\n    c2: VNodeArrayChildren,\r\n    container: RendererElement,\r\n    anchor: RendererNode | null,\r\n    parentComponent: ComponentInternalInstance | null,\r\n    parentSuspense: SuspenseBoundary | null,\r\n    isSVG: boolean,\r\n    slotScopeIds: string[] | null,\r\n    optimized: boolean\r\n  ) => {\r\n    c1 = c1 || EMPTY_ARR\r\n    c2 = c2 || EMPTY_ARR\r\n    const oldLength = c1.length\r\n    const newLength = c2.length\r\n    const commonLength = Math.min(oldLength, newLength)\r\n    let i\r\n    for (i = 0; i < commonLength; i++) {\r\n      const nextChild = (c2[i] = optimized\r\n        ? cloneIfMounted(c2[i] as VNode)\r\n        : normalizeVNode(c2[i]))\r\n      patch(\r\n        c1[i],\r\n        nextChild,\r\n        container,\r\n        null,\r\n        parentComponent,\r\n        parentSuspense,\r\n        isSVG,\r\n        slotScopeIds,\r\n        optimized\r\n      )\r\n    }\r\n    if (oldLength > newLength) {\r\n      // remove old\r\n      unmountChildren(\r\n        c1,\r\n        parentComponent,\r\n        parentSuspense,\r\n        true,\r\n        false,\r\n        commonLength\r\n      )\r\n    } else {\r\n      // mount new\r\n      mountChildren(\r\n        c2,\r\n        container,\r\n        anchor,\r\n        parentComponent,\r\n        parentSuspense,\r\n        isSVG,\r\n        slotScopeIds,\r\n        optimized,\r\n        commonLength\r\n      )\r\n    }\r\n  }\r\n\r\n  // can be all-keyed or mixed\r\n  const patchKeyedChildren = (\r\n    c1: VNode[],\r\n    c2: VNodeArrayChildren,\r\n    container: RendererElement,\r\n    parentAnchor: RendererNode | null,\r\n    parentComponent: ComponentInternalInstance | null,\r\n    parentSuspense: SuspenseBoundary | null,\r\n    isSVG: boolean,\r\n    slotScopeIds: string[] | null,\r\n    optimized: boolean\r\n  ) => {\r\n    let i = 0\r\n    const l2 = c2.length\r\n    let e1 = c1.length - 1 // prev ending index\r\n    let e2 = l2 - 1 // next ending index\r\n\r\n    // 1. sync from start\r\n    // (a b) c\r\n    // (a b) d e\r\n    while (i <= e1 && i <= e2) {\r\n      const n1 = c1[i]\r\n      const n2 = (c2[i] = optimized\r\n        ? cloneIfMounted(c2[i] as VNode)\r\n        : normalizeVNode(c2[i]))\r\n      if (isSameVNodeType(n1, n2)) {\r\n        patch(\r\n          n1,\r\n          n2,\r\n          container,\r\n          null,\r\n          parentComponent,\r\n          parentSuspense,\r\n          isSVG,\r\n          slotScopeIds,\r\n          optimized\r\n        )\r\n      } else {\r\n        break\r\n      }\r\n      i++\r\n    }\r\n\r\n    // 2. sync from end\r\n    // a (b c)\r\n    // d e (b c)\r\n    while (i <= e1 && i <= e2) {\r\n      const n1 = c1[e1]\r\n      const n2 = (c2[e2] = optimized\r\n        ? cloneIfMounted(c2[e2] as VNode)\r\n        : normalizeVNode(c2[e2]))\r\n      if (isSameVNodeType(n1, n2)) {\r\n        patch(\r\n          n1,\r\n          n2,\r\n          container,\r\n          null,\r\n          parentComponent,\r\n          parentSuspense,\r\n          isSVG,\r\n          slotScopeIds,\r\n          optimized\r\n        )\r\n      } else {\r\n        break\r\n      }\r\n      e1--\r\n      e2--\r\n    }\r\n\r\n    // 3. common sequence + mount\r\n    // (a b)\r\n    // (a b) c\r\n    // i = 2, e1 = 1, e2 = 2\r\n    // (a b)\r\n    // c (a b)\r\n    // i = 0, e1 = -1, e2 = 0\r\n    if (i > e1) {\r\n      if (i <= e2) {\r\n        const nextPos = e2 + 1\r\n        const anchor = nextPos < l2 ? (c2[nextPos] as VNode).el : parentAnchor\r\n        while (i <= e2) {\r\n          patch(\r\n            null,\r\n            (c2[i] = optimized\r\n              ? cloneIfMounted(c2[i] as VNode)\r\n              : normalizeVNode(c2[i])),\r\n            container,\r\n            anchor,\r\n            parentComponent,\r\n            parentSuspense,\r\n            isSVG,\r\n            slotScopeIds,\r\n            optimized\r\n          )\r\n          i++\r\n        }\r\n      }\r\n    }\r\n\r\n    // 4. common sequence + unmount\r\n    // (a b) c\r\n    // (a b)\r\n    // i = 2, e1 = 2, e2 = 1\r\n    // a (b c)\r\n    // (b c)\r\n    // i = 0, e1 = 0, e2 = -1\r\n    else if (i > e2) {\r\n      while (i <= e1) {\r\n        unmount(c1[i], parentComponent, parentSuspense, true)\r\n        i++\r\n      }\r\n    }\r\n\r\n    // 5. unknown sequence\r\n    // [i ... e1 + 1]: a b [c d e] f g\r\n    // [i ... e2 + 1]: a b [e d c h] f g\r\n    // i = 2, e1 = 4, e2 = 5\r\n    else {\r\n      const s1 = i // prev starting index\r\n      const s2 = i // next starting index\r\n\r\n      // 5.1 build key:index map for newChildren\r\n      const keyToNewIndexMap: Map<string | number | symbol, number> = new Map()\r\n      for (i = s2; i <= e2; i++) {\r\n        const nextChild = (c2[i] = optimized\r\n          ? cloneIfMounted(c2[i] as VNode)\r\n          : normalizeVNode(c2[i]))\r\n        if (nextChild.key != null) {\r\n          if (__DEV__ && keyToNewIndexMap.has(nextChild.key)) {\r\n            warn(\r\n              `Duplicate keys found during update:`,\r\n              JSON.stringify(nextChild.key),\r\n              `Make sure keys are unique.`\r\n            )\r\n          }\r\n          keyToNewIndexMap.set(nextChild.key, i)\r\n        }\r\n      }\r\n\r\n      // 5.2 loop through old children left to be patched and try to patch\r\n      // matching nodes & remove nodes that are no longer present\r\n      let j\r\n      let patched = 0\r\n      const toBePatched = e2 - s2 + 1\r\n      let moved = false\r\n      // used to track whether any node has moved\r\n      let maxNewIndexSoFar = 0\r\n      // works as Map<newIndex, oldIndex>\r\n      // Note that oldIndex is offset by +1\r\n      // and oldIndex = 0 is a special value indicating the new node has\r\n      // no corresponding old node.\r\n      // used for determining longest stable subsequence\r\n      const newIndexToOldIndexMap = new Array(toBePatched)\r\n      for (i = 0; i < toBePatched; i++) newIndexToOldIndexMap[i] = 0\r\n\r\n      for (i = s1; i <= e1; i++) {\r\n        const prevChild = c1[i]\r\n        if (patched >= toBePatched) {\r\n          // all new children have been patched so this can only be a removal\r\n          unmount(prevChild, parentComponent, parentSuspense, true)\r\n          continue\r\n        }\r\n        let newIndex\r\n        if (prevChild.key != null) {\r\n          newIndex = keyToNewIndexMap.get(prevChild.key)\r\n        } else {\r\n          // key-less node, try to locate a key-less node of the same type\r\n          for (j = s2; j <= e2; j++) {\r\n            if (\r\n              newIndexToOldIndexMap[j - s2] === 0 &&\r\n              isSameVNodeType(prevChild, c2[j] as VNode)\r\n            ) {\r\n              newIndex = j\r\n              break\r\n            }\r\n          }\r\n        }\r\n        if (newIndex === undefined) {\r\n          unmount(prevChild, parentComponent, parentSuspense, true)\r\n        } else {\r\n          newIndexToOldIndexMap[newIndex - s2] = i + 1\r\n          if (newIndex >= maxNewIndexSoFar) {\r\n            maxNewIndexSoFar = newIndex\r\n          } else {\r\n            moved = true\r\n          }\r\n          patch(\r\n            prevChild,\r\n            c2[newIndex] as VNode,\r\n            container,\r\n            null,\r\n            parentComponent,\r\n            parentSuspense,\r\n            isSVG,\r\n            slotScopeIds,\r\n            optimized\r\n          )\r\n          patched++\r\n        }\r\n      }\r\n\r\n      // 5.3 move and mount\r\n      // generate longest stable subsequence only when nodes have moved\r\n      const increasingNewIndexSequence = moved\r\n        ? getSequence(newIndexToOldIndexMap)\r\n        : EMPTY_ARR\r\n      j = increasingNewIndexSequence.length - 1\r\n      // looping backwards so that we can use last patched node as anchor\r\n      for (i = toBePatched - 1; i >= 0; i--) {\r\n        const nextIndex = s2 + i\r\n        const nextChild = c2[nextIndex] as VNode\r\n        const anchor =\r\n          nextIndex + 1 < l2 ? (c2[nextIndex + 1] as VNode).el : parentAnchor\r\n        if (newIndexToOldIndexMap[i] === 0) {\r\n          // mount new\r\n          patch(\r\n            null,\r\n            nextChild,\r\n            container,\r\n            anchor,\r\n            parentComponent,\r\n            parentSuspense,\r\n            isSVG,\r\n            slotScopeIds,\r\n            optimized\r\n          )\r\n        } else if (moved) {\r\n          // move if:\r\n          // There is no stable subsequence (e.g. a reverse)\r\n          // OR current node is not among the stable sequence\r\n          if (j < 0 || i !== increasingNewIndexSequence[j]) {\r\n            move(nextChild, container, anchor, MoveType.REORDER)\r\n          } else {\r\n            j--\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  const move: MoveFn = (\r\n    vnode,\r\n    container,\r\n    anchor,\r\n    moveType,\r\n    parentSuspense = null\r\n  ) => {\r\n    const { el, type, transition, children, shapeFlag } = vnode\r\n    if (shapeFlag & ShapeFlags.COMPONENT) {\r\n      move(vnode.component!.subTree, container, anchor, moveType)\r\n      return\r\n    }\r\n\r\n    if (__FEATURE_SUSPENSE__ && shapeFlag & ShapeFlags.SUSPENSE) {\r\n      vnode.suspense!.move(container, anchor, moveType)\r\n      return\r\n    }\r\n\r\n    if (shapeFlag & ShapeFlags.TELEPORT) {\r\n      ;(type as typeof TeleportImpl).move(vnode, container, anchor, internals)\r\n      return\r\n    }\r\n\r\n    if (type === Fragment) {\r\n      hostInsert(el!, container, anchor)\r\n      for (let i = 0; i < (children as VNode[]).length; i++) {\r\n        move((children as VNode[])[i], container, anchor, moveType)\r\n      }\r\n      hostInsert(vnode.anchor!, container, anchor)\r\n      return\r\n    }\r\n\r\n    if (type === Static) {\r\n      moveStaticNode(vnode, container, anchor)\r\n      return\r\n    }\r\n\r\n    // single nodes\r\n    const needTransition =\r\n      moveType !== MoveType.REORDER &&\r\n      shapeFlag & ShapeFlags.ELEMENT &&\r\n      transition\r\n    if (needTransition) {\r\n      if (moveType === MoveType.ENTER) {\r\n        transition!.beforeEnter(el!)\r\n        hostInsert(el!, container, anchor)\r\n        queuePostRenderEffect(() => transition!.enter(el!), parentSuspense)\r\n      } else {\r\n        const { leave, delayLeave, afterLeave } = transition!\r\n        const remove = () => hostInsert(el!, container, anchor)\r\n        const performLeave = () => {\r\n          leave(el!, () => {\r\n            remove()\r\n            afterLeave && afterLeave()\r\n          })\r\n        }\r\n        if (delayLeave) {\r\n          delayLeave(el!, remove, performLeave)\r\n        } else {\r\n          performLeave()\r\n        }\r\n      }\r\n    } else {\r\n      hostInsert(el!, container, anchor)\r\n    }\r\n  }\r\n\r\n  const unmount: UnmountFn = (\r\n    vnode,\r\n    parentComponent,\r\n    parentSuspense,\r\n    doRemove = false,\r\n    optimized = false\r\n  ) => {\r\n    const {\r\n      type,\r\n      props,\r\n      ref,\r\n      children,\r\n      dynamicChildren,\r\n      shapeFlag,\r\n      patchFlag,\r\n      dirs\r\n    } = vnode\r\n    // unset ref\r\n    if (ref != null) {\r\n      setRef(ref, null, parentSuspense, vnode, true)\r\n    }\r\n\r\n    if (shapeFlag & ShapeFlags.COMPONENT_SHOULD_KEEP_ALIVE) {\r\n      ;(parentComponent!.ctx as KeepAliveContext).deactivate(vnode)\r\n      return\r\n    }\r\n\r\n    const shouldInvokeDirs = shapeFlag & ShapeFlags.ELEMENT && dirs\r\n\r\n    let vnodeHook: VNodeHook | undefined | null\r\n    if ((vnodeHook = props && props.onVnodeBeforeUnmount)) {\r\n      invokeVNodeHook(vnodeHook, parentComponent, vnode)\r\n    }\r\n\r\n    if (shapeFlag & ShapeFlags.COMPONENT) {\r\n      unmountComponent(vnode.component!, parentSuspense, doRemove)\r\n    } else {\r\n      if (__FEATURE_SUSPENSE__ && shapeFlag & ShapeFlags.SUSPENSE) {\r\n        vnode.suspense!.unmount(parentSuspense, doRemove)\r\n        return\r\n      }\r\n\r\n      if (shouldInvokeDirs) {\r\n        invokeDirectiveHook(vnode, null, parentComponent, 'beforeUnmount')\r\n      }\r\n\r\n      if (shapeFlag & ShapeFlags.TELEPORT) {\r\n        ;(vnode.type as typeof TeleportImpl).remove(\r\n          vnode,\r\n          parentComponent,\r\n          parentSuspense,\r\n          optimized,\r\n          internals,\r\n          doRemove\r\n        )\r\n      } else if (\r\n        dynamicChildren &&\r\n        // #1153: fast path should not be taken for non-stable (v-for) fragments\r\n        (type !== Fragment ||\r\n          (patchFlag > 0 && patchFlag & PatchFlags.STABLE_FRAGMENT))\r\n      ) {\r\n        // fast path for block nodes: only need to unmount dynamic children.\r\n        unmountChildren(\r\n          dynamicChildren,\r\n          parentComponent,\r\n          parentSuspense,\r\n          false,\r\n          true\r\n        )\r\n      } else if (\r\n        (type === Fragment &&\r\n          (patchFlag & PatchFlags.KEYED_FRAGMENT ||\r\n            patchFlag & PatchFlags.UNKEYED_FRAGMENT)) ||\r\n        (!optimized && shapeFlag & ShapeFlags.ARRAY_CHILDREN)\r\n      ) {\r\n        unmountChildren(children as VNode[], parentComponent, parentSuspense)\r\n      }\r\n\r\n      if (doRemove) {\r\n        remove(vnode)\r\n      }\r\n    }\r\n\r\n    if ((vnodeHook = props && props.onVnodeUnmounted) || shouldInvokeDirs) {\r\n      queuePostRenderEffect(() => {\r\n        vnodeHook && invokeVNodeHook(vnodeHook, parentComponent, vnode)\r\n        shouldInvokeDirs &&\r\n          invokeDirectiveHook(vnode, null, parentComponent, 'unmounted')\r\n      }, parentSuspense)\r\n    }\r\n  }\r\n\r\n  const remove: RemoveFn = vnode => {\r\n    const { type, el, anchor, transition } = vnode\r\n    if (type === Fragment) {\r\n      removeFragment(el!, anchor!)\r\n      return\r\n    }\r\n\r\n    if (type === Static) {\r\n      removeStaticNode(vnode)\r\n      return\r\n    }\r\n\r\n    const performRemove = () => {\r\n      hostRemove(el!)\r\n      if (transition && !transition.persisted && transition.afterLeave) {\r\n        transition.afterLeave()\r\n      }\r\n    }\r\n\r\n    if (\r\n      vnode.shapeFlag & ShapeFlags.ELEMENT &&\r\n      transition &&\r\n      !transition.persisted\r\n    ) {\r\n      const { leave, delayLeave } = transition\r\n      const performLeave = () => leave(el!, performRemove)\r\n      if (delayLeave) {\r\n        delayLeave(vnode.el!, performRemove, performLeave)\r\n      } else {\r\n        performLeave()\r\n      }\r\n    } else {\r\n      performRemove()\r\n    }\r\n  }\r\n\r\n  const removeFragment = (cur: RendererNode, end: RendererNode) => {\r\n    // For fragments, directly remove all contained DOM nodes.\r\n    // (fragment child nodes cannot have transition)\r\n    let next\r\n    while (cur !== end) {\r\n      next = hostNextSibling(cur)!\r\n      hostRemove(cur)\r\n      cur = next\r\n    }\r\n    hostRemove(end)\r\n  }\r\n\r\n  const unmountComponent = (\r\n    instance: ComponentInternalInstance,\r\n    parentSuspense: SuspenseBoundary | null,\r\n    doRemove?: boolean\r\n  ) => {\r\n    if (__DEV__ && instance.type.__hmrId) {\r\n      unregisterHMR(instance)\r\n    }\r\n\r\n    const { bum, scope, update, subTree, um } = instance\r\n\r\n    // beforeUnmount hook\r\n    if (bum) {\r\n      invokeArrayFns(bum)\r\n    }\r\n\r\n    if (\r\n      __COMPAT__ &&\r\n      isCompatEnabled(DeprecationTypes.INSTANCE_EVENT_HOOKS, instance)\r\n    ) {\r\n      instance.emit('hook:beforeDestroy')\r\n    }\r\n\r\n    // stop effects in component scope\r\n    scope.stop()\r\n\r\n    // update may be null if a component is unmounted before its async\r\n    // setup has resolved.\r\n    if (update) {\r\n      // so that scheduler will no longer invoke it\r\n      update.active = false\r\n      unmount(subTree, instance, parentSuspense, doRemove)\r\n    }\r\n    // unmounted hook\r\n    if (um) {\r\n      queuePostRenderEffect(um, parentSuspense)\r\n    }\r\n    if (\r\n      __COMPAT__ &&\r\n      isCompatEnabled(DeprecationTypes.INSTANCE_EVENT_HOOKS, instance)\r\n    ) {\r\n      queuePostRenderEffect(\r\n        () => instance.emit('hook:destroyed'),\r\n        parentSuspense\r\n      )\r\n    }\r\n    queuePostRenderEffect(() => {\r\n      instance.isUnmounted = true\r\n    }, parentSuspense)\r\n\r\n    // A component with async dep inside a pending suspense is unmounted before\r\n    // its async dep resolves. This should remove the dep from the suspense, and\r\n    // cause the suspense to resolve immediately if that was the last dep.\r\n    if (\r\n      __FEATURE_SUSPENSE__ &&\r\n      parentSuspense &&\r\n      parentSuspense.pendingBranch &&\r\n      !parentSuspense.isUnmounted &&\r\n      instance.asyncDep &&\r\n      !instance.asyncResolved &&\r\n      instance.suspenseId === parentSuspense.pendingId\r\n    ) {\r\n      parentSuspense.deps--\r\n      if (parentSuspense.deps === 0) {\r\n        parentSuspense.resolve()\r\n      }\r\n    }\r\n\r\n    if (__DEV__ || __FEATURE_PROD_DEVTOOLS__) {\r\n      devtoolsComponentRemoved(instance)\r\n    }\r\n  }\r\n\r\n  const unmountChildren: UnmountChildrenFn = (\r\n    children,\r\n    parentComponent,\r\n    parentSuspense,\r\n    doRemove = false,\r\n    optimized = false,\r\n    start = 0\r\n  ) => {\r\n    for (let i = start; i < children.length; i++) {\r\n      unmount(children[i], parentComponent, parentSuspense, doRemove, optimized)\r\n    }\r\n  }\r\n\r\n  const getNextHostNode: NextFn = vnode => {\r\n    if (vnode.shapeFlag & ShapeFlags.COMPONENT) {\r\n      return getNextHostNode(vnode.component!.subTree)\r\n    }\r\n    if (__FEATURE_SUSPENSE__ && vnode.shapeFlag & ShapeFlags.SUSPENSE) {\r\n      return vnode.suspense!.next()\r\n    }\r\n    return hostNextSibling((vnode.anchor || vnode.el)!)\r\n  }\r\n\r\n  const render: RootRenderFunction = (vnode, container, isSVG) => {\r\n    if (vnode == null) {\r\n      if (container._vnode) {\r\n        unmount(container._vnode, null, null, true)\r\n      }\r\n    } else {\r\n      patch(container._vnode || null, vnode, container, null, null, null, isSVG)\r\n    }\r\n    flushPostFlushCbs()\r\n    container._vnode = vnode\r\n  }\r\n\r\n  const internals: RendererInternals = {\r\n    p: patch,\r\n    um: unmount,\r\n    m: move,\r\n    r: remove,\r\n    mt: mountComponent,\r\n    mc: mountChildren,\r\n    pc: patchChildren,\r\n    pbc: patchBlockChildren,\r\n    n: getNextHostNode,\r\n    o: options\r\n  }\r\n\r\n  let hydrate: ReturnType<typeof createHydrationFunctions>[0] | undefined\r\n  let hydrateNode: ReturnType<typeof createHydrationFunctions>[1] | undefined\r\n  if (createHydrationFns) {\r\n    ;[hydrate, hydrateNode] = createHydrationFns(\r\n      internals as RendererInternals<Node, Element>\r\n    )\r\n  }\r\n\r\n  return {\r\n    render,\r\n    hydrate,\r\n    createApp: createAppAPI(render, hydrate)\r\n  }\r\n}\r\n\r\nexport function setRef(\r\n  rawRef: VNodeNormalizedRef,\r\n  oldRawRef: VNodeNormalizedRef | null,\r\n  parentSuspense: SuspenseBoundary | null,\r\n  vnode: VNode,\r\n  isUnmount = false\r\n) {\r\n  if (isArray(rawRef)) {\r\n    rawRef.forEach((r, i) =>\r\n      setRef(\r\n        r,\r\n        oldRawRef && (isArray(oldRawRef) ? oldRawRef[i] : oldRawRef),\r\n        parentSuspense,\r\n        vnode,\r\n        isUnmount\r\n      )\r\n    )\r\n    return\r\n  }\r\n\r\n  if (isAsyncWrapper(vnode) && !isUnmount) {\r\n    // when mounting async components, nothing needs to be done,\r\n    // because the template ref is forwarded to inner component\r\n    return\r\n  }\r\n\r\n  const refValue =\r\n    vnode.shapeFlag & ShapeFlags.STATEFUL_COMPONENT\r\n      ? getExposeProxy(vnode.component!) || vnode.component!.proxy\r\n      : vnode.el\r\n  const value = isUnmount ? null : refValue\r\n\r\n  const { i: owner, r: ref } = rawRef\r\n  if (__DEV__ && !owner) {\r\n    warn(\r\n      `Missing ref owner context. ref cannot be used on hoisted vnodes. ` +\r\n        `A vnode with ref must be created inside the render function.`\r\n    )\r\n    return\r\n  }\r\n  const oldRef = oldRawRef && (oldRawRef as VNodeNormalizedRefAtom).r\r\n  const refs = owner.refs === EMPTY_OBJ ? (owner.refs = {}) : owner.refs\r\n  const setupState = owner.setupState\r\n\r\n  // dynamic ref changed. unset old ref\r\n  if (oldRef != null && oldRef !== ref) {\r\n    if (isString(oldRef)) {\r\n      refs[oldRef] = null\r\n      if (hasOwn(setupState, oldRef)) {\r\n        setupState[oldRef] = null\r\n      }\r\n    } else if (isRef(oldRef)) {\r\n      oldRef.value = null\r\n    }\r\n  }\r\n\r\n  if (isString(ref)) {\r\n    const doSet = () => {\r\n      if (__COMPAT__ && isCompatEnabled(DeprecationTypes.V_FOR_REF, owner)) {\r\n        registerLegacyRef(refs, ref, refValue, owner, rawRef.f, isUnmount)\r\n      } else {\r\n        refs[ref] = value\r\n      }\r\n      if (hasOwn(setupState, ref)) {\r\n        setupState[ref] = value\r\n      }\r\n    }\r\n    // #1789: for non-null values, set them after render\r\n    // null values means this is unmount and it should not overwrite another\r\n    // ref with the same key\r\n    if (value) {\r\n      ;(doSet as SchedulerJob).id = -1\r\n      queuePostRenderEffect(doSet, parentSuspense)\r\n    } else {\r\n      doSet()\r\n    }\r\n  } else if (isRef(ref)) {\r\n    const doSet = () => {\r\n      ref.value = value\r\n    }\r\n    if (value) {\r\n      ;(doSet as SchedulerJob).id = -1\r\n      queuePostRenderEffect(doSet, parentSuspense)\r\n    } else {\r\n      doSet()\r\n    }\r\n  } else if (isFunction(ref)) {\r\n    callWithErrorHandling(ref, owner, ErrorCodes.FUNCTION_REF, [value, refs])\r\n  } else if (__DEV__) {\r\n    warn('Invalid template ref type:', value, `(${typeof value})`)\r\n  }\r\n}\r\n\r\nexport function invokeVNodeHook(\r\n  hook: VNodeHook,\r\n  instance: ComponentInternalInstance | null,\r\n  vnode: VNode,\r\n  prevVNode: VNode | null = null\r\n) {\r\n  callWithAsyncErrorHandling(hook, instance, ErrorCodes.VNODE_HOOK, [\r\n    vnode,\r\n    prevVNode\r\n  ])\r\n}\r\n\r\n/**\r\n * #1156\r\n * When a component is HMR-enabled, we need to make sure that all static nodes\r\n * inside a block also inherit the DOM element from the previous tree so that\r\n * HMR updates (which are full updates) can retrieve the element for patching.\r\n *\r\n * #2080\r\n * Inside keyed `template` fragment static children, if a fragment is moved,\r\n * the children will always moved so that need inherit el form previous nodes\r\n * to ensure correct moved position.\r\n */\r\nexport function traverseStaticChildren(n1: VNode, n2: VNode, shallow = false) {\r\n  const ch1 = n1.children\r\n  const ch2 = n2.children\r\n  if (isArray(ch1) && isArray(ch2)) {\r\n    for (let i = 0; i < ch1.length; i++) {\r\n      // this is only called in the optimized path so array children are\r\n      // guaranteed to be vnodes\r\n      const c1 = ch1[i] as VNode\r\n      let c2 = ch2[i] as VNode\r\n      if (c2.shapeFlag & ShapeFlags.ELEMENT && !c2.dynamicChildren) {\r\n        if (c2.patchFlag <= 0 || c2.patchFlag === PatchFlags.HYDRATE_EVENTS) {\r\n          c2 = ch2[i] = cloneIfMounted(ch2[i] as VNode)\r\n          c2.el = c1.el\r\n        }\r\n        if (!shallow) traverseStaticChildren(c1, c2)\r\n      }\r\n      // also inherit for comment nodes, but not placeholders (e.g. v-if which\r\n      // would have received .el during block patch)\r\n      if (__DEV__ && c2.type === Comment && !c2.el) {\r\n        c2.el = c1.el\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n// https://en.wikipedia.org/wiki/Longest_increasing_subsequence\r\nfunction getSequence(arr: number[]): number[] {\r\n  const p = arr.slice()\r\n  const result = [0]\r\n  let i, j, u, v, c\r\n  const len = arr.length\r\n  for (i = 0; i < len; i++) {\r\n    const arrI = arr[i]\r\n    if (arrI !== 0) {\r\n      j = result[result.length - 1]\r\n      if (arr[j] < arrI) {\r\n        p[i] = j\r\n        result.push(i)\r\n        continue\r\n      }\r\n      u = 0\r\n      v = result.length - 1\r\n      while (u < v) {\r\n        c = (u + v) >> 1\r\n        if (arr[result[c]] < arrI) {\r\n          u = c + 1\r\n        } else {\r\n          v = c\r\n        }\r\n      }\r\n      if (arrI < arr[result[u]]) {\r\n        if (u > 0) {\r\n          p[i] = result[u - 1]\r\n        }\r\n        result[u] = i\r\n      }\r\n    }\r\n  }\r\n  u = result.length\r\n  v = result[u - 1]\r\n  while (u-- > 0) {\r\n    result[u] = v\r\n    v = p[v]\r\n  }\r\n  return result\r\n}\r\n","import { VNode, VNodeChild, isVNode } from './vnode'\r\nimport {\r\n  pauseTracking,\r\n  resetTracking,\r\n  shallowReadonly,\r\n  proxyRefs,\r\n  EffectScope,\r\n  markRaw,\r\n  track,\r\n  TrackOpTypes\r\n} from '@vue/reactivity'\r\nimport {\r\n  ComponentPublicInstance,\r\n  PublicInstanceProxyHandlers,\r\n  createDevRenderContext,\r\n  exposePropsOnRenderContext,\r\n  exposeSetupStateOnRenderContext,\r\n  ComponentPublicInstanceConstructor,\r\n  publicPropertiesMap,\r\n  RuntimeCompiledPublicInstanceProxyHandlers\r\n} from './componentPublicInstance'\r\nimport {\r\n  ComponentPropsOptions,\r\n  NormalizedPropsOptions,\r\n  initProps,\r\n  normalizePropsOptions\r\n} from './componentProps'\r\nimport { Slots, initSlots, InternalSlots } from './componentSlots'\r\nimport { warn } from './warning'\r\nimport { ErrorCodes, callWithErrorHandling, handleError } from './errorHandling'\r\nimport { AppContext, createAppContext, AppConfig } from './apiCreateApp'\r\nimport { Directive, validateDirectiveName } from './directives'\r\nimport {\r\n  applyOptions,\r\n  ComponentOptions,\r\n  ComputedOptions,\r\n  MethodOptions\r\n} from './componentOptions'\r\nimport {\r\n  EmitsOptions,\r\n  ObjectEmitsOptions,\r\n  EmitFn,\r\n  emit,\r\n  normalizeEmitsOptions\r\n} from './componentEmits'\r\nimport {\r\n  EMPTY_OBJ,\r\n  isFunction,\r\n  NOOP,\r\n  isObject,\r\n  NO,\r\n  makeMap,\r\n  isPromise,\r\n  ShapeFlags,\r\n  extend\r\n} from '@vue/shared'\r\nimport { SuspenseBoundary } from './components/Suspense'\r\nimport { CompilerOptions } from '@vue/compiler-core'\r\nimport { markAttrsAccessed } from './componentRenderUtils'\r\nimport { currentRenderingInstance } from './componentRenderContext'\r\nimport { startMeasure, endMeasure } from './profiling'\r\nimport { convertLegacyRenderFn } from './compat/renderFn'\r\nimport { globalCompatConfig, validateCompatConfig } from './compat/compatConfig'\r\nimport { SchedulerJob } from './scheduler'\r\n\r\nexport type Data = Record<string, unknown>\r\n\r\n/**\r\n * For extending allowed non-declared props on components in TSX\r\n */\r\nexport interface ComponentCustomProps {}\r\n\r\n/**\r\n * Default allowed non-declared props on component in TSX\r\n */\r\nexport interface AllowedComponentProps {\r\n  class?: unknown\r\n  style?: unknown\r\n}\r\n\r\n// Note: can't mark this whole interface internal because some public interfaces\r\n// extend it.\r\nexport interface ComponentInternalOptions {\r\n  /**\r\n   * @internal\r\n   */\r\n  __scopeId?: string\r\n  /**\r\n   * @internal\r\n   */\r\n  __cssModules?: Data\r\n  /**\r\n   * @internal\r\n   */\r\n  __hmrId?: string\r\n  /**\r\n   * Compat build only, for bailing out of certain compatibility behavior\r\n   */\r\n  __isBuiltIn?: boolean\r\n  /**\r\n   * This one should be exposed so that devtools can make use of it\r\n   */\r\n  __file?: string\r\n}\r\n\r\nexport interface FunctionalComponent<P = {}, E extends EmitsOptions = {}>\r\n  extends ComponentInternalOptions {\r\n  // use of any here is intentional so it can be a valid JSX Element constructor\r\n  (props: P, ctx: Omit<SetupContext<E>, 'expose'>): any\r\n  props?: ComponentPropsOptions<P>\r\n  emits?: E | (keyof E)[]\r\n  inheritAttrs?: boolean\r\n  displayName?: string\r\n}\r\n\r\nexport interface ClassComponent {\r\n  new (...args: any[]): ComponentPublicInstance<any, any, any, any, any>\r\n  __vccOpts: ComponentOptions\r\n}\r\n\r\n/**\r\n * Concrete component type matches its actual value: it's either an options\r\n * object, or a function. Use this where the code expects to work with actual\r\n * values, e.g. checking if its a function or not. This is mostly for internal\r\n * implementation code.\r\n */\r\nexport type ConcreteComponent<\r\n  Props = {},\r\n  RawBindings = any,\r\n  D = any,\r\n  C extends ComputedOptions = ComputedOptions,\r\n  M extends MethodOptions = MethodOptions\r\n> =\r\n  | ComponentOptions<Props, RawBindings, D, C, M>\r\n  | FunctionalComponent<Props, any>\r\n\r\n/**\r\n * A type used in public APIs where a component type is expected.\r\n * The constructor type is an artificial type returned by defineComponent().\r\n */\r\nexport type Component<\r\n  Props = any,\r\n  RawBindings = any,\r\n  D = any,\r\n  C extends ComputedOptions = ComputedOptions,\r\n  M extends MethodOptions = MethodOptions\r\n> =\r\n  | ConcreteComponent<Props, RawBindings, D, C, M>\r\n  | ComponentPublicInstanceConstructor<Props>\r\n\r\nexport { ComponentOptions }\r\n\r\ntype LifecycleHook<TFn = Function> = TFn[] | null\r\n\r\nexport const enum LifecycleHooks {\r\n  BEFORE_CREATE = 'bc',\r\n  CREATED = 'c',\r\n  BEFORE_MOUNT = 'bm',\r\n  MOUNTED = 'm',\r\n  BEFORE_UPDATE = 'bu',\r\n  UPDATED = 'u',\r\n  BEFORE_UNMOUNT = 'bum',\r\n  UNMOUNTED = 'um',\r\n  DEACTIVATED = 'da',\r\n  ACTIVATED = 'a',\r\n  RENDER_TRIGGERED = 'rtg',\r\n  RENDER_TRACKED = 'rtc',\r\n  ERROR_CAPTURED = 'ec',\r\n  SERVER_PREFETCH = 'sp'\r\n}\r\n\r\nexport interface SetupContext<E = EmitsOptions> {\r\n  attrs: Data\r\n  slots: Slots\r\n  emit: EmitFn<E>\r\n  expose: (exposed?: Record<string, any>) => void\r\n}\r\n\r\n/**\r\n * @internal\r\n */\r\nexport type InternalRenderFunction = {\r\n  (\r\n    ctx: ComponentPublicInstance,\r\n    cache: ComponentInternalInstance['renderCache'],\r\n    // for compiler-optimized bindings\r\n    $props: ComponentInternalInstance['props'],\r\n    $setup: ComponentInternalInstance['setupState'],\r\n    $data: ComponentInternalInstance['data'],\r\n    $options: ComponentInternalInstance['ctx']\r\n  ): VNodeChild\r\n  _rc?: boolean // isRuntimeCompiled\r\n\r\n  // __COMPAT__ only\r\n  _compatChecked?: boolean // v3 and already checked for v2 compat\r\n  _compatWrapped?: boolean // is wrapped for v2 compat\r\n}\r\n\r\n/**\r\n * We expose a subset of properties on the internal instance as they are\r\n * useful for advanced external libraries and tools.\r\n */\r\nexport interface ComponentInternalInstance {\r\n  uid: number\r\n  type: ConcreteComponent\r\n  parent: ComponentInternalInstance | null\r\n  root: ComponentInternalInstance\r\n  appContext: AppContext\r\n  /**\r\n   * Vnode representing this component in its parent's vdom tree\r\n   */\r\n  vnode: VNode\r\n  /**\r\n   * The pending new vnode from parent updates\r\n   * @internal\r\n   */\r\n  next: VNode | null\r\n  /**\r\n   * Root vnode of this component's own vdom tree\r\n   */\r\n  subTree: VNode\r\n  /**\r\n   * Bound effect runner to be passed to schedulers\r\n   */\r\n  update: SchedulerJob\r\n  /**\r\n   * The render function that returns vdom tree.\r\n   * @internal\r\n   */\r\n  render: InternalRenderFunction | null\r\n  /**\r\n   * SSR render function\r\n   * @internal\r\n   */\r\n  ssrRender?: Function | null\r\n  /**\r\n   * Object containing values this component provides for its descendents\r\n   * @internal\r\n   */\r\n  provides: Data\r\n  /**\r\n   * Tracking reactive effects (e.g. watchers) associated with this component\r\n   * so that they can be automatically stopped on component unmount\r\n   * @internal\r\n   */\r\n  scope: EffectScope\r\n  /**\r\n   * cache for proxy access type to avoid hasOwnProperty calls\r\n   * @internal\r\n   */\r\n  accessCache: Data | null\r\n  /**\r\n   * cache for render function values that rely on _ctx but won't need updates\r\n   * after initialized (e.g. inline handlers)\r\n   * @internal\r\n   */\r\n  renderCache: (Function | VNode)[]\r\n\r\n  /**\r\n   * Resolved component registry, only for components with mixins or extends\r\n   * @internal\r\n   */\r\n  components: Record<string, ConcreteComponent> | null\r\n  /**\r\n   * Resolved directive registry, only for components with mixins or extends\r\n   * @internal\r\n   */\r\n  directives: Record<string, Directive> | null\r\n  /**\r\n   * Resolved filters registry, v2 compat only\r\n   * @internal\r\n   */\r\n  filters?: Record<string, Function>\r\n  /**\r\n   * resolved props options\r\n   * @internal\r\n   */\r\n  propsOptions: NormalizedPropsOptions\r\n  /**\r\n   * resolved emits options\r\n   * @internal\r\n   */\r\n  emitsOptions: ObjectEmitsOptions | null\r\n  /**\r\n   * resolved inheritAttrs options\r\n   * @internal\r\n   */\r\n  inheritAttrs?: boolean\r\n  /**\r\n   * is custom element?\r\n   */\r\n  isCE?: boolean\r\n  /**\r\n   * custom element specific HMR method\r\n   */\r\n  ceReload?: (newStyles?: string[]) => void\r\n\r\n  // the rest are only for stateful components ---------------------------------\r\n\r\n  // main proxy that serves as the public instance (`this`)\r\n  proxy: ComponentPublicInstance | null\r\n\r\n  // exposed properties via expose()\r\n  exposed: Record<string, any> | null\r\n  exposeProxy: Record<string, any> | null\r\n\r\n  /**\r\n   * alternative proxy used only for runtime-compiled render functions using\r\n   * `with` block\r\n   * @internal\r\n   */\r\n  withProxy: ComponentPublicInstance | null\r\n  /**\r\n   * This is the target for the public instance proxy. It also holds properties\r\n   * injected by user options (computed, methods etc.) and user-attached\r\n   * custom properties (via `this.x = ...`)\r\n   * @internal\r\n   */\r\n  ctx: Data\r\n\r\n  // state\r\n  data: Data\r\n  props: Data\r\n  attrs: Data\r\n  slots: InternalSlots\r\n  refs: Data\r\n  emit: EmitFn\r\n  /**\r\n   * used for keeping track of .once event handlers on components\r\n   * @internal\r\n   */\r\n  emitted: Record<string, boolean> | null\r\n  /**\r\n   * used for caching the value returned from props default factory functions to\r\n   * avoid unnecessary watcher trigger\r\n   * @internal\r\n   */\r\n  propsDefaults: Data\r\n  /**\r\n   * setup related\r\n   * @internal\r\n   */\r\n  setupState: Data\r\n  /**\r\n   * devtools access to additional info\r\n   * @internal\r\n   */\r\n  devtoolsRawSetupState?: any\r\n  /**\r\n   * @internal\r\n   */\r\n  setupContext: SetupContext | null\r\n\r\n  /**\r\n   * suspense related\r\n   * @internal\r\n   */\r\n  suspense: SuspenseBoundary | null\r\n  /**\r\n   * suspense pending batch id\r\n   * @internal\r\n   */\r\n  suspenseId: number\r\n  /**\r\n   * @internal\r\n   */\r\n  asyncDep: Promise<any> | null\r\n  /**\r\n   * @internal\r\n   */\r\n  asyncResolved: boolean\r\n\r\n  // lifecycle\r\n  isMounted: boolean\r\n  isUnmounted: boolean\r\n  isDeactivated: boolean\r\n  /**\r\n   * @internal\r\n   */\r\n  [LifecycleHooks.BEFORE_CREATE]: LifecycleHook\r\n  /**\r\n   * @internal\r\n   */\r\n  [LifecycleHooks.CREATED]: LifecycleHook\r\n  /**\r\n   * @internal\r\n   */\r\n  [LifecycleHooks.BEFORE_MOUNT]: LifecycleHook\r\n  /**\r\n   * @internal\r\n   */\r\n  [LifecycleHooks.MOUNTED]: LifecycleHook\r\n  /**\r\n   * @internal\r\n   */\r\n  [LifecycleHooks.BEFORE_UPDATE]: LifecycleHook\r\n  /**\r\n   * @internal\r\n   */\r\n  [LifecycleHooks.UPDATED]: LifecycleHook\r\n  /**\r\n   * @internal\r\n   */\r\n  [LifecycleHooks.BEFORE_UNMOUNT]: LifecycleHook\r\n  /**\r\n   * @internal\r\n   */\r\n  [LifecycleHooks.UNMOUNTED]: LifecycleHook\r\n  /**\r\n   * @internal\r\n   */\r\n  [LifecycleHooks.RENDER_TRACKED]: LifecycleHook\r\n  /**\r\n   * @internal\r\n   */\r\n  [LifecycleHooks.RENDER_TRIGGERED]: LifecycleHook\r\n  /**\r\n   * @internal\r\n   */\r\n  [LifecycleHooks.ACTIVATED]: LifecycleHook\r\n  /**\r\n   * @internal\r\n   */\r\n  [LifecycleHooks.DEACTIVATED]: LifecycleHook\r\n  /**\r\n   * @internal\r\n   */\r\n  [LifecycleHooks.ERROR_CAPTURED]: LifecycleHook\r\n  /**\r\n   * @internal\r\n   */\r\n  [LifecycleHooks.SERVER_PREFETCH]: LifecycleHook<() => Promise<unknown>>\r\n}\r\n\r\nconst emptyAppContext = createAppContext()\r\n\r\nlet uid = 0\r\n\r\nexport function createComponentInstance(\r\n  vnode: VNode,\r\n  parent: ComponentInternalInstance | null,\r\n  suspense: SuspenseBoundary | null\r\n) {\r\n  const type = vnode.type as ConcreteComponent\r\n  // inherit parent app context - or - if root, adopt from root vnode\r\n  const appContext =\r\n    (parent ? parent.appContext : vnode.appContext) || emptyAppContext\r\n\r\n  const instance: ComponentInternalInstance = {\r\n    uid: uid++,\r\n    vnode,\r\n    type,\r\n    parent,\r\n    appContext,\r\n    root: null!, // to be immediately set\r\n    next: null,\r\n    subTree: null!, // will be set synchronously right after creation\r\n    update: null!, // will be set synchronously right after creation\r\n    scope: new EffectScope(true /* detached */),\r\n    render: null,\r\n    proxy: null,\r\n    exposed: null,\r\n    exposeProxy: null,\r\n    withProxy: null,\r\n    provides: parent ? parent.provides : Object.create(appContext.provides),\r\n    accessCache: null!,\r\n    renderCache: [],\r\n\r\n    // local resovled assets\r\n    components: null,\r\n    directives: null,\r\n\r\n    // resolved props and emits options\r\n    propsOptions: normalizePropsOptions(type, appContext),\r\n    emitsOptions: normalizeEmitsOptions(type, appContext),\r\n\r\n    // emit\r\n    emit: null as any, // to be set immediately\r\n    emitted: null,\r\n\r\n    // props default value\r\n    propsDefaults: EMPTY_OBJ,\r\n\r\n    // inheritAttrs\r\n    inheritAttrs: type.inheritAttrs,\r\n\r\n    // state\r\n    ctx: EMPTY_OBJ,\r\n    data: EMPTY_OBJ,\r\n    props: EMPTY_OBJ,\r\n    attrs: EMPTY_OBJ,\r\n    slots: EMPTY_OBJ,\r\n    refs: EMPTY_OBJ,\r\n    setupState: EMPTY_OBJ,\r\n    setupContext: null,\r\n\r\n    // suspense related\r\n    suspense,\r\n    suspenseId: suspense ? suspense.pendingId : 0,\r\n    asyncDep: null,\r\n    asyncResolved: false,\r\n\r\n    // lifecycle hooks\r\n    // not using enums here because it results in computed properties\r\n    isMounted: false,\r\n    isUnmounted: false,\r\n    isDeactivated: false,\r\n    bc: null,\r\n    c: null,\r\n    bm: null,\r\n    m: null,\r\n    bu: null,\r\n    u: null,\r\n    um: null,\r\n    bum: null,\r\n    da: null,\r\n    a: null,\r\n    rtg: null,\r\n    rtc: null,\r\n    ec: null,\r\n    sp: null\r\n  }\r\n  if (__DEV__) {\r\n    instance.ctx = createDevRenderContext(instance)\r\n  } else {\r\n    instance.ctx = { _: instance }\r\n  }\r\n  instance.root = parent ? parent.root : instance\r\n  instance.emit = emit.bind(null, instance)\r\n\r\n  // apply custom element special handling\r\n  if (vnode.ce) {\r\n    vnode.ce(instance)\r\n  }\r\n\r\n  return instance\r\n}\r\n\r\nexport let currentInstance: ComponentInternalInstance | null = null\r\n\r\nexport const getCurrentInstance: () => ComponentInternalInstance | null = () =>\r\n  currentInstance || currentRenderingInstance\r\n\r\nexport const setCurrentInstance = (instance: ComponentInternalInstance) => {\r\n  currentInstance = instance\r\n  instance.scope.on()\r\n}\r\n\r\nexport const unsetCurrentInstance = () => {\r\n  currentInstance && currentInstance.scope.off()\r\n  currentInstance = null\r\n}\r\n\r\nconst isBuiltInTag = /*#__PURE__*/ makeMap('slot,component')\r\n\r\nexport function validateComponentName(name: string, config: AppConfig) {\r\n  const appIsNativeTag = config.isNativeTag || NO\r\n  if (isBuiltInTag(name) || appIsNativeTag(name)) {\r\n    warn(\r\n      'Do not use built-in or reserved HTML elements as component id: ' + name\r\n    )\r\n  }\r\n}\r\n\r\nexport function isStatefulComponent(instance: ComponentInternalInstance) {\r\n  return instance.vnode.shapeFlag & ShapeFlags.STATEFUL_COMPONENT\r\n}\r\n\r\nexport let isInSSRComponentSetup = false\r\n\r\nexport function setupComponent(\r\n  instance: ComponentInternalInstance,\r\n  isSSR = false\r\n) {\r\n  isInSSRComponentSetup = isSSR\r\n\r\n  const { props, children } = instance.vnode\r\n  const isStateful = isStatefulComponent(instance)\r\n  initProps(instance, props, isStateful, isSSR)\r\n  initSlots(instance, children)\r\n\r\n  const setupResult = isStateful\r\n    ? setupStatefulComponent(instance, isSSR)\r\n    : undefined\r\n  isInSSRComponentSetup = false\r\n  return setupResult\r\n}\r\n\r\nfunction setupStatefulComponent(\r\n  instance: ComponentInternalInstance,\r\n  isSSR: boolean\r\n) {\r\n  const Component = instance.type as ComponentOptions\r\n\r\n  if (__DEV__) {\r\n    if (Component.name) {\r\n      validateComponentName(Component.name, instance.appContext.config)\r\n    }\r\n    if (Component.components) {\r\n      const names = Object.keys(Component.components)\r\n      for (let i = 0; i < names.length; i++) {\r\n        validateComponentName(names[i], instance.appContext.config)\r\n      }\r\n    }\r\n    if (Component.directives) {\r\n      const names = Object.keys(Component.directives)\r\n      for (let i = 0; i < names.length; i++) {\r\n        validateDirectiveName(names[i])\r\n      }\r\n    }\r\n    if (Component.compilerOptions && isRuntimeOnly()) {\r\n      warn(\r\n        `\"compilerOptions\" is only supported when using a build of Vue that ` +\r\n          `includes the runtime compiler. Since you are using a runtime-only ` +\r\n          `build, the options should be passed via your build tool config instead.`\r\n      )\r\n    }\r\n  }\r\n  // 0. create render proxy property access cache\r\n  instance.accessCache = Object.create(null)\r\n  // 1. create public instance / render proxy\r\n  // also mark it raw so it's never observed\r\n  instance.proxy = markRaw(new Proxy(instance.ctx, PublicInstanceProxyHandlers))\r\n  if (__DEV__) {\r\n    exposePropsOnRenderContext(instance)\r\n  }\r\n  // 2. call setup()\r\n  const { setup } = Component\r\n  if (setup) {\r\n    const setupContext = (instance.setupContext =\r\n      setup.length > 1 ? createSetupContext(instance) : null)\r\n\r\n    setCurrentInstance(instance)\r\n    pauseTracking()\r\n    const setupResult = callWithErrorHandling(\r\n      setup,\r\n      instance,\r\n      ErrorCodes.SETUP_FUNCTION,\r\n      [__DEV__ ? shallowReadonly(instance.props) : instance.props, setupContext]\r\n    )\r\n    resetTracking()\r\n    unsetCurrentInstance()\r\n\r\n    if (isPromise(setupResult)) {\r\n      setupResult.then(unsetCurrentInstance, unsetCurrentInstance)\r\n\r\n      if (isSSR) {\r\n        // return the promise so server-renderer can wait on it\r\n        return setupResult\r\n          .then((resolvedResult: unknown) => {\r\n            handleSetupResult(instance, resolvedResult, isSSR)\r\n          })\r\n          .catch(e => {\r\n            handleError(e, instance, ErrorCodes.SETUP_FUNCTION)\r\n          })\r\n      } else if (__FEATURE_SUSPENSE__) {\r\n        // async setup returned Promise.\r\n        // bail here and wait for re-entry.\r\n        instance.asyncDep = setupResult\r\n      } else if (__DEV__) {\r\n        warn(\r\n          `setup() returned a Promise, but the version of Vue you are using ` +\r\n            `does not support it yet.`\r\n        )\r\n      }\r\n    } else {\r\n      handleSetupResult(instance, setupResult, isSSR)\r\n    }\r\n  } else {\r\n    finishComponentSetup(instance, isSSR)\r\n  }\r\n}\r\n\r\nexport function handleSetupResult(\r\n  instance: ComponentInternalInstance,\r\n  setupResult: unknown,\r\n  isSSR: boolean\r\n) {\r\n  if (isFunction(setupResult)) {\r\n    // setup returned an inline render function\r\n    if (__NODE_JS__ && (instance.type as ComponentOptions).__ssrInlineRender) {\r\n      // when the function's name is `ssrRender` (compiled by SFC inline mode),\r\n      // set it as ssrRender instead.\r\n      instance.ssrRender = setupResult\r\n    } else {\r\n      instance.render = setupResult as InternalRenderFunction\r\n    }\r\n  } else if (isObject(setupResult)) {\r\n    if (__DEV__ && isVNode(setupResult)) {\r\n      warn(\r\n        `setup() should not return VNodes directly - ` +\r\n          `return a render function instead.`\r\n      )\r\n    }\r\n    // setup returned bindings.\r\n    // assuming a render function compiled from template is present.\r\n    if (__DEV__ || __FEATURE_PROD_DEVTOOLS__) {\r\n      instance.devtoolsRawSetupState = setupResult\r\n    }\r\n    instance.setupState = proxyRefs(setupResult)\r\n    if (__DEV__) {\r\n      exposeSetupStateOnRenderContext(instance)\r\n    }\r\n  } else if (__DEV__ && setupResult !== undefined) {\r\n    warn(\r\n      `setup() should return an object. Received: ${\r\n        setupResult === null ? 'null' : typeof setupResult\r\n      }`\r\n    )\r\n  }\r\n  finishComponentSetup(instance, isSSR)\r\n}\r\n\r\ntype CompileFunction = (\r\n  template: string | object,\r\n  options?: CompilerOptions\r\n) => InternalRenderFunction\r\n\r\nlet compile: CompileFunction | undefined\r\nlet installWithProxy: (i: ComponentInternalInstance) => void\r\n\r\n/**\r\n * For runtime-dom to register the compiler.\r\n * Note the exported method uses any to avoid d.ts relying on the compiler types.\r\n */\r\nexport function registerRuntimeCompiler(_compile: any) {\r\n  compile = _compile\r\n  installWithProxy = i => {\r\n    if (i.render!._rc) {\r\n      i.withProxy = new Proxy(i.ctx, RuntimeCompiledPublicInstanceProxyHandlers)\r\n    }\r\n  }\r\n}\r\n\r\n// dev only\r\nexport const isRuntimeOnly = () => !compile\r\n\r\nexport function finishComponentSetup(\r\n  instance: ComponentInternalInstance,\r\n  isSSR: boolean,\r\n  skipOptions?: boolean\r\n) {\r\n  const Component = instance.type as ComponentOptions\r\n\r\n  if (__COMPAT__) {\r\n    convertLegacyRenderFn(instance)\r\n\r\n    if (__DEV__ && Component.compatConfig) {\r\n      validateCompatConfig(Component.compatConfig)\r\n    }\r\n  }\r\n\r\n  // template / render function normalization\r\n  if (__NODE_JS__ && isSSR) {\r\n    // 1. the render function may already exist, returned by `setup`\r\n    // 2. otherwise try to use the `Component.render`\r\n    // 3. if the component doesn't have a render function,\r\n    //    set `instance.render` to NOOP so that it can inherit the render\r\n    //    function from mixins/extend\r\n    instance.render = (instance.render ||\r\n      Component.render ||\r\n      NOOP) as InternalRenderFunction\r\n  } else if (!instance.render) {\r\n    // could be set from setup()\r\n    if (compile && !Component.render) {\r\n      const template =\r\n        (__COMPAT__ &&\r\n          instance.vnode.props &&\r\n          instance.vnode.props['inline-template']) ||\r\n        Component.template\r\n      if (template) {\r\n        if (__DEV__) {\r\n          startMeasure(instance, `compile`)\r\n        }\r\n        const { isCustomElement, compilerOptions } = instance.appContext.config\r\n        const { delimiters, compilerOptions: componentCompilerOptions } =\r\n          Component\r\n        const finalCompilerOptions: CompilerOptions = extend(\r\n          extend(\r\n            {\r\n              isCustomElement,\r\n              delimiters\r\n            },\r\n            compilerOptions\r\n          ),\r\n          componentCompilerOptions\r\n        )\r\n        if (__COMPAT__) {\r\n          // pass runtime compat config into the compiler\r\n          finalCompilerOptions.compatConfig = Object.create(globalCompatConfig)\r\n          if (Component.compatConfig) {\r\n            extend(finalCompilerOptions.compatConfig, Component.compatConfig)\r\n          }\r\n        }\r\n        Component.render = compile(template, finalCompilerOptions)\r\n        if (__DEV__) {\r\n          endMeasure(instance, `compile`)\r\n        }\r\n      }\r\n    }\r\n\r\n    instance.render = (Component.render || NOOP) as InternalRenderFunction\r\n\r\n    // for runtime-compiled render functions using `with` blocks, the render\r\n    // proxy used needs a different `has` handler which is more performant and\r\n    // also only allows a whitelist of globals to fallthrough.\r\n    if (installWithProxy) {\r\n      installWithProxy(instance)\r\n    }\r\n  }\r\n\r\n  // support for 2.x options\r\n  if (__FEATURE_OPTIONS_API__ && !(__COMPAT__ && skipOptions)) {\r\n    setCurrentInstance(instance)\r\n    pauseTracking()\r\n    applyOptions(instance)\r\n    resetTracking()\r\n    unsetCurrentInstance()\r\n  }\r\n\r\n  // warn missing template/render\r\n  // the runtime compilation of template in SSR is done by server-render\r\n  if (__DEV__ && !Component.render && instance.render === NOOP && !isSSR) {\r\n    /* istanbul ignore if */\r\n    if (!compile && Component.template) {\r\n      warn(\r\n        `Component provided template option but ` +\r\n          `runtime compilation is not supported in this build of Vue.` +\r\n          (__ESM_BUNDLER__\r\n            ? ` Configure your bundler to alias \"vue\" to \"vue/dist/vue.esm-bundler.js\".`\r\n            : __ESM_BROWSER__\r\n            ? ` Use \"vue.esm-browser.js\" instead.`\r\n            : __GLOBAL__\r\n            ? ` Use \"vue.global.js\" instead.`\r\n            : ``) /* should not happen */\r\n      )\r\n    } else {\r\n      warn(`Component is missing template or render function.`)\r\n    }\r\n  }\r\n}\r\n\r\nfunction createAttrsProxy(instance: ComponentInternalInstance): Data {\r\n  return new Proxy(\r\n    instance.attrs,\r\n    __DEV__\r\n      ? {\r\n          get(target, key: string) {\r\n            markAttrsAccessed()\r\n            track(instance, TrackOpTypes.GET, '$attrs')\r\n            return target[key]\r\n          },\r\n          set() {\r\n            warn(`setupContext.attrs is readonly.`)\r\n            return false\r\n          },\r\n          deleteProperty() {\r\n            warn(`setupContext.attrs is readonly.`)\r\n            return false\r\n          }\r\n        }\r\n      : {\r\n          get(target, key: string) {\r\n            track(instance, TrackOpTypes.GET, '$attrs')\r\n            return target[key]\r\n          }\r\n        }\r\n  )\r\n}\r\n\r\nexport function createSetupContext(\r\n  instance: ComponentInternalInstance\r\n): SetupContext {\r\n  const expose: SetupContext['expose'] = exposed => {\r\n    if (__DEV__ && instance.exposed) {\r\n      warn(`expose() should be called only once per setup().`)\r\n    }\r\n    instance.exposed = exposed || {}\r\n  }\r\n\r\n  let attrs: Data\r\n  if (__DEV__) {\r\n    // We use getters in dev in case libs like test-utils overwrite instance\r\n    // properties (overwrites should not be done in prod)\r\n    return Object.freeze({\r\n      get attrs() {\r\n        return attrs || (attrs = createAttrsProxy(instance))\r\n      },\r\n      get slots() {\r\n        return shallowReadonly(instance.slots)\r\n      },\r\n      get emit() {\r\n        return (event: string, ...args: any[]) => instance.emit(event, ...args)\r\n      },\r\n      expose\r\n    })\r\n  } else {\r\n    return {\r\n      get attrs() {\r\n        return attrs || (attrs = createAttrsProxy(instance))\r\n      },\r\n      slots: instance.slots,\r\n      emit: instance.emit,\r\n      expose\r\n    }\r\n  }\r\n}\r\n\r\nexport function getExposeProxy(instance: ComponentInternalInstance) {\r\n  if (instance.exposed) {\r\n    return (\r\n      instance.exposeProxy ||\r\n      (instance.exposeProxy = new Proxy(proxyRefs(markRaw(instance.exposed)), {\r\n        get(target, key: string) {\r\n          if (key in target) {\r\n            return target[key]\r\n          } else if (key in publicPropertiesMap) {\r\n            return publicPropertiesMap[key](instance)\r\n          }\r\n        }\r\n      }))\r\n    )\r\n  }\r\n}\r\n\r\nconst classifyRE = /(?:^|[-_])(\\w)/g\r\nconst classify = (str: string): string =>\r\n  str.replace(classifyRE, c => c.toUpperCase()).replace(/[-_]/g, '')\r\n\r\nexport function getComponentName(\r\n  Component: ConcreteComponent\r\n): string | undefined {\r\n  return isFunction(Component)\r\n    ? Component.displayName || Component.name\r\n    : Component.name\r\n}\r\n\r\n/* istanbul ignore next */\r\nexport function formatComponentName(\r\n  instance: ComponentInternalInstance | null,\r\n  Component: ConcreteComponent,\r\n  isRoot = false\r\n): string {\r\n  let name = getComponentName(Component)\r\n  if (!name && Component.__file) {\r\n    const match = Component.__file.match(/([^/\\\\]+)\\.\\w+$/)\r\n    if (match) {\r\n      name = match[1]\r\n    }\r\n  }\r\n\r\n  if (!name && instance && instance.parent) {\r\n    // try to infer the name based on reverse resolution\r\n    const inferFromRegistry = (registry: Record<string, any> | undefined) => {\r\n      for (const key in registry) {\r\n        if (registry[key] === Component) {\r\n          return key\r\n        }\r\n      }\r\n    }\r\n    name =\r\n      inferFromRegistry(\r\n        instance.components ||\r\n          (instance.parent.type as ComponentOptions).components\r\n      ) || inferFromRegistry(instance.appContext.components)\r\n  }\r\n\r\n  return name ? classify(name) : isRoot ? `App` : `Anonymous`\r\n}\r\n\r\nexport function isClassComponent(value: unknown): value is ClassComponent {\r\n  return isFunction(value) && '__vccOpts' in value\r\n}\r\n","import { ErrorCodes, callWithErrorHandling } from './errorHandling'\r\nimport { isArray } from '@vue/shared'\r\nimport { ComponentInternalInstance, getComponentName } from './component'\r\nimport { warn } from './warning'\r\n\r\nexport interface SchedulerJob extends Function {\r\n  id?: number\r\n  active?: boolean\r\n  computed?: boolean\r\n  /**\r\n   * Indicates whether the effect is allowed to recursively trigger itself\r\n   * when managed by the scheduler.\r\n   *\r\n   * By default, a job cannot trigger itself because some built-in method calls,\r\n   * e.g. Array.prototype.push actually performs reads as well (#1740) which\r\n   * can lead to confusing infinite loops.\r\n   * The allowed cases are component update functions and watch callbacks.\r\n   * Component update functions may update child component props, which in turn\r\n   * trigger flush: \"pre\" watch callbacks that mutates state that the parent\r\n   * relies on (#1801). Watch callbacks doesn't track its dependencies so if it\r\n   * triggers itself again, it's likely intentional and it is the user's\r\n   * responsibility to perform recursive state mutation that eventually\r\n   * stabilizes (#1727).\r\n   */\r\n  allowRecurse?: boolean\r\n  /**\r\n   * Attached by renderer.ts when setting up a component's render effect\r\n   * Used to obtain component information when reporting max recursive updates.\r\n   * dev only.\r\n   */\r\n  ownerInstance?: ComponentInternalInstance\r\n}\r\n\r\nexport type SchedulerJobs = SchedulerJob | SchedulerJob[]\r\n\r\nlet isFlushing = false\r\nlet isFlushPending = false\r\n\r\nconst queue: SchedulerJob[] = []\r\nlet flushIndex = 0\r\n\r\nconst pendingPreFlushCbs: SchedulerJob[] = []\r\nlet activePreFlushCbs: SchedulerJob[] | null = null\r\nlet preFlushIndex = 0\r\n\r\nconst pendingPostFlushCbs: SchedulerJob[] = []\r\nlet activePostFlushCbs: SchedulerJob[] | null = null\r\nlet postFlushIndex = 0\r\n\r\nconst resolvedPromise: Promise<any> = Promise.resolve()\r\nlet currentFlushPromise: Promise<void> | null = null\r\n\r\nlet currentPreFlushParentJob: SchedulerJob | null = null\r\n\r\nconst RECURSION_LIMIT = 100\r\ntype CountMap = Map<SchedulerJob, number>\r\n\r\nexport function nextTick<T = void>(\r\n  this: T,\r\n  fn?: (this: T) => void\r\n): Promise<void> {\r\n  const p = currentFlushPromise || resolvedPromise\r\n  return fn ? p.then(this ? fn.bind(this) : fn) : p\r\n}\r\n\r\n// #2768\r\n// Use binary-search to find a suitable position in the queue,\r\n// so that the queue maintains the increasing order of job's id,\r\n// which can prevent the job from being skipped and also can avoid repeated patching.\r\nfunction findInsertionIndex(id: number) {\r\n  // the start index should be `flushIndex + 1`\r\n  let start = flushIndex + 1\r\n  let end = queue.length\r\n\r\n  while (start < end) {\r\n    const middle = (start + end) >>> 1\r\n    const middleJobId = getId(queue[middle])\r\n    middleJobId < id ? (start = middle + 1) : (end = middle)\r\n  }\r\n\r\n  return start\r\n}\r\n\r\nexport function queueJob(job: SchedulerJob) {\r\n  // the dedupe search uses the startIndex argument of Array.includes()\r\n  // by default the search index includes the current job that is being run\r\n  // so it cannot recursively trigger itself again.\r\n  // if the job is a watch() callback, the search will start with a +1 index to\r\n  // allow it recursively trigger itself - it is the user's responsibility to\r\n  // ensure it doesn't end up in an infinite loop.\r\n  if (\r\n    (!queue.length ||\r\n      !queue.includes(\r\n        job,\r\n        isFlushing && job.allowRecurse ? flushIndex + 1 : flushIndex\r\n      )) &&\r\n    job !== currentPreFlushParentJob\r\n  ) {\r\n    if (job.id == null) {\r\n      queue.push(job)\r\n    } else {\r\n      queue.splice(findInsertionIndex(job.id), 0, job)\r\n    }\r\n    queueFlush()\r\n  }\r\n}\r\n\r\nfunction queueFlush() {\r\n  if (!isFlushing && !isFlushPending) {\r\n    isFlushPending = true\r\n    currentFlushPromise = resolvedPromise.then(flushJobs)\r\n  }\r\n}\r\n\r\nexport function invalidateJob(job: SchedulerJob) {\r\n  const i = queue.indexOf(job)\r\n  if (i > flushIndex) {\r\n    queue.splice(i, 1)\r\n  }\r\n}\r\n\r\nfunction queueCb(\r\n  cb: SchedulerJobs,\r\n  activeQueue: SchedulerJob[] | null,\r\n  pendingQueue: SchedulerJob[],\r\n  index: number\r\n) {\r\n  if (!isArray(cb)) {\r\n    if (\r\n      !activeQueue ||\r\n      !activeQueue.includes(\r\n        cb,\r\n        cb.allowRecurse ? index + 1 : index\r\n      )\r\n    ) {\r\n      pendingQueue.push(cb)\r\n    }\r\n  } else {\r\n    // if cb is an array, it is a component lifecycle hook which can only be\r\n    // triggered by a job, which is already deduped in the main queue, so\r\n    // we can skip duplicate check here to improve perf\r\n    pendingQueue.push(...cb)\r\n  }\r\n  queueFlush()\r\n}\r\n\r\nexport function queuePreFlushCb(cb: SchedulerJob) {\r\n  queueCb(cb, activePreFlushCbs, pendingPreFlushCbs, preFlushIndex)\r\n}\r\n\r\nexport function queuePostFlushCb(cb: SchedulerJobs) {\r\n  queueCb(cb, activePostFlushCbs, pendingPostFlushCbs, postFlushIndex)\r\n}\r\n\r\nexport function flushPreFlushCbs(\r\n  seen?: CountMap,\r\n  parentJob: SchedulerJob | null = null\r\n) {\r\n  if (pendingPreFlushCbs.length) {\r\n    currentPreFlushParentJob = parentJob\r\n    activePreFlushCbs = [...new Set(pendingPreFlushCbs)]\r\n    pendingPreFlushCbs.length = 0\r\n    if (__DEV__) {\r\n      seen = seen || new Map()\r\n    }\r\n    for (\r\n      preFlushIndex = 0;\r\n      preFlushIndex < activePreFlushCbs.length;\r\n      preFlushIndex++\r\n    ) {\r\n      if (\r\n        __DEV__ &&\r\n        checkRecursiveUpdates(seen!, activePreFlushCbs[preFlushIndex])\r\n      ) {\r\n        continue\r\n      }\r\n      activePreFlushCbs[preFlushIndex]()\r\n    }\r\n    activePreFlushCbs = null\r\n    preFlushIndex = 0\r\n    currentPreFlushParentJob = null\r\n    // recursively flush until it drains\r\n    flushPreFlushCbs(seen, parentJob)\r\n  }\r\n}\r\n\r\nexport function flushPostFlushCbs(seen?: CountMap) {\r\n  if (pendingPostFlushCbs.length) {\r\n    const deduped = [...new Set(pendingPostFlushCbs)]\r\n    pendingPostFlushCbs.length = 0\r\n\r\n    // #1947 already has active queue, nested flushPostFlushCbs call\r\n    if (activePostFlushCbs) {\r\n      activePostFlushCbs.push(...deduped)\r\n      return\r\n    }\r\n\r\n    activePostFlushCbs = deduped\r\n    if (__DEV__) {\r\n      seen = seen || new Map()\r\n    }\r\n\r\n    activePostFlushCbs.sort((a, b) => getId(a) - getId(b))\r\n\r\n    for (\r\n      postFlushIndex = 0;\r\n      postFlushIndex < activePostFlushCbs.length;\r\n      postFlushIndex++\r\n    ) {\r\n      if (\r\n        __DEV__ &&\r\n        checkRecursiveUpdates(seen!, activePostFlushCbs[postFlushIndex])\r\n      ) {\r\n        continue\r\n      }\r\n      activePostFlushCbs[postFlushIndex]()\r\n    }\r\n    activePostFlushCbs = null\r\n    postFlushIndex = 0\r\n  }\r\n}\r\n\r\nconst getId = (job: SchedulerJob): number =>\r\n  job.id == null ? Infinity : job.id\r\n\r\nfunction flushJobs(seen?: CountMap) {\r\n  isFlushPending = false\r\n  isFlushing = true\r\n  if (__DEV__) {\r\n    seen = seen || new Map()\r\n  }\r\n\r\n  flushPreFlushCbs(seen)\r\n\r\n  // Sort queue before flush.\r\n  // This ensures that:\r\n  // 1. Components are updated from parent to child. (because parent is always\r\n  //    created before the child so its render effect will have smaller\r\n  //    priority number)\r\n  // 2. If a component is unmounted during a parent component's update,\r\n  //    its update can be skipped.\r\n  queue.sort((a, b) => getId(a) - getId(b))\r\n\r\n  try {\r\n    for (flushIndex = 0; flushIndex < queue.length; flushIndex++) {\r\n      const job = queue[flushIndex]\r\n      if (job && job.active !== false) {\r\n        if (__DEV__ && checkRecursiveUpdates(seen!, job)) {\r\n          continue\r\n        }\r\n        // console.log(`running:`, job.id)\r\n        callWithErrorHandling(job, null, ErrorCodes.SCHEDULER)\r\n      }\r\n    }\r\n  } finally {\r\n    flushIndex = 0\r\n    queue.length = 0\r\n\r\n    flushPostFlushCbs(seen)\r\n\r\n    isFlushing = false\r\n    currentFlushPromise = null\r\n    // some postFlushCb queued jobs!\r\n    // keep flushing until it drains.\r\n    if (\r\n      queue.length ||\r\n      pendingPreFlushCbs.length ||\r\n      pendingPostFlushCbs.length\r\n    ) {\r\n      flushJobs(seen)\r\n    }\r\n  }\r\n}\r\n\r\nfunction checkRecursiveUpdates(seen: CountMap, fn: SchedulerJob) {\r\n  if (!seen.has(fn)) {\r\n    seen.set(fn, 1)\r\n  } else {\r\n    const count = seen.get(fn)!\r\n    if (count > RECURSION_LIMIT) {\r\n      const instance = fn.ownerInstance\r\n      const componentName = instance && getComponentName(instance.type)\r\n      warn(\r\n        `Maximum recursive updates exceeded${\r\n          componentName ? ` in component <${componentName}>` : ``\r\n        }. ` +\r\n          `This means you have a reactive effect that is mutating its own ` +\r\n          `dependencies and thus recursively triggering itself. Possible sources ` +\r\n          `include component template, render function, updated hook or ` +\r\n          `watcher source function.`\r\n      )\r\n      return true\r\n    } else {\r\n      seen.set(fn, count + 1)\r\n    }\r\n  }\r\n}\r\n","import { ComponentInternalInstance } from '../component'\r\nimport { SuspenseBoundary } from './Suspense'\r\nimport {\r\n  RendererInternals,\r\n  MoveType,\r\n  RendererElement,\r\n  RendererNode,\r\n  RendererOptions,\r\n  traverseStaticChildren\r\n} from '../renderer'\r\nimport { VNode, VNodeArrayChildren, VNodeProps } from '../vnode'\r\nimport { isString, ShapeFlags } from '@vue/shared'\r\nimport { warn } from '../warning'\r\nimport { isHmrUpdating } from '../hmr'\r\n\r\nexport type TeleportVNode = VNode<RendererNode, RendererElement, TeleportProps>\r\n\r\nexport interface TeleportProps {\r\n  to: string | RendererElement | null | undefined\r\n  disabled?: boolean\r\n}\r\n\r\nexport const isTeleport = (type: any): boolean => type.__isTeleport\r\n\r\nconst isTeleportDisabled = (props: VNode['props']): boolean =>\r\n  props && (props.disabled || props.disabled === '')\r\n\r\nconst isTargetSVG = (target: RendererElement): boolean =>\r\n  typeof SVGElement !== 'undefined' && target instanceof SVGElement\r\n\r\nconst resolveTarget = <T = RendererElement>(\r\n  props: TeleportProps | null,\r\n  select: RendererOptions['querySelector']\r\n): T | null => {\r\n  const targetSelector = props && props.to\r\n  if (isString(targetSelector)) {\r\n    if (!select) {\r\n      __DEV__ &&\r\n        warn(\r\n          `Current renderer does not support string target for Teleports. ` +\r\n            `(missing querySelector renderer option)`\r\n        )\r\n      return null\r\n    } else {\r\n      const target = select(targetSelector)\r\n      if (!target) {\r\n        __DEV__ &&\r\n          warn(\r\n            `Failed to locate Teleport target with selector \"${targetSelector}\". ` +\r\n              `Note the target element must exist before the component is mounted - ` +\r\n              `i.e. the target cannot be rendered by the component itself, and ` +\r\n              `ideally should be outside of the entire Vue component tree.`\r\n          )\r\n      }\r\n      return target as any\r\n    }\r\n  } else {\r\n    if (__DEV__ && !targetSelector && !isTeleportDisabled(props)) {\r\n      warn(`Invalid Teleport target: ${targetSelector}`)\r\n    }\r\n    return targetSelector as any\r\n  }\r\n}\r\n\r\nexport const TeleportImpl = {\r\n  __isTeleport: true,\r\n  process(\r\n    n1: TeleportVNode | null,\r\n    n2: TeleportVNode,\r\n    container: RendererElement,\r\n    anchor: RendererNode | null,\r\n    parentComponent: ComponentInternalInstance | null,\r\n    parentSuspense: SuspenseBoundary | null,\r\n    isSVG: boolean,\r\n    slotScopeIds: string[] | null,\r\n    optimized: boolean,\r\n    internals: RendererInternals\r\n  ) {\r\n    const {\r\n      mc: mountChildren,\r\n      pc: patchChildren,\r\n      pbc: patchBlockChildren,\r\n      o: { insert, querySelector, createText, createComment }\r\n    } = internals\r\n\r\n    const disabled = isTeleportDisabled(n2.props)\r\n    let { shapeFlag, children, dynamicChildren } = n2\r\n\r\n    // #3302\r\n    // HMR updated, force full diff\r\n    if (__DEV__ && isHmrUpdating) {\r\n      optimized = false\r\n      dynamicChildren = null\r\n    }\r\n\r\n    if (n1 == null) {\r\n      // insert anchors in the main view\r\n      const placeholder = (n2.el = __DEV__\r\n        ? createComment('teleport start')\r\n        : createText(''))\r\n      const mainAnchor = (n2.anchor = __DEV__\r\n        ? createComment('teleport end')\r\n        : createText(''))\r\n      insert(placeholder, container, anchor)\r\n      insert(mainAnchor, container, anchor)\r\n      const target = (n2.target = resolveTarget(n2.props, querySelector))\r\n      const targetAnchor = (n2.targetAnchor = createText(''))\r\n      if (target) {\r\n        insert(targetAnchor, target)\r\n        // #2652 we could be teleporting from a non-SVG tree into an SVG tree\r\n        isSVG = isSVG || isTargetSVG(target)\r\n      } else if (__DEV__ && !disabled) {\r\n        warn('Invalid Teleport target on mount:', target, `(${typeof target})`)\r\n      }\r\n\r\n      const mount = (container: RendererElement, anchor: RendererNode) => {\r\n        // Teleport *always* has Array children. This is enforced in both the\r\n        // compiler and vnode children normalization.\r\n        if (shapeFlag & ShapeFlags.ARRAY_CHILDREN) {\r\n          mountChildren(\r\n            children as VNodeArrayChildren,\r\n            container,\r\n            anchor,\r\n            parentComponent,\r\n            parentSuspense,\r\n            isSVG,\r\n            slotScopeIds,\r\n            optimized\r\n          )\r\n        }\r\n      }\r\n\r\n      if (disabled) {\r\n        mount(container, mainAnchor)\r\n      } else if (target) {\r\n        mount(target, targetAnchor)\r\n      }\r\n    } else {\r\n      // update content\r\n      n2.el = n1.el\r\n      const mainAnchor = (n2.anchor = n1.anchor)!\r\n      const target = (n2.target = n1.target)!\r\n      const targetAnchor = (n2.targetAnchor = n1.targetAnchor)!\r\n      const wasDisabled = isTeleportDisabled(n1.props)\r\n      const currentContainer = wasDisabled ? container : target\r\n      const currentAnchor = wasDisabled ? mainAnchor : targetAnchor\r\n      isSVG = isSVG || isTargetSVG(target)\r\n\r\n      if (dynamicChildren) {\r\n        // fast path when the teleport happens to be a block root\r\n        patchBlockChildren(\r\n          n1.dynamicChildren!,\r\n          dynamicChildren,\r\n          currentContainer,\r\n          parentComponent,\r\n          parentSuspense,\r\n          isSVG,\r\n          slotScopeIds\r\n        )\r\n        // even in block tree mode we need to make sure all root-level nodes\r\n        // in the teleport inherit previous DOM references so that they can\r\n        // be moved in future patches.\r\n        traverseStaticChildren(n1, n2, true)\r\n      } else if (!optimized) {\r\n        patchChildren(\r\n          n1,\r\n          n2,\r\n          currentContainer,\r\n          currentAnchor,\r\n          parentComponent,\r\n          parentSuspense,\r\n          isSVG,\r\n          slotScopeIds,\r\n          false\r\n        )\r\n      }\r\n\r\n      if (disabled) {\r\n        if (!wasDisabled) {\r\n          // enabled -> disabled\r\n          // move into main container\r\n          moveTeleport(\r\n            n2,\r\n            container,\r\n            mainAnchor,\r\n            internals,\r\n            TeleportMoveTypes.TOGGLE\r\n          )\r\n        }\r\n      } else {\r\n        // target changed\r\n        if ((n2.props && n2.props.to) !== (n1.props && n1.props.to)) {\r\n          const nextTarget = (n2.target = resolveTarget(\r\n            n2.props,\r\n            querySelector\r\n          ))\r\n          if (nextTarget) {\r\n            moveTeleport(\r\n              n2,\r\n              nextTarget,\r\n              null,\r\n              internals,\r\n              TeleportMoveTypes.TARGET_CHANGE\r\n            )\r\n          } else if (__DEV__) {\r\n            warn(\r\n              'Invalid Teleport target on update:',\r\n              target,\r\n              `(${typeof target})`\r\n            )\r\n          }\r\n        } else if (wasDisabled) {\r\n          // disabled -> enabled\r\n          // move into teleport target\r\n          moveTeleport(\r\n            n2,\r\n            target,\r\n            targetAnchor,\r\n            internals,\r\n            TeleportMoveTypes.TOGGLE\r\n          )\r\n        }\r\n      }\r\n    }\r\n  },\r\n\r\n  remove(\r\n    vnode: VNode,\r\n    parentComponent: ComponentInternalInstance | null,\r\n    parentSuspense: SuspenseBoundary | null,\r\n    optimized: boolean,\r\n    { um: unmount, o: { remove: hostRemove } }: RendererInternals,\r\n    doRemove: Boolean\r\n  ) {\r\n    const { shapeFlag, children, anchor, targetAnchor, target, props } = vnode\r\n\r\n    if (target) {\r\n      hostRemove(targetAnchor!)\r\n    }\r\n\r\n    // an unmounted teleport should always remove its children if not disabled\r\n    if (doRemove || !isTeleportDisabled(props)) {\r\n      hostRemove(anchor!)\r\n      if (shapeFlag & ShapeFlags.ARRAY_CHILDREN) {\r\n        for (let i = 0; i < (children as VNode[]).length; i++) {\r\n          const child = (children as VNode[])[i]\r\n          unmount(\r\n            child,\r\n            parentComponent,\r\n            parentSuspense,\r\n            true,\r\n            !!child.dynamicChildren\r\n          )\r\n        }\r\n      }\r\n    }\r\n  },\r\n\r\n  move: moveTeleport,\r\n  hydrate: hydrateTeleport\r\n}\r\n\r\nexport const enum TeleportMoveTypes {\r\n  TARGET_CHANGE,\r\n  TOGGLE, // enable / disable\r\n  REORDER // moved in the main view\r\n}\r\n\r\nfunction moveTeleport(\r\n  vnode: VNode,\r\n  container: RendererElement,\r\n  parentAnchor: RendererNode | null,\r\n  { o: { insert }, m: move }: RendererInternals,\r\n  moveType: TeleportMoveTypes = TeleportMoveTypes.REORDER\r\n) {\r\n  // move target anchor if this is a target change.\r\n  if (moveType === TeleportMoveTypes.TARGET_CHANGE) {\r\n    insert(vnode.targetAnchor!, container, parentAnchor)\r\n  }\r\n  const { el, anchor, shapeFlag, children, props } = vnode\r\n  const isReorder = moveType === TeleportMoveTypes.REORDER\r\n  // move main view anchor if this is a re-order.\r\n  if (isReorder) {\r\n    insert(el!, container, parentAnchor)\r\n  }\r\n  // if this is a re-order and teleport is enabled (content is in target)\r\n  // do not move children. So the opposite is: only move children if this\r\n  // is not a reorder, or the teleport is disabled\r\n  if (!isReorder || isTeleportDisabled(props)) {\r\n    // Teleport has either Array children or no children.\r\n    if (shapeFlag & ShapeFlags.ARRAY_CHILDREN) {\r\n      for (let i = 0; i < (children as VNode[]).length; i++) {\r\n        move(\r\n          (children as VNode[])[i],\r\n          container,\r\n          parentAnchor,\r\n          MoveType.REORDER\r\n        )\r\n      }\r\n    }\r\n  }\r\n  // move main view anchor if this is a re-order.\r\n  if (isReorder) {\r\n    insert(anchor!, container, parentAnchor)\r\n  }\r\n}\r\n\r\ninterface TeleportTargetElement extends Element {\r\n  // last teleport target\r\n  _lpa?: Node | null\r\n}\r\n\r\nfunction hydrateTeleport(\r\n  node: Node,\r\n  vnode: TeleportVNode,\r\n  parentComponent: ComponentInternalInstance | null,\r\n  parentSuspense: SuspenseBoundary | null,\r\n  slotScopeIds: string[] | null,\r\n  optimized: boolean,\r\n  {\r\n    o: { nextSibling, parentNode, querySelector }\r\n  }: RendererInternals<Node, Element>,\r\n  hydrateChildren: (\r\n    node: Node | null,\r\n    vnode: VNode,\r\n    container: Element,\r\n    parentComponent: ComponentInternalInstance | null,\r\n    parentSuspense: SuspenseBoundary | null,\r\n    slotScopeIds: string[] | null,\r\n    optimized: boolean\r\n  ) => Node | null\r\n): Node | null {\r\n  const target = (vnode.target = resolveTarget<Element>(\r\n    vnode.props,\r\n    querySelector\r\n  ))\r\n  if (target) {\r\n    // if multiple teleports rendered to the same target element, we need to\r\n    // pick up from where the last teleport finished instead of the first node\r\n    const targetNode =\r\n      (target as TeleportTargetElement)._lpa || target.firstChild\r\n    if (vnode.shapeFlag & ShapeFlags.ARRAY_CHILDREN) {\r\n      if (isTeleportDisabled(vnode.props)) {\r\n        vnode.anchor = hydrateChildren(\r\n          nextSibling(node),\r\n          vnode,\r\n          parentNode(node)!,\r\n          parentComponent,\r\n          parentSuspense,\r\n          slotScopeIds,\r\n          optimized\r\n        )\r\n        vnode.targetAnchor = targetNode\r\n      } else {\r\n        vnode.anchor = nextSibling(node)\r\n        vnode.targetAnchor = hydrateChildren(\r\n          targetNode,\r\n          vnode,\r\n          target,\r\n          parentComponent,\r\n          parentSuspense,\r\n          slotScopeIds,\r\n          optimized\r\n        )\r\n      }\r\n      ;(target as TeleportTargetElement)._lpa =\r\n        vnode.targetAnchor && nextSibling(vnode.targetAnchor as Node)\r\n    }\r\n  }\r\n  return vnode.anchor && nextSibling(vnode.anchor as Node)\r\n}\r\n\r\n// Force-casted public typing for h and TSX props inference\r\nexport const Teleport = TeleportImpl as any as {\r\n  __isTeleport: true\r\n  new (): { $props: VNodeProps & TeleportProps }\r\n}\r\n","import {\r\n  currentInstance,\r\n  ConcreteComponent,\r\n  ComponentOptions,\r\n  getComponentName\r\n} from '../component'\r\nimport { currentRenderingInstance } from '../componentRenderContext'\r\nimport { Directive } from '../directives'\r\nimport { camelize, capitalize, isString } from '@vue/shared'\r\nimport { warn } from '../warning'\r\nimport { VNodeTypes } from '../vnode'\r\n\r\nexport const COMPONENTS = 'components'\r\nexport const DIRECTIVES = 'directives'\r\nexport const FILTERS = 'filters'\r\n\r\nexport type AssetTypes = typeof COMPONENTS | typeof DIRECTIVES | typeof FILTERS\r\n\r\n/**\r\n * @private\r\n */\r\nexport function resolveComponent(\r\n  name: string,\r\n  maybeSelfReference?: boolean\r\n): ConcreteComponent | string {\r\n  return resolveAsset(COMPONENTS, name, true, maybeSelfReference) || name\r\n}\r\n\r\nexport const NULL_DYNAMIC_COMPONENT = Symbol()\r\n\r\n/**\r\n * @private\r\n */\r\nexport function resolveDynamicComponent(component: unknown): VNodeTypes {\r\n  if (isString(component)) {\r\n    return resolveAsset(COMPONENTS, component, false) || component\r\n  } else {\r\n    // invalid types will fallthrough to createVNode and raise warning\r\n    return (component || NULL_DYNAMIC_COMPONENT) as any\r\n  }\r\n}\r\n\r\n/**\r\n * @private\r\n */\r\nexport function resolveDirective(name: string): Directive | undefined {\r\n  return resolveAsset(DIRECTIVES, name)\r\n}\r\n\r\n/**\r\n * v2 compat only\r\n * @internal\r\n */\r\nexport function resolveFilter(name: string): Function | undefined {\r\n  return resolveAsset(FILTERS, name)\r\n}\r\n\r\n/**\r\n * @private\r\n * overload 1: components\r\n */\r\nfunction resolveAsset(\r\n  type: typeof COMPONENTS,\r\n  name: string,\r\n  warnMissing?: boolean,\r\n  maybeSelfReference?: boolean\r\n): ConcreteComponent | undefined\r\n// overload 2: directives\r\nfunction resolveAsset(\r\n  type: typeof DIRECTIVES,\r\n  name: string\r\n): Directive | undefined\r\n// implementation\r\n// overload 3: filters (compat only)\r\nfunction resolveAsset(type: typeof FILTERS, name: string): Function | undefined\r\n// implementation\r\nfunction resolveAsset(\r\n  type: AssetTypes,\r\n  name: string,\r\n  warnMissing = true,\r\n  maybeSelfReference = false\r\n) {\r\n  const instance = currentRenderingInstance || currentInstance\r\n  if (instance) {\r\n    const Component = instance.type\r\n\r\n    // explicit self name has highest priority\r\n    if (type === COMPONENTS) {\r\n      const selfName = getComponentName(Component)\r\n      if (\r\n        selfName &&\r\n        (selfName === name ||\r\n          selfName === camelize(name) ||\r\n          selfName === capitalize(camelize(name)))\r\n      ) {\r\n        return Component\r\n      }\r\n    }\r\n\r\n    const res =\r\n      // local registration\r\n      // check instance[type] first which is resolved for options API\r\n      resolve(instance[type] || (Component as ComponentOptions)[type], name) ||\r\n      // global registration\r\n      resolve(instance.appContext[type], name)\r\n\r\n    if (!res && maybeSelfReference) {\r\n      // fallback to implicit self-reference\r\n      return Component\r\n    }\r\n\r\n    if (__DEV__ && warnMissing && !res) {\r\n      warn(`Failed to resolve ${type.slice(0, -1)}: ${name}`)\r\n    }\r\n\r\n    return res\r\n  } else if (__DEV__) {\r\n    warn(\r\n      `resolve${capitalize(type.slice(0, -1))} ` +\r\n        `can only be used in render() or setup().`\r\n    )\r\n  }\r\n}\r\n\r\nfunction resolve(registry: Record<string, any> | undefined, name: string) {\r\n  return (\r\n    registry &&\r\n    (registry[name] ||\r\n      registry[camelize(name)] ||\r\n      registry[capitalize(camelize(name))])\r\n  )\r\n}\r\n","import {\r\n  isArray,\r\n  isFunction,\r\n  isString,\r\n  isObject,\r\n  EMPTY_ARR,\r\n  extend,\r\n  normalizeClass,\r\n  normalizeStyle,\r\n  PatchFlags,\r\n  ShapeFlags,\r\n  SlotFlags,\r\n  isOn\r\n} from '@vue/shared'\r\nimport {\r\n  ComponentInternalInstance,\r\n  Data,\r\n  ConcreteComponent,\r\n  ClassComponent,\r\n  Component,\r\n  isClassComponent\r\n} from './component'\r\nimport { RawSlots } from './componentSlots'\r\nimport { isProxy, Ref, toRaw, ReactiveFlags, isRef } from '@vue/reactivity'\r\nimport { AppContext } from './apiCreateApp'\r\nimport {\r\n  SuspenseImpl,\r\n  isSuspense,\r\n  SuspenseBoundary\r\n} from './components/Suspense'\r\nimport { DirectiveBinding } from './directives'\r\nimport { TransitionHooks } from './components/BaseTransition'\r\nimport { warn } from './warning'\r\nimport { TeleportImpl, isTeleport } from './components/Teleport'\r\nimport {\r\n  currentRenderingInstance,\r\n  currentScopeId\r\n} from './componentRenderContext'\r\nimport { RendererNode, RendererElement } from './renderer'\r\nimport { NULL_DYNAMIC_COMPONENT } from './helpers/resolveAssets'\r\nimport { hmrDirtyComponents } from './hmr'\r\nimport { convertLegacyComponent } from './compat/component'\r\nimport { convertLegacyVModelProps } from './compat/componentVModel'\r\nimport { defineLegacyVNodeProperties } from './compat/renderFn'\r\nimport { convertLegacyRefInFor } from './compat/ref'\r\n\r\nexport const Fragment = Symbol(__DEV__ ? 'Fragment' : undefined) as any as {\r\n  __isFragment: true\r\n  new (): {\r\n    $props: VNodeProps\r\n  }\r\n}\r\nexport const Text = Symbol(__DEV__ ? 'Text' : undefined)\r\nexport const Comment = Symbol(__DEV__ ? 'Comment' : undefined)\r\nexport const Static = Symbol(__DEV__ ? 'Static' : undefined)\r\n\r\nexport type VNodeTypes =\r\n  | string\r\n  | VNode\r\n  | Component\r\n  | typeof Text\r\n  | typeof Static\r\n  | typeof Comment\r\n  | typeof Fragment\r\n  | typeof TeleportImpl\r\n  | typeof SuspenseImpl\r\n\r\nexport type VNodeRef =\r\n  | string\r\n  | Ref\r\n  | ((ref: object | null, refs: Record<string, any>) => void)\r\n\r\nexport type VNodeNormalizedRefAtom = {\r\n  i: ComponentInternalInstance\r\n  r: VNodeRef\r\n  f?: boolean // v2 compat only, refInFor marker\r\n}\r\n\r\nexport type VNodeNormalizedRef =\r\n  | VNodeNormalizedRefAtom\r\n  | VNodeNormalizedRefAtom[]\r\n\r\ntype VNodeMountHook = (vnode: VNode) => void\r\ntype VNodeUpdateHook = (vnode: VNode, oldVNode: VNode) => void\r\nexport type VNodeHook =\r\n  | VNodeMountHook\r\n  | VNodeUpdateHook\r\n  | VNodeMountHook[]\r\n  | VNodeUpdateHook[]\r\n\r\n// https://github.com/microsoft/TypeScript/issues/33099\r\nexport type VNodeProps = {\r\n  key?: string | number | symbol\r\n  ref?: VNodeRef\r\n\r\n  // vnode hooks\r\n  onVnodeBeforeMount?: VNodeMountHook | VNodeMountHook[]\r\n  onVnodeMounted?: VNodeMountHook | VNodeMountHook[]\r\n  onVnodeBeforeUpdate?: VNodeUpdateHook | VNodeUpdateHook[]\r\n  onVnodeUpdated?: VNodeUpdateHook | VNodeUpdateHook[]\r\n  onVnodeBeforeUnmount?: VNodeMountHook | VNodeMountHook[]\r\n  onVnodeUnmounted?: VNodeMountHook | VNodeMountHook[]\r\n}\r\n\r\ntype VNodeChildAtom =\r\n  | VNode\r\n  | string\r\n  | number\r\n  | boolean\r\n  | null\r\n  | undefined\r\n  | void\r\n\r\nexport type VNodeArrayChildren = Array<VNodeArrayChildren | VNodeChildAtom>\r\n\r\nexport type VNodeChild = VNodeChildAtom | VNodeArrayChildren\r\n\r\nexport type VNodeNormalizedChildren =\r\n  | string\r\n  | VNodeArrayChildren\r\n  | RawSlots\r\n  | null\r\n\r\nexport interface VNode<\r\n  HostNode = RendererNode,\r\n  HostElement = RendererElement,\r\n  ExtraProps = { [key: string]: any }\r\n> {\r\n  /**\r\n   * @internal\r\n   */\r\n  __v_isVNode: true\r\n\r\n  /**\r\n   * @internal\r\n   */\r\n  [ReactiveFlags.SKIP]: true\r\n\r\n  type: VNodeTypes\r\n  props: (VNodeProps & ExtraProps) | null\r\n  key: string | number | symbol | null\r\n  ref: VNodeNormalizedRef | null\r\n  /**\r\n   * SFC only. This is assigned on vnode creation using currentScopeId\r\n   * which is set alongside currentRenderingInstance.\r\n   */\r\n  scopeId: string | null\r\n  /**\r\n   * SFC only. This is assigned to:\r\n   * - Slot fragment vnodes with :slotted SFC styles.\r\n   * - Component vnodes (during patch/hydration) so that its root node can\r\n   *   inherit the component's slotScopeIds\r\n   * @internal\r\n   */\r\n  slotScopeIds: string[] | null\r\n  children: VNodeNormalizedChildren\r\n  component: ComponentInternalInstance | null\r\n  dirs: DirectiveBinding[] | null\r\n  transition: TransitionHooks<HostElement> | null\r\n\r\n  // DOM\r\n  el: HostNode | null\r\n  anchor: HostNode | null // fragment anchor\r\n  target: HostElement | null // teleport target\r\n  targetAnchor: HostNode | null // teleport target anchor\r\n  /**\r\n   * number of elements contained in a static vnode\r\n   * @internal\r\n   */\r\n  staticCount: number\r\n\r\n  // suspense\r\n  suspense: SuspenseBoundary | null\r\n  /**\r\n   * @internal\r\n   */\r\n  ssContent: VNode | null\r\n  /**\r\n   * @internal\r\n   */\r\n  ssFallback: VNode | null\r\n\r\n  // optimization only\r\n  shapeFlag: number\r\n  patchFlag: number\r\n  /**\r\n   * @internal\r\n   */\r\n  dynamicProps: string[] | null\r\n  /**\r\n   * @internal\r\n   */\r\n  dynamicChildren: VNode[] | null\r\n\r\n  // application root node only\r\n  appContext: AppContext | null\r\n\r\n  /**\r\n   * @internal attached by v-memo\r\n   */\r\n  memo?: any[]\r\n  /**\r\n   * @internal __COMPAT__ only\r\n   */\r\n  isCompatRoot?: true\r\n  /**\r\n   * @internal custom element interception hook\r\n   */\r\n  ce?: (instance: ComponentInternalInstance) => void\r\n}\r\n\r\n// Since v-if and v-for are the two possible ways node structure can dynamically\r\n// change, once we consider v-if branches and each v-for fragment a block, we\r\n// can divide a template into nested blocks, and within each block the node\r\n// structure would be stable. This allows us to skip most children diffing\r\n// and only worry about the dynamic nodes (indicated by patch flags).\r\nexport const blockStack: (VNode[] | null)[] = []\r\nexport let currentBlock: VNode[] | null = null\r\n\r\n/**\r\n * Open a block.\r\n * This must be called before `createBlock`. It cannot be part of `createBlock`\r\n * because the children of the block are evaluated before `createBlock` itself\r\n * is called. The generated code typically looks like this:\r\n *\r\n * ```js\r\n * function render() {\r\n *   return (openBlock(),createBlock('div', null, [...]))\r\n * }\r\n * ```\r\n * disableTracking is true when creating a v-for fragment block, since a v-for\r\n * fragment always diffs its children.\r\n *\r\n * @private\r\n */\r\nexport function openBlock(disableTracking = false) {\r\n  blockStack.push((currentBlock = disableTracking ? null : []))\r\n}\r\n\r\nexport function closeBlock() {\r\n  blockStack.pop()\r\n  currentBlock = blockStack[blockStack.length - 1] || null\r\n}\r\n\r\n// Whether we should be tracking dynamic child nodes inside a block.\r\n// Only tracks when this value is > 0\r\n// We are not using a simple boolean because this value may need to be\r\n// incremented/decremented by nested usage of v-once (see below)\r\nexport let isBlockTreeEnabled = 1\r\n\r\n/**\r\n * Block tracking sometimes needs to be disabled, for example during the\r\n * creation of a tree that needs to be cached by v-once. The compiler generates\r\n * code like this:\r\n *\r\n * ``` js\r\n * _cache[1] || (\r\n *   setBlockTracking(-1),\r\n *   _cache[1] = createVNode(...),\r\n *   setBlockTracking(1),\r\n *   _cache[1]\r\n * )\r\n * ```\r\n *\r\n * @private\r\n */\r\nexport function setBlockTracking(value: number) {\r\n  isBlockTreeEnabled += value\r\n}\r\n\r\nfunction setupBlock(vnode: VNode) {\r\n  // save current block children on the block vnode\r\n  vnode.dynamicChildren =\r\n    isBlockTreeEnabled > 0 ? currentBlock || (EMPTY_ARR as any) : null\r\n  // close block\r\n  closeBlock()\r\n  // a block is always going to be patched, so track it as a child of its\r\n  // parent block\r\n  if (isBlockTreeEnabled > 0 && currentBlock) {\r\n    currentBlock.push(vnode)\r\n  }\r\n  return vnode\r\n}\r\n\r\n/**\r\n * @private\r\n */\r\nexport function createElementBlock(\r\n  type: string,\r\n  props?: Record<string, any> | null,\r\n  children?: any,\r\n  patchFlag?: number,\r\n  dynamicProps?: string[],\r\n  shapeFlag?: number\r\n) {\r\n  return setupBlock(\r\n    createBaseVNode(\r\n      type,\r\n      props,\r\n      children,\r\n      patchFlag,\r\n      dynamicProps,\r\n      shapeFlag,\r\n      true /* isBlock */\r\n    )\r\n  )\r\n}\r\n\r\n/**\r\n * Create a block root vnode. Takes the same exact arguments as `createVNode`.\r\n * A block root keeps track of dynamic nodes within the block in the\r\n * `dynamicChildren` array.\r\n *\r\n * @private\r\n */\r\nexport function createBlock(\r\n  type: VNodeTypes | ClassComponent,\r\n  props?: Record<string, any> | null,\r\n  children?: any,\r\n  patchFlag?: number,\r\n  dynamicProps?: string[]\r\n): VNode {\r\n  return setupBlock(\r\n    createVNode(\r\n      type,\r\n      props,\r\n      children,\r\n      patchFlag,\r\n      dynamicProps,\r\n      true /* isBlock: prevent a block from tracking itself */\r\n    )\r\n  )\r\n}\r\n\r\nexport function isVNode(value: any): value is VNode {\r\n  return value ? value.__v_isVNode === true : false\r\n}\r\n\r\nexport function isSameVNodeType(n1: VNode, n2: VNode): boolean {\r\n  if (\r\n    __DEV__ &&\r\n    n2.shapeFlag & ShapeFlags.COMPONENT &&\r\n    hmrDirtyComponents.has(n2.type as ConcreteComponent)\r\n  ) {\r\n    // HMR only: if the component has been hot-updated, force a reload.\r\n    return false\r\n  }\r\n  return n1.type === n2.type && n1.key === n2.key\r\n}\r\n\r\nlet vnodeArgsTransformer:\r\n  | ((\r\n      args: Parameters<typeof _createVNode>,\r\n      instance: ComponentInternalInstance | null\r\n    ) => Parameters<typeof _createVNode>)\r\n  | undefined\r\n\r\n/**\r\n * Internal API for registering an arguments transform for createVNode\r\n * used for creating stubs in the test-utils\r\n * It is *internal* but needs to be exposed for test-utils to pick up proper\r\n * typings\r\n */\r\nexport function transformVNodeArgs(transformer?: typeof vnodeArgsTransformer) {\r\n  vnodeArgsTransformer = transformer\r\n}\r\n\r\nconst createVNodeWithArgsTransform = (\r\n  ...args: Parameters<typeof _createVNode>\r\n): VNode => {\r\n  return _createVNode(\r\n    ...(vnodeArgsTransformer\r\n      ? vnodeArgsTransformer(args, currentRenderingInstance)\r\n      : args)\r\n  )\r\n}\r\n\r\nexport const InternalObjectKey = `__vInternal`\r\n\r\nconst normalizeKey = ({ key }: VNodeProps): VNode['key'] =>\r\n  key != null ? key : null\r\n\r\nconst normalizeRef = ({ ref }: VNodeProps): VNodeNormalizedRefAtom | null => {\r\n  return (\r\n    ref != null\r\n      ? isString(ref) || isRef(ref) || isFunction(ref)\r\n        ? { i: currentRenderingInstance, r: ref }\r\n        : ref\r\n      : null\r\n  ) as any\r\n}\r\n\r\nfunction createBaseVNode(\r\n  type: VNodeTypes | ClassComponent | typeof NULL_DYNAMIC_COMPONENT,\r\n  props: (Data & VNodeProps) | null = null,\r\n  children: unknown = null,\r\n  patchFlag = 0,\r\n  dynamicProps: string[] | null = null,\r\n  shapeFlag = type === Fragment ? 0 : ShapeFlags.ELEMENT,\r\n  isBlockNode = false,\r\n  needFullChildrenNormalization = false\r\n) {\r\n  const vnode = {\r\n    __v_isVNode: true,\r\n    __v_skip: true,\r\n    type,\r\n    props,\r\n    key: props && normalizeKey(props),\r\n    ref: props && normalizeRef(props),\r\n    scopeId: currentScopeId,\r\n    slotScopeIds: null,\r\n    children,\r\n    component: null,\r\n    suspense: null,\r\n    ssContent: null,\r\n    ssFallback: null,\r\n    dirs: null,\r\n    transition: null,\r\n    el: null,\r\n    anchor: null,\r\n    target: null,\r\n    targetAnchor: null,\r\n    staticCount: 0,\r\n    shapeFlag,\r\n    patchFlag,\r\n    dynamicProps,\r\n    dynamicChildren: null,\r\n    appContext: null\r\n  } as VNode\r\n\r\n  if (needFullChildrenNormalization) {\r\n    normalizeChildren(vnode, children)\r\n    // normalize suspense children\r\n    if (__FEATURE_SUSPENSE__ && shapeFlag & ShapeFlags.SUSPENSE) {\r\n      ;(type as typeof SuspenseImpl).normalize(vnode)\r\n    }\r\n  } else if (children) {\r\n    // compiled element vnode - if children is passed, only possible types are\r\n    // string or Array.\r\n    vnode.shapeFlag |= isString(children)\r\n      ? ShapeFlags.TEXT_CHILDREN\r\n      : ShapeFlags.ARRAY_CHILDREN\r\n  }\r\n\r\n  // validate key\r\n  if (__DEV__ && vnode.key !== vnode.key) {\r\n    warn(`VNode created with invalid key (NaN). VNode type:`, vnode.type)\r\n  }\r\n\r\n  // track vnode for block tree\r\n  if (\r\n    isBlockTreeEnabled > 0 &&\r\n    // avoid a block node from tracking itself\r\n    !isBlockNode &&\r\n    // has current parent block\r\n    currentBlock &&\r\n    // presence of a patch flag indicates this node needs patching on updates.\r\n    // component nodes also should always be patched, because even if the\r\n    // component doesn't need to update, it needs to persist the instance on to\r\n    // the next vnode so that it can be properly unmounted later.\r\n    (vnode.patchFlag > 0 || shapeFlag & ShapeFlags.COMPONENT) &&\r\n    // the EVENTS flag is only for hydration and if it is the only flag, the\r\n    // vnode should not be considered dynamic due to handler caching.\r\n    vnode.patchFlag !== PatchFlags.HYDRATE_EVENTS\r\n  ) {\r\n    currentBlock.push(vnode)\r\n  }\r\n\r\n  if (__COMPAT__) {\r\n    convertLegacyVModelProps(vnode)\r\n    convertLegacyRefInFor(vnode)\r\n    defineLegacyVNodeProperties(vnode)\r\n  }\r\n\r\n  return vnode\r\n}\r\n\r\nexport { createBaseVNode as createElementVNode }\r\n\r\nexport const createVNode = (\r\n  __DEV__ ? createVNodeWithArgsTransform : _createVNode\r\n) as typeof _createVNode\r\n\r\nfunction _createVNode(\r\n  type: VNodeTypes | ClassComponent | typeof NULL_DYNAMIC_COMPONENT,\r\n  props: (Data & VNodeProps) | null = null,\r\n  children: unknown = null,\r\n  patchFlag: number = 0,\r\n  dynamicProps: string[] | null = null,\r\n  isBlockNode = false\r\n): VNode {\r\n  if (!type || type === NULL_DYNAMIC_COMPONENT) {\r\n    if (__DEV__ && !type) {\r\n      warn(`Invalid vnode type when creating vnode: ${type}.`)\r\n    }\r\n    type = Comment\r\n  }\r\n\r\n  if (isVNode(type)) {\r\n    // createVNode receiving an existing vnode. This happens in cases like\r\n    // <component :is=\"vnode\"/>\r\n    // #2078 make sure to merge refs during the clone instead of overwriting it\r\n    const cloned = cloneVNode(type, props, true /* mergeRef: true */)\r\n    if (children) {\r\n      normalizeChildren(cloned, children)\r\n    }\r\n    return cloned\r\n  }\r\n\r\n  // class component normalization.\r\n  if (isClassComponent(type)) {\r\n    type = type.__vccOpts\r\n  }\r\n\r\n  // 2.x async/functional component compat\r\n  if (__COMPAT__) {\r\n    type = convertLegacyComponent(type, currentRenderingInstance)\r\n  }\r\n\r\n  // class & style normalization.\r\n  if (props) {\r\n    // for reactive or proxy objects, we need to clone it to enable mutation.\r\n    props = guardReactiveProps(props)!\r\n    let { class: klass, style } = props\r\n    if (klass && !isString(klass)) {\r\n      props.class = normalizeClass(klass)\r\n    }\r\n    if (isObject(style)) {\r\n      // reactive state objects need to be cloned since they are likely to be\r\n      // mutated\r\n      if (isProxy(style) && !isArray(style)) {\r\n        style = extend({}, style)\r\n      }\r\n      props.style = normalizeStyle(style)\r\n    }\r\n  }\r\n\r\n  // encode the vnode type information into a bitmap\r\n  const shapeFlag = isString(type)\r\n    ? ShapeFlags.ELEMENT\r\n    : __FEATURE_SUSPENSE__ && isSuspense(type)\r\n    ? ShapeFlags.SUSPENSE\r\n    : isTeleport(type)\r\n    ? ShapeFlags.TELEPORT\r\n    : isObject(type)\r\n    ? ShapeFlags.STATEFUL_COMPONENT\r\n    : isFunction(type)\r\n    ? ShapeFlags.FUNCTIONAL_COMPONENT\r\n    : 0\r\n\r\n  if (__DEV__ && shapeFlag & ShapeFlags.STATEFUL_COMPONENT && isProxy(type)) {\r\n    type = toRaw(type)\r\n    warn(\r\n      `Vue received a Component which was made a reactive object. This can ` +\r\n        `lead to unnecessary performance overhead, and should be avoided by ` +\r\n        `marking the component with \\`markRaw\\` or using \\`shallowRef\\` ` +\r\n        `instead of \\`ref\\`.`,\r\n      `\\nComponent that was made reactive: `,\r\n      type\r\n    )\r\n  }\r\n\r\n  return createBaseVNode(\r\n    type,\r\n    props,\r\n    children,\r\n    patchFlag,\r\n    dynamicProps,\r\n    shapeFlag,\r\n    isBlockNode,\r\n    true\r\n  )\r\n}\r\n\r\nexport function guardReactiveProps(props: (Data & VNodeProps) | null) {\r\n  if (!props) return null\r\n  return isProxy(props) || InternalObjectKey in props\r\n    ? extend({}, props)\r\n    : props\r\n}\r\n\r\nexport function cloneVNode<T, U>(\r\n  vnode: VNode<T, U>,\r\n  extraProps?: (Data & VNodeProps) | null,\r\n  mergeRef = false\r\n): VNode<T, U> {\r\n  // This is intentionally NOT using spread or extend to avoid the runtime\r\n  // key enumeration cost.\r\n  const { props, ref, patchFlag, children } = vnode\r\n  const mergedProps = extraProps ? mergeProps(props || {}, extraProps) : props\r\n  const cloned: VNode = {\r\n    __v_isVNode: true,\r\n    __v_skip: true,\r\n    type: vnode.type,\r\n    props: mergedProps,\r\n    key: mergedProps && normalizeKey(mergedProps),\r\n    ref:\r\n      extraProps && extraProps.ref\r\n        ? // #2078 in the case of <component :is=\"vnode\" ref=\"extra\"/>\r\n          // if the vnode itself already has a ref, cloneVNode will need to merge\r\n          // the refs so the single vnode can be set on multiple refs\r\n          mergeRef && ref\r\n          ? isArray(ref)\r\n            ? ref.concat(normalizeRef(extraProps)!)\r\n            : [ref, normalizeRef(extraProps)!]\r\n          : normalizeRef(extraProps)\r\n        : ref,\r\n    scopeId: vnode.scopeId,\r\n    slotScopeIds: vnode.slotScopeIds,\r\n    children:\r\n      __DEV__ && patchFlag === PatchFlags.HOISTED && isArray(children)\r\n        ? (children as VNode[]).map(deepCloneVNode)\r\n        : children,\r\n    target: vnode.target,\r\n    targetAnchor: vnode.targetAnchor,\r\n    staticCount: vnode.staticCount,\r\n    shapeFlag: vnode.shapeFlag,\r\n    // if the vnode is cloned with extra props, we can no longer assume its\r\n    // existing patch flag to be reliable and need to add the FULL_PROPS flag.\r\n    // note: perserve flag for fragments since they use the flag for children\r\n    // fast paths only.\r\n    patchFlag:\r\n      extraProps && vnode.type !== Fragment\r\n        ? patchFlag === -1 // hoisted node\r\n          ? PatchFlags.FULL_PROPS\r\n          : patchFlag | PatchFlags.FULL_PROPS\r\n        : patchFlag,\r\n    dynamicProps: vnode.dynamicProps,\r\n    dynamicChildren: vnode.dynamicChildren,\r\n    appContext: vnode.appContext,\r\n    dirs: vnode.dirs,\r\n    transition: vnode.transition,\r\n\r\n    // These should technically only be non-null on mounted VNodes. However,\r\n    // they *should* be copied for kept-alive vnodes. So we just always copy\r\n    // them since them being non-null during a mount doesn't affect the logic as\r\n    // they will simply be overwritten.\r\n    component: vnode.component,\r\n    suspense: vnode.suspense,\r\n    ssContent: vnode.ssContent && cloneVNode(vnode.ssContent),\r\n    ssFallback: vnode.ssFallback && cloneVNode(vnode.ssFallback),\r\n    el: vnode.el,\r\n    anchor: vnode.anchor\r\n  }\r\n  if (__COMPAT__) {\r\n    defineLegacyVNodeProperties(cloned)\r\n  }\r\n  return cloned as any\r\n}\r\n\r\n/**\r\n * Dev only, for HMR of hoisted vnodes reused in v-for\r\n * https://github.com/vitejs/vite/issues/2022\r\n */\r\nfunction deepCloneVNode(vnode: VNode): VNode {\r\n  const cloned = cloneVNode(vnode)\r\n  if (isArray(vnode.children)) {\r\n    cloned.children = (vnode.children as VNode[]).map(deepCloneVNode)\r\n  }\r\n  return cloned\r\n}\r\n\r\n/**\r\n * @private\r\n */\r\nexport function createTextVNode(text: string = ' ', flag: number = 0): VNode {\r\n  return createVNode(Text, null, text, flag)\r\n}\r\n\r\n/**\r\n * @private\r\n */\r\nexport function createStaticVNode(\r\n  content: string,\r\n  numberOfNodes: number\r\n): VNode {\r\n  // A static vnode can contain multiple stringified elements, and the number\r\n  // of elements is necessary for hydration.\r\n  const vnode = createVNode(Static, null, content)\r\n  vnode.staticCount = numberOfNodes\r\n  return vnode\r\n}\r\n\r\n/**\r\n * @private\r\n */\r\nexport function createCommentVNode(\r\n  text: string = '',\r\n  // when used as the v-else branch, the comment node must be created as a\r\n  // block to ensure correct updates.\r\n  asBlock: boolean = false\r\n): VNode {\r\n  return asBlock\r\n    ? (openBlock(), createBlock(Comment, null, text))\r\n    : createVNode(Comment, null, text)\r\n}\r\n\r\nexport function normalizeVNode(child: VNodeChild): VNode {\r\n  if (child == null || typeof child === 'boolean') {\r\n    // empty placeholder\r\n    return createVNode(Comment)\r\n  } else if (isArray(child)) {\r\n    // fragment\r\n    return createVNode(\r\n      Fragment,\r\n      null,\r\n      // #3666, avoid reference pollution when reusing vnode\r\n      child.slice()\r\n    )\r\n  } else if (typeof child === 'object') {\r\n    // already vnode, this should be the most common since compiled templates\r\n    // always produce all-vnode children arrays\r\n    return cloneIfMounted(child)\r\n  } else {\r\n    // strings and numbers\r\n    return createVNode(Text, null, String(child))\r\n  }\r\n}\r\n\r\n// optimized normalization for template-compiled render fns\r\nexport function cloneIfMounted(child: VNode): VNode {\r\n  return child.el === null || child.memo ? child : cloneVNode(child)\r\n}\r\n\r\nexport function normalizeChildren(vnode: VNode, children: unknown) {\r\n  let type = 0\r\n  const { shapeFlag } = vnode\r\n  if (children == null) {\r\n    children = null\r\n  } else if (isArray(children)) {\r\n    type = ShapeFlags.ARRAY_CHILDREN\r\n  } else if (typeof children === 'object') {\r\n    if (shapeFlag & ShapeFlags.ELEMENT || shapeFlag & ShapeFlags.TELEPORT) {\r\n      // Normalize slot to plain children for plain element and Teleport\r\n      const slot = (children as any).default\r\n      if (slot) {\r\n        // _c marker is added by withCtx() indicating this is a compiled slot\r\n        slot._c && (slot._d = false)\r\n        normalizeChildren(vnode, slot())\r\n        slot._c && (slot._d = true)\r\n      }\r\n      return\r\n    } else {\r\n      type = ShapeFlags.SLOTS_CHILDREN\r\n      const slotFlag = (children as RawSlots)._\r\n      if (!slotFlag && !(InternalObjectKey in children!)) {\r\n        // if slots are not normalized, attach context instance\r\n        // (compiled / normalized slots already have context)\r\n        ;(children as RawSlots)._ctx = currentRenderingInstance\r\n      } else if (slotFlag === SlotFlags.FORWARDED && currentRenderingInstance) {\r\n        // a child component receives forwarded slots from the parent.\r\n        // its slot type is determined by its parent's slot type.\r\n        if (\r\n          (currentRenderingInstance.slots as RawSlots)._ === SlotFlags.STABLE\r\n        ) {\r\n          ;(children as RawSlots)._ = SlotFlags.STABLE\r\n        } else {\r\n          ;(children as RawSlots)._ = SlotFlags.DYNAMIC\r\n          vnode.patchFlag |= PatchFlags.DYNAMIC_SLOTS\r\n        }\r\n      }\r\n    }\r\n  } else if (isFunction(children)) {\r\n    children = { default: children, _ctx: currentRenderingInstance }\r\n    type = ShapeFlags.SLOTS_CHILDREN\r\n  } else {\r\n    children = String(children)\r\n    // force teleport children to array so it can be moved around\r\n    if (shapeFlag & ShapeFlags.TELEPORT) {\r\n      type = ShapeFlags.ARRAY_CHILDREN\r\n      children = [createTextVNode(children as string)]\r\n    } else {\r\n      type = ShapeFlags.TEXT_CHILDREN\r\n    }\r\n  }\r\n  vnode.children = children as VNodeNormalizedChildren\r\n  vnode.shapeFlag |= type\r\n}\r\n\r\nexport function mergeProps(...args: (Data & VNodeProps)[]) {\r\n  const ret: Data = {}\r\n  for (let i = 0; i < args.length; i++) {\r\n    const toMerge = args[i]\r\n    for (const key in toMerge) {\r\n      if (key === 'class') {\r\n        if (ret.class !== toMerge.class) {\r\n          ret.class = normalizeClass([ret.class, toMerge.class])\r\n        }\r\n      } else if (key === 'style') {\r\n        ret.style = normalizeStyle([ret.style, toMerge.style])\r\n      } else if (isOn(key)) {\r\n        const existing = ret[key]\r\n        const incoming = toMerge[key]\r\n        if (existing !== incoming) {\r\n          ret[key] = existing\r\n            ? [].concat(existing as any, incoming as any)\r\n            : incoming\r\n        }\r\n      } else if (key !== '') {\r\n        ret[key] = toMerge[key]\r\n      }\r\n    }\r\n  }\r\n  return ret\r\n}\r\n","import { VNode, VNodeChild } from '../vnode'\r\nimport { isArray, isString, isObject } from '@vue/shared'\r\nimport { warn } from '../warning'\r\n\r\n/**\r\n * v-for string\r\n * @private\r\n */\r\nexport function renderList(\r\n  source: string,\r\n  renderItem: (value: string, index: number) => VNodeChild\r\n): VNodeChild[]\r\n\r\n/**\r\n * v-for number\r\n */\r\nexport function renderList(\r\n  source: number,\r\n  renderItem: (value: number, index: number) => VNodeChild\r\n): VNodeChild[]\r\n\r\n/**\r\n * v-for array\r\n */\r\nexport function renderList<T>(\r\n  source: T[],\r\n  renderItem: (value: T, index: number) => VNodeChild\r\n): VNodeChild[]\r\n\r\n/**\r\n * v-for iterable\r\n */\r\nexport function renderList<T>(\r\n  source: Iterable<T>,\r\n  renderItem: (value: T, index: number) => VNodeChild\r\n): VNodeChild[]\r\n\r\n/**\r\n * v-for object\r\n */\r\nexport function renderList<T>(\r\n  source: T,\r\n  renderItem: <K extends keyof T>(\r\n    value: T[K],\r\n    key: K,\r\n    index: number\r\n  ) => VNodeChild\r\n): VNodeChild[]\r\n\r\n/**\r\n * Actual implementation\r\n */\r\nexport function renderList(\r\n  source: any,\r\n  renderItem: (...args: any[]) => VNodeChild,\r\n  cache?: any[],\r\n  index?: number\r\n): VNodeChild[] {\r\n  let ret: VNodeChild[]\r\n  const cached = (cache && cache[index!]) as VNode[] | undefined\r\n\r\n  if (isArray(source) || isString(source)) {\r\n    ret = new Array(source.length)\r\n    for (let i = 0, l = source.length; i < l; i++) {\r\n      ret[i] = renderItem(source[i], i, undefined, cached && cached[i])\r\n    }\r\n  } else if (typeof source === 'number') {\r\n    if (__DEV__ && !Number.isInteger(source)) {\r\n      warn(`The v-for range expect an integer value but got ${source}.`)\r\n      return []\r\n    }\r\n    ret = new Array(source)\r\n    for (let i = 0; i < source; i++) {\r\n      ret[i] = renderItem(i + 1, i, undefined, cached && cached[i])\r\n    }\r\n  } else if (isObject(source)) {\r\n    if (source[Symbol.iterator as any]) {\r\n      ret = Array.from(source as Iterable<any>, (item, i) =>\r\n        renderItem(item, i, undefined, cached && cached[i])\r\n      )\r\n    } else {\r\n      const keys = Object.keys(source)\r\n      ret = new Array(keys.length)\r\n      for (let i = 0, l = keys.length; i < l; i++) {\r\n        const key = keys[i]\r\n        ret[i] = renderItem(source[key], key, i, cached && cached[i])\r\n      }\r\n    }\r\n  } else {\r\n    ret = []\r\n  }\r\n\r\n  if (cache) {\r\n    cache[index!] = ret\r\n  }\r\n  return ret\r\n}\r\n","import { Slot } from '../componentSlots'\r\nimport { isArray } from '@vue/shared'\r\n\r\ninterface CompiledSlotDescriptor {\r\n  name: string\r\n  fn: Slot\r\n}\r\n\r\n/**\r\n * Compiler runtime helper for creating dynamic slots object\r\n * @private\r\n */\r\nexport function createSlots(\r\n  slots: Record<string, Slot>,\r\n  dynamicSlots: (\r\n    | CompiledSlotDescriptor\r\n    | CompiledSlotDescriptor[]\r\n    | undefined\r\n  )[]\r\n): Record<string, Slot> {\r\n  for (let i = 0; i < dynamicSlots.length; i++) {\r\n    const slot = dynamicSlots[i]\r\n    // array of dynamic slot generated by <template v-for=\"...\" #[...]>\r\n    if (isArray(slot)) {\r\n      for (let j = 0; j < slot.length; j++) {\r\n        slots[slot[j].name] = slot[j].fn\r\n      }\r\n    } else if (slot) {\r\n      // conditional single slot generated by <template v-if=\"...\" #foo>\r\n      slots[slot.name] = slot.fn\r\n    }\r\n  }\r\n  return slots\r\n}\r\n","import { Data } from '../component'\r\nimport { Slots, RawSlots } from '../componentSlots'\r\nimport {\r\n  ContextualRenderFn,\r\n  currentRenderingInstance\r\n} from '../componentRenderContext'\r\nimport { Comment, isVNode } from '../vnode'\r\nimport {\r\n  VNodeArrayChildren,\r\n  openBlock,\r\n  createBlock,\r\n  Fragment,\r\n  VNode\r\n} from '../vnode'\r\nimport { PatchFlags, SlotFlags } from '@vue/shared'\r\nimport { warn } from '../warning'\r\nimport { createVNode } from '@vue/runtime-core'\r\n\r\n/**\r\n * Compiler runtime helper for rendering `<slot/>`\r\n * @private\r\n */\r\nexport function renderSlot(\r\n  slots: Slots,\r\n  name: string,\r\n  props: Data = {},\r\n  // this is not a user-facing function, so the fallback is always generated by\r\n  // the compiler and guaranteed to be a function returning an array\r\n  fallback?: () => VNodeArrayChildren,\r\n  noSlotted?: boolean\r\n): VNode {\r\n  if (currentRenderingInstance!.isCE) {\r\n    return createVNode(\r\n      'slot',\r\n      name === 'default' ? null : { name },\r\n      fallback && fallback()\r\n    )\r\n  }\r\n\r\n  let slot = slots[name]\r\n\r\n  if (__DEV__ && slot && slot.length > 1) {\r\n    warn(\r\n      `SSR-optimized slot function detected in a non-SSR-optimized render ` +\r\n        `function. You need to mark this component with $dynamic-slots in the ` +\r\n        `parent template.`\r\n    )\r\n    slot = () => []\r\n  }\r\n\r\n  // a compiled slot disables block tracking by default to avoid manual\r\n  // invocation interfering with template-based block tracking, but in\r\n  // `renderSlot` we can be sure that it's template-based so we can force\r\n  // enable it.\r\n  if (slot && (slot as ContextualRenderFn)._c) {\r\n    ;(slot as ContextualRenderFn)._d = false\r\n  }\r\n  openBlock()\r\n  const validSlotContent = slot && ensureValidVNode(slot(props))\r\n  const rendered = createBlock(\r\n    Fragment,\r\n    { key: props.key || `_${name}` },\r\n    validSlotContent || (fallback ? fallback() : []),\r\n    validSlotContent && (slots as RawSlots)._ === SlotFlags.STABLE\r\n      ? PatchFlags.STABLE_FRAGMENT\r\n      : PatchFlags.BAIL\r\n  )\r\n  if (!noSlotted && rendered.scopeId) {\r\n    rendered.slotScopeIds = [rendered.scopeId + '-s']\r\n  }\r\n  if (slot && (slot as ContextualRenderFn)._c) {\r\n    ;(slot as ContextualRenderFn)._d = true\r\n  }\r\n  return rendered\r\n}\r\n\r\nfunction ensureValidVNode(vnodes: VNodeArrayChildren) {\r\n  return vnodes.some(child => {\r\n    if (!isVNode(child)) return true\r\n    if (child.type === Comment) return false\r\n    if (\r\n      child.type === Fragment &&\r\n      !ensureValidVNode(child.children as VNodeArrayChildren)\r\n    )\r\n      return false\r\n    return true\r\n  })\r\n    ? vnodes\r\n    : null\r\n}\r\n","import { toHandlerKey, isObject } from '@vue/shared'\r\nimport { warn } from '../warning'\r\n\r\n/**\r\n * For prefixing keys in v-on=\"obj\" with \"on\"\r\n * @private\r\n */\r\nexport function toHandlers(obj: Record<string, any>): Record<string, any> {\r\n  const ret: Record<string, any> = {}\r\n  if (__DEV__ && !isObject(obj)) {\r\n    warn(`v-on with no argument expects an object value.`)\r\n    return ret\r\n  }\r\n  for (const key in obj) {\r\n    ret[toHandlerKey(key)] = obj[key]\r\n  }\r\n  return ret\r\n}\r\n","import {\r\n  ComponentInternalInstance,\r\n  Data,\r\n  getExposeProxy,\r\n  isStatefulComponent\r\n} from './component'\r\nimport { nextTick, queueJob } from './scheduler'\r\nimport { instanceWatch, WatchOptions, WatchStopHandle } from './apiWatch'\r\nimport {\r\n  EMPTY_OBJ,\r\n  hasOwn,\r\n  isGloballyWhitelisted,\r\n  NOOP,\r\n  extend,\r\n  isString,\r\n  isFunction\r\n} from '@vue/shared'\r\nimport {\r\n  ReactiveEffect,\r\n  toRaw,\r\n  shallowReadonly,\r\n  track,\r\n  TrackOpTypes,\r\n  ShallowUnwrapRef,\r\n  UnwrapNestedRefs\r\n} from '@vue/reactivity'\r\nimport {\r\n  ExtractComputedReturns,\r\n  ComponentOptionsBase,\r\n  ComputedOptions,\r\n  MethodOptions,\r\n  ComponentOptionsMixin,\r\n  OptionTypesType,\r\n  OptionTypesKeys,\r\n  resolveMergedOptions,\r\n  shouldCacheAccess,\r\n  MergedComponentOptionsOverride\r\n} from './componentOptions'\r\nimport { EmitsOptions, EmitFn } from './componentEmits'\r\nimport { Slots } from './componentSlots'\r\nimport { markAttrsAccessed } from './componentRenderUtils'\r\nimport { currentRenderingInstance } from './componentRenderContext'\r\nimport { warn } from './warning'\r\nimport { UnionToIntersection } from './helpers/typeUtils'\r\nimport { installCompatInstanceProperties } from './compat/instance'\r\n\r\n/**\r\n * Custom properties added to component instances in any way and can be accessed through `this`\r\n *\r\n * @example\r\n * Here is an example of adding a property `$router` to every component instance:\r\n * ```ts\r\n * import { createApp } from 'vue'\r\n * import { Router, createRouter } from 'vue-router'\r\n *\r\n * declare module '@vue/runtime-core' {\r\n *   interface ComponentCustomProperties {\r\n *     $router: Router\r\n *   }\r\n * }\r\n *\r\n * // effectively adding the router to every component instance\r\n * const app = createApp({})\r\n * const router = createRouter()\r\n * app.config.globalProperties.$router = router\r\n *\r\n * const vm = app.mount('#app')\r\n * // we can access the router from the instance\r\n * vm.$router.push('/')\r\n * ```\r\n */\r\nexport interface ComponentCustomProperties {}\r\n\r\ntype IsDefaultMixinComponent<T> = T extends ComponentOptionsMixin\r\n  ? ComponentOptionsMixin extends T\r\n    ? true\r\n    : false\r\n  : false\r\n\r\ntype MixinToOptionTypes<T> = T extends ComponentOptionsBase<\r\n  infer P,\r\n  infer B,\r\n  infer D,\r\n  infer C,\r\n  infer M,\r\n  infer Mixin,\r\n  infer Extends,\r\n  any,\r\n  any,\r\n  infer Defaults\r\n>\r\n  ? OptionTypesType<P & {}, B & {}, D & {}, C & {}, M & {}, Defaults & {}> &\r\n      IntersectionMixin<Mixin> &\r\n      IntersectionMixin<Extends>\r\n  : never\r\n\r\n// ExtractMixin(map type) is used to resolve circularly references\r\ntype ExtractMixin<T> = {\r\n  Mixin: MixinToOptionTypes<T>\r\n}[T extends ComponentOptionsMixin ? 'Mixin' : never]\r\n\r\ntype IntersectionMixin<T> = IsDefaultMixinComponent<T> extends true\r\n  ? OptionTypesType<{}, {}, {}, {}, {}>\r\n  : UnionToIntersection<ExtractMixin<T>>\r\n\r\ntype UnwrapMixinsType<\r\n  T,\r\n  Type extends OptionTypesKeys\r\n> = T extends OptionTypesType ? T[Type] : never\r\n\r\ntype EnsureNonVoid<T> = T extends void ? {} : T\r\n\r\nexport type ComponentPublicInstanceConstructor<\r\n  T extends ComponentPublicInstance<\r\n    Props,\r\n    RawBindings,\r\n    D,\r\n    C,\r\n    M\r\n  > = ComponentPublicInstance<any>,\r\n  Props = any,\r\n  RawBindings = any,\r\n  D = any,\r\n  C extends ComputedOptions = ComputedOptions,\r\n  M extends MethodOptions = MethodOptions\r\n> = {\r\n  __isFragment?: never\r\n  __isTeleport?: never\r\n  __isSuspense?: never\r\n  new (...args: any[]): T\r\n}\r\n\r\nexport type CreateComponentPublicInstance<\r\n  P = {},\r\n  B = {},\r\n  D = {},\r\n  C extends ComputedOptions = {},\r\n  M extends MethodOptions = {},\r\n  Mixin extends ComponentOptionsMixin = ComponentOptionsMixin,\r\n  Extends extends ComponentOptionsMixin = ComponentOptionsMixin,\r\n  E extends EmitsOptions = {},\r\n  PublicProps = P,\r\n  Defaults = {},\r\n  MakeDefaultsOptional extends boolean = false,\r\n  PublicMixin = IntersectionMixin<Mixin> & IntersectionMixin<Extends>,\r\n  PublicP = UnwrapMixinsType<PublicMixin, 'P'> & EnsureNonVoid<P>,\r\n  PublicB = UnwrapMixinsType<PublicMixin, 'B'> & EnsureNonVoid<B>,\r\n  PublicD = UnwrapMixinsType<PublicMixin, 'D'> & EnsureNonVoid<D>,\r\n  PublicC extends ComputedOptions = UnwrapMixinsType<PublicMixin, 'C'> &\r\n    EnsureNonVoid<C>,\r\n  PublicM extends MethodOptions = UnwrapMixinsType<PublicMixin, 'M'> &\r\n    EnsureNonVoid<M>,\r\n  PublicDefaults = UnwrapMixinsType<PublicMixin, 'Defaults'> &\r\n    EnsureNonVoid<Defaults>\r\n> = ComponentPublicInstance<\r\n  PublicP,\r\n  PublicB,\r\n  PublicD,\r\n  PublicC,\r\n  PublicM,\r\n  E,\r\n  PublicProps,\r\n  PublicDefaults,\r\n  MakeDefaultsOptional,\r\n  ComponentOptionsBase<P, B, D, C, M, Mixin, Extends, E, string, Defaults>\r\n>\r\n\r\n// public properties exposed on the proxy, which is used as the render context\r\n// in templates (as `this` in the render option)\r\nexport type ComponentPublicInstance<\r\n  P = {}, // props type extracted from props option\r\n  B = {}, // raw bindings returned from setup()\r\n  D = {}, // return from data()\r\n  C extends ComputedOptions = {},\r\n  M extends MethodOptions = {},\r\n  E extends EmitsOptions = {},\r\n  PublicProps = P,\r\n  Defaults = {},\r\n  MakeDefaultsOptional extends boolean = false,\r\n  Options = ComponentOptionsBase<any, any, any, any, any, any, any, any, any>\r\n> = {\r\n  $: ComponentInternalInstance\r\n  $data: D\r\n  $props: MakeDefaultsOptional extends true\r\n    ? Partial<Defaults> & Omit<P & PublicProps, keyof Defaults>\r\n    : P & PublicProps\r\n  $attrs: Data\r\n  $refs: Data\r\n  $slots: Slots\r\n  $root: ComponentPublicInstance | null\r\n  $parent: ComponentPublicInstance | null\r\n  $emit: EmitFn<E>\r\n  $el: any\r\n  $options: Options & MergedComponentOptionsOverride\r\n  $forceUpdate: ReactiveEffect\r\n  $nextTick: typeof nextTick\r\n  $watch(\r\n    source: string | Function,\r\n    cb: Function,\r\n    options?: WatchOptions\r\n  ): WatchStopHandle\r\n} & P &\r\n  ShallowUnwrapRef<B> &\r\n  UnwrapNestedRefs<D> &\r\n  ExtractComputedReturns<C> &\r\n  M &\r\n  ComponentCustomProperties\r\n\r\nexport type PublicPropertiesMap = Record<\r\n  string,\r\n  (i: ComponentInternalInstance) => any\r\n>\r\n\r\n/**\r\n * #2437 In Vue 3, functional components do not have a public instance proxy but\r\n * they exist in the internal parent chain. For code that relies on traversing\r\n * public $parent chains, skip functional ones and go to the parent instead.\r\n */\r\nconst getPublicInstance = (\r\n  i: ComponentInternalInstance | null\r\n): ComponentPublicInstance | ComponentInternalInstance['exposed'] | null => {\r\n  if (!i) return null\r\n  if (isStatefulComponent(i)) return getExposeProxy(i) || i.proxy\r\n  return getPublicInstance(i.parent)\r\n}\r\n\r\nexport const publicPropertiesMap: PublicPropertiesMap = /*#__PURE__*/ extend(\r\n  Object.create(null),\r\n  {\r\n    $: i => i,\r\n    $el: i => i.vnode.el,\r\n    $data: i => i.data,\r\n    $props: i => (__DEV__ ? shallowReadonly(i.props) : i.props),\r\n    $attrs: i => (__DEV__ ? shallowReadonly(i.attrs) : i.attrs),\r\n    $slots: i => (__DEV__ ? shallowReadonly(i.slots) : i.slots),\r\n    $refs: i => (__DEV__ ? shallowReadonly(i.refs) : i.refs),\r\n    $parent: i => getPublicInstance(i.parent),\r\n    $root: i => getPublicInstance(i.root),\r\n    $emit: i => i.emit,\r\n    $options: i => (__FEATURE_OPTIONS_API__ ? resolveMergedOptions(i) : i.type),\r\n    $forceUpdate: i => () => queueJob(i.update),\r\n    $nextTick: i => nextTick.bind(i.proxy!),\r\n    $watch: i => (__FEATURE_OPTIONS_API__ ? instanceWatch.bind(i) : NOOP)\r\n  } as PublicPropertiesMap\r\n)\r\n\r\nif (__COMPAT__) {\r\n  installCompatInstanceProperties(publicPropertiesMap)\r\n}\r\n\r\nconst enum AccessTypes {\r\n  SETUP,\r\n  DATA,\r\n  PROPS,\r\n  CONTEXT,\r\n  OTHER\r\n}\r\n\r\nexport interface ComponentRenderContext {\r\n  [key: string]: any\r\n  _: ComponentInternalInstance\r\n}\r\n\r\nexport const PublicInstanceProxyHandlers: ProxyHandler<any> = {\r\n  get({ _: instance }: ComponentRenderContext, key: string) {\r\n    const { ctx, setupState, data, props, accessCache, type, appContext } =\r\n      instance\r\n\r\n    // for internal formatters to know that this is a Vue instance\r\n    if (__DEV__ && key === '__isVue') {\r\n      return true\r\n    }\r\n\r\n    // prioritize <script setup> bindings during dev.\r\n    // this allows even properties that start with _ or $ to be used - so that\r\n    // it aligns with the production behavior where the render fn is inlined and\r\n    // indeed has access to all declared variables.\r\n    if (\r\n      __DEV__ &&\r\n      setupState !== EMPTY_OBJ &&\r\n      setupState.__isScriptSetup &&\r\n      hasOwn(setupState, key)\r\n    ) {\r\n      return setupState[key]\r\n    }\r\n\r\n    // data / props / ctx\r\n    // This getter gets called for every property access on the render context\r\n    // during render and is a major hotspot. The most expensive part of this\r\n    // is the multiple hasOwn() calls. It's much faster to do a simple property\r\n    // access on a plain object, so we use an accessCache object (with null\r\n    // prototype) to memoize what access type a key corresponds to.\r\n    let normalizedProps\r\n    if (key[0] !== '$') {\r\n      const n = accessCache![key]\r\n      if (n !== undefined) {\r\n        switch (n) {\r\n          case AccessTypes.SETUP:\r\n            return setupState[key]\r\n          case AccessTypes.DATA:\r\n            return data[key]\r\n          case AccessTypes.CONTEXT:\r\n            return ctx[key]\r\n          case AccessTypes.PROPS:\r\n            return props![key]\r\n          // default: just fallthrough\r\n        }\r\n      } else if (setupState !== EMPTY_OBJ && hasOwn(setupState, key)) {\r\n        accessCache![key] = AccessTypes.SETUP\r\n        return setupState[key]\r\n      } else if (data !== EMPTY_OBJ && hasOwn(data, key)) {\r\n        accessCache![key] = AccessTypes.DATA\r\n        return data[key]\r\n      } else if (\r\n        // only cache other properties when instance has declared (thus stable)\r\n        // props\r\n        (normalizedProps = instance.propsOptions[0]) &&\r\n        hasOwn(normalizedProps, key)\r\n      ) {\r\n        accessCache![key] = AccessTypes.PROPS\r\n        return props![key]\r\n      } else if (ctx !== EMPTY_OBJ && hasOwn(ctx, key)) {\r\n        accessCache![key] = AccessTypes.CONTEXT\r\n        return ctx[key]\r\n      } else if (!__FEATURE_OPTIONS_API__ || shouldCacheAccess) {\r\n        accessCache![key] = AccessTypes.OTHER\r\n      }\r\n    }\r\n\r\n    const publicGetter = publicPropertiesMap[key]\r\n    let cssModule, globalProperties\r\n    // public $xxx properties\r\n    if (publicGetter) {\r\n      if (key === '$attrs') {\r\n        track(instance, TrackOpTypes.GET, key)\r\n        __DEV__ && markAttrsAccessed()\r\n      }\r\n      return publicGetter(instance)\r\n    } else if (\r\n      // css module (injected by vue-loader)\r\n      (cssModule = type.__cssModules) &&\r\n      (cssModule = cssModule[key])\r\n    ) {\r\n      return cssModule\r\n    } else if (ctx !== EMPTY_OBJ && hasOwn(ctx, key)) {\r\n      // user may set custom properties to `this` that start with `$`\r\n      accessCache![key] = AccessTypes.CONTEXT\r\n      return ctx[key]\r\n    } else if (\r\n      // global properties\r\n      ((globalProperties = appContext.config.globalProperties),\r\n      hasOwn(globalProperties, key))\r\n    ) {\r\n      if (__COMPAT__) {\r\n        const desc = Object.getOwnPropertyDescriptor(globalProperties, key)!\r\n        if (desc.get) {\r\n          return desc.get.call(instance.proxy)\r\n        } else {\r\n          const val = globalProperties[key]\r\n          return isFunction(val) ? val.bind(instance.proxy) : val\r\n        }\r\n      } else {\r\n        return globalProperties[key]\r\n      }\r\n    } else if (\r\n      __DEV__ &&\r\n      currentRenderingInstance &&\r\n      (!isString(key) ||\r\n        // #1091 avoid internal isRef/isVNode checks on component instance leading\r\n        // to infinite warning loop\r\n        key.indexOf('__v') !== 0)\r\n    ) {\r\n      if (\r\n        data !== EMPTY_OBJ &&\r\n        (key[0] === '$' || key[0] === '_') &&\r\n        hasOwn(data, key)\r\n      ) {\r\n        warn(\r\n          `Property ${JSON.stringify(\r\n            key\r\n          )} must be accessed via $data because it starts with a reserved ` +\r\n            `character (\"$\" or \"_\") and is not proxied on the render context.`\r\n        )\r\n      } else if (instance === currentRenderingInstance) {\r\n        warn(\r\n          `Property ${JSON.stringify(key)} was accessed during render ` +\r\n            `but is not defined on instance.`\r\n        )\r\n      }\r\n    }\r\n  },\r\n\r\n  set(\r\n    { _: instance }: ComponentRenderContext,\r\n    key: string,\r\n    value: any\r\n  ): boolean {\r\n    const { data, setupState, ctx } = instance\r\n    if (setupState !== EMPTY_OBJ && hasOwn(setupState, key)) {\r\n      setupState[key] = value\r\n    } else if (data !== EMPTY_OBJ && hasOwn(data, key)) {\r\n      data[key] = value\r\n    } else if (hasOwn(instance.props, key)) {\r\n      __DEV__ &&\r\n        warn(\r\n          `Attempting to mutate prop \"${key}\". Props are readonly.`,\r\n          instance\r\n        )\r\n      return false\r\n    }\r\n    if (key[0] === '$' && key.slice(1) in instance) {\r\n      __DEV__ &&\r\n        warn(\r\n          `Attempting to mutate public property \"${key}\". ` +\r\n            `Properties starting with $ are reserved and readonly.`,\r\n          instance\r\n        )\r\n      return false\r\n    } else {\r\n      if (__DEV__ && key in instance.appContext.config.globalProperties) {\r\n        Object.defineProperty(ctx, key, {\r\n          enumerable: true,\r\n          configurable: true,\r\n          value\r\n        })\r\n      } else {\r\n        ctx[key] = value\r\n      }\r\n    }\r\n    return true\r\n  },\r\n\r\n  has(\r\n    {\r\n      _: { data, setupState, accessCache, ctx, appContext, propsOptions }\r\n    }: ComponentRenderContext,\r\n    key: string\r\n  ) {\r\n    let normalizedProps\r\n    return (\r\n      accessCache![key] !== undefined ||\r\n      (data !== EMPTY_OBJ && hasOwn(data, key)) ||\r\n      (setupState !== EMPTY_OBJ && hasOwn(setupState, key)) ||\r\n      ((normalizedProps = propsOptions[0]) && hasOwn(normalizedProps, key)) ||\r\n      hasOwn(ctx, key) ||\r\n      hasOwn(publicPropertiesMap, key) ||\r\n      hasOwn(appContext.config.globalProperties, key)\r\n    )\r\n  }\r\n}\r\n\r\nif (__DEV__ && !__TEST__) {\r\n  PublicInstanceProxyHandlers.ownKeys = (target: ComponentRenderContext) => {\r\n    warn(\r\n      `Avoid app logic that relies on enumerating keys on a component instance. ` +\r\n        `The keys will be empty in production mode to avoid performance overhead.`\r\n    )\r\n    return Reflect.ownKeys(target)\r\n  }\r\n}\r\n\r\nexport const RuntimeCompiledPublicInstanceProxyHandlers = /*#__PURE__*/ extend(\r\n  {},\r\n  PublicInstanceProxyHandlers,\r\n  {\r\n    get(target: ComponentRenderContext, key: string) {\r\n      // fast path for unscopables when using `with` block\r\n      if ((key as any) === Symbol.unscopables) {\r\n        return\r\n      }\r\n      return PublicInstanceProxyHandlers.get!(target, key, target)\r\n    },\r\n    has(_: ComponentRenderContext, key: string) {\r\n      const has = key[0] !== '_' && !isGloballyWhitelisted(key)\r\n      if (__DEV__ && !has && PublicInstanceProxyHandlers.has!(_, key)) {\r\n        warn(\r\n          `Property ${JSON.stringify(\r\n            key\r\n          )} should not start with _ which is a reserved prefix for Vue internals.`\r\n        )\r\n      }\r\n      return has\r\n    }\r\n  }\r\n)\r\n\r\n// dev only\r\n// In dev mode, the proxy target exposes the same properties as seen on `this`\r\n// for easier console inspection. In prod mode it will be an empty object so\r\n// these properties definitions can be skipped.\r\nexport function createDevRenderContext(instance: ComponentInternalInstance) {\r\n  const target: Record<string, any> = {}\r\n\r\n  // expose internal instance for proxy handlers\r\n  Object.defineProperty(target, `_`, {\r\n    configurable: true,\r\n    enumerable: false,\r\n    get: () => instance\r\n  })\r\n\r\n  // expose public properties\r\n  Object.keys(publicPropertiesMap).forEach(key => {\r\n    Object.defineProperty(target, key, {\r\n      configurable: true,\r\n      enumerable: false,\r\n      get: () => publicPropertiesMap[key](instance),\r\n      // intercepted by the proxy so no need for implementation,\r\n      // but needed to prevent set errors\r\n      set: NOOP\r\n    })\r\n  })\r\n\r\n  return target as ComponentRenderContext\r\n}\r\n\r\n// dev only\r\nexport function exposePropsOnRenderContext(\r\n  instance: ComponentInternalInstance\r\n) {\r\n  const {\r\n    ctx,\r\n    propsOptions: [propsOptions]\r\n  } = instance\r\n  if (propsOptions) {\r\n    Object.keys(propsOptions).forEach(key => {\r\n      Object.defineProperty(ctx, key, {\r\n        enumerable: true,\r\n        configurable: true,\r\n        get: () => instance.props[key],\r\n        set: NOOP\r\n      })\r\n    })\r\n  }\r\n}\r\n\r\n// dev only\r\nexport function exposeSetupStateOnRenderContext(\r\n  instance: ComponentInternalInstance\r\n) {\r\n  const { ctx, setupState } = instance\r\n  Object.keys(toRaw(setupState)).forEach(key => {\r\n    if (!setupState.__isScriptSetup && (key[0] === '$' || key[0] === '_')) {\r\n      warn(\r\n        `setup() return property ${JSON.stringify(\r\n          key\r\n        )} should not start with \"$\" or \"_\" ` +\r\n          `which are reserved prefixes for Vue internals.`\r\n      )\r\n      return\r\n    }\r\n    Object.defineProperty(ctx, key, {\r\n      enumerable: true,\r\n      configurable: true,\r\n      get: () => setupState[key],\r\n      set: NOOP\r\n    })\r\n  })\r\n}\r\n","import { VNode } from './vnode'\r\nimport {\r\n  Data,\r\n  ComponentInternalInstance,\r\n  ConcreteComponent,\r\n  formatComponentName\r\n} from './component'\r\nimport { isString, isFunction } from '@vue/shared'\r\nimport { toRaw, isRef, pauseTracking, resetTracking } from '@vue/reactivity'\r\nimport { callWithErrorHandling, ErrorCodes } from './errorHandling'\r\n\r\ntype ComponentVNode = VNode & {\r\n  type: ConcreteComponent\r\n}\r\n\r\nconst stack: VNode[] = []\r\n\r\ntype TraceEntry = {\r\n  vnode: ComponentVNode\r\n  recurseCount: number\r\n}\r\n\r\ntype ComponentTraceStack = TraceEntry[]\r\n\r\nexport function pushWarningContext(vnode: VNode) {\r\n  stack.push(vnode)\r\n}\r\n\r\nexport function popWarningContext() {\r\n  stack.pop()\r\n}\r\n\r\nexport function warn(msg: string, ...args: any[]) {\r\n  // avoid props formatting or warn handler tracking deps that might be mutated\r\n  // during patch, leading to infinite recursion.\r\n  pauseTracking()\r\n\r\n  const instance = stack.length ? stack[stack.length - 1].component : null\r\n  const appWarnHandler = instance && instance.appContext.config.warnHandler\r\n  const trace = getComponentTrace()\r\n\r\n  if (appWarnHandler) {\r\n    callWithErrorHandling(\r\n      appWarnHandler,\r\n      instance,\r\n      ErrorCodes.APP_WARN_HANDLER,\r\n      [\r\n        msg + args.join(''),\r\n        instance && instance.proxy,\r\n        trace\r\n          .map(\r\n            ({ vnode }) => `at <${formatComponentName(instance, vnode.type)}>`\r\n          )\r\n          .join('\\n'),\r\n        trace\r\n      ]\r\n    )\r\n  } else {\r\n    const warnArgs = [`[Vue warn]: ${msg}`, ...args]\r\n    /* istanbul ignore if */\r\n    if (\r\n      trace.length &&\r\n      // avoid spamming console during tests\r\n      !__TEST__\r\n    ) {\r\n      warnArgs.push(`\\n`, ...formatTrace(trace))\r\n    }\r\n    console.warn(...warnArgs)\r\n  }\r\n\r\n  resetTracking()\r\n}\r\n\r\nexport function getComponentTrace(): ComponentTraceStack {\r\n  let currentVNode: VNode | null = stack[stack.length - 1]\r\n  if (!currentVNode) {\r\n    return []\r\n  }\r\n\r\n  // we can't just use the stack because it will be incomplete during updates\r\n  // that did not start from the root. Re-construct the parent chain using\r\n  // instance parent pointers.\r\n  const normalizedStack: ComponentTraceStack = []\r\n\r\n  while (currentVNode) {\r\n    const last = normalizedStack[0]\r\n    if (last && last.vnode === currentVNode) {\r\n      last.recurseCount++\r\n    } else {\r\n      normalizedStack.push({\r\n        vnode: currentVNode as ComponentVNode,\r\n        recurseCount: 0\r\n      })\r\n    }\r\n    const parentInstance: ComponentInternalInstance | null =\r\n      currentVNode.component && currentVNode.component.parent\r\n    currentVNode = parentInstance && parentInstance.vnode\r\n  }\r\n\r\n  return normalizedStack\r\n}\r\n\r\n/* istanbul ignore next */\r\nfunction formatTrace(trace: ComponentTraceStack): any[] {\r\n  const logs: any[] = []\r\n  trace.forEach((entry, i) => {\r\n    logs.push(...(i === 0 ? [] : [`\\n`]), ...formatTraceEntry(entry))\r\n  })\r\n  return logs\r\n}\r\n\r\nfunction formatTraceEntry({ vnode, recurseCount }: TraceEntry): any[] {\r\n  const postfix =\r\n    recurseCount > 0 ? `... (${recurseCount} recursive calls)` : ``\r\n  const isRoot = vnode.component ? vnode.component.parent == null : false\r\n  const open = ` at <${formatComponentName(\r\n    vnode.component,\r\n    vnode.type,\r\n    isRoot\r\n  )}`\r\n  const close = `>` + postfix\r\n  return vnode.props\r\n    ? [open, ...formatProps(vnode.props), close]\r\n    : [open + close]\r\n}\r\n\r\n/* istanbul ignore next */\r\nfunction formatProps(props: Data): any[] {\r\n  const res: any[] = []\r\n  const keys = Object.keys(props)\r\n  keys.slice(0, 3).forEach(key => {\r\n    res.push(...formatProp(key, props[key]))\r\n  })\r\n  if (keys.length > 3) {\r\n    res.push(` ...`)\r\n  }\r\n  return res\r\n}\r\n\r\nfunction formatProp(key: string, value: unknown): any[]\r\nfunction formatProp(key: string, value: unknown, raw: true): any\r\n/* istanbul ignore next */\r\nfunction formatProp(key: string, value: unknown, raw?: boolean): any {\r\n  if (isString(value)) {\r\n    value = JSON.stringify(value)\r\n    return raw ? value : [`${key}=${value}`]\r\n  } else if (\r\n    typeof value === 'number' ||\r\n    typeof value === 'boolean' ||\r\n    value == null\r\n  ) {\r\n    return raw ? value : [`${key}=${value}`]\r\n  } else if (isRef(value)) {\r\n    value = formatProp(key, toRaw(value.value), true)\r\n    return raw ? value : [`${key}=Ref<`, value, `>`]\r\n  } else if (isFunction(value)) {\r\n    return [`${key}=fn${value.name ? `<${value.name}>` : ``}`]\r\n  } else {\r\n    value = toRaw(value)\r\n    return raw ? value : [`${key}=`, value]\r\n  }\r\n}\r\n","import { VNode } from './vnode'\r\nimport { ComponentInternalInstance, LifecycleHooks } from './component'\r\nimport { warn, pushWarningContext, popWarningContext } from './warning'\r\nimport { isPromise, isFunction } from '@vue/shared'\r\n\r\n// contexts where user provided function may be executed, in addition to\r\n// lifecycle hooks.\r\nexport const enum ErrorCodes {\r\n  SETUP_FUNCTION,\r\n  RENDER_FUNCTION,\r\n  WATCH_GETTER,\r\n  WATCH_CALLBACK,\r\n  WATCH_CLEANUP,\r\n  NATIVE_EVENT_HANDLER,\r\n  COMPONENT_EVENT_HANDLER,\r\n  VNODE_HOOK,\r\n  DIRECTIVE_HOOK,\r\n  TRANSITION_HOOK,\r\n  APP_ERROR_HANDLER,\r\n  APP_WARN_HANDLER,\r\n  FUNCTION_REF,\r\n  ASYNC_COMPONENT_LOADER,\r\n  SCHEDULER\r\n}\r\n\r\nexport const ErrorTypeStrings: Record<number | string, string> = {\r\n  [LifecycleHooks.SERVER_PREFETCH]: 'serverPrefetch hook',\r\n  [LifecycleHooks.BEFORE_CREATE]: 'beforeCreate hook',\r\n  [LifecycleHooks.CREATED]: 'created hook',\r\n  [LifecycleHooks.BEFORE_MOUNT]: 'beforeMount hook',\r\n  [LifecycleHooks.MOUNTED]: 'mounted hook',\r\n  [LifecycleHooks.BEFORE_UPDATE]: 'beforeUpdate hook',\r\n  [LifecycleHooks.UPDATED]: 'updated',\r\n  [LifecycleHooks.BEFORE_UNMOUNT]: 'beforeUnmount hook',\r\n  [LifecycleHooks.UNMOUNTED]: 'unmounted hook',\r\n  [LifecycleHooks.ACTIVATED]: 'activated hook',\r\n  [LifecycleHooks.DEACTIVATED]: 'deactivated hook',\r\n  [LifecycleHooks.ERROR_CAPTURED]: 'errorCaptured hook',\r\n  [LifecycleHooks.RENDER_TRACKED]: 'renderTracked hook',\r\n  [LifecycleHooks.RENDER_TRIGGERED]: 'renderTriggered hook',\r\n  [ErrorCodes.SETUP_FUNCTION]: 'setup function',\r\n  [ErrorCodes.RENDER_FUNCTION]: 'render function',\r\n  [ErrorCodes.WATCH_GETTER]: 'watcher getter',\r\n  [ErrorCodes.WATCH_CALLBACK]: 'watcher callback',\r\n  [ErrorCodes.WATCH_CLEANUP]: 'watcher cleanup function',\r\n  [ErrorCodes.NATIVE_EVENT_HANDLER]: 'native event handler',\r\n  [ErrorCodes.COMPONENT_EVENT_HANDLER]: 'component event handler',\r\n  [ErrorCodes.VNODE_HOOK]: 'vnode hook',\r\n  [ErrorCodes.DIRECTIVE_HOOK]: 'directive hook',\r\n  [ErrorCodes.TRANSITION_HOOK]: 'transition hook',\r\n  [ErrorCodes.APP_ERROR_HANDLER]: 'app errorHandler',\r\n  [ErrorCodes.APP_WARN_HANDLER]: 'app warnHandler',\r\n  [ErrorCodes.FUNCTION_REF]: 'ref function',\r\n  [ErrorCodes.ASYNC_COMPONENT_LOADER]: 'async component loader',\r\n  [ErrorCodes.SCHEDULER]:\r\n    'scheduler flush. This is likely a Vue internals bug. ' +\r\n    'Please open an issue at https://new-issue.vuejs.org/?repo=vuejs/vue-next'\r\n}\r\n\r\nexport type ErrorTypes = LifecycleHooks | ErrorCodes\r\n\r\nexport function callWithErrorHandling(\r\n  fn: Function,\r\n  instance: ComponentInternalInstance | null,\r\n  type: ErrorTypes,\r\n  args?: unknown[]\r\n) {\r\n  let res\r\n  try {\r\n    res = args ? fn(...args) : fn()\r\n  } catch (err) {\r\n    handleError(err, instance, type)\r\n  }\r\n  return res\r\n}\r\n\r\nexport function callWithAsyncErrorHandling(\r\n  fn: Function | Function[],\r\n  instance: ComponentInternalInstance | null,\r\n  type: ErrorTypes,\r\n  args?: unknown[]\r\n): any[] {\r\n  if (isFunction(fn)) {\r\n    const res = callWithErrorHandling(fn, instance, type, args)\r\n    if (res && isPromise(res)) {\r\n      res.catch(err => {\r\n        handleError(err, instance, type)\r\n      })\r\n    }\r\n    return res\r\n  }\r\n\r\n  const values = []\r\n  for (let i = 0; i < fn.length; i++) {\r\n    values.push(callWithAsyncErrorHandling(fn[i], instance, type, args))\r\n  }\r\n  return values\r\n}\r\n\r\nexport function handleError(\r\n  err: unknown,\r\n  instance: ComponentInternalInstance | null,\r\n  type: ErrorTypes,\r\n  throwInDev = true\r\n) {\r\n  const contextVNode = instance ? instance.vnode : null\r\n  if (instance) {\r\n    let cur = instance.parent\r\n    // the exposed instance is the render proxy to keep it consistent with 2.x\r\n    const exposedInstance = instance.proxy\r\n    // in production the hook receives only the error code\r\n    const errorInfo = __DEV__ ? ErrorTypeStrings[type] : type\r\n    while (cur) {\r\n      const errorCapturedHooks = cur.ec\r\n      if (errorCapturedHooks) {\r\n        for (let i = 0; i < errorCapturedHooks.length; i++) {\r\n          if (\r\n            errorCapturedHooks[i](err, exposedInstance, errorInfo) === false\r\n          ) {\r\n            return\r\n          }\r\n        }\r\n      }\r\n      cur = cur.parent\r\n    }\r\n    // app-level handling\r\n    const appErrorHandler = instance.appContext.config.errorHandler\r\n    if (appErrorHandler) {\r\n      callWithErrorHandling(\r\n        appErrorHandler,\r\n        null,\r\n        ErrorCodes.APP_ERROR_HANDLER,\r\n        [err, exposedInstance, errorInfo]\r\n      )\r\n      return\r\n    }\r\n  }\r\n  logError(err, type, contextVNode, throwInDev)\r\n}\r\n\r\nfunction logError(\r\n  err: unknown,\r\n  type: ErrorTypes,\r\n  contextVNode: VNode | null,\r\n  throwInDev = true\r\n) {\r\n  if (__DEV__) {\r\n    const info = ErrorTypeStrings[type]\r\n    if (contextVNode) {\r\n      pushWarningContext(contextVNode)\r\n    }\r\n    warn(`Unhandled error${info ? ` during execution of ${info}` : ``}`)\r\n    if (contextVNode) {\r\n      popWarningContext()\r\n    }\r\n    // crash in dev by default so it's more noticeable\r\n    if (throwInDev) {\r\n      throw err\r\n    } else if (!__TEST__) {\r\n      console.error(err)\r\n    }\r\n  } else {\r\n    // recover in prod to reduce the impact on end-user\r\n    console.error(err)\r\n  }\r\n}\r\n","import {\r\n  isRef,\r\n  Ref,\r\n  ComputedRef,\r\n  ReactiveEffect,\r\n  isReactive,\r\n  ReactiveFlags,\r\n  EffectScheduler,\r\n  DebuggerOptions\r\n} from '@vue/reactivity'\r\nimport { SchedulerJob, queuePreFlushCb } from './scheduler'\r\nimport {\r\n  EMPTY_OBJ,\r\n  isObject,\r\n  isArray,\r\n  isFunction,\r\n  isString,\r\n  hasChanged,\r\n  NOOP,\r\n  remove,\r\n  isMap,\r\n  isSet,\r\n  isPlainObject\r\n} from '@vue/shared'\r\nimport {\r\n  currentInstance,\r\n  ComponentInternalInstance,\r\n  isInSSRComponentSetup,\r\n  setCurrentInstance,\r\n  unsetCurrentInstance\r\n} from './component'\r\nimport {\r\n  ErrorCodes,\r\n  callWithErrorHandling,\r\n  callWithAsyncErrorHandling\r\n} from './errorHandling'\r\nimport { queuePostRenderEffect } from './renderer'\r\nimport { warn } from './warning'\r\nimport { DeprecationTypes } from './compat/compatConfig'\r\nimport { checkCompatEnabled, isCompatEnabled } from './compat/compatConfig'\r\nimport { ObjectWatchOptionItem } from './componentOptions'\r\n\r\nexport type WatchEffect = (onInvalidate: InvalidateCbRegistrator) => void\r\n\r\nexport type WatchSource<T = any> = Ref<T> | ComputedRef<T> | (() => T)\r\n\r\nexport type WatchCallback<V = any, OV = any> = (\r\n  value: V,\r\n  oldValue: OV,\r\n  onInvalidate: InvalidateCbRegistrator\r\n) => any\r\n\r\ntype MapSources<T, Immediate> = {\r\n  [K in keyof T]: T[K] extends WatchSource<infer V>\r\n    ? Immediate extends true\r\n      ? V | undefined\r\n      : V\r\n    : T[K] extends object\r\n    ? Immediate extends true\r\n      ? T[K] | undefined\r\n      : T[K]\r\n    : never\r\n}\r\n\r\ntype InvalidateCbRegistrator = (cb: () => void) => void\r\n\r\nexport interface WatchOptionsBase extends DebuggerOptions {\r\n  flush?: 'pre' | 'post' | 'sync'\r\n}\r\n\r\nexport interface WatchOptions<Immediate = boolean> extends WatchOptionsBase {\r\n  immediate?: Immediate\r\n  deep?: boolean\r\n}\r\n\r\nexport type WatchStopHandle = () => void\r\n\r\n// Simple effect.\r\nexport function watchEffect(\r\n  effect: WatchEffect,\r\n  options?: WatchOptionsBase\r\n): WatchStopHandle {\r\n  return doWatch(effect, null, options)\r\n}\r\n\r\nexport function watchPostEffect(\r\n  effect: WatchEffect,\r\n  options?: DebuggerOptions\r\n) {\r\n  return doWatch(\r\n    effect,\r\n    null,\r\n    (__DEV__\r\n      ? Object.assign(options || {}, { flush: 'post' })\r\n      : { flush: 'post' }) as WatchOptionsBase\r\n  )\r\n}\r\n\r\nexport function watchSyncEffect(\r\n  effect: WatchEffect,\r\n  options?: DebuggerOptions\r\n) {\r\n  return doWatch(\r\n    effect,\r\n    null,\r\n    (__DEV__\r\n      ? Object.assign(options || {}, { flush: 'sync' })\r\n      : { flush: 'sync' }) as WatchOptionsBase\r\n  )\r\n}\r\n\r\n// initial value for watchers to trigger on undefined initial values\r\nconst INITIAL_WATCHER_VALUE = {}\r\n\r\ntype MultiWatchSources = (WatchSource<unknown> | object)[]\r\n\r\n// overload: array of multiple sources + cb\r\nexport function watch<\r\n  T extends MultiWatchSources,\r\n  Immediate extends Readonly<boolean> = false\r\n>(\r\n  sources: [...T],\r\n  cb: WatchCallback<MapSources<T, false>, MapSources<T, Immediate>>,\r\n  options?: WatchOptions<Immediate>\r\n): WatchStopHandle\r\n\r\n// overload: multiple sources w/ `as const`\r\n// watch([foo, bar] as const, () => {})\r\n// somehow [...T] breaks when the type is readonly\r\nexport function watch<\r\n  T extends Readonly<MultiWatchSources>,\r\n  Immediate extends Readonly<boolean> = false\r\n>(\r\n  source: T,\r\n  cb: WatchCallback<MapSources<T, false>, MapSources<T, Immediate>>,\r\n  options?: WatchOptions<Immediate>\r\n): WatchStopHandle\r\n\r\n// overload: single source + cb\r\nexport function watch<T, Immediate extends Readonly<boolean> = false>(\r\n  source: WatchSource<T>,\r\n  cb: WatchCallback<T, Immediate extends true ? T | undefined : T>,\r\n  options?: WatchOptions<Immediate>\r\n): WatchStopHandle\r\n\r\n// overload: watching reactive object w/ cb\r\nexport function watch<\r\n  T extends object,\r\n  Immediate extends Readonly<boolean> = false\r\n>(\r\n  source: T,\r\n  cb: WatchCallback<T, Immediate extends true ? T | undefined : T>,\r\n  options?: WatchOptions<Immediate>\r\n): WatchStopHandle\r\n\r\n// implementation\r\nexport function watch<T = any, Immediate extends Readonly<boolean> = false>(\r\n  source: T | WatchSource<T>,\r\n  cb: any,\r\n  options?: WatchOptions<Immediate>\r\n): WatchStopHandle {\r\n  if (__DEV__ && !isFunction(cb)) {\r\n    warn(\r\n      `\\`watch(fn, options?)\\` signature has been moved to a separate API. ` +\r\n        `Use \\`watchEffect(fn, options?)\\` instead. \\`watch\\` now only ` +\r\n        `supports \\`watch(source, cb, options?) signature.`\r\n    )\r\n  }\r\n  return doWatch(source as any, cb, options)\r\n}\r\n\r\nfunction doWatch(\r\n  source: WatchSource | WatchSource[] | WatchEffect | object,\r\n  cb: WatchCallback | null,\r\n  { immediate, deep, flush, onTrack, onTrigger }: WatchOptions = EMPTY_OBJ\r\n): WatchStopHandle {\r\n  if (__DEV__ && !cb) {\r\n    if (immediate !== undefined) {\r\n      warn(\r\n        `watch() \"immediate\" option is only respected when using the ` +\r\n          `watch(source, callback, options?) signature.`\r\n      )\r\n    }\r\n    if (deep !== undefined) {\r\n      warn(\r\n        `watch() \"deep\" option is only respected when using the ` +\r\n          `watch(source, callback, options?) signature.`\r\n      )\r\n    }\r\n  }\r\n\r\n  const warnInvalidSource = (s: unknown) => {\r\n    warn(\r\n      `Invalid watch source: `,\r\n      s,\r\n      `A watch source can only be a getter/effect function, a ref, ` +\r\n        `a reactive object, or an array of these types.`\r\n    )\r\n  }\r\n\r\n  const instance = currentInstance\r\n  let getter: () => any\r\n  let forceTrigger = false\r\n  let isMultiSource = false\r\n\r\n  if (isRef(source)) {\r\n    getter = () => source.value\r\n    forceTrigger = !!source._shallow\r\n  } else if (isReactive(source)) {\r\n    getter = () => source\r\n    deep = true\r\n  } else if (isArray(source)) {\r\n    isMultiSource = true\r\n    forceTrigger = source.some(isReactive)\r\n    getter = () =>\r\n      source.map(s => {\r\n        if (isRef(s)) {\r\n          return s.value\r\n        } else if (isReactive(s)) {\r\n          return traverse(s)\r\n        } else if (isFunction(s)) {\r\n          return callWithErrorHandling(s, instance, ErrorCodes.WATCH_GETTER)\r\n        } else {\r\n          __DEV__ && warnInvalidSource(s)\r\n        }\r\n      })\r\n  } else if (isFunction(source)) {\r\n    if (cb) {\r\n      // getter with cb\r\n      getter = () =>\r\n        callWithErrorHandling(source, instance, ErrorCodes.WATCH_GETTER)\r\n    } else {\r\n      // no cb -> simple effect\r\n      getter = () => {\r\n        if (instance && instance.isUnmounted) {\r\n          return\r\n        }\r\n        if (cleanup) {\r\n          cleanup()\r\n        }\r\n        return callWithAsyncErrorHandling(\r\n          source,\r\n          instance,\r\n          ErrorCodes.WATCH_CALLBACK,\r\n          [onInvalidate]\r\n        )\r\n      }\r\n    }\r\n  } else {\r\n    getter = NOOP\r\n    __DEV__ && warnInvalidSource(source)\r\n  }\r\n\r\n  // 2.x array mutation watch compat\r\n  if (__COMPAT__ && cb && !deep) {\r\n    const baseGetter = getter\r\n    getter = () => {\r\n      const val = baseGetter()\r\n      if (\r\n        isArray(val) &&\r\n        checkCompatEnabled(DeprecationTypes.WATCH_ARRAY, instance)\r\n      ) {\r\n        traverse(val)\r\n      }\r\n      return val\r\n    }\r\n  }\r\n\r\n  if (cb && deep) {\r\n    const baseGetter = getter\r\n    getter = () => traverse(baseGetter())\r\n  }\r\n\r\n  let cleanup: () => void\r\n  let onInvalidate: InvalidateCbRegistrator = (fn: () => void) => {\r\n    cleanup = effect.onStop = () => {\r\n      callWithErrorHandling(fn, instance, ErrorCodes.WATCH_CLEANUP)\r\n    }\r\n  }\r\n\r\n  // in SSR there is no need to setup an actual effect, and it should be noop\r\n  // unless it's eager\r\n  if (__NODE_JS__ && isInSSRComponentSetup) {\r\n    // we will also not call the invalidate callback (+ runner is not set up)\r\n    onInvalidate = NOOP\r\n    if (!cb) {\r\n      getter()\r\n    } else if (immediate) {\r\n      callWithAsyncErrorHandling(cb, instance, ErrorCodes.WATCH_CALLBACK, [\r\n        getter(),\r\n        isMultiSource ? [] : undefined,\r\n        onInvalidate\r\n      ])\r\n    }\r\n    return NOOP\r\n  }\r\n\r\n  let oldValue = isMultiSource ? [] : INITIAL_WATCHER_VALUE\r\n  const job: SchedulerJob = () => {\r\n    if (!effect.active) {\r\n      return\r\n    }\r\n    if (cb) {\r\n      // watch(source, cb)\r\n      const newValue = effect.run()\r\n      if (\r\n        deep ||\r\n        forceTrigger ||\r\n        (isMultiSource\r\n          ? (newValue as any[]).some((v, i) =>\r\n              hasChanged(v, (oldValue as any[])[i])\r\n            )\r\n          : hasChanged(newValue, oldValue)) ||\r\n        (__COMPAT__ &&\r\n          isArray(newValue) &&\r\n          isCompatEnabled(DeprecationTypes.WATCH_ARRAY, instance))\r\n      ) {\r\n        // cleanup before running cb again\r\n        if (cleanup) {\r\n          cleanup()\r\n        }\r\n        callWithAsyncErrorHandling(cb, instance, ErrorCodes.WATCH_CALLBACK, [\r\n          newValue,\r\n          // pass undefined as the old value when it's changed for the first time\r\n          oldValue === INITIAL_WATCHER_VALUE ? undefined : oldValue,\r\n          onInvalidate\r\n        ])\r\n        oldValue = newValue\r\n      }\r\n    } else {\r\n      // watchEffect\r\n      effect.run()\r\n    }\r\n  }\r\n\r\n  // important: mark the job as a watcher callback so that scheduler knows\r\n  // it is allowed to self-trigger (#1727)\r\n  job.allowRecurse = !!cb\r\n\r\n  let scheduler: EffectScheduler\r\n  if (flush === 'sync') {\r\n    scheduler = job as any // the scheduler function gets called directly\r\n  } else if (flush === 'post') {\r\n    scheduler = () => queuePostRenderEffect(job, instance && instance.suspense)\r\n  } else {\r\n    // default: 'pre'\r\n    scheduler = () => {\r\n      if (!instance || instance.isMounted) {\r\n        queuePreFlushCb(job)\r\n      } else {\r\n        // with 'pre' option, the first call must happen before\r\n        // the component is mounted so it is called synchronously.\r\n        job()\r\n      }\r\n    }\r\n  }\r\n\r\n  const effect = new ReactiveEffect(getter, scheduler)\r\n\r\n  if (__DEV__) {\r\n    effect.onTrack = onTrack\r\n    effect.onTrigger = onTrigger\r\n  }\r\n\r\n  // initial run\r\n  if (cb) {\r\n    if (immediate) {\r\n      job()\r\n    } else {\r\n      oldValue = effect.run()\r\n    }\r\n  } else if (flush === 'post') {\r\n    queuePostRenderEffect(\r\n      effect.run.bind(effect),\r\n      instance && instance.suspense\r\n    )\r\n  } else {\r\n    effect.run()\r\n  }\r\n\r\n  return () => {\r\n    effect.stop()\r\n    if (instance && instance.scope) {\r\n      remove(instance.scope.effects!, effect)\r\n    }\r\n  }\r\n}\r\n\r\n// this.$watch\r\nexport function instanceWatch(\r\n  this: ComponentInternalInstance,\r\n  source: string | Function,\r\n  value: WatchCallback | ObjectWatchOptionItem,\r\n  options?: WatchOptions\r\n): WatchStopHandle {\r\n  const publicThis = this.proxy as any\r\n  const getter = isString(source)\r\n    ? source.includes('.')\r\n      ? createPathGetter(publicThis, source)\r\n      : () => publicThis[source]\r\n    : source.bind(publicThis, publicThis)\r\n  let cb\r\n  if (isFunction(value)) {\r\n    cb = value\r\n  } else {\r\n    cb = value.handler as Function\r\n    options = value\r\n  }\r\n  const cur = currentInstance\r\n  setCurrentInstance(this)\r\n  const res = doWatch(getter, cb.bind(publicThis), options)\r\n  if (cur) {\r\n    setCurrentInstance(cur)\r\n  } else {\r\n    unsetCurrentInstance()\r\n  }\r\n  return res\r\n}\r\n\r\nexport function createPathGetter(ctx: any, path: string) {\r\n  const segments = path.split('.')\r\n  return () => {\r\n    let cur = ctx\r\n    for (let i = 0; i < segments.length && cur; i++) {\r\n      cur = cur[segments[i]]\r\n    }\r\n    return cur\r\n  }\r\n}\r\n\r\nexport function traverse(value: unknown, seen: Set<unknown> = new Set()) {\r\n  if (!isObject(value) || (value as any)[ReactiveFlags.SKIP]) {\r\n    return value\r\n  }\r\n  seen = seen || new Set()\r\n  if (seen.has(value)) {\r\n    return value\r\n  }\r\n  seen.add(value)\r\n  if (isRef(value)) {\r\n    traverse(value.value, seen)\r\n  } else if (isArray(value)) {\r\n    for (let i = 0; i < value.length; i++) {\r\n      traverse(value[i], seen)\r\n    }\r\n  } else if (isSet(value) || isMap(value)) {\r\n    value.forEach((v: any) => {\r\n      traverse(v, seen)\r\n    })\r\n  } else if (isPlainObject(value)) {\r\n    for (const key in value) {\r\n      traverse((value as any)[key], seen)\r\n    }\r\n  }\r\n  return value\r\n}\r\n","import { isPromise } from '../../shared/src'\r\nimport {\r\n  getCurrentInstance,\r\n  setCurrentInstance,\r\n  SetupContext,\r\n  createSetupContext,\r\n  unsetCurrentInstance\r\n} from './component'\r\nimport { EmitFn, EmitsOptions } from './componentEmits'\r\nimport {\r\n  ComponentObjectPropsOptions,\r\n  PropOptions,\r\n  ExtractPropTypes\r\n} from './componentProps'\r\nimport { warn } from './warning'\r\n\r\n// dev only\r\nconst warnRuntimeUsage = (method: string) =>\r\n  warn(\r\n    `${method}() is a compiler-hint helper that is only usable inside ` +\r\n      `<script setup> of a single file component. Its arguments should be ` +\r\n      `compiled away and passing it at runtime has no effect.`\r\n  )\r\n\r\n/**\r\n * Vue `<script setup>` compiler macro for declaring component props. The\r\n * expected argument is the same as the component `props` option.\r\n *\r\n * Example runtime declaration:\r\n * ```js\r\n * // using Array syntax\r\n * const props = defineProps(['foo', 'bar'])\r\n * // using Object syntax\r\n * const props = defineProps({\r\n *   foo: String,\r\n *   bar: {\r\n *     type: Number,\r\n *     required: true\r\n *   }\r\n * })\r\n * ```\r\n *\r\n * Equivalent type-based decalration:\r\n * ```ts\r\n * // will be compiled into equivalent runtime declarations\r\n * const props = defineProps<{\r\n *   foo?: string\r\n *   bar: number\r\n * }>()\r\n * ```\r\n *\r\n * This is only usable inside `<script setup>`, is compiled away in the\r\n * output and should **not** be actually called at runtime.\r\n */\r\n// overload 1: runtime props w/ array\r\nexport function defineProps<PropNames extends string = string>(\r\n  props: PropNames[]\r\n): Readonly<{ [key in PropNames]?: any }>\r\n// overload 2: runtime props w/ object\r\nexport function defineProps<\r\n  PP extends ComponentObjectPropsOptions = ComponentObjectPropsOptions\r\n>(props: PP): Readonly<ExtractPropTypes<PP>>\r\n// overload 3: typed-based declaration\r\nexport function defineProps<TypeProps>(): Readonly<TypeProps>\r\n// implementation\r\nexport function defineProps() {\r\n  if (__DEV__) {\r\n    warnRuntimeUsage(`defineProps`)\r\n  }\r\n  return null as any\r\n}\r\n\r\n/**\r\n * Vue `<script setup>` compiler macro for declaring a component's emitted\r\n * events. The expected argument is the same as the component `emits` option.\r\n *\r\n * Example runtime declaration:\r\n * ```js\r\n * const emit = defineEmits(['change', 'update'])\r\n * ```\r\n *\r\n * Example type-based decalration:\r\n * ```ts\r\n * const emit = defineEmits<{\r\n *   (event: 'change'): void\r\n *   (event: 'update', id: number): void\r\n * }>()\r\n *\r\n * emit('change')\r\n * emit('update', 1)\r\n * ```\r\n *\r\n * This is only usable inside `<script setup>`, is compiled away in the\r\n * output and should **not** be actually called at runtime.\r\n */\r\n// overload 1: runtime emits w/ array\r\nexport function defineEmits<EE extends string = string>(\r\n  emitOptions: EE[]\r\n): EmitFn<EE[]>\r\nexport function defineEmits<E extends EmitsOptions = EmitsOptions>(\r\n  emitOptions: E\r\n): EmitFn<E>\r\nexport function defineEmits<TypeEmit>(): TypeEmit\r\n// implementation\r\nexport function defineEmits() {\r\n  if (__DEV__) {\r\n    warnRuntimeUsage(`defineEmits`)\r\n  }\r\n  return null as any\r\n}\r\n\r\n/**\r\n * Vue `<script setup>` compiler macro for declaring a component's exposed\r\n * instance properties when it is accessed by a parent component via template\r\n * refs.\r\n *\r\n * `<script setup>` components are closed by default - i.e. varaibles inside\r\n * the `<script setup>` scope is not exposed to parent unless explicitly exposed\r\n * via `defineExpose`.\r\n *\r\n * This is only usable inside `<script setup>`, is compiled away in the\r\n * output and should **not** be actually called at runtime.\r\n */\r\nexport function defineExpose(exposed?: Record<string, any>) {\r\n  if (__DEV__) {\r\n    warnRuntimeUsage(`defineExpose`)\r\n  }\r\n}\r\n\r\ntype NotUndefined<T> = T extends undefined ? never : T\r\n\r\ntype InferDefaults<T> = {\r\n  [K in keyof T]?: NotUndefined<T[K]> extends\r\n    | number\r\n    | string\r\n    | boolean\r\n    | symbol\r\n    | Function\r\n    ? NotUndefined<T[K]>\r\n    : (props: T) => NotUndefined<T[K]>\r\n}\r\n\r\ntype PropsWithDefaults<Base, Defaults> = Base &\r\n  {\r\n    [K in keyof Defaults]: K extends keyof Base ? NotUndefined<Base[K]> : never\r\n  }\r\n\r\n/**\r\n * Vue `<script setup>` compiler macro for providing props default values when\r\n * using type-based `defineProps` decalration.\r\n *\r\n * Example usage:\r\n * ```ts\r\n * withDefaults(defineProps<{\r\n *   size?: number\r\n *   labels?: string[]\r\n * }>(), {\r\n *   size: 3,\r\n *   labels: () => ['default label']\r\n * })\r\n * ```\r\n *\r\n * This is only usable inside `<script setup>`, is compiled away in the output\r\n * and should **not** be actually called at runtime.\r\n */\r\nexport function withDefaults<Props, Defaults extends InferDefaults<Props>>(\r\n  props: Props,\r\n  defaults: Defaults\r\n): PropsWithDefaults<Props, Defaults> {\r\n  if (__DEV__) {\r\n    warnRuntimeUsage(`withDefaults`)\r\n  }\r\n  return null as any\r\n}\r\n\r\nexport function useSlots(): SetupContext['slots'] {\r\n  return getContext().slots\r\n}\r\n\r\nexport function useAttrs(): SetupContext['attrs'] {\r\n  return getContext().attrs\r\n}\r\n\r\nfunction getContext(): SetupContext {\r\n  const i = getCurrentInstance()!\r\n  if (__DEV__ && !i) {\r\n    warn(`useContext() called without active instance.`)\r\n  }\r\n  return i.setupContext || (i.setupContext = createSetupContext(i))\r\n}\r\n\r\n/**\r\n * Runtime helper for merging default declarations. Imported by compiled code\r\n * only.\r\n * @internal\r\n */\r\nexport function mergeDefaults(\r\n  // the base props is compiler-generated and guaranteed to be in this shape.\r\n  props: Record<string, PropOptions | null>,\r\n  defaults: Record<string, any>\r\n) {\r\n  for (const key in defaults) {\r\n    const val = props[key]\r\n    if (val) {\r\n      val.default = defaults[key]\r\n    } else if (val === null) {\r\n      props[key] = { default: defaults[key] }\r\n    } else if (__DEV__) {\r\n      warn(`props default key \"${key}\" has no corresponding declaration.`)\r\n    }\r\n  }\r\n  return props\r\n}\r\n\r\n/**\r\n * `<script setup>` helper for persisting the current instance context over\r\n * async/await flows.\r\n *\r\n * `@vue/compiler-sfc` converts the following:\r\n *\r\n * ```ts\r\n * const x = await foo()\r\n * ```\r\n *\r\n * into:\r\n *\r\n * ```ts\r\n * let __temp, __restore\r\n * const x = (([__temp, __restore] = withAsyncContext(() => foo())),__temp=await __temp,__restore(),__temp)\r\n * ```\r\n * @internal\r\n */\r\nexport function withAsyncContext(getAwaitable: () => any) {\r\n  const ctx = getCurrentInstance()!\r\n  if (__DEV__ && !ctx) {\r\n    warn(\r\n      `withAsyncContext called without active current instance. ` +\r\n        `This is likely a bug.`\r\n    )\r\n  }\r\n  let awaitable = getAwaitable()\r\n  unsetCurrentInstance()\r\n  if (isPromise(awaitable)) {\r\n    awaitable = awaitable.catch(e => {\r\n      setCurrentInstance(ctx)\r\n      throw e\r\n    })\r\n  }\r\n  return [awaitable, () => setCurrentInstance(ctx)]\r\n}\r\n","import {\r\n  VNode,\r\n  VNodeProps,\r\n  createVNode,\r\n  VNodeArrayChildren,\r\n  Fragment,\r\n  Text,\r\n  Comment,\r\n  isVNode\r\n} from './vnode'\r\nimport { Teleport, TeleportProps } from './components/Teleport'\r\nimport { Suspense, SuspenseProps } from './components/Suspense'\r\nimport { isObject, isArray } from '@vue/shared'\r\nimport { RawSlots } from './componentSlots'\r\nimport {\r\n  FunctionalComponent,\r\n  Component,\r\n  ComponentOptions,\r\n  ConcreteComponent\r\n} from './component'\r\nimport { EmitsOptions } from './componentEmits'\r\nimport { DefineComponent } from './apiDefineComponent'\r\n\r\n// `h` is a more user-friendly version of `createVNode` that allows omitting the\r\n// props when possible. It is intended for manually written render functions.\r\n// Compiler-generated code uses `createVNode` because\r\n// 1. it is monomorphic and avoids the extra call overhead\r\n// 2. it allows specifying patchFlags for optimization\r\n\r\n/*\r\n// type only\r\nh('div')\r\n\r\n// type + props\r\nh('div', {})\r\n\r\n// type + omit props + children\r\n// Omit props does NOT support named slots\r\nh('div', []) // array\r\nh('div', 'foo') // text\r\nh('div', h('br')) // vnode\r\nh(Component, () => {}) // default slot\r\n\r\n// type + props + children\r\nh('div', {}, []) // array\r\nh('div', {}, 'foo') // text\r\nh('div', {}, h('br')) // vnode\r\nh(Component, {}, () => {}) // default slot\r\nh(Component, {}, {}) // named slots\r\n\r\n// named slots without props requires explicit `null` to avoid ambiguity\r\nh(Component, null, {})\r\n**/\r\n\r\ntype RawProps = VNodeProps & {\r\n  // used to differ from a single VNode object as children\r\n  __v_isVNode?: never\r\n  // used to differ from Array children\r\n  [Symbol.iterator]?: never\r\n} & Record<string, any>\r\n\r\ntype RawChildren =\r\n  | string\r\n  | number\r\n  | boolean\r\n  | VNode\r\n  | VNodeArrayChildren\r\n  | (() => any)\r\n\r\n// fake constructor type returned from `defineComponent`\r\ninterface Constructor<P = any> {\r\n  __isFragment?: never\r\n  __isTeleport?: never\r\n  __isSuspense?: never\r\n  new (...args: any[]): { $props: P }\r\n}\r\n\r\n// The following is a series of overloads for providing props validation of\r\n// manually written render functions.\r\n\r\n// element\r\nexport function h(type: string, children?: RawChildren): VNode\r\nexport function h(\r\n  type: string,\r\n  props?: RawProps | null,\r\n  children?: RawChildren | RawSlots\r\n): VNode\r\n\r\n// text/comment\r\nexport function h(\r\n  type: typeof Text | typeof Comment,\r\n  children?: string | number | boolean\r\n): VNode\r\nexport function h(\r\n  type: typeof Text | typeof Comment,\r\n  props?: null,\r\n  children?: string | number | boolean\r\n): VNode\r\n// fragment\r\nexport function h(type: typeof Fragment, children?: VNodeArrayChildren): VNode\r\nexport function h(\r\n  type: typeof Fragment,\r\n  props?: RawProps | null,\r\n  children?: VNodeArrayChildren\r\n): VNode\r\n\r\n// teleport (target prop is required)\r\nexport function h(\r\n  type: typeof Teleport,\r\n  props: RawProps & TeleportProps,\r\n  children: RawChildren\r\n): VNode\r\n\r\n// suspense\r\nexport function h(type: typeof Suspense, children?: RawChildren): VNode\r\nexport function h(\r\n  type: typeof Suspense,\r\n  props?: (RawProps & SuspenseProps) | null,\r\n  children?: RawChildren | RawSlots\r\n): VNode\r\n\r\n// functional component\r\nexport function h<P, E extends EmitsOptions = {}>(\r\n  type: FunctionalComponent<P, E>,\r\n  props?: (RawProps & P) | ({} extends P ? null : never),\r\n  children?: RawChildren | RawSlots\r\n): VNode\r\n\r\n// catch-all for generic component types\r\nexport function h(type: Component, children?: RawChildren): VNode\r\n\r\n// concrete component\r\nexport function h<P>(\r\n  type: ConcreteComponent | string,\r\n  children?: RawChildren\r\n): VNode\r\nexport function h<P>(\r\n  type: ConcreteComponent<P> | string,\r\n  props?: (RawProps & P) | ({} extends P ? null : never),\r\n  children?: RawChildren\r\n): VNode\r\n\r\n// component without props\r\nexport function h(\r\n  type: Component,\r\n  props: null,\r\n  children?: RawChildren | RawSlots\r\n): VNode\r\n\r\n// exclude `defineComponent` constructors\r\nexport function h<P>(\r\n  type: ComponentOptions<P>,\r\n  props?: (RawProps & P) | ({} extends P ? null : never),\r\n  children?: RawChildren | RawSlots\r\n): VNode\r\n\r\n// fake constructor type returned by `defineComponent` or class component\r\nexport function h(type: Constructor, children?: RawChildren): VNode\r\nexport function h<P>(\r\n  type: Constructor<P>,\r\n  props?: (RawProps & P) | ({} extends P ? null : never),\r\n  children?: RawChildren | RawSlots\r\n): VNode\r\n\r\n// fake constructor type returned by `defineComponent`\r\nexport function h(type: DefineComponent, children?: RawChildren): VNode\r\nexport function h<P>(\r\n  type: DefineComponent<P>,\r\n  props?: (RawProps & P) | ({} extends P ? null : never),\r\n  children?: RawChildren | RawSlots\r\n): VNode\r\n\r\n// Actual implementation\r\nexport function h(type: any, propsOrChildren?: any, children?: any): VNode {\r\n  const l = arguments.length\r\n  if (l === 2) {\r\n    if (isObject(propsOrChildren) && !isArray(propsOrChildren)) {\r\n      // single vnode without props\r\n      if (isVNode(propsOrChildren)) {\r\n        return createVNode(type, null, [propsOrChildren])\r\n      }\r\n      // props without children\r\n      return createVNode(type, propsOrChildren)\r\n    } else {\r\n      // omit props\r\n      return createVNode(type, null, propsOrChildren)\r\n    }\r\n  } else {\r\n    if (l > 3) {\r\n      children = Array.prototype.slice.call(arguments, 2)\r\n    } else if (l === 3 && isVNode(children)) {\r\n      children = [children]\r\n    }\r\n    return createVNode(type, propsOrChildren, children)\r\n  }\r\n}\r\n","import { inject } from '../apiInject'\r\nimport { warn } from '../warning'\r\n\r\nexport const ssrContextKey = Symbol(__DEV__ ? `ssrContext` : ``)\r\n\r\nexport const useSSRContext = <T = Record<string, any>>() => {\r\n  if (!__GLOBAL__) {\r\n    const ctx = inject<T>(ssrContextKey)\r\n    if (!ctx) {\r\n      warn(\r\n        `Server rendering context not provided. Make sure to only call ` +\r\n          `useSSRContext() conditionally in the server build.`\r\n      )\r\n    }\r\n    return ctx\r\n  } else if (__DEV__) {\r\n    warn(`useSSRContext() is not supported in the global build.`)\r\n  }\r\n}\r\n","import { isReactive, isReadonly, isRef, Ref, toRaw } from '@vue/reactivity'\r\nimport { EMPTY_OBJ, extend, isArray, isFunction, isObject } from '@vue/shared'\r\nimport { ComponentInternalInstance, ComponentOptions } from './component'\r\nimport { ComponentPublicInstance } from './componentPublicInstance'\r\n\r\nexport function initCustomFormatter() {\r\n  /* eslint-disable no-restricted-globals */\r\n  if (!__DEV__ || typeof window === 'undefined') {\r\n    return\r\n  }\r\n\r\n  const vueStyle = { style: 'color:#3ba776' }\r\n  const numberStyle = { style: 'color:#0b1bc9' }\r\n  const stringStyle = { style: 'color:#b62e24' }\r\n  const keywordStyle = { style: 'color:#9d288c' }\r\n\r\n  // custom formatter for Chrome\r\n  // https://www.mattzeunert.com/2016/02/19/custom-chrome-devtools-object-formatters.html\r\n  const formatter = {\r\n    header(obj: unknown) {\r\n      // TODO also format ComponentPublicInstance & ctx.slots/attrs in setup\r\n      if (!isObject(obj)) {\r\n        return null\r\n      }\r\n\r\n      if (obj.__isVue) {\r\n        return ['div', vueStyle, `VueInstance`]\r\n      } else if (isRef(obj)) {\r\n        return [\r\n          'div',\r\n          {},\r\n          ['span', vueStyle, genRefFlag(obj)],\r\n          '<',\r\n          formatValue(obj.value),\r\n          `>`\r\n        ]\r\n      } else if (isReactive(obj)) {\r\n        return [\r\n          'div',\r\n          {},\r\n          ['span', vueStyle, 'Reactive'],\r\n          '<',\r\n          formatValue(obj),\r\n          `>${isReadonly(obj) ? ` (readonly)` : ``}`\r\n        ]\r\n      } else if (isReadonly(obj)) {\r\n        return [\r\n          'div',\r\n          {},\r\n          ['span', vueStyle, 'Readonly'],\r\n          '<',\r\n          formatValue(obj),\r\n          '>'\r\n        ]\r\n      }\r\n      return null\r\n    },\r\n    hasBody(obj: unknown) {\r\n      return obj && (obj as any).__isVue\r\n    },\r\n    body(obj: unknown) {\r\n      if (obj && (obj as any).__isVue) {\r\n        return [\r\n          'div',\r\n          {},\r\n          ...formatInstance((obj as ComponentPublicInstance).$)\r\n        ]\r\n      }\r\n    }\r\n  }\r\n\r\n  function formatInstance(instance: ComponentInternalInstance) {\r\n    const blocks = []\r\n    if (instance.type.props && instance.props) {\r\n      blocks.push(createInstanceBlock('props', toRaw(instance.props)))\r\n    }\r\n    if (instance.setupState !== EMPTY_OBJ) {\r\n      blocks.push(createInstanceBlock('setup', instance.setupState))\r\n    }\r\n    if (instance.data !== EMPTY_OBJ) {\r\n      blocks.push(createInstanceBlock('data', toRaw(instance.data)))\r\n    }\r\n    const computed = extractKeys(instance, 'computed')\r\n    if (computed) {\r\n      blocks.push(createInstanceBlock('computed', computed))\r\n    }\r\n    const injected = extractKeys(instance, 'inject')\r\n    if (injected) {\r\n      blocks.push(createInstanceBlock('injected', injected))\r\n    }\r\n\r\n    blocks.push([\r\n      'div',\r\n      {},\r\n      [\r\n        'span',\r\n        {\r\n          style: keywordStyle.style + ';opacity:0.66'\r\n        },\r\n        '$ (internal): '\r\n      ],\r\n      ['object', { object: instance }]\r\n    ])\r\n    return blocks\r\n  }\r\n\r\n  function createInstanceBlock(type: string, target: any) {\r\n    target = extend({}, target)\r\n    if (!Object.keys(target).length) {\r\n      return ['span', {}]\r\n    }\r\n    return [\r\n      'div',\r\n      { style: 'line-height:1.25em;margin-bottom:0.6em' },\r\n      [\r\n        'div',\r\n        {\r\n          style: 'color:#476582'\r\n        },\r\n        type\r\n      ],\r\n      [\r\n        'div',\r\n        {\r\n          style: 'padding-left:1.25em'\r\n        },\r\n        ...Object.keys(target).map(key => {\r\n          return [\r\n            'div',\r\n            {},\r\n            ['span', keywordStyle, key + ': '],\r\n            formatValue(target[key], false)\r\n          ]\r\n        })\r\n      ]\r\n    ]\r\n  }\r\n\r\n  function formatValue(v: unknown, asRaw = true) {\r\n    if (typeof v === 'number') {\r\n      return ['span', numberStyle, v]\r\n    } else if (typeof v === 'string') {\r\n      return ['span', stringStyle, JSON.stringify(v)]\r\n    } else if (typeof v === 'boolean') {\r\n      return ['span', keywordStyle, v]\r\n    } else if (isObject(v)) {\r\n      return ['object', { object: asRaw ? toRaw(v) : v }]\r\n    } else {\r\n      return ['span', stringStyle, String(v)]\r\n    }\r\n  }\r\n\r\n  function extractKeys(instance: ComponentInternalInstance, type: string) {\r\n    const Comp = instance.type\r\n    if (isFunction(Comp)) {\r\n      return\r\n    }\r\n    const extracted: Record<string, any> = {}\r\n    for (const key in instance.ctx) {\r\n      if (isKeyOfType(Comp, key, type)) {\r\n        extracted[key] = instance.ctx[key]\r\n      }\r\n    }\r\n    return extracted\r\n  }\r\n\r\n  function isKeyOfType(Comp: ComponentOptions, key: string, type: string) {\r\n    const opts = Comp[type]\r\n    if (\r\n      (isArray(opts) && opts.includes(key)) ||\r\n      (isObject(opts) && key in opts)\r\n    ) {\r\n      return true\r\n    }\r\n    if (Comp.extends && isKeyOfType(Comp.extends, key, type)) {\r\n      return true\r\n    }\r\n    if (Comp.mixins && Comp.mixins.some(m => isKeyOfType(m, key, type))) {\r\n      return true\r\n    }\r\n  }\r\n\r\n  function genRefFlag(v: Ref) {\r\n    if (v._shallow) {\r\n      return `ShallowRef`\r\n    }\r\n    if ((v as any).effect) {\r\n      return `ComputedRef`\r\n    }\r\n    return `Ref`\r\n  }\r\n\r\n  if ((window as any).devtoolsFormatters) {\r\n    ;(window as any).devtoolsFormatters.push(formatter)\r\n  } else {\r\n    ;(window as any).devtoolsFormatters = [formatter]\r\n  }\r\n}\r\n","import { currentBlock, isBlockTreeEnabled, VNode } from '../vnode'\r\n\r\nexport function withMemo(\r\n  memo: any[],\r\n  render: () => VNode<any, any>,\r\n  cache: any[],\r\n  index: number\r\n) {\r\n  const cached = cache[index] as VNode | undefined\r\n  if (cached && isMemoSame(cached, memo)) {\r\n    return cached\r\n  }\r\n  const ret = render()\r\n\r\n  // shallow clone\r\n  ret.memo = memo.slice()\r\n  return (cache[index] = ret)\r\n}\r\n\r\nexport function isMemoSame(cached: VNode, memo: any[]) {\r\n  const prev: any[] = cached.memo!\r\n  if (prev.length != memo.length) {\r\n    return false\r\n  }\r\n  for (let i = 0; i < prev.length; i++) {\r\n    if (prev[i] !== memo[i]) {\r\n      return false\r\n    }\r\n  }\r\n\r\n  // make sure to let parent block track it when returning cached\r\n  if (isBlockTreeEnabled > 0 && currentBlock) {\r\n    currentBlock.push(cached)\r\n  }\r\n  return true\r\n}\r\n","import { Ref, UnwrapRef, ShallowUnwrapRef, ComputedRef } from '@vue/reactivity'\r\n\r\nexport function $ref<T>(arg: T | Ref<T>): UnwrapRef<T>\r\nexport function $ref() {}\r\n\r\ndeclare const ComputedRefMarker: unique symbol\r\ntype ComputedRefValue<T> = T & { [ComputedRefMarker]?: any }\r\n\r\nexport function $computed<T>(getter: () => T): ComputedRefValue<T>\r\nexport function $computed() {}\r\n\r\nexport function $fromRefs<T>(source: T): ShallowUnwrapRef<T>\r\nexport function $fromRefs() {\r\n  return null as any\r\n}\r\n\r\nexport function $raw<T>(value: ComputedRefValue<T>): ComputedRef<T>\r\nexport function $raw<T>(value: T): Ref<T>\r\nexport function $raw() {\r\n  return null as any\r\n}\r\n","// Core API ------------------------------------------------------------------\r\n\r\nexport const version = __VERSION__\r\nexport {\r\n  // core\r\n  computed,\r\n  reactive,\r\n  ref,\r\n  readonly,\r\n  // utilities\r\n  unref,\r\n  proxyRefs,\r\n  isRef,\r\n  toRef,\r\n  toRefs,\r\n  isProxy,\r\n  isReactive,\r\n  isReadonly,\r\n  // advanced\r\n  customRef,\r\n  triggerRef,\r\n  shallowRef,\r\n  shallowReactive,\r\n  shallowReadonly,\r\n  markRaw,\r\n  toRaw,\r\n  // effect\r\n  effect,\r\n  stop,\r\n  ReactiveEffect,\r\n  // effect scope\r\n  effectScope,\r\n  EffectScope,\r\n  getCurrentScope,\r\n  onScopeDispose\r\n} from '@vue/reactivity'\r\nexport {\r\n  watch,\r\n  watchEffect,\r\n  watchPostEffect,\r\n  watchSyncEffect\r\n} from './apiWatch'\r\nexport {\r\n  onBeforeMount,\r\n  onMounted,\r\n  onBeforeUpdate,\r\n  onUpdated,\r\n  onBeforeUnmount,\r\n  onUnmounted,\r\n  onActivated,\r\n  onDeactivated,\r\n  onRenderTracked,\r\n  onRenderTriggered,\r\n  onErrorCaptured,\r\n  onServerPrefetch\r\n} from './apiLifecycle'\r\nexport { provide, inject } from './apiInject'\r\nexport { nextTick } from './scheduler'\r\nexport { defineComponent } from './apiDefineComponent'\r\nexport { defineAsyncComponent } from './apiAsyncComponent'\r\nexport { useAttrs, useSlots } from './apiSetupHelpers'\r\n\r\n// <script setup> API ----------------------------------------------------------\r\n\r\nexport {\r\n  // macros runtime, for typing and warnings only\r\n  defineProps,\r\n  defineEmits,\r\n  defineExpose,\r\n  withDefaults,\r\n  // internal\r\n  mergeDefaults,\r\n  withAsyncContext\r\n} from './apiSetupHelpers'\r\n\r\n// Advanced API ----------------------------------------------------------------\r\n\r\n// For getting a hold of the internal instance in setup() - useful for advanced\r\n// plugins\r\nexport { getCurrentInstance } from './component'\r\n\r\n// For raw render function users\r\nexport { h } from './h'\r\n// Advanced render function utilities\r\nexport { createVNode, cloneVNode, mergeProps, isVNode } from './vnode'\r\n// VNode types\r\nexport { Fragment, Text, Comment, Static } from './vnode'\r\n// Built-in components\r\nexport { Teleport, TeleportProps } from './components/Teleport'\r\nexport { Suspense, SuspenseProps } from './components/Suspense'\r\nexport { KeepAlive, KeepAliveProps } from './components/KeepAlive'\r\nexport {\r\n  BaseTransition,\r\n  BaseTransitionProps\r\n} from './components/BaseTransition'\r\n// For using custom directives\r\nexport { withDirectives } from './directives'\r\n// SSR context\r\nexport { useSSRContext, ssrContextKey } from './helpers/useSsrContext'\r\n\r\n// Custom Renderer API ---------------------------------------------------------\r\n\r\nexport { createRenderer, createHydrationRenderer } from './renderer'\r\nexport { queuePostFlushCb } from './scheduler'\r\nexport { warn } from './warning'\r\nexport {\r\n  handleError,\r\n  callWithErrorHandling,\r\n  callWithAsyncErrorHandling,\r\n  ErrorCodes\r\n} from './errorHandling'\r\nexport {\r\n  resolveComponent,\r\n  resolveDirective,\r\n  resolveDynamicComponent\r\n} from './helpers/resolveAssets'\r\n// For integration with runtime compiler\r\nexport { registerRuntimeCompiler, isRuntimeOnly } from './component'\r\nexport {\r\n  useTransitionState,\r\n  resolveTransitionHooks,\r\n  setTransitionHooks,\r\n  getTransitionRawChildren\r\n} from './components/BaseTransition'\r\nexport { initCustomFormatter } from './customFormatter'\r\n\r\n// For devtools\r\nexport { devtools, setDevtoolsHook } from './devtools'\r\n\r\n// Types -------------------------------------------------------------------------\r\n\r\nimport { VNode } from './vnode'\r\nimport { ComponentInternalInstance } from './component'\r\n\r\n// Augment Ref unwrap bail types.\r\n// Note: if updating this, also update `types/refBail.d.ts`.\r\ndeclare module '@vue/reactivity' {\r\n  export interface RefUnwrapBailTypes {\r\n    runtimeCoreBailTypes:\r\n      | VNode\r\n      | {\r\n          // directly bailing on ComponentPublicInstance results in recursion\r\n          // so we use this as a bail hint\r\n          $: ComponentInternalInstance\r\n        }\r\n  }\r\n}\r\n\r\nexport {\r\n  ReactiveEffectOptions,\r\n  DebuggerEvent,\r\n  TrackOpTypes,\r\n  TriggerOpTypes,\r\n  Ref,\r\n  ComputedRef,\r\n  WritableComputedRef,\r\n  UnwrapRef,\r\n  ShallowUnwrapRef,\r\n  WritableComputedOptions,\r\n  ToRefs,\r\n  DeepReadonly\r\n} from '@vue/reactivity'\r\nexport {\r\n  WatchEffect,\r\n  WatchOptions,\r\n  WatchOptionsBase,\r\n  WatchCallback,\r\n  WatchSource,\r\n  WatchStopHandle\r\n} from './apiWatch'\r\nexport { InjectionKey } from './apiInject'\r\nexport {\r\n  App,\r\n  AppConfig,\r\n  AppContext,\r\n  Plugin,\r\n  CreateAppFunction,\r\n  OptionMergeFunction\r\n} from './apiCreateApp'\r\nexport {\r\n  VNode,\r\n  VNodeChild,\r\n  VNodeTypes,\r\n  VNodeProps,\r\n  VNodeArrayChildren,\r\n  VNodeNormalizedChildren\r\n} from './vnode'\r\nexport {\r\n  Component,\r\n  ConcreteComponent,\r\n  FunctionalComponent,\r\n  ComponentInternalInstance,\r\n  SetupContext,\r\n  ComponentCustomProps,\r\n  AllowedComponentProps\r\n} from './component'\r\nexport { DefineComponent } from './apiDefineComponent'\r\nexport {\r\n  ComponentOptions,\r\n  ComponentOptionsMixin,\r\n  ComponentOptionsWithoutProps,\r\n  ComponentOptionsWithObjectProps,\r\n  ComponentOptionsWithArrayProps,\r\n  ComponentCustomOptions,\r\n  ComponentOptionsBase,\r\n  RenderFunction,\r\n  MethodOptions,\r\n  ComputedOptions,\r\n  RuntimeCompilerOptions\r\n} from './componentOptions'\r\nexport { EmitsOptions, ObjectEmitsOptions } from './componentEmits'\r\nexport {\r\n  ComponentPublicInstance,\r\n  ComponentCustomProperties,\r\n  CreateComponentPublicInstance\r\n} from './componentPublicInstance'\r\nexport {\r\n  Renderer,\r\n  RendererNode,\r\n  RendererElement,\r\n  HydrationRenderer,\r\n  RendererOptions,\r\n  RootRenderFunction\r\n} from './renderer'\r\nexport { RootHydrateFunction } from './hydration'\r\nexport { Slot, Slots } from './componentSlots'\r\nexport {\r\n  Prop,\r\n  PropType,\r\n  ComponentPropsOptions,\r\n  ComponentObjectPropsOptions,\r\n  ExtractPropTypes,\r\n  ExtractDefaultPropTypes\r\n} from './componentProps'\r\nexport {\r\n  Directive,\r\n  DirectiveBinding,\r\n  DirectiveHook,\r\n  ObjectDirective,\r\n  FunctionDirective,\r\n  DirectiveArguments\r\n} from './directives'\r\nexport { SuspenseBoundary } from './components/Suspense'\r\nexport { TransitionState, TransitionHooks } from './components/BaseTransition'\r\nexport {\r\n  AsyncComponentOptions,\r\n  AsyncComponentLoader\r\n} from './apiAsyncComponent'\r\nexport { HMRRuntime } from './hmr'\r\n\r\n// Internal API ----------------------------------------------------------------\r\n\r\n// **IMPORTANT** Internal APIs may change without notice between versions and\r\n// user code should avoid relying on them.\r\n\r\n// For compiler generated code\r\n// should sync with '@vue/compiler-core/src/runtimeHelpers.ts'\r\nexport {\r\n  withCtx,\r\n  pushScopeId,\r\n  popScopeId,\r\n  withScopeId\r\n} from './componentRenderContext'\r\nexport { renderList } from './helpers/renderList'\r\nexport { toHandlers } from './helpers/toHandlers'\r\nexport { renderSlot } from './helpers/renderSlot'\r\nexport { createSlots } from './helpers/createSlots'\r\nexport { withMemo, isMemoSame } from './helpers/withMemo'\r\nexport {\r\n  openBlock,\r\n  createBlock,\r\n  setBlockTracking,\r\n  createTextVNode,\r\n  createCommentVNode,\r\n  createStaticVNode,\r\n  createElementVNode,\r\n  createElementBlock,\r\n  guardReactiveProps\r\n} from './vnode'\r\nexport {\r\n  toDisplayString,\r\n  camelize,\r\n  capitalize,\r\n  toHandlerKey,\r\n  normalizeProps,\r\n  normalizeClass,\r\n  normalizeStyle\r\n} from '@vue/shared'\r\n\r\n// For test-utils\r\nexport { transformVNodeArgs } from './vnode'\r\n\r\n// SSR -------------------------------------------------------------------------\r\n\r\n// **IMPORTANT** These APIs are exposed solely for @vue/server-renderer and may\r\n// change without notice between versions. User code should never rely on them.\r\n\r\nimport { createComponentInstance, setupComponent } from './component'\r\nimport { renderComponentRoot } from './componentRenderUtils'\r\nimport { setCurrentRenderingInstance } from './componentRenderContext'\r\nimport { isVNode, normalizeVNode } from './vnode'\r\n\r\nconst _ssrUtils = {\r\n  createComponentInstance,\r\n  setupComponent,\r\n  renderComponentRoot,\r\n  setCurrentRenderingInstance,\r\n  isVNode,\r\n  normalizeVNode\r\n}\r\n\r\n/**\r\n * SSR utils for \\@vue/server-renderer. Only exposed in cjs builds.\r\n * @internal\r\n */\r\nexport const ssrUtils = (\r\n  __NODE_JS__ || __ESM_BUNDLER__ ? _ssrUtils : null\r\n) as typeof _ssrUtils\r\n\r\n// 2.x COMPAT ------------------------------------------------------------------\r\n\r\nexport { DeprecationTypes } from './compat/compatConfig'\r\nexport { CompatVue } from './compat/global'\r\nexport { LegacyConfig } from './compat/globalConfig'\r\n\r\nimport { warnDeprecation } from './compat/compatConfig'\r\nimport { createCompatVue } from './compat/global'\r\nimport {\r\n  isCompatEnabled,\r\n  checkCompatEnabled,\r\n  softAssertCompatEnabled\r\n} from './compat/compatConfig'\r\nimport { resolveFilter as _resolveFilter } from './helpers/resolveAssets'\r\n\r\n/**\r\n * @internal only exposed in compat builds\r\n */\r\nexport const resolveFilter = __COMPAT__ ? _resolveFilter : null\r\n\r\nconst _compatUtils = {\r\n  warnDeprecation,\r\n  createCompatVue,\r\n  isCompatEnabled,\r\n  checkCompatEnabled,\r\n  softAssertCompatEnabled\r\n}\r\n\r\n/**\r\n * @internal only exposed in compat builds.\r\n */\r\nexport const compatUtils = (\r\n  __COMPAT__ ? _compatUtils : null\r\n) as typeof _compatUtils\r\n\r\n// Ref sugar macros ------------------------------------------------------------\r\n// for dts generation only\r\nexport { $ref, $computed, $raw, $fromRefs } from './helpers/refSugar'\r\n","import { RendererOptions } from '@vue/runtime-core'\r\n\r\nexport const svgNS = 'http://www.w3.org/2000/svg'\r\n\r\nconst doc = (typeof document !== 'undefined' ? document : null) as Document\r\n\r\nconst staticTemplateCache = new Map<string, DocumentFragment>()\r\n\r\nexport const nodeOps: Omit<RendererOptions<Node, Element>, 'patchProp'> = {\r\n  insert: (child, parent, anchor) => {\r\n    parent.insertBefore(child, anchor || null)\r\n  },\r\n\r\n  remove: child => {\r\n    const parent = child.parentNode\r\n    if (parent) {\r\n      parent.removeChild(child)\r\n    }\r\n  },\r\n\r\n  createElement: (tag, isSVG, is, props): Element => {\r\n    const el = isSVG\r\n      ? doc.createElementNS(svgNS, tag)\r\n      : doc.createElement(tag, is ? { is } : undefined)\r\n\r\n    if (tag === 'select' && props && props.multiple != null) {\r\n      ;(el as HTMLSelectElement).setAttribute('multiple', props.multiple)\r\n    }\r\n\r\n    return el\r\n  },\r\n\r\n  createText: text => doc.createTextNode(text),\r\n\r\n  createComment: text => doc.createComment(text),\r\n\r\n  setText: (node, text) => {\r\n    node.nodeValue = text\r\n  },\r\n\r\n  setElementText: (el, text) => {\r\n    el.textContent = text\r\n  },\r\n\r\n  parentNode: node => node.parentNode as Element | null,\r\n\r\n  nextSibling: node => node.nextSibling,\r\n\r\n  querySelector: selector => doc.querySelector(selector),\r\n\r\n  setScopeId(el, id) {\r\n    el.setAttribute(id, '')\r\n  },\r\n\r\n  cloneNode(el) {\r\n    const cloned = el.cloneNode(true)\r\n    // #3072\r\n    // - in `patchDOMProp`, we store the actual value in the `el._value` property.\r\n    // - normally, elements using `:value` bindings will not be hoisted, but if\r\n    //   the bound value is a constant, e.g. `:value=\"true\"` - they do get\r\n    //   hoisted.\r\n    // - in production, hoisted nodes are cloned when subsequent inserts, but\r\n    //   cloneNode() does not copy the custom property we attached.\r\n    // - This may need to account for other custom DOM properties we attach to\r\n    //   elements in addition to `_value` in the future.\r\n    if (`_value` in el) {\r\n      ;(cloned as any)._value = (el as any)._value\r\n    }\r\n    return cloned\r\n  },\r\n\r\n  // __UNSAFE__\r\n  // Reason: innerHTML.\r\n  // Static content here can only come from compiled templates.\r\n  // As long as the user only uses trusted templates, this is safe.\r\n  insertStaticContent(content, parent, anchor, isSVG) {\r\n    // <parent> before | first ... last | anchor </parent>\r\n    const before = anchor ? anchor.previousSibling : parent.lastChild\r\n    let template = staticTemplateCache.get(content)\r\n    if (!template) {\r\n      const t = doc.createElement('template')\r\n      t.innerHTML = isSVG ? `<svg>${content}</svg>` : content\r\n      template = t.content\r\n      if (isSVG) {\r\n        // remove outer svg wrapper\r\n        const wrapper = template.firstChild!\r\n        while (wrapper.firstChild) {\r\n          template.appendChild(wrapper.firstChild)\r\n        }\r\n        template.removeChild(wrapper)\r\n      }\r\n      staticTemplateCache.set(content, template)\r\n    }\r\n    parent.insertBefore(template.cloneNode(true), anchor)\r\n    return [\r\n      // first\r\n      before ? before.nextSibling! : parent.firstChild!,\r\n      // last\r\n      anchor ? anchor.previousSibling! : parent.lastChild!\r\n    ]\r\n  }\r\n}\r\n","import { isString, hyphenate, capitalize, isArray } from '@vue/shared'\r\nimport { camelize } from '@vue/runtime-core'\r\n\r\ntype Style = string | Record<string, string | string[]> | null\r\n\r\nexport function patchStyle(el: Element, prev: Style, next: Style) {\r\n  const style = (el as HTMLElement).style\r\n  if (!next) {\r\n    el.removeAttribute('style')\r\n  } else if (isString(next)) {\r\n    if (prev !== next) {\r\n      const current = style.display\r\n      style.cssText = next\r\n      // indicates that the `display` of the element is controlled by `v-show`,\r\n      // so we always keep the current `display` value regardless of the `style` value,\r\n      // thus handing over control to `v-show`.\r\n      if ('_vod' in el) {\r\n        style.display = current\r\n      }\r\n    }\r\n  } else {\r\n    for (const key in next) {\r\n      setStyle(style, key, next[key])\r\n    }\r\n    if (prev && !isString(prev)) {\r\n      for (const key in prev) {\r\n        if (next[key] == null) {\r\n          setStyle(style, key, '')\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nconst importantRE = /\\s*!important$/\r\n\r\nfunction setStyle(\r\n  style: CSSStyleDeclaration,\r\n  name: string,\r\n  val: string | string[]\r\n) {\r\n  if (isArray(val)) {\r\n    val.forEach(v => setStyle(style, name, v))\r\n  } else {\r\n    if (name.startsWith('--')) {\r\n      // custom property definition\r\n      style.setProperty(name, val)\r\n    } else {\r\n      const prefixed = autoPrefix(style, name)\r\n      if (importantRE.test(val)) {\r\n        // !important\r\n        style.setProperty(\r\n          hyphenate(prefixed),\r\n          val.replace(importantRE, ''),\r\n          'important'\r\n        )\r\n      } else {\r\n        style[prefixed as any] = val\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nconst prefixes = ['Webkit', 'Moz', 'ms']\r\nconst prefixCache: Record<string, string> = {}\r\n\r\nfunction autoPrefix(style: CSSStyleDeclaration, rawName: string): string {\r\n  const cached = prefixCache[rawName]\r\n  if (cached) {\r\n    return cached\r\n  }\r\n  let name = camelize(rawName)\r\n  if (name !== 'filter' && name in style) {\r\n    return (prefixCache[rawName] = name)\r\n  }\r\n  name = capitalize(name)\r\n  for (let i = 0; i < prefixes.length; i++) {\r\n    const prefixed = prefixes[i] + name\r\n    if (prefixed in style) {\r\n      return (prefixCache[rawName] = prefixed)\r\n    }\r\n  }\r\n  return rawName\r\n}\r\n","import { isSpecialBooleanAttr, makeMap, NOOP } from '@vue/shared'\r\nimport {\r\n  compatUtils,\r\n  ComponentInternalInstance,\r\n  DeprecationTypes\r\n} from '@vue/runtime-core'\r\n\r\nexport const xlinkNS = 'http://www.w3.org/1999/xlink'\r\n\r\nexport function patchAttr(\r\n  el: Element,\r\n  key: string,\r\n  value: any,\r\n  isSVG: boolean,\r\n  instance?: ComponentInternalInstance | null\r\n) {\r\n  if (isSVG && key.startsWith('xlink:')) {\r\n    if (value == null) {\r\n      el.removeAttributeNS(xlinkNS, key.slice(6, key.length))\r\n    } else {\r\n      el.setAttributeNS(xlinkNS, key, value)\r\n    }\r\n  } else {\r\n    if (__COMPAT__ && compatCoerceAttr(el, key, value, instance)) {\r\n      return\r\n    }\r\n\r\n    // note we are only checking boolean attributes that don't have a\r\n    // corresponding dom prop of the same name here.\r\n    const isBoolean = isSpecialBooleanAttr(key)\r\n    if (value == null || (isBoolean && value === false)) {\r\n      el.removeAttribute(key)\r\n    } else {\r\n      el.setAttribute(key, isBoolean ? '' : value)\r\n    }\r\n  }\r\n}\r\n\r\n// 2.x compat\r\nconst isEnumeratedAttr = __COMPAT__\r\n  ? /*#__PURE__*/ makeMap('contenteditable,draggable,spellcheck')\r\n  : NOOP\r\n\r\nexport function compatCoerceAttr(\r\n  el: Element,\r\n  key: string,\r\n  value: unknown,\r\n  instance: ComponentInternalInstance | null = null\r\n): boolean {\r\n  if (isEnumeratedAttr(key)) {\r\n    const v2CocercedValue =\r\n      value === null\r\n        ? 'false'\r\n        : typeof value !== 'boolean' && value !== undefined\r\n        ? 'true'\r\n        : null\r\n    if (\r\n      v2CocercedValue &&\r\n      compatUtils.softAssertCompatEnabled(\r\n        DeprecationTypes.ATTR_ENUMERATED_COERCION,\r\n        instance,\r\n        key,\r\n        value,\r\n        v2CocercedValue\r\n      )\r\n    ) {\r\n      el.setAttribute(key, v2CocercedValue)\r\n      return true\r\n    }\r\n  } else if (\r\n    value === false &&\r\n    !isSpecialBooleanAttr(key) &&\r\n    compatUtils.softAssertCompatEnabled(\r\n      DeprecationTypes.ATTR_FALSE_VALUE,\r\n      instance,\r\n      key\r\n    )\r\n  ) {\r\n    el.removeAttribute(key)\r\n    return true\r\n  }\r\n  return false\r\n}\r\n","import { hyphenate, isArray } from '@vue/shared'\r\nimport {\r\n  ComponentInternalInstance,\r\n  callWithAsyncErrorHandling\r\n} from '@vue/runtime-core'\r\nimport { ErrorCodes } from 'packages/runtime-core/src/errorHandling'\r\n\r\ninterface Invoker extends EventListener {\r\n  value: EventValue\r\n  attached: number\r\n}\r\n\r\ntype EventValue = Function | Function[]\r\n\r\n// Async edge case fix requires storing an event listener's attach timestamp.\r\nlet _getNow: () => number = Date.now\r\n\r\nlet skipTimestampCheck = false\r\n\r\nif (typeof window !== 'undefined') {\r\n  // Determine what event timestamp the browser is using. Annoyingly, the\r\n  // timestamp can either be hi-res (relative to page load) or low-res\r\n  // (relative to UNIX epoch), so in order to compare time we have to use the\r\n  // same timestamp type when saving the flush timestamp.\r\n  if (_getNow() > document.createEvent('Event').timeStamp) {\r\n    // if the low-res timestamp which is bigger than the event timestamp\r\n    // (which is evaluated AFTER) it means the event is using a hi-res timestamp,\r\n    // and we need to use the hi-res version for event listeners as well.\r\n    _getNow = () => performance.now()\r\n  }\r\n  // #3485: Firefox <= 53 has incorrect Event.timeStamp implementation\r\n  // and does not fire microtasks in between event propagation, so safe to exclude.\r\n  const ffMatch = navigator.userAgent.match(/firefox\\/(\\d+)/i)\r\n  skipTimestampCheck = !!(ffMatch && Number(ffMatch[1]) <= 53)\r\n}\r\n\r\n// To avoid the overhead of repeatedly calling performance.now(), we cache\r\n// and use the same timestamp for all event listeners attached in the same tick.\r\nlet cachedNow: number = 0\r\nconst p = Promise.resolve()\r\nconst reset = () => {\r\n  cachedNow = 0\r\n}\r\nconst getNow = () => cachedNow || (p.then(reset), (cachedNow = _getNow()))\r\n\r\nexport function addEventListener(\r\n  el: Element,\r\n  event: string,\r\n  handler: EventListener,\r\n  options?: EventListenerOptions\r\n) {\r\n  el.addEventListener(event, handler, options)\r\n}\r\n\r\nexport function removeEventListener(\r\n  el: Element,\r\n  event: string,\r\n  handler: EventListener,\r\n  options?: EventListenerOptions\r\n) {\r\n  el.removeEventListener(event, handler, options)\r\n}\r\n\r\nexport function patchEvent(\r\n  el: Element & { _vei?: Record<string, Invoker | undefined> },\r\n  rawName: string,\r\n  prevValue: EventValue | null,\r\n  nextValue: EventValue | null,\r\n  instance: ComponentInternalInstance | null = null\r\n) {\r\n  // vei = vue event invokers\r\n  const invokers = el._vei || (el._vei = {})\r\n  const existingInvoker = invokers[rawName]\r\n  if (nextValue && existingInvoker) {\r\n    // patch\r\n    existingInvoker.value = nextValue\r\n  } else {\r\n    const [name, options] = parseName(rawName)\r\n    if (nextValue) {\r\n      // add\r\n      const invoker = (invokers[rawName] = createInvoker(nextValue, instance))\r\n      addEventListener(el, name, invoker, options)\r\n    } else if (existingInvoker) {\r\n      // remove\r\n      removeEventListener(el, name, existingInvoker, options)\r\n      invokers[rawName] = undefined\r\n    }\r\n  }\r\n}\r\n\r\nconst optionsModifierRE = /(?:Once|Passive|Capture)$/\r\n\r\nfunction parseName(name: string): [string, EventListenerOptions | undefined] {\r\n  let options: EventListenerOptions | undefined\r\n  if (optionsModifierRE.test(name)) {\r\n    options = {}\r\n    let m\r\n    while ((m = name.match(optionsModifierRE))) {\r\n      name = name.slice(0, name.length - m[0].length)\r\n      ;(options as any)[m[0].toLowerCase()] = true\r\n      options\r\n    }\r\n  }\r\n  return [hyphenate(name.slice(2)), options]\r\n}\r\n\r\nfunction createInvoker(\r\n  initialValue: EventValue,\r\n  instance: ComponentInternalInstance | null\r\n) {\r\n  const invoker: Invoker = (e: Event) => {\r\n    // async edge case #6566: inner click event triggers patch, event handler\r\n    // attached to outer element during patch, and triggered again. This\r\n    // happens because browsers fire microtask ticks between event propagation.\r\n    // the solution is simple: we save the timestamp when a handler is attached,\r\n    // and the handler would only fire if the event passed to it was fired\r\n    // AFTER it was attached.\r\n    const timeStamp = e.timeStamp || _getNow()\r\n\r\n    if (skipTimestampCheck || timeStamp >= invoker.attached - 1) {\r\n      callWithAsyncErrorHandling(\r\n        patchStopImmediatePropagation(e, invoker.value),\r\n        instance,\r\n        ErrorCodes.NATIVE_EVENT_HANDLER,\r\n        [e]\r\n      )\r\n    }\r\n  }\r\n  invoker.value = initialValue\r\n  invoker.attached = getNow()\r\n  return invoker\r\n}\r\n\r\nfunction patchStopImmediatePropagation(\r\n  e: Event,\r\n  value: EventValue\r\n): EventValue {\r\n  if (isArray(value)) {\r\n    const originalStop = e.stopImmediatePropagation\r\n    e.stopImmediatePropagation = () => {\r\n      originalStop.call(e)\r\n      ;(e as any)._stopped = true\r\n    }\r\n    return value.map(fn => (e: Event) => !(e as any)._stopped && fn(e))\r\n  } else {\r\n    return value\r\n  }\r\n}\r\n","import { patchClass } from './modules/class'\r\nimport { patchStyle } from './modules/style'\r\nimport { patchAttr } from './modules/attrs'\r\nimport { patchDOMProp } from './modules/props'\r\nimport { patchEvent } from './modules/events'\r\nimport { isOn, isString, isFunction, isModelListener } from '@vue/shared'\r\nimport { RendererOptions } from '@vue/runtime-core'\r\n\r\nconst nativeOnRE = /^on[a-z]/\r\n\r\ntype DOMRendererOptions = RendererOptions<Node, Element>\r\n\r\nexport const patchProp: DOMRendererOptions['patchProp'] = (\r\n  el,\r\n  key,\r\n  prevValue,\r\n  nextValue,\r\n  isSVG = false,\r\n  prevChildren,\r\n  parentComponent,\r\n  parentSuspense,\r\n  unmountChildren\r\n) => {\r\n  if (key === 'class') {\r\n    patchClass(el, nextValue, isSVG)\r\n  } else if (key === 'style') {\r\n    patchStyle(el, prevValue, nextValue)\r\n  } else if (isOn(key)) {\r\n    // ignore v-model listeners\r\n    if (!isModelListener(key)) {\r\n      patchEvent(el, key, prevValue, nextValue, parentComponent)\r\n    }\r\n  } else if (\r\n    key[0] === '.'\r\n      ? ((key = key.slice(1)), true)\r\n      : key[0] === '^'\r\n      ? ((key = key.slice(1)), false)\r\n      : shouldSetAsProp(el, key, nextValue, isSVG)\r\n  ) {\r\n    patchDOMProp(\r\n      el,\r\n      key,\r\n      nextValue,\r\n      prevChildren,\r\n      parentComponent,\r\n      parentSuspense,\r\n      unmountChildren\r\n    )\r\n  } else {\r\n    // special case for <input v-model type=\"checkbox\"> with\r\n    // :true-value & :false-value\r\n    // store value as dom properties since non-string values will be\r\n    // stringified.\r\n    if (key === 'true-value') {\r\n      ;(el as any)._trueValue = nextValue\r\n    } else if (key === 'false-value') {\r\n      ;(el as any)._falseValue = nextValue\r\n    }\r\n    patchAttr(el, key, nextValue, isSVG, parentComponent)\r\n  }\r\n}\r\n\r\nfunction shouldSetAsProp(\r\n  el: Element,\r\n  key: string,\r\n  value: unknown,\r\n  isSVG: boolean\r\n) {\r\n  if (isSVG) {\r\n    // most keys must be set as attribute on svg elements to work\r\n    // ...except innerHTML\r\n    if (key === 'innerHTML') {\r\n      return true\r\n    }\r\n    // or native onclick with function values\r\n    if (key in el && nativeOnRE.test(key) && isFunction(value)) {\r\n      return true\r\n    }\r\n    return false\r\n  }\r\n\r\n  // spellcheck and draggable are numerated attrs, however their\r\n  // corresponding DOM properties are actually booleans - this leads to\r\n  // setting it with a string \"false\" value leading it to be coerced to\r\n  // `true`, so we need to always treat them as attributes.\r\n  // Note that `contentEditable` doesn't have this problem: its DOM\r\n  // property is also enumerated string values.\r\n  if (key === 'spellcheck' || key === 'draggable') {\r\n    return false\r\n  }\r\n\r\n  // #1787, #2840 form property on form elements is readonly and must be set as\r\n  // attribute.\r\n  if (key === 'form') {\r\n    return false\r\n  }\r\n\r\n  // #1526 <input list> must be set as attribute\r\n  if (key === 'list' && el.tagName === 'INPUT') {\r\n    return false\r\n  }\r\n\r\n  // #2766 <textarea type> must be set as attribute\r\n  if (key === 'type' && el.tagName === 'TEXTAREA') {\r\n    return false\r\n  }\r\n\r\n  // native onclick with string value, must be set as attribute\r\n  if (nativeOnRE.test(key) && isString(value)) {\r\n    return false\r\n  }\r\n\r\n  return key in el\r\n}\r\n","import {\r\n  ComponentOptionsMixin,\r\n  ComponentOptionsWithArrayProps,\r\n  ComponentOptionsWithObjectProps,\r\n  ComponentOptionsWithoutProps,\r\n  ComponentPropsOptions,\r\n  ComponentPublicInstance,\r\n  ComputedOptions,\r\n  EmitsOptions,\r\n  MethodOptions,\r\n  RenderFunction,\r\n  SetupContext,\r\n  ComponentInternalInstance,\r\n  VNode,\r\n  RootHydrateFunction,\r\n  ExtractPropTypes,\r\n  createVNode,\r\n  defineComponent,\r\n  nextTick,\r\n  warn,\r\n  ConcreteComponent,\r\n  ComponentOptions\r\n} from '@vue/runtime-core'\r\nimport { camelize, extend, hyphenate, isArray, toNumber } from '@vue/shared'\r\nimport { hydrate, render } from '.'\r\n\r\nexport type VueElementConstructor<P = {}> = {\r\n  new (initialProps?: Record<string, any>): VueElement & P\r\n}\r\n\r\n// defineCustomElement provides the same type inference as defineComponent\r\n// so most of the following overloads should be kept in sync w/ defineComponent.\r\n\r\n// overload 1: direct setup function\r\nexport function defineCustomElement<Props, RawBindings = object>(\r\n  setup: (\r\n    props: Readonly<Props>,\r\n    ctx: SetupContext\r\n  ) => RawBindings | RenderFunction\r\n): VueElementConstructor<Props>\r\n\r\n// overload 2: object format with no props\r\nexport function defineCustomElement<\r\n  Props = {},\r\n  RawBindings = {},\r\n  D = {},\r\n  C extends ComputedOptions = {},\r\n  M extends MethodOptions = {},\r\n  Mixin extends ComponentOptionsMixin = ComponentOptionsMixin,\r\n  Extends extends ComponentOptionsMixin = ComponentOptionsMixin,\r\n  E extends EmitsOptions = EmitsOptions,\r\n  EE extends string = string\r\n>(\r\n  options: ComponentOptionsWithoutProps<\r\n    Props,\r\n    RawBindings,\r\n    D,\r\n    C,\r\n    M,\r\n    Mixin,\r\n    Extends,\r\n    E,\r\n    EE\r\n  > & { styles?: string[] }\r\n): VueElementConstructor<Props>\r\n\r\n// overload 3: object format with array props declaration\r\nexport function defineCustomElement<\r\n  PropNames extends string,\r\n  RawBindings,\r\n  D,\r\n  C extends ComputedOptions = {},\r\n  M extends MethodOptions = {},\r\n  Mixin extends ComponentOptionsMixin = ComponentOptionsMixin,\r\n  Extends extends ComponentOptionsMixin = ComponentOptionsMixin,\r\n  E extends EmitsOptions = Record<string, any>,\r\n  EE extends string = string\r\n>(\r\n  options: ComponentOptionsWithArrayProps<\r\n    PropNames,\r\n    RawBindings,\r\n    D,\r\n    C,\r\n    M,\r\n    Mixin,\r\n    Extends,\r\n    E,\r\n    EE\r\n  > & { styles?: string[] }\r\n): VueElementConstructor<{ [K in PropNames]: any }>\r\n\r\n// overload 4: object format with object props declaration\r\nexport function defineCustomElement<\r\n  PropsOptions extends Readonly<ComponentPropsOptions>,\r\n  RawBindings,\r\n  D,\r\n  C extends ComputedOptions = {},\r\n  M extends MethodOptions = {},\r\n  Mixin extends ComponentOptionsMixin = ComponentOptionsMixin,\r\n  Extends extends ComponentOptionsMixin = ComponentOptionsMixin,\r\n  E extends EmitsOptions = Record<string, any>,\r\n  EE extends string = string\r\n>(\r\n  options: ComponentOptionsWithObjectProps<\r\n    PropsOptions,\r\n    RawBindings,\r\n    D,\r\n    C,\r\n    M,\r\n    Mixin,\r\n    Extends,\r\n    E,\r\n    EE\r\n  > & { styles?: string[] }\r\n): VueElementConstructor<ExtractPropTypes<PropsOptions>>\r\n\r\n// overload 5: defining a custom element from the returned value of\r\n// `defineComponent`\r\nexport function defineCustomElement(options: {\r\n  new (...args: any[]): ComponentPublicInstance\r\n}): VueElementConstructor\r\n\r\nexport function defineCustomElement(\r\n  options: any,\r\n  hydate?: RootHydrateFunction\r\n): VueElementConstructor {\r\n  const Comp = defineComponent(options as any)\r\n  class VueCustomElement extends VueElement {\r\n    static def = Comp\r\n    constructor(initialProps?: Record<string, any>) {\r\n      super(Comp, initialProps, hydate)\r\n    }\r\n  }\r\n\r\n  return VueCustomElement\r\n}\r\n\r\nexport const defineSSRCustomElement = ((options: any) => {\r\n  // @ts-ignore\r\n  return defineCustomElement(options, hydrate)\r\n}) as typeof defineCustomElement\r\n\r\nconst BaseClass = (\r\n  typeof HTMLElement !== 'undefined' ? HTMLElement : class {}\r\n) as typeof HTMLElement\r\n\r\ntype InnerComponentDef = ConcreteComponent & { styles?: string[] }\r\n\r\nexport class VueElement extends BaseClass {\r\n  /**\r\n   * @internal\r\n   */\r\n  _instance: ComponentInternalInstance | null = null\r\n\r\n  private _connected = false\r\n  private _resolved = false\r\n  private _styles?: HTMLStyleElement[]\r\n\r\n  constructor(\r\n    private _def: InnerComponentDef,\r\n    private _props: Record<string, any> = {},\r\n    hydrate?: RootHydrateFunction\r\n  ) {\r\n    super()\r\n    if (this.shadowRoot && hydrate) {\r\n      hydrate(this._createVNode(), this.shadowRoot)\r\n    } else {\r\n      if (__DEV__ && this.shadowRoot) {\r\n        warn(\r\n          `Custom element has pre-rendered declarative shadow root but is not ` +\r\n            `defined as hydratable. Use \\`defineSSRCustomElement\\`.`\r\n        )\r\n      }\r\n      this.attachShadow({ mode: 'open' })\r\n    }\r\n\r\n    // set initial attrs\r\n    for (let i = 0; i < this.attributes.length; i++) {\r\n      this._setAttr(this.attributes[i].name)\r\n    }\r\n    // watch future attr changes\r\n    const observer = new MutationObserver(mutations => {\r\n      for (const m of mutations) {\r\n        this._setAttr(m.attributeName!)\r\n      }\r\n    })\r\n    observer.observe(this, { attributes: true })\r\n  }\r\n\r\n  connectedCallback() {\r\n    this._connected = true\r\n    if (!this._instance) {\r\n      this._resolveDef()\r\n      render(this._createVNode(), this.shadowRoot!)\r\n    }\r\n  }\r\n\r\n  disconnectedCallback() {\r\n    this._connected = false\r\n    nextTick(() => {\r\n      if (!this._connected) {\r\n        render(null, this.shadowRoot!)\r\n        this._instance = null\r\n      }\r\n    })\r\n  }\r\n\r\n  /**\r\n   * resolve inner component definition (handle possible async component)\r\n   */\r\n  private _resolveDef() {\r\n    if (this._resolved) {\r\n      return\r\n    }\r\n\r\n    const resolve = (def: InnerComponentDef) => {\r\n      this._resolved = true\r\n      // check if there are props set pre-upgrade or connect\r\n      for (const key of Object.keys(this)) {\r\n        if (key[0] !== '_') {\r\n          this._setProp(key, this[key as keyof this])\r\n        }\r\n      }\r\n      const { props, styles } = def\r\n      // defining getter/setters on prototype\r\n      const rawKeys = props ? (isArray(props) ? props : Object.keys(props)) : []\r\n      for (const key of rawKeys.map(camelize)) {\r\n        Object.defineProperty(this, key, {\r\n          get() {\r\n            return this._getProp(key)\r\n          },\r\n          set(val) {\r\n            this._setProp(key, val)\r\n          }\r\n        })\r\n      }\r\n      this._applyStyles(styles)\r\n    }\r\n\r\n    const asyncDef = (this._def as ComponentOptions).__asyncLoader\r\n    if (asyncDef) {\r\n      asyncDef().then(resolve)\r\n    } else {\r\n      resolve(this._def)\r\n    }\r\n  }\r\n\r\n  protected _setAttr(key: string) {\r\n    this._setProp(camelize(key), toNumber(this.getAttribute(key)), false)\r\n  }\r\n\r\n  /**\r\n   * @internal\r\n   */\r\n  protected _getProp(key: string) {\r\n    return this._props[key]\r\n  }\r\n\r\n  /**\r\n   * @internal\r\n   */\r\n  protected _setProp(key: string, val: any, shouldReflect = true) {\r\n    if (val !== this._props[key]) {\r\n      this._props[key] = val\r\n      if (this._instance) {\r\n        render(this._createVNode(), this.shadowRoot!)\r\n      }\r\n      // reflect\r\n      if (shouldReflect) {\r\n        if (val === true) {\r\n          this.setAttribute(hyphenate(key), '')\r\n        } else if (typeof val === 'string' || typeof val === 'number') {\r\n          this.setAttribute(hyphenate(key), val + '')\r\n        } else if (!val) {\r\n          this.removeAttribute(hyphenate(key))\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  private _createVNode(): VNode<any, any> {\r\n    const vnode = createVNode(this._def, extend({}, this._props))\r\n    if (!this._instance) {\r\n      vnode.ce = instance => {\r\n        this._instance = instance\r\n        instance.isCE = true\r\n        // HMR\r\n        if (__DEV__) {\r\n          instance.ceReload = newStyles => {\r\n            // alawys reset styles\r\n            if (this._styles) {\r\n              this._styles.forEach(s => this.shadowRoot!.removeChild(s))\r\n              this._styles.length = 0\r\n            }\r\n            this._applyStyles(newStyles)\r\n            // if this is an async component, ceReload is called from the inner\r\n            // component so no need to reload the async wrapper\r\n            if (!(this._def as ComponentOptions).__asyncLoader) {\r\n              // reload\r\n              this._instance = null\r\n              render(this._createVNode(), this.shadowRoot!)\r\n            }\r\n          }\r\n        }\r\n\r\n        // intercept emit\r\n        instance.emit = (event: string, ...args: any[]) => {\r\n          this.dispatchEvent(\r\n            new CustomEvent(event, {\r\n              detail: args\r\n            })\r\n          )\r\n        }\r\n\r\n        // locate nearest Vue custom element parent for provide/inject\r\n        let parent: Node | null = this\r\n        while (\r\n          (parent =\r\n            parent && (parent.parentNode || (parent as ShadowRoot).host))\r\n        ) {\r\n          if (parent instanceof VueElement) {\r\n            instance.parent = parent._instance\r\n            break\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return vnode\r\n  }\r\n\r\n  private _applyStyles(styles: string[] | undefined) {\r\n    if (styles) {\r\n      styles.forEach(css => {\r\n        const s = document.createElement('style')\r\n        s.textContent = css\r\n        this.shadowRoot!.appendChild(s)\r\n        // record for HMR\r\n        if (__DEV__) {\r\n          ;(this._styles || (this._styles = [])).push(s)\r\n        }\r\n      })\r\n    }\r\n  }\r\n}\r\n","import { warn, getCurrentInstance } from '@vue/runtime-core'\r\nimport { EMPTY_OBJ } from '@vue/shared'\r\n\r\nexport function useCssModule(name = '$style'): Record<string, string> {\r\n  /* istanbul ignore else */\r\n  if (!__GLOBAL__) {\r\n    const instance = getCurrentInstance()!\r\n    if (!instance) {\r\n      __DEV__ && warn(`useCssModule must be called inside setup()`)\r\n      return EMPTY_OBJ\r\n    }\r\n    const modules = instance.type.__cssModules\r\n    if (!modules) {\r\n      __DEV__ && warn(`Current instance does not have CSS modules injected.`)\r\n      return EMPTY_OBJ\r\n    }\r\n    const mod = modules[name]\r\n    if (!mod) {\r\n      __DEV__ &&\r\n        warn(`Current instance does not have CSS module named \"${name}\".`)\r\n      return EMPTY_OBJ\r\n    }\r\n    return mod as Record<string, string>\r\n  } else {\r\n    if (__DEV__) {\r\n      warn(`useCssModule() is not supported in the global build.`)\r\n    }\r\n    return EMPTY_OBJ\r\n  }\r\n}\r\n","import {\r\n  getCurrentInstance,\r\n  warn,\r\n  VNode,\r\n  Fragment,\r\n  Static,\r\n  watchPostEffect,\r\n  onMounted,\r\n  onUnmounted\r\n} from '@vue/runtime-core'\r\nimport { ShapeFlags } from '@vue/shared'\r\n\r\n/**\r\n * Runtime helper for SFC's CSS variable injection feature.\r\n * @private\r\n */\r\nexport function useCssVars(getter: (ctx: any) => Record<string, string>) {\r\n  if (!__BROWSER__ && !__TEST__) return\r\n\r\n  const instance = getCurrentInstance()\r\n  /* istanbul ignore next */\r\n  if (!instance) {\r\n    __DEV__ &&\r\n      warn(`useCssVars is called without current active component instance.`)\r\n    return\r\n  }\r\n\r\n  const setVars = () =>\r\n    setVarsOnVNode(instance.subTree, getter(instance.proxy!))\r\n  watchPostEffect(setVars)\r\n  onMounted(() => {\r\n    const ob = new MutationObserver(setVars)\r\n    ob.observe(instance.subTree.el!.parentNode, { childList: true })\r\n    onUnmounted(() => ob.disconnect())\r\n  })\r\n}\r\n\r\nfunction setVarsOnVNode(vnode: VNode, vars: Record<string, string>) {\r\n  if (__FEATURE_SUSPENSE__ && vnode.shapeFlag & ShapeFlags.SUSPENSE) {\r\n    const suspense = vnode.suspense!\r\n    vnode = suspense.activeBranch!\r\n    if (suspense.pendingBranch && !suspense.isHydrating) {\r\n      suspense.effects.push(() => {\r\n        setVarsOnVNode(suspense.activeBranch!, vars)\r\n      })\r\n    }\r\n  }\r\n\r\n  // drill down HOCs until it's a non-component vnode\r\n  while (vnode.component) {\r\n    vnode = vnode.component.subTree\r\n  }\r\n\r\n  if (vnode.shapeFlag & ShapeFlags.ELEMENT && vnode.el) {\r\n    setVarsOnNode(vnode.el as Node, vars)\r\n  } else if (vnode.type === Fragment) {\r\n    ;(vnode.children as VNode[]).forEach(c => setVarsOnVNode(c, vars))\r\n  } else if (vnode.type === Static) {\r\n    let { el, anchor } = vnode\r\n    while (el) {\r\n      setVarsOnNode(el as Node, vars)\r\n      if (el === anchor) break\r\n      el = el.nextSibling\r\n    }\r\n  }\r\n}\r\n\r\nfunction setVarsOnNode(el: Node, vars: Record<string, string>) {\r\n  if (el.nodeType === 1) {\r\n    const style = (el as HTMLElement).style\r\n    for (const key in vars) {\r\n      style.setProperty(`--${key}`, vars[key])\r\n    }\r\n  }\r\n}\r\n","import {\r\n  BaseTransition,\r\n  BaseTransitionProps,\r\n  h,\r\n  warn,\r\n  FunctionalComponent,\r\n  compatUtils,\r\n  DeprecationTypes\r\n} from '@vue/runtime-core'\r\nimport { isObject, toNumber, extend, isArray } from '@vue/shared'\r\n\r\nconst TRANSITION = 'transition'\r\nconst ANIMATION = 'animation'\r\n\r\nexport interface TransitionProps extends BaseTransitionProps<Element> {\r\n  name?: string\r\n  type?: typeof TRANSITION | typeof ANIMATION\r\n  css?: boolean\r\n  duration?: number | { enter: number; leave: number }\r\n  // custom transition classes\r\n  enterFromClass?: string\r\n  enterActiveClass?: string\r\n  enterToClass?: string\r\n  appearFromClass?: string\r\n  appearActiveClass?: string\r\n  appearToClass?: string\r\n  leaveFromClass?: string\r\n  leaveActiveClass?: string\r\n  leaveToClass?: string\r\n}\r\n\r\nexport interface ElementWithTransition extends HTMLElement {\r\n  // _vtc = Vue Transition Classes.\r\n  // Store the temporarily-added transition classes on the element\r\n  // so that we can avoid overwriting them if the element's class is patched\r\n  // during the transition.\r\n  _vtc?: Set<string>\r\n}\r\n\r\n// DOM Transition is a higher-order-component based on the platform-agnostic\r\n// base Transition component, with DOM-specific logic.\r\nexport const Transition: FunctionalComponent<TransitionProps> = (\r\n  props,\r\n  { slots }\r\n) => h(BaseTransition, resolveTransitionProps(props), slots)\r\n\r\nTransition.displayName = 'Transition'\r\n\r\nif (__COMPAT__) {\r\n  Transition.__isBuiltIn = true\r\n}\r\n\r\nconst DOMTransitionPropsValidators = {\r\n  name: String,\r\n  type: String,\r\n  css: {\r\n    type: Boolean,\r\n    default: true\r\n  },\r\n  duration: [String, Number, Object],\r\n  enterFromClass: String,\r\n  enterActiveClass: String,\r\n  enterToClass: String,\r\n  appearFromClass: String,\r\n  appearActiveClass: String,\r\n  appearToClass: String,\r\n  leaveFromClass: String,\r\n  leaveActiveClass: String,\r\n  leaveToClass: String\r\n}\r\n\r\nexport const TransitionPropsValidators = (Transition.props =\r\n  /*#__PURE__*/ extend(\r\n    {},\r\n    (BaseTransition as any).props,\r\n    DOMTransitionPropsValidators\r\n  ))\r\n\r\n/**\r\n * #3227 Incoming hooks may be merged into arrays when wrapping Transition\r\n * with custom HOCs.\r\n */\r\nconst callHook = (\r\n  hook: Function | Function[] | undefined,\r\n  args: any[] = []\r\n) => {\r\n  if (isArray(hook)) {\r\n    hook.forEach(h => h(...args))\r\n  } else if (hook) {\r\n    hook(...args)\r\n  }\r\n}\r\n\r\n/**\r\n * Check if a hook expects a callback (2nd arg), which means the user\r\n * intends to explicitly control the end of the transition.\r\n */\r\nconst hasExplicitCallback = (\r\n  hook: Function | Function[] | undefined\r\n): boolean => {\r\n  return hook\r\n    ? isArray(hook)\r\n      ? hook.some(h => h.length > 1)\r\n      : hook.length > 1\r\n    : false\r\n}\r\n\r\nexport function resolveTransitionProps(\r\n  rawProps: TransitionProps\r\n): BaseTransitionProps<Element> {\r\n  const baseProps: BaseTransitionProps<Element> = {}\r\n  for (const key in rawProps) {\r\n    if (!(key in DOMTransitionPropsValidators)) {\r\n      ;(baseProps as any)[key] = (rawProps as any)[key]\r\n    }\r\n  }\r\n\r\n  if (rawProps.css === false) {\r\n    return baseProps\r\n  }\r\n\r\n  const {\r\n    name = 'v',\r\n    type,\r\n    duration,\r\n    enterFromClass = `${name}-enter-from`,\r\n    enterActiveClass = `${name}-enter-active`,\r\n    enterToClass = `${name}-enter-to`,\r\n    appearFromClass = enterFromClass,\r\n    appearActiveClass = enterActiveClass,\r\n    appearToClass = enterToClass,\r\n    leaveFromClass = `${name}-leave-from`,\r\n    leaveActiveClass = `${name}-leave-active`,\r\n    leaveToClass = `${name}-leave-to`\r\n  } = rawProps\r\n\r\n  // legacy transition class compat\r\n  const legacyClassEnabled =\r\n    __COMPAT__ &&\r\n    compatUtils.isCompatEnabled(DeprecationTypes.TRANSITION_CLASSES, null)\r\n  let legacyEnterFromClass: string\r\n  let legacyAppearFromClass: string\r\n  let legacyLeaveFromClass: string\r\n  if (__COMPAT__ && legacyClassEnabled) {\r\n    const toLegacyClass = (cls: string) => cls.replace(/-from$/, '')\r\n    if (!rawProps.enterFromClass) {\r\n      legacyEnterFromClass = toLegacyClass(enterFromClass)\r\n    }\r\n    if (!rawProps.appearFromClass) {\r\n      legacyAppearFromClass = toLegacyClass(appearFromClass)\r\n    }\r\n    if (!rawProps.leaveFromClass) {\r\n      legacyLeaveFromClass = toLegacyClass(leaveFromClass)\r\n    }\r\n  }\r\n\r\n  const durations = normalizeDuration(duration)\r\n  const enterDuration = durations && durations[0]\r\n  const leaveDuration = durations && durations[1]\r\n  const {\r\n    onBeforeEnter,\r\n    onEnter,\r\n    onEnterCancelled,\r\n    onLeave,\r\n    onLeaveCancelled,\r\n    onBeforeAppear = onBeforeEnter,\r\n    onAppear = onEnter,\r\n    onAppearCancelled = onEnterCancelled\r\n  } = baseProps\r\n\r\n  const finishEnter = (el: Element, isAppear: boolean, done?: () => void) => {\r\n    removeTransitionClass(el, isAppear ? appearToClass : enterToClass)\r\n    removeTransitionClass(el, isAppear ? appearActiveClass : enterActiveClass)\r\n    done && done()\r\n  }\r\n\r\n  const finishLeave = (el: Element, done?: () => void) => {\r\n    removeTransitionClass(el, leaveToClass)\r\n    removeTransitionClass(el, leaveActiveClass)\r\n    done && done()\r\n  }\r\n\r\n  const makeEnterHook = (isAppear: boolean) => {\r\n    return (el: Element, done: () => void) => {\r\n      const hook = isAppear ? onAppear : onEnter\r\n      const resolve = () => finishEnter(el, isAppear, done)\r\n      callHook(hook, [el, resolve])\r\n      nextFrame(() => {\r\n        removeTransitionClass(el, isAppear ? appearFromClass : enterFromClass)\r\n        if (__COMPAT__ && legacyClassEnabled) {\r\n          removeTransitionClass(\r\n            el,\r\n            isAppear ? legacyAppearFromClass : legacyEnterFromClass\r\n          )\r\n        }\r\n        addTransitionClass(el, isAppear ? appearToClass : enterToClass)\r\n        if (!hasExplicitCallback(hook)) {\r\n          whenTransitionEnds(el, type, enterDuration, resolve)\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n  return extend(baseProps, {\r\n    onBeforeEnter(el) {\r\n      callHook(onBeforeEnter, [el])\r\n      addTransitionClass(el, enterFromClass)\r\n      if (__COMPAT__ && legacyClassEnabled) {\r\n        addTransitionClass(el, legacyEnterFromClass)\r\n      }\r\n      addTransitionClass(el, enterActiveClass)\r\n    },\r\n    onBeforeAppear(el) {\r\n      callHook(onBeforeAppear, [el])\r\n      addTransitionClass(el, appearFromClass)\r\n      if (__COMPAT__ && legacyClassEnabled) {\r\n        addTransitionClass(el, legacyAppearFromClass)\r\n      }\r\n      addTransitionClass(el, appearActiveClass)\r\n    },\r\n    onEnter: makeEnterHook(false),\r\n    onAppear: makeEnterHook(true),\r\n    onLeave(el, done) {\r\n      const resolve = () => finishLeave(el, done)\r\n      addTransitionClass(el, leaveFromClass)\r\n      if (__COMPAT__ && legacyClassEnabled) {\r\n        addTransitionClass(el, legacyLeaveFromClass)\r\n      }\r\n      // force reflow so *-leave-from classes immediately take effect (#2593)\r\n      forceReflow()\r\n      addTransitionClass(el, leaveActiveClass)\r\n      nextFrame(() => {\r\n        removeTransitionClass(el, leaveFromClass)\r\n        if (__COMPAT__ && legacyClassEnabled) {\r\n          removeTransitionClass(el, legacyLeaveFromClass)\r\n        }\r\n        addTransitionClass(el, leaveToClass)\r\n        if (!hasExplicitCallback(onLeave)) {\r\n          whenTransitionEnds(el, type, leaveDuration, resolve)\r\n        }\r\n      })\r\n      callHook(onLeave, [el, resolve])\r\n    },\r\n    onEnterCancelled(el) {\r\n      finishEnter(el, false)\r\n      callHook(onEnterCancelled, [el])\r\n    },\r\n    onAppearCancelled(el) {\r\n      finishEnter(el, true)\r\n      callHook(onAppearCancelled, [el])\r\n    },\r\n    onLeaveCancelled(el) {\r\n      finishLeave(el)\r\n      callHook(onLeaveCancelled, [el])\r\n    }\r\n  } as BaseTransitionProps<Element>)\r\n}\r\n\r\nfunction normalizeDuration(\r\n  duration: TransitionProps['duration']\r\n): [number, number] | null {\r\n  if (duration == null) {\r\n    return null\r\n  } else if (isObject(duration)) {\r\n    return [NumberOf(duration.enter), NumberOf(duration.leave)]\r\n  } else {\r\n    const n = NumberOf(duration)\r\n    return [n, n]\r\n  }\r\n}\r\n\r\nfunction NumberOf(val: unknown): number {\r\n  const res = toNumber(val)\r\n  if (__DEV__) validateDuration(res)\r\n  return res\r\n}\r\n\r\nfunction validateDuration(val: unknown) {\r\n  if (typeof val !== 'number') {\r\n    warn(\r\n      `<transition> explicit duration is not a valid number - ` +\r\n        `got ${JSON.stringify(val)}.`\r\n    )\r\n  } else if (isNaN(val)) {\r\n    warn(\r\n      `<transition> explicit duration is NaN - ` +\r\n        'the duration expression might be incorrect.'\r\n    )\r\n  }\r\n}\r\n\r\nexport function addTransitionClass(el: Element, cls: string) {\r\n  cls.split(/\\s+/).forEach(c => c && el.classList.add(c))\r\n  ;(\r\n    (el as ElementWithTransition)._vtc ||\r\n    ((el as ElementWithTransition)._vtc = new Set())\r\n  ).add(cls)\r\n}\r\n\r\nexport function removeTransitionClass(el: Element, cls: string) {\r\n  cls.split(/\\s+/).forEach(c => c && el.classList.remove(c))\r\n  const { _vtc } = el as ElementWithTransition\r\n  if (_vtc) {\r\n    _vtc.delete(cls)\r\n    if (!_vtc!.size) {\r\n      ;(el as ElementWithTransition)._vtc = undefined\r\n    }\r\n  }\r\n}\r\n\r\nfunction nextFrame(cb: () => void) {\r\n  requestAnimationFrame(() => {\r\n    requestAnimationFrame(cb)\r\n  })\r\n}\r\n\r\nlet endId = 0\r\n\r\nfunction whenTransitionEnds(\r\n  el: Element & { _endId?: number },\r\n  expectedType: TransitionProps['type'] | undefined,\r\n  explicitTimeout: number | null,\r\n  resolve: () => void\r\n) {\r\n  const id = (el._endId = ++endId)\r\n  const resolveIfNotStale = () => {\r\n    if (id === el._endId) {\r\n      resolve()\r\n    }\r\n  }\r\n\r\n  if (explicitTimeout) {\r\n    return setTimeout(resolveIfNotStale, explicitTimeout)\r\n  }\r\n\r\n  const { type, timeout, propCount } = getTransitionInfo(el, expectedType)\r\n  if (!type) {\r\n    return resolve()\r\n  }\r\n\r\n  const endEvent = type + 'end'\r\n  let ended = 0\r\n  const end = () => {\r\n    el.removeEventListener(endEvent, onEnd)\r\n    resolveIfNotStale()\r\n  }\r\n  const onEnd = (e: Event) => {\r\n    if (e.target === el && ++ended >= propCount) {\r\n      end()\r\n    }\r\n  }\r\n  setTimeout(() => {\r\n    if (ended < propCount) {\r\n      end()\r\n    }\r\n  }, timeout + 1)\r\n  el.addEventListener(endEvent, onEnd)\r\n}\r\n\r\ninterface CSSTransitionInfo {\r\n  type: typeof TRANSITION | typeof ANIMATION | null\r\n  propCount: number\r\n  timeout: number\r\n  hasTransform: boolean\r\n}\r\n\r\nexport function getTransitionInfo(\r\n  el: Element,\r\n  expectedType?: TransitionProps['type']\r\n): CSSTransitionInfo {\r\n  const styles: any = window.getComputedStyle(el)\r\n  // JSDOM may return undefined for transition properties\r\n  const getStyleProperties = (key: string) => (styles[key] || '').split(', ')\r\n  const transitionDelays = getStyleProperties(TRANSITION + 'Delay')\r\n  const transitionDurations = getStyleProperties(TRANSITION + 'Duration')\r\n  const transitionTimeout = getTimeout(transitionDelays, transitionDurations)\r\n  const animationDelays = getStyleProperties(ANIMATION + 'Delay')\r\n  const animationDurations = getStyleProperties(ANIMATION + 'Duration')\r\n  const animationTimeout = getTimeout(animationDelays, animationDurations)\r\n\r\n  let type: CSSTransitionInfo['type'] = null\r\n  let timeout = 0\r\n  let propCount = 0\r\n  /* istanbul ignore if */\r\n  if (expectedType === TRANSITION) {\r\n    if (transitionTimeout > 0) {\r\n      type = TRANSITION\r\n      timeout = transitionTimeout\r\n      propCount = transitionDurations.length\r\n    }\r\n  } else if (expectedType === ANIMATION) {\r\n    if (animationTimeout > 0) {\r\n      type = ANIMATION\r\n      timeout = animationTimeout\r\n      propCount = animationDurations.length\r\n    }\r\n  } else {\r\n    timeout = Math.max(transitionTimeout, animationTimeout)\r\n    type =\r\n      timeout > 0\r\n        ? transitionTimeout > animationTimeout\r\n          ? TRANSITION\r\n          : ANIMATION\r\n        : null\r\n    propCount = type\r\n      ? type === TRANSITION\r\n        ? transitionDurations.length\r\n        : animationDurations.length\r\n      : 0\r\n  }\r\n  const hasTransform =\r\n    type === TRANSITION &&\r\n    /\\b(transform|all)(,|$)/.test(styles[TRANSITION + 'Property'])\r\n  return {\r\n    type,\r\n    timeout,\r\n    propCount,\r\n    hasTransform\r\n  }\r\n}\r\n\r\nfunction getTimeout(delays: string[], durations: string[]): number {\r\n  while (delays.length < durations.length) {\r\n    delays = delays.concat(delays)\r\n  }\r\n  return Math.max(...durations.map((d, i) => toMs(d) + toMs(delays[i])))\r\n}\r\n\r\n// Old versions of Chromium (below 61.0.3163.100) formats floating pointer\r\n// numbers in a locale-dependent way, using a comma instead of a dot.\r\n// If comma is not replaced with a dot, the input will be rounded down\r\n// (i.e. acting as a floor function) causing unexpected behaviors\r\nfunction toMs(s: string): number {\r\n  return Number(s.slice(0, -1).replace(',', '.')) * 1000\r\n}\r\n\r\n// synchronously force layout to put elements into a certain state\r\nexport function forceReflow() {\r\n  return document.body.offsetHeight\r\n}\r\n","import {\r\n  TransitionProps,\r\n  addTransitionClass,\r\n  removeTransitionClass,\r\n  ElementWithTransition,\r\n  getTransitionInfo,\r\n  resolveTransitionProps,\r\n  TransitionPropsValidators,\r\n  forceReflow\r\n} from './Transition'\r\nimport {\r\n  Fragment,\r\n  VNode,\r\n  warn,\r\n  resolveTransitionHooks,\r\n  useTransitionState,\r\n  getTransitionRawChildren,\r\n  getCurrentInstance,\r\n  setTransitionHooks,\r\n  createVNode,\r\n  onUpdated,\r\n  SetupContext,\r\n  toRaw,\r\n  compatUtils,\r\n  DeprecationTypes,\r\n  ComponentOptions\r\n} from '@vue/runtime-core'\r\nimport { extend } from '@vue/shared'\r\n\r\ninterface Position {\r\n  top: number\r\n  left: number\r\n}\r\n\r\nconst positionMap = new WeakMap<VNode, Position>()\r\nconst newPositionMap = new WeakMap<VNode, Position>()\r\n\r\nexport type TransitionGroupProps = Omit<TransitionProps, 'mode'> & {\r\n  tag?: string\r\n  moveClass?: string\r\n}\r\n\r\nconst TransitionGroupImpl: ComponentOptions = {\r\n  name: 'TransitionGroup',\r\n\r\n  props: /*#__PURE__*/ extend({}, TransitionPropsValidators, {\r\n    tag: String,\r\n    moveClass: String\r\n  }),\r\n\r\n  setup(props: TransitionGroupProps, { slots }: SetupContext) {\r\n    const instance = getCurrentInstance()!\r\n    const state = useTransitionState()\r\n    let prevChildren: VNode[]\r\n    let children: VNode[]\r\n\r\n    onUpdated(() => {\r\n      // children is guaranteed to exist after initial render\r\n      if (!prevChildren.length) {\r\n        return\r\n      }\r\n      const moveClass = props.moveClass || `${props.name || 'v'}-move`\r\n\r\n      if (\r\n        !hasCSSTransform(\r\n          prevChildren[0].el as ElementWithTransition,\r\n          instance.vnode.el as Node,\r\n          moveClass\r\n        )\r\n      ) {\r\n        return\r\n      }\r\n\r\n      // we divide the work into three loops to avoid mixing DOM reads and writes\r\n      // in each iteration - which helps prevent layout thrashing.\r\n      prevChildren.forEach(callPendingCbs)\r\n      prevChildren.forEach(recordPosition)\r\n      const movedChildren = prevChildren.filter(applyTranslation)\r\n\r\n      // force reflow to put everything in position\r\n      forceReflow()\r\n\r\n      movedChildren.forEach(c => {\r\n        const el = c.el as ElementWithTransition\r\n        const style = el.style\r\n        addTransitionClass(el, moveClass)\r\n        style.transform = style.webkitTransform = style.transitionDuration = ''\r\n        const cb = ((el as any)._moveCb = (e: TransitionEvent) => {\r\n          if (e && e.target !== el) {\r\n            return\r\n          }\r\n          if (!e || /transform$/.test(e.propertyName)) {\r\n            el.removeEventListener('transitionend', cb)\r\n            ;(el as any)._moveCb = null\r\n            removeTransitionClass(el, moveClass)\r\n          }\r\n        })\r\n        el.addEventListener('transitionend', cb)\r\n      })\r\n    })\r\n\r\n    return () => {\r\n      const rawProps = toRaw(props)\r\n      const cssTransitionProps = resolveTransitionProps(rawProps)\r\n      let tag = rawProps.tag || Fragment\r\n\r\n      if (\r\n        __COMPAT__ &&\r\n        !rawProps.tag &&\r\n        compatUtils.checkCompatEnabled(\r\n          DeprecationTypes.TRANSITION_GROUP_ROOT,\r\n          instance.parent\r\n        )\r\n      ) {\r\n        tag = 'span'\r\n      }\r\n\r\n      prevChildren = children\r\n      children = slots.default ? getTransitionRawChildren(slots.default()) : []\r\n\r\n      for (let i = 0; i < children.length; i++) {\r\n        const child = children[i]\r\n        if (child.key != null) {\r\n          setTransitionHooks(\r\n            child,\r\n            resolveTransitionHooks(child, cssTransitionProps, state, instance)\r\n          )\r\n        } else if (__DEV__) {\r\n          warn(`<TransitionGroup> children must be keyed.`)\r\n        }\r\n      }\r\n\r\n      if (prevChildren) {\r\n        for (let i = 0; i < prevChildren.length; i++) {\r\n          const child = prevChildren[i]\r\n          setTransitionHooks(\r\n            child,\r\n            resolveTransitionHooks(child, cssTransitionProps, state, instance)\r\n          )\r\n          positionMap.set(child, (child.el as Element).getBoundingClientRect())\r\n        }\r\n      }\r\n\r\n      return createVNode(tag, null, children)\r\n    }\r\n  }\r\n}\r\n\r\nif (__COMPAT__) {\r\n  TransitionGroupImpl.__isBuiltIn = true\r\n}\r\n\r\n/**\r\n * TransitionGroup does not support \"mode\" so we need to remove it from the\r\n * props declarations, but direct delete operation is considered a side effect\r\n * and will make the entire transition feature non-tree-shakeable, so we do it\r\n * in a function and mark the function's invocation as pure.\r\n */\r\nconst removeMode = (props: any) => delete props.mode\r\n/*#__PURE__*/ removeMode(TransitionGroupImpl.props)\r\n\r\nexport const TransitionGroup = TransitionGroupImpl as unknown as {\r\n  new (): {\r\n    $props: TransitionGroupProps\r\n  }\r\n}\r\n\r\nfunction callPendingCbs(c: VNode) {\r\n  const el = c.el as any\r\n  if (el._moveCb) {\r\n    el._moveCb()\r\n  }\r\n  if (el._enterCb) {\r\n    el._enterCb()\r\n  }\r\n}\r\n\r\nfunction recordPosition(c: VNode) {\r\n  newPositionMap.set(c, (c.el as Element).getBoundingClientRect())\r\n}\r\n\r\nfunction applyTranslation(c: VNode): VNode | undefined {\r\n  const oldPos = positionMap.get(c)!\r\n  const newPos = newPositionMap.get(c)!\r\n  const dx = oldPos.left - newPos.left\r\n  const dy = oldPos.top - newPos.top\r\n  if (dx || dy) {\r\n    const s = (c.el as HTMLElement).style\r\n    s.transform = s.webkitTransform = `translate(${dx}px,${dy}px)`\r\n    s.transitionDuration = '0s'\r\n    return c\r\n  }\r\n}\r\n\r\nfunction hasCSSTransform(\r\n  el: ElementWithTransition,\r\n  root: Node,\r\n  moveClass: string\r\n): boolean {\r\n  // Detect whether an element with the move class applied has\r\n  // CSS transitions. Since the element may be inside an entering\r\n  // transition at this very moment, we make a clone of it and remove\r\n  // all other transition classes applied to ensure only the move class\r\n  // is applied.\r\n  const clone = el.cloneNode() as HTMLElement\r\n  if (el._vtc) {\r\n    el._vtc.forEach(cls => {\r\n      cls.split(/\\s+/).forEach(c => c && clone.classList.remove(c))\r\n    })\r\n  }\r\n  moveClass.split(/\\s+/).forEach(c => c && clone.classList.add(c))\r\n  clone.style.display = 'none'\r\n  const container = (\r\n    root.nodeType === 1 ? root : root.parentNode\r\n  ) as HTMLElement\r\n  container.appendChild(clone)\r\n  const { hasTransform } = getTransitionInfo(clone)\r\n  container.removeChild(clone)\r\n  return hasTransform\r\n}\r\n","import {\r\n  ObjectDirective,\r\n  VNode,\r\n  DirectiveHook,\r\n  DirectiveBinding,\r\n  warn\r\n} from '@vue/runtime-core'\r\nimport { addEventListener } from '../modules/events'\r\nimport {\r\n  isArray,\r\n  looseEqual,\r\n  looseIndexOf,\r\n  invokeArrayFns,\r\n  toNumber,\r\n  isSet\r\n} from '@vue/shared'\r\n\r\ntype AssignerFn = (value: any) => void\r\n\r\nconst getModelAssigner = (vnode: VNode): AssignerFn => {\r\n  const fn = vnode.props!['onUpdate:modelValue']\r\n  return isArray(fn) ? value => invokeArrayFns(fn, value) : fn\r\n}\r\n\r\nfunction onCompositionStart(e: Event) {\r\n  ;(e.target as any).composing = true\r\n}\r\n\r\nfunction onCompositionEnd(e: Event) {\r\n  const target = e.target as any\r\n  if (target.composing) {\r\n    target.composing = false\r\n    trigger(target, 'input')\r\n  }\r\n}\r\n\r\nfunction trigger(el: HTMLElement, type: string) {\r\n  const e = document.createEvent('HTMLEvents')\r\n  e.initEvent(type, true, true)\r\n  el.dispatchEvent(e)\r\n}\r\n\r\ntype ModelDirective<T> = ObjectDirective<T & { _assign: AssignerFn }>\r\n\r\n// We are exporting the v-model runtime directly as vnode hooks so that it can\r\n// be tree-shaken in case v-model is never used.\r\nexport const vModelText: ModelDirective<\r\n  HTMLInputElement | HTMLTextAreaElement\r\n> = {\r\n  created(el, { modifiers: { lazy, trim, number } }, vnode) {\r\n    el._assign = getModelAssigner(vnode)\r\n    const castToNumber =\r\n      number || (vnode.props && vnode.props.type === 'number')\r\n    addEventListener(el, lazy ? 'change' : 'input', e => {\r\n      if ((e.target as any).composing) return\r\n      let domValue: string | number = el.value\r\n      if (trim) {\r\n        domValue = domValue.trim()\r\n      } else if (castToNumber) {\r\n        domValue = toNumber(domValue)\r\n      }\r\n      el._assign(domValue)\r\n    })\r\n    if (trim) {\r\n      addEventListener(el, 'change', () => {\r\n        el.value = el.value.trim()\r\n      })\r\n    }\r\n    if (!lazy) {\r\n      addEventListener(el, 'compositionstart', onCompositionStart)\r\n      addEventListener(el, 'compositionend', onCompositionEnd)\r\n      // Safari < 10.2 & UIWebView doesn't fire compositionend when\r\n      // switching focus before confirming composition choice\r\n      // this also fixes the issue where some browsers e.g. iOS Chrome\r\n      // fires \"change\" instead of \"input\" on autocomplete.\r\n      addEventListener(el, 'change', onCompositionEnd)\r\n    }\r\n  },\r\n  // set value on mounted so it's after min/max for type=\"range\"\r\n  mounted(el, { value }) {\r\n    el.value = value == null ? '' : value\r\n  },\r\n  beforeUpdate(el, { value, modifiers: { lazy, trim, number } }, vnode) {\r\n    el._assign = getModelAssigner(vnode)\r\n    // avoid clearing unresolved text. #2302\r\n    if ((el as any).composing) return\r\n    if (document.activeElement === el) {\r\n      if (lazy) {\r\n        return\r\n      }\r\n      if (trim && el.value.trim() === value) {\r\n        return\r\n      }\r\n      if ((number || el.type === 'number') && toNumber(el.value) === value) {\r\n        return\r\n      }\r\n    }\r\n    const newValue = value == null ? '' : value\r\n    if (el.value !== newValue) {\r\n      el.value = newValue\r\n    }\r\n  }\r\n}\r\n\r\nexport const vModelCheckbox: ModelDirective<HTMLInputElement> = {\r\n  // #4096 array checkboxes need to be deep traversed\r\n  deep: true,\r\n  created(el, _, vnode) {\r\n    el._assign = getModelAssigner(vnode)\r\n    addEventListener(el, 'change', () => {\r\n      const modelValue = (el as any)._modelValue\r\n      const elementValue = getValue(el)\r\n      const checked = el.checked\r\n      const assign = el._assign\r\n      if (isArray(modelValue)) {\r\n        const index = looseIndexOf(modelValue, elementValue)\r\n        const found = index !== -1\r\n        if (checked && !found) {\r\n          assign(modelValue.concat(elementValue))\r\n        } else if (!checked && found) {\r\n          const filtered = [...modelValue]\r\n          filtered.splice(index, 1)\r\n          assign(filtered)\r\n        }\r\n      } else if (isSet(modelValue)) {\r\n        const cloned = new Set(modelValue)\r\n        if (checked) {\r\n          cloned.add(elementValue)\r\n        } else {\r\n          cloned.delete(elementValue)\r\n        }\r\n        assign(cloned)\r\n      } else {\r\n        assign(getCheckboxValue(el, checked))\r\n      }\r\n    })\r\n  },\r\n  // set initial checked on mount to wait for true-value/false-value\r\n  mounted: setChecked,\r\n  beforeUpdate(el, binding, vnode) {\r\n    el._assign = getModelAssigner(vnode)\r\n    setChecked(el, binding, vnode)\r\n  }\r\n}\r\n\r\nfunction setChecked(\r\n  el: HTMLInputElement,\r\n  { value, oldValue }: DirectiveBinding,\r\n  vnode: VNode\r\n) {\r\n  // store the v-model value on the element so it can be accessed by the\r\n  // change listener.\r\n  ;(el as any)._modelValue = value\r\n  if (isArray(value)) {\r\n    el.checked = looseIndexOf(value, vnode.props!.value) > -1\r\n  } else if (isSet(value)) {\r\n    el.checked = value.has(vnode.props!.value)\r\n  } else if (value !== oldValue) {\r\n    el.checked = looseEqual(value, getCheckboxValue(el, true))\r\n  }\r\n}\r\n\r\nexport const vModelRadio: ModelDirective<HTMLInputElement> = {\r\n  created(el, { value }, vnode) {\r\n    el.checked = looseEqual(value, vnode.props!.value)\r\n    el._assign = getModelAssigner(vnode)\r\n    addEventListener(el, 'change', () => {\r\n      el._assign(getValue(el))\r\n    })\r\n  },\r\n  beforeUpdate(el, { value, oldValue }, vnode) {\r\n    el._assign = getModelAssigner(vnode)\r\n    if (value !== oldValue) {\r\n      el.checked = looseEqual(value, vnode.props!.value)\r\n    }\r\n  }\r\n}\r\n\r\nexport const vModelSelect: ModelDirective<HTMLSelectElement> = {\r\n  // <select multiple> value need to be deep traversed\r\n  deep: true,\r\n  created(el, { value, modifiers: { number } }, vnode) {\r\n    const isSetModel = isSet(value)\r\n    addEventListener(el, 'change', () => {\r\n      const selectedVal = Array.prototype.filter\r\n        .call(el.options, (o: HTMLOptionElement) => o.selected)\r\n        .map((o: HTMLOptionElement) =>\r\n          number ? toNumber(getValue(o)) : getValue(o)\r\n        )\r\n      el._assign(\r\n        el.multiple\r\n          ? isSetModel\r\n            ? new Set(selectedVal)\r\n            : selectedVal\r\n          : selectedVal[0]\r\n      )\r\n    })\r\n    el._assign = getModelAssigner(vnode)\r\n  },\r\n  // set value in mounted & updated because <select> relies on its children\r\n  // <option>s.\r\n  mounted(el, { value }) {\r\n    setSelected(el, value)\r\n  },\r\n  beforeUpdate(el, _binding, vnode) {\r\n    el._assign = getModelAssigner(vnode)\r\n  },\r\n  updated(el, { value }) {\r\n    setSelected(el, value)\r\n  }\r\n}\r\n\r\nfunction setSelected(el: HTMLSelectElement, value: any) {\r\n  const isMultiple = el.multiple\r\n  if (isMultiple && !isArray(value) && !isSet(value)) {\r\n    __DEV__ &&\r\n      warn(\r\n        `<select multiple v-model> expects an Array or Set value for its binding, ` +\r\n          `but got ${Object.prototype.toString.call(value).slice(8, -1)}.`\r\n      )\r\n    return\r\n  }\r\n  for (let i = 0, l = el.options.length; i < l; i++) {\r\n    const option = el.options[i]\r\n    const optionValue = getValue(option)\r\n    if (isMultiple) {\r\n      if (isArray(value)) {\r\n        option.selected = looseIndexOf(value, optionValue) > -1\r\n      } else {\r\n        option.selected = value.has(optionValue)\r\n      }\r\n    } else {\r\n      if (looseEqual(getValue(option), value)) {\r\n        if (el.selectedIndex !== i) el.selectedIndex = i\r\n        return\r\n      }\r\n    }\r\n  }\r\n  if (!isMultiple && el.selectedIndex !== -1) {\r\n    el.selectedIndex = -1\r\n  }\r\n}\r\n\r\n// retrieve raw value set via :value bindings\r\nfunction getValue(el: HTMLOptionElement | HTMLInputElement) {\r\n  return '_value' in el ? (el as any)._value : el.value\r\n}\r\n\r\n// retrieve raw value for true-value and false-value set via :true-value or :false-value bindings\r\nfunction getCheckboxValue(\r\n  el: HTMLInputElement & { _trueValue?: any; _falseValue?: any },\r\n  checked: boolean\r\n) {\r\n  const key = checked ? '_trueValue' : '_falseValue'\r\n  return key in el ? el[key] : checked\r\n}\r\n\r\nexport const vModelDynamic: ObjectDirective<\r\n  HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement\r\n> = {\r\n  created(el, binding, vnode) {\r\n    callModelHook(el, binding, vnode, null, 'created')\r\n  },\r\n  mounted(el, binding, vnode) {\r\n    callModelHook(el, binding, vnode, null, 'mounted')\r\n  },\r\n  beforeUpdate(el, binding, vnode, prevVNode) {\r\n    callModelHook(el, binding, vnode, prevVNode, 'beforeUpdate')\r\n  },\r\n  updated(el, binding, vnode, prevVNode) {\r\n    callModelHook(el, binding, vnode, prevVNode, 'updated')\r\n  }\r\n}\r\n\r\nfunction callModelHook(\r\n  el: HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement,\r\n  binding: DirectiveBinding,\r\n  vnode: VNode,\r\n  prevVNode: VNode | null,\r\n  hook: keyof ObjectDirective\r\n) {\r\n  let modelToUse: ObjectDirective\r\n  switch (el.tagName) {\r\n    case 'SELECT':\r\n      modelToUse = vModelSelect\r\n      break\r\n    case 'TEXTAREA':\r\n      modelToUse = vModelText\r\n      break\r\n    default:\r\n      switch (vnode.props && vnode.props.type) {\r\n        case 'checkbox':\r\n          modelToUse = vModelCheckbox\r\n          break\r\n        case 'radio':\r\n          modelToUse = vModelRadio\r\n          break\r\n        default:\r\n          modelToUse = vModelText\r\n      }\r\n  }\r\n  const fn = modelToUse[hook] as DirectiveHook\r\n  fn && fn(el, binding, vnode, prevVNode)\r\n}\r\n\r\n// SSR vnode transforms\r\nif (__NODE_JS__) {\r\n  vModelText.getSSRProps = ({ value }) => ({ value })\r\n\r\n  vModelRadio.getSSRProps = ({ value }, vnode) => {\r\n    if (vnode.props && looseEqual(vnode.props.value, value)) {\r\n      return { checked: true }\r\n    }\r\n  }\r\n\r\n  vModelCheckbox.getSSRProps = ({ value }, vnode) => {\r\n    if (isArray(value)) {\r\n      if (vnode.props && looseIndexOf(value, vnode.props.value) > -1) {\r\n        return { checked: true }\r\n      }\r\n    } else if (isSet(value)) {\r\n      if (vnode.props && value.has(vnode.props.value)) {\r\n        return { checked: true }\r\n      }\r\n    } else if (value) {\r\n      return { checked: true }\r\n    }\r\n  }\r\n}\r\n","import {\r\n  getCurrentInstance,\r\n  DeprecationTypes,\r\n  LegacyConfig,\r\n  compatUtils,\r\n  ComponentInternalInstance\r\n} from '@vue/runtime-core'\r\nimport { hyphenate, isArray } from '@vue/shared'\r\n\r\nconst systemModifiers = ['ctrl', 'shift', 'alt', 'meta']\r\n\r\ntype KeyedEvent = KeyboardEvent | MouseEvent | TouchEvent\r\n\r\nconst modifierGuards: Record<\r\n  string,\r\n  (e: Event, modifiers: string[]) => void | boolean\r\n> = {\r\n  stop: e => e.stopPropagation(),\r\n  prevent: e => e.preventDefault(),\r\n  self: e => e.target !== e.currentTarget,\r\n  ctrl: e => !(e as KeyedEvent).ctrlKey,\r\n  shift: e => !(e as KeyedEvent).shiftKey,\r\n  alt: e => !(e as KeyedEvent).altKey,\r\n  meta: e => !(e as KeyedEvent).metaKey,\r\n  left: e => 'button' in e && (e as MouseEvent).button !== 0,\r\n  middle: e => 'button' in e && (e as MouseEvent).button !== 1,\r\n  right: e => 'button' in e && (e as MouseEvent).button !== 2,\r\n  exact: (e, modifiers) =>\r\n    systemModifiers.some(m => (e as any)[`${m}Key`] && !modifiers.includes(m))\r\n}\r\n\r\n/**\r\n * @private\r\n */\r\nexport const withModifiers = (fn: Function, modifiers: string[]) => {\r\n  return (event: Event, ...args: unknown[]) => {\r\n    for (let i = 0; i < modifiers.length; i++) {\r\n      const guard = modifierGuards[modifiers[i]]\r\n      if (guard && guard(event, modifiers)) return\r\n    }\r\n    return fn(event, ...args)\r\n  }\r\n}\r\n\r\n// Kept for 2.x compat.\r\n// Note: IE11 compat for `spacebar` and `del` is removed for now.\r\nconst keyNames: Record<string, string | string[]> = {\r\n  esc: 'escape',\r\n  space: ' ',\r\n  up: 'arrow-up',\r\n  left: 'arrow-left',\r\n  right: 'arrow-right',\r\n  down: 'arrow-down',\r\n  delete: 'backspace'\r\n}\r\n\r\n/**\r\n * @private\r\n */\r\nexport const withKeys = (fn: Function, modifiers: string[]) => {\r\n  let globalKeyCodes: LegacyConfig['keyCodes']\r\n  let instance: ComponentInternalInstance | null = null\r\n  if (__COMPAT__) {\r\n    instance = getCurrentInstance()\r\n    if (\r\n      compatUtils.isCompatEnabled(DeprecationTypes.CONFIG_KEY_CODES, instance)\r\n    ) {\r\n      if (instance) {\r\n        globalKeyCodes = (instance.appContext.config as any as LegacyConfig)\r\n          .keyCodes\r\n      }\r\n    }\r\n    if (__DEV__ && modifiers.some(m => /^\\d+$/.test(m))) {\r\n      compatUtils.warnDeprecation(\r\n        DeprecationTypes.V_ON_KEYCODE_MODIFIER,\r\n        instance\r\n      )\r\n    }\r\n  }\r\n\r\n  return (event: KeyboardEvent) => {\r\n    if (!('key' in event)) {\r\n      return\r\n    }\r\n\r\n    const eventKey = hyphenate(event.key)\r\n    if (modifiers.some(k => k === eventKey || keyNames[k] === eventKey)) {\r\n      return fn(event)\r\n    }\r\n\r\n    if (__COMPAT__) {\r\n      const keyCode = String(event.keyCode)\r\n      if (\r\n        compatUtils.isCompatEnabled(\r\n          DeprecationTypes.V_ON_KEYCODE_MODIFIER,\r\n          instance\r\n        ) &&\r\n        modifiers.some(mod => mod == keyCode)\r\n      ) {\r\n        return fn(event)\r\n      }\r\n      if (globalKeyCodes) {\r\n        for (const mod of modifiers) {\r\n          const codes = globalKeyCodes[mod]\r\n          if (codes) {\r\n            const matches = isArray(codes)\r\n              ? codes.some(code => String(code) === keyCode)\r\n              : String(codes) === keyCode\r\n            if (matches) {\r\n              return fn(event)\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n","import { ObjectDirective } from '@vue/runtime-core'\r\n\r\ninterface VShowElement extends HTMLElement {\r\n  // _vod = vue original display\r\n  _vod: string\r\n}\r\n\r\nexport const vShow: ObjectDirective<VShowElement> = {\r\n  beforeMount(el, { value }, { transition }) {\r\n    el._vod = el.style.display === 'none' ? '' : el.style.display\r\n    if (transition && value) {\r\n      transition.beforeEnter(el)\r\n    } else {\r\n      setDisplay(el, value)\r\n    }\r\n  },\r\n  mounted(el, { value }, { transition }) {\r\n    if (transition && value) {\r\n      transition.enter(el)\r\n    }\r\n  },\r\n  updated(el, { value, oldValue }, { transition }) {\r\n    if (!value === !oldValue) return\r\n    if (transition) {\r\n      if (value) {\r\n        transition.beforeEnter(el)\r\n        setDisplay(el, true)\r\n        transition.enter(el)\r\n      } else {\r\n        transition.leave(el, () => {\r\n          setDisplay(el, false)\r\n        })\r\n      }\r\n    } else {\r\n      setDisplay(el, value)\r\n    }\r\n  },\r\n  beforeUnmount(el, { value }) {\r\n    setDisplay(el, value)\r\n  }\r\n}\r\n\r\nif (__NODE_JS__) {\r\n  vShow.getSSRProps = ({ value }) => {\r\n    if (!value) {\r\n      return { style: { display: 'none' } }\r\n    }\r\n  }\r\n}\r\n\r\nfunction setDisplay(el: VShowElement, value: unknown): void {\r\n  el.style.display = value ? el._vod : 'none'\r\n}\r\n","import {\r\n  createRenderer,\r\n  createHydrationRenderer,\r\n  warn,\r\n  RootRenderFunction,\r\n  CreateAppFunction,\r\n  Renderer,\r\n  HydrationRenderer,\r\n  App,\r\n  RootHydrateFunction,\r\n  isRuntimeOnly,\r\n  DeprecationTypes,\r\n  compatUtils\r\n} from '@vue/runtime-core'\r\nimport { nodeOps } from './nodeOps'\r\nimport { patchProp } from './patchProp'\r\n// Importing from the compiler, will be tree-shaken in prod\r\nimport { isFunction, isString, isHTMLTag, isSVGTag, extend } from '@vue/shared'\r\n\r\ndeclare module '@vue/reactivity' {\r\n  export interface RefUnwrapBailTypes {\r\n    // Note: if updating this, also update `types/refBail.d.ts`.\r\n    runtimeDOMBailTypes: Node | Window\r\n  }\r\n}\r\n\r\nconst rendererOptions = extend({ patchProp }, nodeOps)\r\n\r\n// lazy create the renderer - this makes core renderer logic tree-shakable\r\n// in case the user only imports reactivity utilities from Vue.\r\nlet renderer: Renderer<Element | ShadowRoot> | HydrationRenderer\r\n\r\nlet enabledHydration = false\r\n\r\nfunction ensureRenderer() {\r\n  return (\r\n    renderer ||\r\n    (renderer = createRenderer<Node, Element | ShadowRoot>(rendererOptions))\r\n  )\r\n}\r\n\r\nfunction ensureHydrationRenderer() {\r\n  renderer = enabledHydration\r\n    ? renderer\r\n    : createHydrationRenderer(rendererOptions)\r\n  enabledHydration = true\r\n  return renderer as HydrationRenderer\r\n}\r\n\r\n// use explicit type casts here to avoid import() calls in rolled-up d.ts\r\nexport const render = ((...args) => {\r\n  ensureRenderer().render(...args)\r\n}) as RootRenderFunction<Element | ShadowRoot>\r\n\r\nexport const hydrate = ((...args) => {\r\n  ensureHydrationRenderer().hydrate(...args)\r\n}) as RootHydrateFunction\r\n\r\nexport const createApp = ((...args) => {\r\n  const app = ensureRenderer().createApp(...args)\r\n\r\n  if (__DEV__) {\r\n    injectNativeTagCheck(app)\r\n    injectCompilerOptionsCheck(app)\r\n  }\r\n\r\n  const { mount } = app\r\n  app.mount = (containerOrSelector: Element | ShadowRoot | string): any => {\r\n    const container = normalizeContainer(containerOrSelector)\r\n    if (!container) return\r\n\r\n    const component = app._component\r\n    if (!isFunction(component) && !component.render && !component.template) {\r\n      // __UNSAFE__\r\n      // Reason: potential execution of JS expressions in in-DOM template.\r\n      // The user must make sure the in-DOM template is trusted. If it's\r\n      // rendered by the server, the template should not contain any user data.\r\n      component.template = container.innerHTML\r\n      // 2.x compat check\r\n      if (__COMPAT__ && __DEV__) {\r\n        for (let i = 0; i < container.attributes.length; i++) {\r\n          const attr = container.attributes[i]\r\n          if (attr.name !== 'v-cloak' && /^(v-|:|@)/.test(attr.name)) {\r\n            compatUtils.warnDeprecation(\r\n              DeprecationTypes.GLOBAL_MOUNT_CONTAINER,\r\n              null\r\n            )\r\n            break\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    // clear content before mounting\r\n    container.innerHTML = ''\r\n    const proxy = mount(container, false, container instanceof SVGElement)\r\n    if (container instanceof Element) {\r\n      container.removeAttribute('v-cloak')\r\n      container.setAttribute('data-v-app', '')\r\n    }\r\n    return proxy\r\n  }\r\n\r\n  return app\r\n}) as CreateAppFunction<Element>\r\n\r\nexport const createSSRApp = ((...args) => {\r\n  const app = ensureHydrationRenderer().createApp(...args)\r\n\r\n  if (__DEV__) {\r\n    injectNativeTagCheck(app)\r\n    injectCompilerOptionsCheck(app)\r\n  }\r\n\r\n  const { mount } = app\r\n  app.mount = (containerOrSelector: Element | ShadowRoot | string): any => {\r\n    const container = normalizeContainer(containerOrSelector)\r\n    if (container) {\r\n      return mount(container, true, container instanceof SVGElement)\r\n    }\r\n  }\r\n\r\n  return app\r\n}) as CreateAppFunction<Element>\r\n\r\nfunction injectNativeTagCheck(app: App) {\r\n  // Inject `isNativeTag`\r\n  // this is used for component name validation (dev only)\r\n  Object.defineProperty(app.config, 'isNativeTag', {\r\n    value: (tag: string) => isHTMLTag(tag) || isSVGTag(tag),\r\n    writable: false\r\n  })\r\n}\r\n\r\n// dev only\r\nfunction injectCompilerOptionsCheck(app: App) {\r\n  if (isRuntimeOnly()) {\r\n    const isCustomElement = app.config.isCustomElement\r\n    Object.defineProperty(app.config, 'isCustomElement', {\r\n      get() {\r\n        return isCustomElement\r\n      },\r\n      set() {\r\n        warn(\r\n          `The \\`isCustomElement\\` config option is deprecated. Use ` +\r\n            `\\`compilerOptions.isCustomElement\\` instead.`\r\n        )\r\n      }\r\n    })\r\n\r\n    const compilerOptions = app.config.compilerOptions\r\n    const msg =\r\n      `The \\`compilerOptions\\` config option is only respected when using ` +\r\n      `a build of Vue.js that includes the runtime compiler (aka \"full build\"). ` +\r\n      `Since you are using the runtime-only build, \\`compilerOptions\\` ` +\r\n      `must be passed to \\`@vue/compiler-dom\\` in the build setup instead.\\n` +\r\n      `- For vue-loader: pass it via vue-loader's \\`compilerOptions\\` loader option.\\n` +\r\n      `- For vue-cli: see https://cli.vuejs.org/guide/webpack.html#modifying-options-of-a-loader\\n` +\r\n      `- For vite: pass it via @vitejs/plugin-vue options. See https://github.com/vitejs/vite/tree/main/packages/plugin-vue#example-for-passing-options-to-vuecompiler-dom`\r\n\r\n    Object.defineProperty(app.config, 'compilerOptions', {\r\n      get() {\r\n        warn(msg)\r\n        return compilerOptions\r\n      },\r\n      set() {\r\n        warn(msg)\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\nfunction normalizeContainer(\r\n  container: Element | ShadowRoot | string\r\n): Element | null {\r\n  if (isString(container)) {\r\n    const res = document.querySelector(container)\r\n    if (__DEV__ && !res) {\r\n      warn(\r\n        `Failed to mount app: mount target selector \"${container}\" returned null.`\r\n      )\r\n    }\r\n    return res\r\n  }\r\n  if (\r\n    __DEV__ &&\r\n    window.ShadowRoot &&\r\n    container instanceof window.ShadowRoot &&\r\n    container.mode === 'closed'\r\n  ) {\r\n    warn(\r\n      `mounting on a ShadowRoot with \\`{mode: \"closed\"}\\` may lead to unpredictable bugs`\r\n    )\r\n  }\r\n  return container as any\r\n}\r\n\r\n// Custom element support\r\nexport {\r\n  defineCustomElement,\r\n  defineSSRCustomElement,\r\n  VueElement,\r\n  VueElementConstructor\r\n} from './apiCustomElement'\r\n\r\n// SFC CSS utilities\r\nexport { useCssModule } from './helpers/useCssModule'\r\nexport { useCssVars } from './helpers/useCssVars'\r\n\r\n// DOM-only components\r\nexport { Transition, TransitionProps } from './components/Transition'\r\nexport {\r\n  TransitionGroup,\r\n  TransitionGroupProps\r\n} from './components/TransitionGroup'\r\n\r\n// **Internal** DOM-only runtime directive helpers\r\nexport {\r\n  vModelText,\r\n  vModelCheckbox,\r\n  vModelRadio,\r\n  vModelSelect,\r\n  vModelDynamic\r\n} from './directives/vModel'\r\nexport { withModifiers, withKeys } from './directives/vOn'\r\nexport { vShow } from './directives/vShow'\r\n\r\n// re-export everything from core\r\n// h, Component, reactivity API, nextTick, flags & types\r\nexport * from '@vue/runtime-core'\r\n","import { ElementWithTransition } from '../components/Transition'\r\n\r\n// compiler should normalize class + :class bindings on the same element\r\n// into a single binding ['staticClass', dynamic]\r\nexport function patchClass(el: Element, value: string | null, isSVG: boolean) {\r\n  // directly setting className should be faster than setAttribute in theory\r\n  // if this is an element during a transition, take the temporary transition\r\n  // classes into account.\r\n  const transitionClasses = (el as ElementWithTransition)._vtc\r\n  if (transitionClasses) {\r\n    value = (\r\n      value ? [value, ...transitionClasses] : [...transitionClasses]\r\n    ).join(' ')\r\n  }\r\n  if (value == null) {\r\n    el.removeAttribute('class')\r\n  } else if (isSVG) {\r\n    el.setAttribute('class', value)\r\n  } else {\r\n    el.className = value\r\n  }\r\n}\r\n","// __UNSAFE__\r\n// Reason: potentially setting innerHTML.\r\n// This can come from explicit usage of v-html or innerHTML as a prop in render\r\n\r\nimport { warn, DeprecationTypes, compatUtils } from '@vue/runtime-core'\r\n\r\n// functions. The user is responsible for using them with only trusted content.\r\nexport function patchDOMProp(\r\n  el: any,\r\n  key: string,\r\n  value: any,\r\n  // the following args are passed only due to potential innerHTML/textContent\r\n  // overriding existing VNodes, in which case the old tree must be properly\r\n  // unmounted.\r\n  prevChildren: any,\r\n  parentComponent: any,\r\n  parentSuspense: any,\r\n  unmountChildren: any\r\n) {\r\n  if (key === 'innerHTML' || key === 'textContent') {\r\n    if (prevChildren) {\r\n      unmountChildren(prevChildren, parentComponent, parentSuspense)\r\n    }\r\n    el[key] = value == null ? '' : value\r\n    return\r\n  }\r\n\r\n  if (key === 'value' && el.tagName !== 'PROGRESS') {\r\n    // store value as _value as well since\r\n    // non-string values will be stringified.\r\n    el._value = value\r\n    const newValue = value == null ? '' : value\r\n    if (el.value !== newValue) {\r\n      el.value = newValue\r\n    }\r\n    if (value == null) {\r\n      el.removeAttribute(key)\r\n    }\r\n    return\r\n  }\r\n\r\n  if (value === '' || value == null) {\r\n    const type = typeof el[key]\r\n    if (value === '' && type === 'boolean') {\r\n      // e.g. <select multiple> compiles to { multiple: '' }\r\n      el[key] = true\r\n      return\r\n    } else if (value == null && type === 'string') {\r\n      // e.g. <div :id=\"null\">\r\n      el[key] = ''\r\n      el.removeAttribute(key)\r\n      return\r\n    } else if (type === 'number') {\r\n      // e.g. <img :width=\"null\">\r\n      // the value of some IDL attr must be greater than 0, e.g. input.size = 0 -> error\r\n      try {\r\n        el[key] = 0\r\n      } catch {}\r\n      el.removeAttribute(key)\r\n      return\r\n    }\r\n  }\r\n\r\n  if (\r\n    __COMPAT__ &&\r\n    value === false &&\r\n    compatUtils.isCompatEnabled(\r\n      DeprecationTypes.ATTR_FALSE_VALUE,\r\n      parentComponent\r\n    )\r\n  ) {\r\n    const type = typeof el[key]\r\n    if (type === 'string' || type === 'number') {\r\n      __DEV__ &&\r\n        compatUtils.warnDeprecation(\r\n          DeprecationTypes.ATTR_FALSE_VALUE,\r\n          parentComponent,\r\n          key\r\n        )\r\n      el[key] = type === 'number' ? 0 : ''\r\n      el.removeAttribute(key)\r\n      return\r\n    }\r\n  }\r\n\r\n  // some properties perform value validation and throw\r\n  try {\r\n    el[key] = value\r\n  } catch (e) {\r\n    if (__DEV__) {\r\n      warn(\r\n        `Failed setting prop \"${key}\" on <${el.tagName.toLowerCase()}>: ` +\r\n          `value ${value} is invalid.`,\r\n        e\r\n      )\r\n    }\r\n  }\r\n}\r\n","import { SourceLocation } from './ast'\r\n\r\nexport interface CompilerError extends SyntaxError {\r\n  code: number | string\r\n  loc?: SourceLocation\r\n}\r\n\r\nexport interface CoreCompilerError extends CompilerError {\r\n  code: ErrorCodes\r\n}\r\n\r\nexport function defaultOnError(error: CompilerError) {\r\n  throw error\r\n}\r\n\r\nexport function defaultOnWarn(msg: CompilerError) {\r\n  __DEV__ && console.warn(`[Vue warn] ${msg.message}`)\r\n}\r\n\r\ntype InferCompilerError<T> = T extends ErrorCodes\r\n  ? CoreCompilerError\r\n  : CompilerError\r\n\r\nexport function createCompilerError<T extends number>(\r\n  code: T,\r\n  loc?: SourceLocation,\r\n  messages?: { [code: number]: string },\r\n  additionalMessage?: string\r\n): InferCompilerError<T> {\r\n  const msg =\r\n    __DEV__ || !__BROWSER__\r\n      ? (messages || errorMessages)[code] + (additionalMessage || ``)\r\n      : code\r\n  const error = new SyntaxError(String(msg)) as InferCompilerError<T>\r\n  error.code = code\r\n  error.loc = loc\r\n  return error\r\n}\r\n\r\nexport const enum ErrorCodes {\r\n  // parse errors\r\n  ABRUPT_CLOSING_OF_EMPTY_COMMENT,\r\n  CDATA_IN_HTML_CONTENT,\r\n  DUPLICATE_ATTRIBUTE,\r\n  END_TAG_WITH_ATTRIBUTES,\r\n  END_TAG_WITH_TRAILING_SOLIDUS,\r\n  EOF_BEFORE_TAG_NAME,\r\n  EOF_IN_CDATA,\r\n  EOF_IN_COMMENT,\r\n  EOF_IN_SCRIPT_HTML_COMMENT_LIKE_TEXT,\r\n  EOF_IN_TAG,\r\n  INCORRECTLY_CLOSED_COMMENT,\r\n  INCORRECTLY_OPENED_COMMENT,\r\n  INVALID_FIRST_CHARACTER_OF_TAG_NAME,\r\n  MISSING_ATTRIBUTE_VALUE,\r\n  MISSING_END_TAG_NAME,\r\n  MISSING_WHITESPACE_BETWEEN_ATTRIBUTES,\r\n  NESTED_COMMENT,\r\n  UNEXPECTED_CHARACTER_IN_ATTRIBUTE_NAME,\r\n  UNEXPECTED_CHARACTER_IN_UNQUOTED_ATTRIBUTE_VALUE,\r\n  UNEXPECTED_EQUALS_SIGN_BEFORE_ATTRIBUTE_NAME,\r\n  UNEXPECTED_NULL_CHARACTER,\r\n  UNEXPECTED_QUESTION_MARK_INSTEAD_OF_TAG_NAME,\r\n  UNEXPECTED_SOLIDUS_IN_TAG,\r\n\r\n  // Vue-specific parse errors\r\n  X_INVALID_END_TAG,\r\n  X_MISSING_END_TAG,\r\n  X_MISSING_INTERPOLATION_END,\r\n  X_MISSING_DYNAMIC_DIRECTIVE_ARGUMENT_END,\r\n\r\n  // transform errors\r\n  X_V_IF_NO_EXPRESSION,\r\n  X_V_IF_SAME_KEY,\r\n  X_V_ELSE_NO_ADJACENT_IF,\r\n  X_V_FOR_NO_EXPRESSION,\r\n  X_V_FOR_MALFORMED_EXPRESSION,\r\n  X_V_FOR_TEMPLATE_KEY_PLACEMENT,\r\n  X_V_BIND_NO_EXPRESSION,\r\n  X_V_ON_NO_EXPRESSION,\r\n  X_V_SLOT_UNEXPECTED_DIRECTIVE_ON_SLOT_OUTLET,\r\n  X_V_SLOT_MIXED_SLOT_USAGE,\r\n  X_V_SLOT_DUPLICATE_SLOT_NAMES,\r\n  X_V_SLOT_EXTRANEOUS_DEFAULT_SLOT_CHILDREN,\r\n  X_V_SLOT_MISPLACED,\r\n  X_V_MODEL_NO_EXPRESSION,\r\n  X_V_MODEL_MALFORMED_EXPRESSION,\r\n  X_V_MODEL_ON_SCOPE_VARIABLE,\r\n  X_INVALID_EXPRESSION,\r\n  X_KEEP_ALIVE_INVALID_CHILDREN,\r\n\r\n  // generic errors\r\n  X_PREFIX_ID_NOT_SUPPORTED,\r\n  X_MODULE_MODE_NOT_SUPPORTED,\r\n  X_CACHE_HANDLER_NOT_SUPPORTED,\r\n  X_SCOPE_ID_NOT_SUPPORTED,\r\n\r\n  // Special value for higher-order compilers to pick up the last code\r\n  // to avoid collision of error codes. This should always be kept as the last\r\n  // item.\r\n  __EXTEND_POINT__\r\n}\r\n\r\nexport const errorMessages: Record<ErrorCodes, string> = {\r\n  // parse errors\r\n  [ErrorCodes.ABRUPT_CLOSING_OF_EMPTY_COMMENT]: 'Illegal comment.',\r\n  [ErrorCodes.CDATA_IN_HTML_CONTENT]:\r\n    'CDATA section is allowed only in XML context.',\r\n  [ErrorCodes.DUPLICATE_ATTRIBUTE]: 'Duplicate attribute.',\r\n  [ErrorCodes.END_TAG_WITH_ATTRIBUTES]: 'End tag cannot have attributes.',\r\n  [ErrorCodes.END_TAG_WITH_TRAILING_SOLIDUS]: \"Illegal '/' in tags.\",\r\n  [ErrorCodes.EOF_BEFORE_TAG_NAME]: 'Unexpected EOF in tag.',\r\n  [ErrorCodes.EOF_IN_CDATA]: 'Unexpected EOF in CDATA section.',\r\n  [ErrorCodes.EOF_IN_COMMENT]: 'Unexpected EOF in comment.',\r\n  [ErrorCodes.EOF_IN_SCRIPT_HTML_COMMENT_LIKE_TEXT]:\r\n    'Unexpected EOF in script.',\r\n  [ErrorCodes.EOF_IN_TAG]: 'Unexpected EOF in tag.',\r\n  [ErrorCodes.INCORRECTLY_CLOSED_COMMENT]: 'Incorrectly closed comment.',\r\n  [ErrorCodes.INCORRECTLY_OPENED_COMMENT]: 'Incorrectly opened comment.',\r\n  [ErrorCodes.INVALID_FIRST_CHARACTER_OF_TAG_NAME]:\r\n    \"Illegal tag name. Use '&lt;' to print '<'.\",\r\n  [ErrorCodes.MISSING_ATTRIBUTE_VALUE]: 'Attribute value was expected.',\r\n  [ErrorCodes.MISSING_END_TAG_NAME]: 'End tag name was expected.',\r\n  [ErrorCodes.MISSING_WHITESPACE_BETWEEN_ATTRIBUTES]:\r\n    'Whitespace was expected.',\r\n  [ErrorCodes.NESTED_COMMENT]: \"Unexpected '<!--' in comment.\",\r\n  [ErrorCodes.UNEXPECTED_CHARACTER_IN_ATTRIBUTE_NAME]:\r\n    'Attribute name cannot contain U+0022 (\"), U+0027 (\\'), and U+003C (<).',\r\n  [ErrorCodes.UNEXPECTED_CHARACTER_IN_UNQUOTED_ATTRIBUTE_VALUE]:\r\n    'Unquoted attribute value cannot contain U+0022 (\"), U+0027 (\\'), U+003C (<), U+003D (=), and U+0060 (`).',\r\n  [ErrorCodes.UNEXPECTED_EQUALS_SIGN_BEFORE_ATTRIBUTE_NAME]:\r\n    \"Attribute name cannot start with '='.\",\r\n  [ErrorCodes.UNEXPECTED_QUESTION_MARK_INSTEAD_OF_TAG_NAME]:\r\n    \"'<?' is allowed only in XML context.\",\r\n  [ErrorCodes.UNEXPECTED_NULL_CHARACTER]: `Unexpected null cahracter.`,\r\n  [ErrorCodes.UNEXPECTED_SOLIDUS_IN_TAG]: \"Illegal '/' in tags.\",\r\n\r\n  // Vue-specific parse errors\r\n  [ErrorCodes.X_INVALID_END_TAG]: 'Invalid end tag.',\r\n  [ErrorCodes.X_MISSING_END_TAG]: 'Element is missing end tag.',\r\n  [ErrorCodes.X_MISSING_INTERPOLATION_END]:\r\n    'Interpolation end sign was not found.',\r\n  [ErrorCodes.X_MISSING_DYNAMIC_DIRECTIVE_ARGUMENT_END]:\r\n    'End bracket for dynamic directive argument was not found. ' +\r\n    'Note that dynamic directive argument cannot contain spaces.',\r\n\r\n  // transform errors\r\n  [ErrorCodes.X_V_IF_NO_EXPRESSION]: `v-if/v-else-if is missing expression.`,\r\n  [ErrorCodes.X_V_IF_SAME_KEY]: `v-if/else branches must use unique keys.`,\r\n  [ErrorCodes.X_V_ELSE_NO_ADJACENT_IF]: `v-else/v-else-if has no adjacent v-if.`,\r\n  [ErrorCodes.X_V_FOR_NO_EXPRESSION]: `v-for is missing expression.`,\r\n  [ErrorCodes.X_V_FOR_MALFORMED_EXPRESSION]: `v-for has invalid expression.`,\r\n  [ErrorCodes.X_V_FOR_TEMPLATE_KEY_PLACEMENT]: `<template v-for> key should be placed on the <template> tag.`,\r\n  [ErrorCodes.X_V_BIND_NO_EXPRESSION]: `v-bind is missing expression.`,\r\n  [ErrorCodes.X_V_ON_NO_EXPRESSION]: `v-on is missing expression.`,\r\n  [ErrorCodes.X_V_SLOT_UNEXPECTED_DIRECTIVE_ON_SLOT_OUTLET]: `Unexpected custom directive on <slot> outlet.`,\r\n  [ErrorCodes.X_V_SLOT_MIXED_SLOT_USAGE]:\r\n    `Mixed v-slot usage on both the component and nested <template>.` +\r\n    `When there are multiple named slots, all slots should use <template> ` +\r\n    `syntax to avoid scope ambiguity.`,\r\n  [ErrorCodes.X_V_SLOT_DUPLICATE_SLOT_NAMES]: `Duplicate slot names found. `,\r\n  [ErrorCodes.X_V_SLOT_EXTRANEOUS_DEFAULT_SLOT_CHILDREN]:\r\n    `Extraneous children found when component already has explicitly named ` +\r\n    `default slot. These children will be ignored.`,\r\n  [ErrorCodes.X_V_SLOT_MISPLACED]: `v-slot can only be used on components or <template> tags.`,\r\n  [ErrorCodes.X_V_MODEL_NO_EXPRESSION]: `v-model is missing expression.`,\r\n  [ErrorCodes.X_V_MODEL_MALFORMED_EXPRESSION]: `v-model value must be a valid JavaScript member expression.`,\r\n  [ErrorCodes.X_V_MODEL_ON_SCOPE_VARIABLE]: `v-model cannot be used on v-for or v-slot scope variables because they are not writable.`,\r\n  [ErrorCodes.X_INVALID_EXPRESSION]: `Error parsing JavaScript expression: `,\r\n  [ErrorCodes.X_KEEP_ALIVE_INVALID_CHILDREN]: `<KeepAlive> expects exactly one child component.`,\r\n\r\n  // generic errors\r\n  [ErrorCodes.X_PREFIX_ID_NOT_SUPPORTED]: `\"prefixIdentifiers\" option is not supported in this build of compiler.`,\r\n  [ErrorCodes.X_MODULE_MODE_NOT_SUPPORTED]: `ES module mode is not supported in this build of compiler.`,\r\n  [ErrorCodes.X_CACHE_HANDLER_NOT_SUPPORTED]: `\"cacheHandlers\" option is only supported when the \"prefixIdentifiers\" option is enabled.`,\r\n  [ErrorCodes.X_SCOPE_ID_NOT_SUPPORTED]: `\"scopeId\" option is only supported in module mode.`,\r\n\r\n  // just to fullfill types\r\n  [ErrorCodes.__EXTEND_POINT__]: ``\r\n}\r\n","export const FRAGMENT = Symbol(__DEV__ ? `Fragment` : ``)\r\nexport const TELEPORT = Symbol(__DEV__ ? `Teleport` : ``)\r\nexport const SUSPENSE = Symbol(__DEV__ ? `Suspense` : ``)\r\nexport const KEEP_ALIVE = Symbol(__DEV__ ? `KeepAlive` : ``)\r\nexport const BASE_TRANSITION = Symbol(__DEV__ ? `BaseTransition` : ``)\r\nexport const OPEN_BLOCK = Symbol(__DEV__ ? `openBlock` : ``)\r\nexport const CREATE_BLOCK = Symbol(__DEV__ ? `createBlock` : ``)\r\nexport const CREATE_ELEMENT_BLOCK = Symbol(__DEV__ ? `createElementBlock` : ``)\r\nexport const CREATE_VNODE = Symbol(__DEV__ ? `createVNode` : ``)\r\nexport const CREATE_ELEMENT_VNODE = Symbol(__DEV__ ? `createElementVNode` : ``)\r\nexport const CREATE_COMMENT = Symbol(__DEV__ ? `createCommentVNode` : ``)\r\nexport const CREATE_TEXT = Symbol(__DEV__ ? `createTextVNode` : ``)\r\nexport const CREATE_STATIC = Symbol(__DEV__ ? `createStaticVNode` : ``)\r\nexport const RESOLVE_COMPONENT = Symbol(__DEV__ ? `resolveComponent` : ``)\r\nexport const RESOLVE_DYNAMIC_COMPONENT = Symbol(\r\n  __DEV__ ? `resolveDynamicComponent` : ``\r\n)\r\nexport const RESOLVE_DIRECTIVE = Symbol(__DEV__ ? `resolveDirective` : ``)\r\nexport const RESOLVE_FILTER = Symbol(__DEV__ ? `resolveFilter` : ``)\r\nexport const WITH_DIRECTIVES = Symbol(__DEV__ ? `withDirectives` : ``)\r\nexport const RENDER_LIST = Symbol(__DEV__ ? `renderList` : ``)\r\nexport const RENDER_SLOT = Symbol(__DEV__ ? `renderSlot` : ``)\r\nexport const CREATE_SLOTS = Symbol(__DEV__ ? `createSlots` : ``)\r\nexport const TO_DISPLAY_STRING = Symbol(__DEV__ ? `toDisplayString` : ``)\r\nexport const MERGE_PROPS = Symbol(__DEV__ ? `mergeProps` : ``)\r\nexport const NORMALIZE_CLASS = Symbol(__DEV__ ? `normalizeClass` : ``)\r\nexport const NORMALIZE_STYLE = Symbol(__DEV__ ? `normalizeStyle` : ``)\r\nexport const NORMALIZE_PROPS = Symbol(__DEV__ ? `normalizeProps` : ``)\r\nexport const GUARD_REACTIVE_PROPS = Symbol(__DEV__ ? `guardReactiveProps` : ``)\r\nexport const TO_HANDLERS = Symbol(__DEV__ ? `toHandlers` : ``)\r\nexport const CAMELIZE = Symbol(__DEV__ ? `camelize` : ``)\r\nexport const CAPITALIZE = Symbol(__DEV__ ? `capitalize` : ``)\r\nexport const TO_HANDLER_KEY = Symbol(__DEV__ ? `toHandlerKey` : ``)\r\nexport const SET_BLOCK_TRACKING = Symbol(__DEV__ ? `setBlockTracking` : ``)\r\nexport const PUSH_SCOPE_ID = Symbol(__DEV__ ? `pushScopeId` : ``)\r\nexport const POP_SCOPE_ID = Symbol(__DEV__ ? `popScopeId` : ``)\r\nexport const WITH_SCOPE_ID = Symbol(__DEV__ ? `withScopeId` : ``)\r\nexport const WITH_CTX = Symbol(__DEV__ ? `withCtx` : ``)\r\nexport const UNREF = Symbol(__DEV__ ? `unref` : ``)\r\nexport const IS_REF = Symbol(__DEV__ ? `isRef` : ``)\r\nexport const WITH_MEMO = Symbol(__DEV__ ? `withMemo` : ``)\r\nexport const IS_MEMO_SAME = Symbol(__DEV__ ? `isMemoSame` : ``)\r\n\r\n// Name mapping for runtime helpers that need to be imported from 'vue' in\r\n// generated code. Make sure these are correctly exported in the runtime!\r\n// Using `any` here because TS doesn't allow symbols as index type.\r\nexport const helperNameMap: any = {\r\n  [FRAGMENT]: `Fragment`,\r\n  [TELEPORT]: `Teleport`,\r\n  [SUSPENSE]: `Suspense`,\r\n  [KEEP_ALIVE]: `KeepAlive`,\r\n  [BASE_TRANSITION]: `BaseTransition`,\r\n  [OPEN_BLOCK]: `openBlock`,\r\n  [CREATE_BLOCK]: `createBlock`,\r\n  [CREATE_ELEMENT_BLOCK]: `createElementBlock`,\r\n  [CREATE_VNODE]: `createVNode`,\r\n  [CREATE_ELEMENT_VNODE]: `createElementVNode`,\r\n  [CREATE_COMMENT]: `createCommentVNode`,\r\n  [CREATE_TEXT]: `createTextVNode`,\r\n  [CREATE_STATIC]: `createStaticVNode`,\r\n  [RESOLVE_COMPONENT]: `resolveComponent`,\r\n  [RESOLVE_DYNAMIC_COMPONENT]: `resolveDynamicComponent`,\r\n  [RESOLVE_DIRECTIVE]: `resolveDirective`,\r\n  [RESOLVE_FILTER]: `resolveFilter`,\r\n  [WITH_DIRECTIVES]: `withDirectives`,\r\n  [RENDER_LIST]: `renderList`,\r\n  [RENDER_SLOT]: `renderSlot`,\r\n  [CREATE_SLOTS]: `createSlots`,\r\n  [TO_DISPLAY_STRING]: `toDisplayString`,\r\n  [MERGE_PROPS]: `mergeProps`,\r\n  [NORMALIZE_CLASS]: `normalizeClass`,\r\n  [NORMALIZE_STYLE]: `normalizeStyle`,\r\n  [NORMALIZE_PROPS]: `normalizeProps`,\r\n  [GUARD_REACTIVE_PROPS]: `guardReactiveProps`,\r\n  [TO_HANDLERS]: `toHandlers`,\r\n  [CAMELIZE]: `camelize`,\r\n  [CAPITALIZE]: `capitalize`,\r\n  [TO_HANDLER_KEY]: `toHandlerKey`,\r\n  [SET_BLOCK_TRACKING]: `setBlockTracking`,\r\n  [PUSH_SCOPE_ID]: `pushScopeId`,\r\n  [POP_SCOPE_ID]: `popScopeId`,\r\n  [WITH_SCOPE_ID]: `withScopeId`,\r\n  [WITH_CTX]: `withCtx`,\r\n  [UNREF]: `unref`,\r\n  [IS_REF]: `isRef`,\r\n  [WITH_MEMO]: `withMemo`,\r\n  [IS_MEMO_SAME]: `isMemoSame`\r\n}\r\n\r\nexport function registerRuntimeHelpers(helpers: any) {\r\n  Object.getOwnPropertySymbols(helpers).forEach(s => {\r\n    helperNameMap[s] = helpers[s]\r\n  })\r\n}\r\n","import { isString } from '@vue/shared'\r\nimport { ForParseResult } from './transforms/vFor'\r\nimport {\r\n  RENDER_SLOT,\r\n  CREATE_SLOTS,\r\n  RENDER_LIST,\r\n  OPEN_BLOCK,\r\n  FRAGMENT,\r\n  WITH_DIRECTIVES,\r\n  WITH_MEMO\r\n} from './runtimeHelpers'\r\nimport { PropsExpression } from './transforms/transformElement'\r\nimport { ImportItem, TransformContext } from './transform'\r\nimport { getVNodeBlockHelper, getVNodeHelper } from './utils'\r\n\r\n// Vue template is a platform-agnostic superset of HTML (syntax only).\r\n// More namespaces like SVG and MathML are declared by platform specific\r\n// compilers.\r\nexport type Namespace = number\r\n\r\nexport const enum Namespaces {\r\n  HTML\r\n}\r\n\r\nexport const enum NodeTypes {\r\n  ROOT,\r\n  ELEMENT,\r\n  TEXT,\r\n  COMMENT,\r\n  SIMPLE_EXPRESSION,\r\n  INTERPOLATION,\r\n  ATTRIBUTE,\r\n  DIRECTIVE,\r\n  // containers\r\n  COMPOUND_EXPRESSION,\r\n  IF,\r\n  IF_BRANCH,\r\n  FOR,\r\n  TEXT_CALL,\r\n  // codegen\r\n  VNODE_CALL,\r\n  JS_CALL_EXPRESSION,\r\n  JS_OBJECT_EXPRESSION,\r\n  JS_PROPERTY,\r\n  JS_ARRAY_EXPRESSION,\r\n  JS_FUNCTION_EXPRESSION,\r\n  JS_CONDITIONAL_EXPRESSION,\r\n  JS_CACHE_EXPRESSION,\r\n\r\n  // ssr codegen\r\n  JS_BLOCK_STATEMENT,\r\n  JS_TEMPLATE_LITERAL,\r\n  JS_IF_STATEMENT,\r\n  JS_ASSIGNMENT_EXPRESSION,\r\n  JS_SEQUENCE_EXPRESSION,\r\n  JS_RETURN_STATEMENT\r\n}\r\n\r\nexport const enum ElementTypes {\r\n  ELEMENT,\r\n  COMPONENT,\r\n  SLOT,\r\n  TEMPLATE\r\n}\r\n\r\nexport interface Node {\r\n  type: NodeTypes\r\n  loc: SourceLocation\r\n}\r\n\r\n// The node's range. The `start` is inclusive and `end` is exclusive.\r\n// [start, end)\r\nexport interface SourceLocation {\r\n  start: Position\r\n  end: Position\r\n  source: string\r\n}\r\n\r\nexport interface Position {\r\n  offset: number // from start of file\r\n  line: number\r\n  column: number\r\n}\r\n\r\nexport type ParentNode = RootNode | ElementNode | IfBranchNode | ForNode\r\n\r\nexport type ExpressionNode = SimpleExpressionNode | CompoundExpressionNode\r\n\r\nexport type TemplateChildNode =\r\n  | ElementNode\r\n  | InterpolationNode\r\n  | CompoundExpressionNode\r\n  | TextNode\r\n  | CommentNode\r\n  | IfNode\r\n  | IfBranchNode\r\n  | ForNode\r\n  | TextCallNode\r\n\r\nexport interface RootNode extends Node {\r\n  type: NodeTypes.ROOT\r\n  children: TemplateChildNode[]\r\n  helpers: symbol[]\r\n  components: string[]\r\n  directives: string[]\r\n  hoists: (JSChildNode | null)[]\r\n  imports: ImportItem[]\r\n  cached: number\r\n  temps: number\r\n  ssrHelpers?: symbol[]\r\n  codegenNode?: TemplateChildNode | JSChildNode | BlockStatement\r\n\r\n  // v2 compat only\r\n  filters?: string[]\r\n}\r\n\r\nexport type ElementNode =\r\n  | PlainElementNode\r\n  | ComponentNode\r\n  | SlotOutletNode\r\n  | TemplateNode\r\n\r\nexport interface BaseElementNode extends Node {\r\n  type: NodeTypes.ELEMENT\r\n  ns: Namespace\r\n  tag: string\r\n  tagType: ElementTypes\r\n  isSelfClosing: boolean\r\n  props: Array<AttributeNode | DirectiveNode>\r\n  children: TemplateChildNode[]\r\n}\r\n\r\nexport interface PlainElementNode extends BaseElementNode {\r\n  tagType: ElementTypes.ELEMENT\r\n  codegenNode:\r\n    | VNodeCall\r\n    | SimpleExpressionNode // when hoisted\r\n    | CacheExpression // when cached by v-once\r\n    | MemoExpression // when cached by v-memo\r\n    | undefined\r\n  ssrCodegenNode?: TemplateLiteral\r\n}\r\n\r\nexport interface ComponentNode extends BaseElementNode {\r\n  tagType: ElementTypes.COMPONENT\r\n  codegenNode:\r\n    | VNodeCall\r\n    | CacheExpression // when cached by v-once\r\n    | MemoExpression // when cached by v-memo\r\n    | undefined\r\n  ssrCodegenNode?: CallExpression\r\n}\r\n\r\nexport interface SlotOutletNode extends BaseElementNode {\r\n  tagType: ElementTypes.SLOT\r\n  codegenNode:\r\n    | RenderSlotCall\r\n    | CacheExpression // when cached by v-once\r\n    | undefined\r\n  ssrCodegenNode?: CallExpression\r\n}\r\n\r\nexport interface TemplateNode extends BaseElementNode {\r\n  tagType: ElementTypes.TEMPLATE\r\n  // TemplateNode is a container type that always gets compiled away\r\n  codegenNode: undefined\r\n}\r\n\r\nexport interface TextNode extends Node {\r\n  type: NodeTypes.TEXT\r\n  content: string\r\n}\r\n\r\nexport interface CommentNode extends Node {\r\n  type: NodeTypes.COMMENT\r\n  content: string\r\n}\r\n\r\nexport interface AttributeNode extends Node {\r\n  type: NodeTypes.ATTRIBUTE\r\n  name: string\r\n  value: TextNode | undefined\r\n}\r\n\r\nexport interface DirectiveNode extends Node {\r\n  type: NodeTypes.DIRECTIVE\r\n  name: string\r\n  exp: ExpressionNode | undefined\r\n  arg: ExpressionNode | undefined\r\n  modifiers: string[]\r\n  /**\r\n   * optional property to cache the expression parse result for v-for\r\n   */\r\n  parseResult?: ForParseResult\r\n}\r\n\r\n/**\r\n * Static types have several levels.\r\n * Higher levels implies lower levels. e.g. a node that can be stringified\r\n * can always be hoisted and skipped for patch.\r\n */\r\nexport const enum ConstantTypes {\r\n  NOT_CONSTANT = 0,\r\n  CAN_SKIP_PATCH,\r\n  CAN_HOIST,\r\n  CAN_STRINGIFY\r\n}\r\n\r\nexport interface SimpleExpressionNode extends Node {\r\n  type: NodeTypes.SIMPLE_EXPRESSION\r\n  content: string\r\n  isStatic: boolean\r\n  constType: ConstantTypes\r\n  /**\r\n   * Indicates this is an identifier for a hoist vnode call and points to the\r\n   * hoisted node.\r\n   */\r\n  hoisted?: JSChildNode\r\n  /**\r\n   * an expression parsed as the params of a function will track\r\n   * the identifiers declared inside the function body.\r\n   */\r\n  identifiers?: string[]\r\n  isHandlerKey?: boolean\r\n}\r\n\r\nexport interface InterpolationNode extends Node {\r\n  type: NodeTypes.INTERPOLATION\r\n  content: ExpressionNode\r\n}\r\n\r\nexport interface CompoundExpressionNode extends Node {\r\n  type: NodeTypes.COMPOUND_EXPRESSION\r\n  children: (\r\n    | SimpleExpressionNode\r\n    | CompoundExpressionNode\r\n    | InterpolationNode\r\n    | TextNode\r\n    | string\r\n    | symbol\r\n  )[]\r\n\r\n  /**\r\n   * an expression parsed as the params of a function will track\r\n   * the identifiers declared inside the function body.\r\n   */\r\n  identifiers?: string[]\r\n  isHandlerKey?: boolean\r\n}\r\n\r\nexport interface IfNode extends Node {\r\n  type: NodeTypes.IF\r\n  branches: IfBranchNode[]\r\n  codegenNode?: IfConditionalExpression | CacheExpression // <div v-if v-once>\r\n}\r\n\r\nexport interface IfBranchNode extends Node {\r\n  type: NodeTypes.IF_BRANCH\r\n  condition: ExpressionNode | undefined // else\r\n  children: TemplateChildNode[]\r\n  userKey?: AttributeNode | DirectiveNode\r\n}\r\n\r\nexport interface ForNode extends Node {\r\n  type: NodeTypes.FOR\r\n  source: ExpressionNode\r\n  valueAlias: ExpressionNode | undefined\r\n  keyAlias: ExpressionNode | undefined\r\n  objectIndexAlias: ExpressionNode | undefined\r\n  parseResult: ForParseResult\r\n  children: TemplateChildNode[]\r\n  codegenNode?: ForCodegenNode\r\n}\r\n\r\nexport interface TextCallNode extends Node {\r\n  type: NodeTypes.TEXT_CALL\r\n  content: TextNode | InterpolationNode | CompoundExpressionNode\r\n  codegenNode: CallExpression | SimpleExpressionNode // when hoisted\r\n}\r\n\r\nexport type TemplateTextChildNode =\r\n  | TextNode\r\n  | InterpolationNode\r\n  | CompoundExpressionNode\r\n\r\nexport interface VNodeCall extends Node {\r\n  type: NodeTypes.VNODE_CALL\r\n  tag: string | symbol | CallExpression\r\n  props: PropsExpression | undefined\r\n  children:\r\n    | TemplateChildNode[] // multiple children\r\n    | TemplateTextChildNode // single text child\r\n    | SlotsExpression // component slots\r\n    | ForRenderListExpression // v-for fragment call\r\n    | SimpleExpressionNode // hoisted\r\n    | undefined\r\n  patchFlag: string | undefined\r\n  dynamicProps: string | SimpleExpressionNode | undefined\r\n  directives: DirectiveArguments | undefined\r\n  isBlock: boolean\r\n  disableTracking: boolean\r\n  isComponent: boolean\r\n}\r\n\r\n// JS Node Types ---------------------------------------------------------------\r\n\r\n// We also include a number of JavaScript AST nodes for code generation.\r\n// The AST is an intentionally minimal subset just to meet the exact needs of\r\n// Vue render function generation.\r\n\r\nexport type JSChildNode =\r\n  | VNodeCall\r\n  | CallExpression\r\n  | ObjectExpression\r\n  | ArrayExpression\r\n  | ExpressionNode\r\n  | FunctionExpression\r\n  | ConditionalExpression\r\n  | CacheExpression\r\n  | AssignmentExpression\r\n  | SequenceExpression\r\n\r\nexport interface CallExpression extends Node {\r\n  type: NodeTypes.JS_CALL_EXPRESSION\r\n  callee: string | symbol\r\n  arguments: (\r\n    | string\r\n    | symbol\r\n    | JSChildNode\r\n    | SSRCodegenNode\r\n    | TemplateChildNode\r\n    | TemplateChildNode[]\r\n  )[]\r\n}\r\n\r\nexport interface ObjectExpression extends Node {\r\n  type: NodeTypes.JS_OBJECT_EXPRESSION\r\n  properties: Array<Property>\r\n}\r\n\r\nexport interface Property extends Node {\r\n  type: NodeTypes.JS_PROPERTY\r\n  key: ExpressionNode\r\n  value: JSChildNode\r\n}\r\n\r\nexport interface ArrayExpression extends Node {\r\n  type: NodeTypes.JS_ARRAY_EXPRESSION\r\n  elements: Array<string | Node>\r\n}\r\n\r\nexport interface FunctionExpression extends Node {\r\n  type: NodeTypes.JS_FUNCTION_EXPRESSION\r\n  params: ExpressionNode | string | (ExpressionNode | string)[] | undefined\r\n  returns?: TemplateChildNode | TemplateChildNode[] | JSChildNode\r\n  body?: BlockStatement | IfStatement\r\n  newline: boolean\r\n  /**\r\n   * This flag is for codegen to determine whether it needs to generate the\r\n   * withScopeId() wrapper\r\n   */\r\n  isSlot: boolean\r\n  /**\r\n   * __COMPAT__ only, indicates a slot function that should be excluded from\r\n   * the legacy $scopedSlots instance property.\r\n   */\r\n  isNonScopedSlot?: boolean\r\n}\r\n\r\nexport interface ConditionalExpression extends Node {\r\n  type: NodeTypes.JS_CONDITIONAL_EXPRESSION\r\n  test: JSChildNode\r\n  consequent: JSChildNode\r\n  alternate: JSChildNode\r\n  newline: boolean\r\n}\r\n\r\nexport interface CacheExpression extends Node {\r\n  type: NodeTypes.JS_CACHE_EXPRESSION\r\n  index: number\r\n  value: JSChildNode\r\n  isVNode: boolean\r\n}\r\n\r\nexport interface MemoExpression extends CallExpression {\r\n  callee: typeof WITH_MEMO\r\n  arguments: [ExpressionNode, MemoFactory, string, string]\r\n}\r\n\r\ninterface MemoFactory extends FunctionExpression {\r\n  returns: BlockCodegenNode\r\n}\r\n\r\n// SSR-specific Node Types -----------------------------------------------------\r\n\r\nexport type SSRCodegenNode =\r\n  | BlockStatement\r\n  | TemplateLiteral\r\n  | IfStatement\r\n  | AssignmentExpression\r\n  | ReturnStatement\r\n  | SequenceExpression\r\n\r\nexport interface BlockStatement extends Node {\r\n  type: NodeTypes.JS_BLOCK_STATEMENT\r\n  body: (JSChildNode | IfStatement)[]\r\n}\r\n\r\nexport interface TemplateLiteral extends Node {\r\n  type: NodeTypes.JS_TEMPLATE_LITERAL\r\n  elements: (string | JSChildNode)[]\r\n}\r\n\r\nexport interface IfStatement extends Node {\r\n  type: NodeTypes.JS_IF_STATEMENT\r\n  test: ExpressionNode\r\n  consequent: BlockStatement\r\n  alternate: IfStatement | BlockStatement | ReturnStatement | undefined\r\n}\r\n\r\nexport interface AssignmentExpression extends Node {\r\n  type: NodeTypes.JS_ASSIGNMENT_EXPRESSION\r\n  left: SimpleExpressionNode\r\n  right: JSChildNode\r\n}\r\n\r\nexport interface SequenceExpression extends Node {\r\n  type: NodeTypes.JS_SEQUENCE_EXPRESSION\r\n  expressions: JSChildNode[]\r\n}\r\n\r\nexport interface ReturnStatement extends Node {\r\n  type: NodeTypes.JS_RETURN_STATEMENT\r\n  returns: TemplateChildNode | TemplateChildNode[] | JSChildNode\r\n}\r\n\r\n// Codegen Node Types ----------------------------------------------------------\r\n\r\nexport interface DirectiveArguments extends ArrayExpression {\r\n  elements: DirectiveArgumentNode[]\r\n}\r\n\r\nexport interface DirectiveArgumentNode extends ArrayExpression {\r\n  elements: // dir, exp, arg, modifiers\r\n  | [string]\r\n    | [string, ExpressionNode]\r\n    | [string, ExpressionNode, ExpressionNode]\r\n    | [string, ExpressionNode, ExpressionNode, ObjectExpression]\r\n}\r\n\r\n// renderSlot(...)\r\nexport interface RenderSlotCall extends CallExpression {\r\n  callee: typeof RENDER_SLOT\r\n  arguments: // $slots, name, props, fallback\r\n  | [string, string | ExpressionNode]\r\n    | [string, string | ExpressionNode, PropsExpression]\r\n    | [\r\n        string,\r\n        string | ExpressionNode,\r\n        PropsExpression | '{}',\r\n        TemplateChildNode[]\r\n      ]\r\n}\r\n\r\nexport type SlotsExpression = SlotsObjectExpression | DynamicSlotsExpression\r\n\r\n// { foo: () => [...] }\r\nexport interface SlotsObjectExpression extends ObjectExpression {\r\n  properties: SlotsObjectProperty[]\r\n}\r\n\r\nexport interface SlotsObjectProperty extends Property {\r\n  value: SlotFunctionExpression\r\n}\r\n\r\nexport interface SlotFunctionExpression extends FunctionExpression {\r\n  returns: TemplateChildNode[]\r\n}\r\n\r\n// createSlots({ ... }, [\r\n//    foo ? () => [] : undefined,\r\n//    renderList(list, i => () => [i])\r\n// ])\r\nexport interface DynamicSlotsExpression extends CallExpression {\r\n  callee: typeof CREATE_SLOTS\r\n  arguments: [SlotsObjectExpression, DynamicSlotEntries]\r\n}\r\n\r\nexport interface DynamicSlotEntries extends ArrayExpression {\r\n  elements: (ConditionalDynamicSlotNode | ListDynamicSlotNode)[]\r\n}\r\n\r\nexport interface ConditionalDynamicSlotNode extends ConditionalExpression {\r\n  consequent: DynamicSlotNode\r\n  alternate: DynamicSlotNode | SimpleExpressionNode\r\n}\r\n\r\nexport interface ListDynamicSlotNode extends CallExpression {\r\n  callee: typeof RENDER_LIST\r\n  arguments: [ExpressionNode, ListDynamicSlotIterator]\r\n}\r\n\r\nexport interface ListDynamicSlotIterator extends FunctionExpression {\r\n  returns: DynamicSlotNode\r\n}\r\n\r\nexport interface DynamicSlotNode extends ObjectExpression {\r\n  properties: [Property, DynamicSlotFnProperty]\r\n}\r\n\r\nexport interface DynamicSlotFnProperty extends Property {\r\n  value: SlotFunctionExpression\r\n}\r\n\r\nexport type BlockCodegenNode = VNodeCall | RenderSlotCall\r\n\r\nexport interface IfConditionalExpression extends ConditionalExpression {\r\n  consequent: BlockCodegenNode | MemoExpression\r\n  alternate: BlockCodegenNode | IfConditionalExpression | MemoExpression\r\n}\r\n\r\nexport interface ForCodegenNode extends VNodeCall {\r\n  isBlock: true\r\n  tag: typeof FRAGMENT\r\n  props: undefined\r\n  children: ForRenderListExpression\r\n  patchFlag: string\r\n  disableTracking: boolean\r\n}\r\n\r\nexport interface ForRenderListExpression extends CallExpression {\r\n  callee: typeof RENDER_LIST\r\n  arguments: [ExpressionNode, ForIteratorExpression]\r\n}\r\n\r\nexport interface ForIteratorExpression extends FunctionExpression {\r\n  returns: BlockCodegenNode\r\n}\r\n\r\n// AST Utilities ---------------------------------------------------------------\r\n\r\n// Some expressions, e.g. sequence and conditional expressions, are never\r\n// associated with template nodes, so their source locations are just a stub.\r\n// Container types like CompoundExpression also don't need a real location.\r\nexport const locStub: SourceLocation = {\r\n  source: '',\r\n  start: { line: 1, column: 1, offset: 0 },\r\n  end: { line: 1, column: 1, offset: 0 }\r\n}\r\n\r\nexport function createRoot(\r\n  children: TemplateChildNode[],\r\n  loc = locStub\r\n): RootNode {\r\n  return {\r\n    type: NodeTypes.ROOT,\r\n    children,\r\n    helpers: [],\r\n    components: [],\r\n    directives: [],\r\n    hoists: [],\r\n    imports: [],\r\n    cached: 0,\r\n    temps: 0,\r\n    codegenNode: undefined,\r\n    loc\r\n  }\r\n}\r\n\r\nexport function createVNodeCall(\r\n  context: TransformContext | null,\r\n  tag: VNodeCall['tag'],\r\n  props?: VNodeCall['props'],\r\n  children?: VNodeCall['children'],\r\n  patchFlag?: VNodeCall['patchFlag'],\r\n  dynamicProps?: VNodeCall['dynamicProps'],\r\n  directives?: VNodeCall['directives'],\r\n  isBlock: VNodeCall['isBlock'] = false,\r\n  disableTracking: VNodeCall['disableTracking'] = false,\r\n  isComponent: VNodeCall['isComponent'] = false,\r\n  loc = locStub\r\n): VNodeCall {\r\n  if (context) {\r\n    if (isBlock) {\r\n      context.helper(OPEN_BLOCK)\r\n      context.helper(getVNodeBlockHelper(context.inSSR, isComponent))\r\n    } else {\r\n      context.helper(getVNodeHelper(context.inSSR, isComponent))\r\n    }\r\n    if (directives) {\r\n      context.helper(WITH_DIRECTIVES)\r\n    }\r\n  }\r\n\r\n  return {\r\n    type: NodeTypes.VNODE_CALL,\r\n    tag,\r\n    props,\r\n    children,\r\n    patchFlag,\r\n    dynamicProps,\r\n    directives,\r\n    isBlock,\r\n    disableTracking,\r\n    isComponent,\r\n    loc\r\n  }\r\n}\r\n\r\nexport function createArrayExpression(\r\n  elements: ArrayExpression['elements'],\r\n  loc: SourceLocation = locStub\r\n): ArrayExpression {\r\n  return {\r\n    type: NodeTypes.JS_ARRAY_EXPRESSION,\r\n    loc,\r\n    elements\r\n  }\r\n}\r\n\r\nexport function createObjectExpression(\r\n  properties: ObjectExpression['properties'],\r\n  loc: SourceLocation = locStub\r\n): ObjectExpression {\r\n  return {\r\n    type: NodeTypes.JS_OBJECT_EXPRESSION,\r\n    loc,\r\n    properties\r\n  }\r\n}\r\n\r\nexport function createObjectProperty(\r\n  key: Property['key'] | string,\r\n  value: Property['value']\r\n): Property {\r\n  return {\r\n    type: NodeTypes.JS_PROPERTY,\r\n    loc: locStub,\r\n    key: isString(key) ? createSimpleExpression(key, true) : key,\r\n    value\r\n  }\r\n}\r\n\r\nexport function createSimpleExpression(\r\n  content: SimpleExpressionNode['content'],\r\n  isStatic: SimpleExpressionNode['isStatic'] = false,\r\n  loc: SourceLocation = locStub,\r\n  constType: ConstantTypes = ConstantTypes.NOT_CONSTANT\r\n): SimpleExpressionNode {\r\n  return {\r\n    type: NodeTypes.SIMPLE_EXPRESSION,\r\n    loc,\r\n    content,\r\n    isStatic,\r\n    constType: isStatic ? ConstantTypes.CAN_STRINGIFY : constType\r\n  }\r\n}\r\n\r\nexport function createInterpolation(\r\n  content: InterpolationNode['content'] | string,\r\n  loc: SourceLocation\r\n): InterpolationNode {\r\n  return {\r\n    type: NodeTypes.INTERPOLATION,\r\n    loc,\r\n    content: isString(content)\r\n      ? createSimpleExpression(content, false, loc)\r\n      : content\r\n  }\r\n}\r\n\r\nexport function createCompoundExpression(\r\n  children: CompoundExpressionNode['children'],\r\n  loc: SourceLocation = locStub\r\n): CompoundExpressionNode {\r\n  return {\r\n    type: NodeTypes.COMPOUND_EXPRESSION,\r\n    loc,\r\n    children\r\n  }\r\n}\r\n\r\ntype InferCodegenNodeType<T> = T extends typeof RENDER_SLOT\r\n  ? RenderSlotCall\r\n  : CallExpression\r\n\r\nexport function createCallExpression<T extends CallExpression['callee']>(\r\n  callee: T,\r\n  args: CallExpression['arguments'] = [],\r\n  loc: SourceLocation = locStub\r\n): InferCodegenNodeType<T> {\r\n  return {\r\n    type: NodeTypes.JS_CALL_EXPRESSION,\r\n    loc,\r\n    callee,\r\n    arguments: args\r\n  } as InferCodegenNodeType<T>\r\n}\r\n\r\nexport function createFunctionExpression(\r\n  params: FunctionExpression['params'],\r\n  returns: FunctionExpression['returns'] = undefined,\r\n  newline: boolean = false,\r\n  isSlot: boolean = false,\r\n  loc: SourceLocation = locStub\r\n): FunctionExpression {\r\n  return {\r\n    type: NodeTypes.JS_FUNCTION_EXPRESSION,\r\n    params,\r\n    returns,\r\n    newline,\r\n    isSlot,\r\n    loc\r\n  }\r\n}\r\n\r\nexport function createConditionalExpression(\r\n  test: ConditionalExpression['test'],\r\n  consequent: ConditionalExpression['consequent'],\r\n  alternate: ConditionalExpression['alternate'],\r\n  newline = true\r\n): ConditionalExpression {\r\n  return {\r\n    type: NodeTypes.JS_CONDITIONAL_EXPRESSION,\r\n    test,\r\n    consequent,\r\n    alternate,\r\n    newline,\r\n    loc: locStub\r\n  }\r\n}\r\n\r\nexport function createCacheExpression(\r\n  index: number,\r\n  value: JSChildNode,\r\n  isVNode: boolean = false\r\n): CacheExpression {\r\n  return {\r\n    type: NodeTypes.JS_CACHE_EXPRESSION,\r\n    index,\r\n    value,\r\n    isVNode,\r\n    loc: locStub\r\n  }\r\n}\r\n\r\nexport function createBlockStatement(\r\n  body: BlockStatement['body']\r\n): BlockStatement {\r\n  return {\r\n    type: NodeTypes.JS_BLOCK_STATEMENT,\r\n    body,\r\n    loc: locStub\r\n  }\r\n}\r\n\r\nexport function createTemplateLiteral(\r\n  elements: TemplateLiteral['elements']\r\n): TemplateLiteral {\r\n  return {\r\n    type: NodeTypes.JS_TEMPLATE_LITERAL,\r\n    elements,\r\n    loc: locStub\r\n  }\r\n}\r\n\r\nexport function createIfStatement(\r\n  test: IfStatement['test'],\r\n  consequent: IfStatement['consequent'],\r\n  alternate?: IfStatement['alternate']\r\n): IfStatement {\r\n  return {\r\n    type: NodeTypes.JS_IF_STATEMENT,\r\n    test,\r\n    consequent,\r\n    alternate,\r\n    loc: locStub\r\n  }\r\n}\r\n\r\nexport function createAssignmentExpression(\r\n  left: AssignmentExpression['left'],\r\n  right: AssignmentExpression['right']\r\n): AssignmentExpression {\r\n  return {\r\n    type: NodeTypes.JS_ASSIGNMENT_EXPRESSION,\r\n    left,\r\n    right,\r\n    loc: locStub\r\n  }\r\n}\r\n\r\nexport function createSequenceExpression(\r\n  expressions: SequenceExpression['expressions']\r\n): SequenceExpression {\r\n  return {\r\n    type: NodeTypes.JS_SEQUENCE_EXPRESSION,\r\n    expressions,\r\n    loc: locStub\r\n  }\r\n}\r\n\r\nexport function createReturnStatement(\r\n  returns: ReturnStatement['returns']\r\n): ReturnStatement {\r\n  return {\r\n    type: NodeTypes.JS_RETURN_STATEMENT,\r\n    returns,\r\n    loc: locStub\r\n  }\r\n}\r\n","import {\r\n  SourceLocation,\r\n  Position,\r\n  ElementNode,\r\n  NodeTypes,\r\n  CallExpression,\r\n  createCallExpression,\r\n  DirectiveNode,\r\n  ElementTypes,\r\n  TemplateChildNode,\r\n  RootNode,\r\n  ObjectExpression,\r\n  Property,\r\n  JSChildNode,\r\n  createObjectExpression,\r\n  SlotOutletNode,\r\n  TemplateNode,\r\n  RenderSlotCall,\r\n  ExpressionNode,\r\n  IfBranchNode,\r\n  TextNode,\r\n  InterpolationNode,\r\n  VNodeCall,\r\n  SimpleExpressionNode,\r\n  BlockCodegenNode,\r\n  MemoExpression\r\n} from './ast'\r\nimport { TransformContext } from './transform'\r\nimport {\r\n  MERGE_PROPS,\r\n  TELEPORT,\r\n  SUSPENSE,\r\n  KEEP_ALIVE,\r\n  BASE_TRANSITION,\r\n  TO_HANDLERS,\r\n  NORMALIZE_PROPS,\r\n  GUARD_REACTIVE_PROPS,\r\n  CREATE_BLOCK,\r\n  CREATE_ELEMENT_BLOCK,\r\n  CREATE_VNODE,\r\n  CREATE_ELEMENT_VNODE,\r\n  WITH_MEMO,\r\n  OPEN_BLOCK\r\n} from './runtimeHelpers'\r\nimport { isString, isObject, hyphenate, extend } from '@vue/shared'\r\nimport { PropsExpression } from './transforms/transformElement'\r\n\r\nexport const isStaticExp = (p: JSChildNode): p is SimpleExpressionNode =>\r\n  p.type === NodeTypes.SIMPLE_EXPRESSION && p.isStatic\r\n\r\nexport const isBuiltInType = (tag: string, expected: string): boolean =>\r\n  tag === expected || tag === hyphenate(expected)\r\n\r\nexport function isCoreComponent(tag: string): symbol | void {\r\n  if (isBuiltInType(tag, 'Teleport')) {\r\n    return TELEPORT\r\n  } else if (isBuiltInType(tag, 'Suspense')) {\r\n    return SUSPENSE\r\n  } else if (isBuiltInType(tag, 'KeepAlive')) {\r\n    return KEEP_ALIVE\r\n  } else if (isBuiltInType(tag, 'BaseTransition')) {\r\n    return BASE_TRANSITION\r\n  }\r\n}\r\n\r\nconst nonIdentifierRE = /^\\d|[^\\$\\w]/\r\nexport const isSimpleIdentifier = (name: string): boolean =>\r\n  !nonIdentifierRE.test(name)\r\n\r\nconst enum MemberExpLexState {\r\n  inMemberExp,\r\n  inBrackets,\r\n  inParens,\r\n  inString\r\n}\r\n\r\nconst validFirstIdentCharRE = /[A-Za-z_$\\xA0-\\uFFFF]/\r\nconst validIdentCharRE = /[\\.\\?\\w$\\xA0-\\uFFFF]/\r\nconst whitespaceRE = /\\s+[.[]\\s*|\\s*[.[]\\s+/g\r\n\r\n/**\r\n * Simple lexer to check if an expression is a member expression. This is\r\n * lax and only checks validity at the root level (i.e. does not validate exps\r\n * inside square brackets), but it's ok since these are only used on template\r\n * expressions and false positives are invalid expressions in the first place.\r\n */\r\nexport const isMemberExpression = (path: string): boolean => {\r\n  // remove whitespaces around . or [ first\r\n  path = path.trim().replace(whitespaceRE, s => s.trim())\r\n\r\n  let state = MemberExpLexState.inMemberExp\r\n  let stateStack: MemberExpLexState[] = []\r\n  let currentOpenBracketCount = 0\r\n  let currentOpenParensCount = 0\r\n  let currentStringType: \"'\" | '\"' | '`' | null = null\r\n\r\n  for (let i = 0; i < path.length; i++) {\r\n    const char = path.charAt(i)\r\n    switch (state) {\r\n      case MemberExpLexState.inMemberExp:\r\n        if (char === '[') {\r\n          stateStack.push(state)\r\n          state = MemberExpLexState.inBrackets\r\n          currentOpenBracketCount++\r\n        } else if (char === '(') {\r\n          stateStack.push(state)\r\n          state = MemberExpLexState.inParens\r\n          currentOpenParensCount++\r\n        } else if (\r\n          !(i === 0 ? validFirstIdentCharRE : validIdentCharRE).test(char)\r\n        ) {\r\n          return false\r\n        }\r\n        break\r\n      case MemberExpLexState.inBrackets:\r\n        if (char === `'` || char === `\"` || char === '`') {\r\n          stateStack.push(state)\r\n          state = MemberExpLexState.inString\r\n          currentStringType = char\r\n        } else if (char === `[`) {\r\n          currentOpenBracketCount++\r\n        } else if (char === `]`) {\r\n          if (!--currentOpenBracketCount) {\r\n            state = stateStack.pop()!\r\n          }\r\n        }\r\n        break\r\n      case MemberExpLexState.inParens:\r\n        if (char === `'` || char === `\"` || char === '`') {\r\n          stateStack.push(state)\r\n          state = MemberExpLexState.inString\r\n          currentStringType = char\r\n        } else if (char === `(`) {\r\n          currentOpenParensCount++\r\n        } else if (char === `)`) {\r\n          // if the exp ends as a call then it should not be considered valid\r\n          if (i === path.length - 1) {\r\n            return false\r\n          }\r\n          if (!--currentOpenParensCount) {\r\n            state = stateStack.pop()!\r\n          }\r\n        }\r\n        break\r\n      case MemberExpLexState.inString:\r\n        if (char === currentStringType) {\r\n          state = stateStack.pop()!\r\n          currentStringType = null\r\n        }\r\n        break\r\n    }\r\n  }\r\n  return !currentOpenBracketCount && !currentOpenParensCount\r\n}\r\n\r\nexport function getInnerRange(\r\n  loc: SourceLocation,\r\n  offset: number,\r\n  length?: number\r\n): SourceLocation {\r\n  __TEST__ && assert(offset <= loc.source.length)\r\n  const source = loc.source.substr(offset, length)\r\n  const newLoc: SourceLocation = {\r\n    source,\r\n    start: advancePositionWithClone(loc.start, loc.source, offset),\r\n    end: loc.end\r\n  }\r\n\r\n  if (length != null) {\r\n    __TEST__ && assert(offset + length <= loc.source.length)\r\n    newLoc.end = advancePositionWithClone(\r\n      loc.start,\r\n      loc.source,\r\n      offset + length\r\n    )\r\n  }\r\n\r\n  return newLoc\r\n}\r\n\r\nexport function advancePositionWithClone(\r\n  pos: Position,\r\n  source: string,\r\n  numberOfCharacters: number = source.length\r\n): Position {\r\n  return advancePositionWithMutation(\r\n    extend({}, pos),\r\n    source,\r\n    numberOfCharacters\r\n  )\r\n}\r\n\r\n// advance by mutation without cloning (for performance reasons), since this\r\n// gets called a lot in the parser\r\nexport function advancePositionWithMutation(\r\n  pos: Position,\r\n  source: string,\r\n  numberOfCharacters: number = source.length\r\n): Position {\r\n  let linesCount = 0\r\n  let lastNewLinePos = -1\r\n  for (let i = 0; i < numberOfCharacters; i++) {\r\n    if (source.charCodeAt(i) === 10 /* newline char code */) {\r\n      linesCount++\r\n      lastNewLinePos = i\r\n    }\r\n  }\r\n\r\n  pos.offset += numberOfCharacters\r\n  pos.line += linesCount\r\n  pos.column =\r\n    lastNewLinePos === -1\r\n      ? pos.column + numberOfCharacters\r\n      : numberOfCharacters - lastNewLinePos\r\n\r\n  return pos\r\n}\r\n\r\nexport function assert(condition: boolean, msg?: string) {\r\n  /* istanbul ignore if */\r\n  if (!condition) {\r\n    throw new Error(msg || `unexpected compiler condition`)\r\n  }\r\n}\r\n\r\nexport function findDir(\r\n  node: ElementNode,\r\n  name: string | RegExp,\r\n  allowEmpty: boolean = false\r\n): DirectiveNode | undefined {\r\n  for (let i = 0; i < node.props.length; i++) {\r\n    const p = node.props[i]\r\n    if (\r\n      p.type === NodeTypes.DIRECTIVE &&\r\n      (allowEmpty || p.exp) &&\r\n      (isString(name) ? p.name === name : name.test(p.name))\r\n    ) {\r\n      return p\r\n    }\r\n  }\r\n}\r\n\r\nexport function findProp(\r\n  node: ElementNode,\r\n  name: string,\r\n  dynamicOnly: boolean = false,\r\n  allowEmpty: boolean = false\r\n): ElementNode['props'][0] | undefined {\r\n  for (let i = 0; i < node.props.length; i++) {\r\n    const p = node.props[i]\r\n    if (p.type === NodeTypes.ATTRIBUTE) {\r\n      if (dynamicOnly) continue\r\n      if (p.name === name && (p.value || allowEmpty)) {\r\n        return p\r\n      }\r\n    } else if (\r\n      p.name === 'bind' &&\r\n      (p.exp || allowEmpty) &&\r\n      isBindKey(p.arg, name)\r\n    ) {\r\n      return p\r\n    }\r\n  }\r\n}\r\n\r\nexport function isBindKey(arg: DirectiveNode['arg'], name: string): boolean {\r\n  return !!(arg && isStaticExp(arg) && arg.content === name)\r\n}\r\n\r\nexport function hasDynamicKeyVBind(node: ElementNode): boolean {\r\n  return node.props.some(\r\n    p =>\r\n      p.type === NodeTypes.DIRECTIVE &&\r\n      p.name === 'bind' &&\r\n      (!p.arg || // v-bind=\"obj\"\r\n        p.arg.type !== NodeTypes.SIMPLE_EXPRESSION || // v-bind:[_ctx.foo]\r\n        !p.arg.isStatic) // v-bind:[foo]\r\n  )\r\n}\r\n\r\nexport function isText(\r\n  node: TemplateChildNode\r\n): node is TextNode | InterpolationNode {\r\n  return node.type === NodeTypes.INTERPOLATION || node.type === NodeTypes.TEXT\r\n}\r\n\r\nexport function isVSlot(p: ElementNode['props'][0]): p is DirectiveNode {\r\n  return p.type === NodeTypes.DIRECTIVE && p.name === 'slot'\r\n}\r\n\r\nexport function isTemplateNode(\r\n  node: RootNode | TemplateChildNode\r\n): node is TemplateNode {\r\n  return (\r\n    node.type === NodeTypes.ELEMENT && node.tagType === ElementTypes.TEMPLATE\r\n  )\r\n}\r\n\r\nexport function isSlotOutlet(\r\n  node: RootNode | TemplateChildNode\r\n): node is SlotOutletNode {\r\n  return node.type === NodeTypes.ELEMENT && node.tagType === ElementTypes.SLOT\r\n}\r\n\r\nexport function getVNodeHelper(ssr: boolean, isComponent: boolean) {\r\n  return ssr || isComponent ? CREATE_VNODE : CREATE_ELEMENT_VNODE\r\n}\r\n\r\nexport function getVNodeBlockHelper(ssr: boolean, isComponent: boolean) {\r\n  return ssr || isComponent ? CREATE_BLOCK : CREATE_ELEMENT_BLOCK\r\n}\r\n\r\nconst propsHelperSet = new Set([NORMALIZE_PROPS, GUARD_REACTIVE_PROPS])\r\n\r\nfunction getUnnormalizedProps(\r\n  props: PropsExpression | '{}',\r\n  callPath: CallExpression[] = []\r\n): [PropsExpression | '{}', CallExpression[]] {\r\n  if (\r\n    props &&\r\n    !isString(props) &&\r\n    props.type === NodeTypes.JS_CALL_EXPRESSION\r\n  ) {\r\n    const callee = props.callee\r\n    if (!isString(callee) && propsHelperSet.has(callee)) {\r\n      return getUnnormalizedProps(\r\n        props.arguments[0] as PropsExpression,\r\n        callPath.concat(props)\r\n      )\r\n    }\r\n  }\r\n  return [props, callPath]\r\n}\r\nexport function injectProp(\r\n  node: VNodeCall | RenderSlotCall,\r\n  prop: Property,\r\n  context: TransformContext\r\n) {\r\n  let propsWithInjection: ObjectExpression | CallExpression | undefined\r\n  const originalProps =\r\n    node.type === NodeTypes.VNODE_CALL ? node.props : node.arguments[2]\r\n\r\n  /**\r\n   * 1. mergeProps(...)\r\n   * 2. toHandlers(...)\r\n   * 3. normalizeProps(...)\r\n   * 4. normalizeProps(guardReactiveProps(...))\r\n   *\r\n   * we need to get the real props before normalization\r\n   */\r\n  let props = originalProps\r\n  let callPath: CallExpression[] = []\r\n  let parentCall: CallExpression | undefined\r\n  if (\r\n    props &&\r\n    !isString(props) &&\r\n    props.type === NodeTypes.JS_CALL_EXPRESSION\r\n  ) {\r\n    const ret = getUnnormalizedProps(props)\r\n    props = ret[0]\r\n    callPath = ret[1]\r\n    parentCall = callPath[callPath.length - 1]\r\n  }\r\n\r\n  if (props == null || isString(props)) {\r\n    propsWithInjection = createObjectExpression([prop])\r\n  } else if (props.type === NodeTypes.JS_CALL_EXPRESSION) {\r\n    // merged props... add ours\r\n    // only inject key to object literal if it's the first argument so that\r\n    // if doesn't override user provided keys\r\n    const first = props.arguments[0] as string | JSChildNode\r\n    if (!isString(first) && first.type === NodeTypes.JS_OBJECT_EXPRESSION) {\r\n      first.properties.unshift(prop)\r\n    } else {\r\n      if (props.callee === TO_HANDLERS) {\r\n        // #2366\r\n        propsWithInjection = createCallExpression(context.helper(MERGE_PROPS), [\r\n          createObjectExpression([prop]),\r\n          props\r\n        ])\r\n      } else {\r\n        props.arguments.unshift(createObjectExpression([prop]))\r\n      }\r\n    }\r\n    !propsWithInjection && (propsWithInjection = props)\r\n  } else if (props.type === NodeTypes.JS_OBJECT_EXPRESSION) {\r\n    let alreadyExists = false\r\n    // check existing key to avoid overriding user provided keys\r\n    if (prop.key.type === NodeTypes.SIMPLE_EXPRESSION) {\r\n      const propKeyName = prop.key.content\r\n      alreadyExists = props.properties.some(\r\n        p =>\r\n          p.key.type === NodeTypes.SIMPLE_EXPRESSION &&\r\n          p.key.content === propKeyName\r\n      )\r\n    }\r\n    if (!alreadyExists) {\r\n      props.properties.unshift(prop)\r\n    }\r\n    propsWithInjection = props\r\n  } else {\r\n    // single v-bind with expression, return a merged replacement\r\n    propsWithInjection = createCallExpression(context.helper(MERGE_PROPS), [\r\n      createObjectExpression([prop]),\r\n      props\r\n    ])\r\n    // in the case of nested helper call, e.g. `normalizeProps(guardReactiveProps(props))`,\r\n    // it will be rewritten as `normalizeProps(mergeProps({ key: 0 }, props))`,\r\n    // the `guardReactiveProps` will no longer be needed\r\n    if (parentCall && parentCall.callee === GUARD_REACTIVE_PROPS) {\r\n      parentCall = callPath[callPath.length - 2]\r\n    }\r\n  }\r\n  if (node.type === NodeTypes.VNODE_CALL) {\r\n    if (parentCall) {\r\n      parentCall.arguments[0] = propsWithInjection\r\n    } else {\r\n      node.props = propsWithInjection\r\n    }\r\n  } else {\r\n    if (parentCall) {\r\n      parentCall.arguments[0] = propsWithInjection\r\n    } else {\r\n      node.arguments[2] = propsWithInjection\r\n    }\r\n  }\r\n}\r\n\r\nexport function toValidAssetId(\r\n  name: string,\r\n  type: 'component' | 'directive' | 'filter'\r\n): string {\r\n  return `_${type}_${name.replace(/[^\\w]/g, '_')}`\r\n}\r\n\r\n// Check if a node contains expressions that reference current context scope ids\r\nexport function hasScopeRef(\r\n  node: TemplateChildNode | IfBranchNode | ExpressionNode | undefined,\r\n  ids: TransformContext['identifiers']\r\n): boolean {\r\n  if (!node || Object.keys(ids).length === 0) {\r\n    return false\r\n  }\r\n  switch (node.type) {\r\n    case NodeTypes.ELEMENT:\r\n      for (let i = 0; i < node.props.length; i++) {\r\n        const p = node.props[i]\r\n        if (\r\n          p.type === NodeTypes.DIRECTIVE &&\r\n          (hasScopeRef(p.arg, ids) || hasScopeRef(p.exp, ids))\r\n        ) {\r\n          return true\r\n        }\r\n      }\r\n      return node.children.some(c => hasScopeRef(c, ids))\r\n    case NodeTypes.FOR:\r\n      if (hasScopeRef(node.source, ids)) {\r\n        return true\r\n      }\r\n      return node.children.some(c => hasScopeRef(c, ids))\r\n    case NodeTypes.IF:\r\n      return node.branches.some(b => hasScopeRef(b, ids))\r\n    case NodeTypes.IF_BRANCH:\r\n      if (hasScopeRef(node.condition, ids)) {\r\n        return true\r\n      }\r\n      return node.children.some(c => hasScopeRef(c, ids))\r\n    case NodeTypes.SIMPLE_EXPRESSION:\r\n      return (\r\n        !node.isStatic &&\r\n        isSimpleIdentifier(node.content) &&\r\n        !!ids[node.content]\r\n      )\r\n    case NodeTypes.COMPOUND_EXPRESSION:\r\n      return node.children.some(c => isObject(c) && hasScopeRef(c, ids))\r\n    case NodeTypes.INTERPOLATION:\r\n    case NodeTypes.TEXT_CALL:\r\n      return hasScopeRef(node.content, ids)\r\n    case NodeTypes.TEXT:\r\n    case NodeTypes.COMMENT:\r\n      return false\r\n    default:\r\n      if (__DEV__) {\r\n        const exhaustiveCheck: never = node\r\n        exhaustiveCheck\r\n      }\r\n      return false\r\n  }\r\n}\r\n\r\nexport function getMemoedVNodeCall(node: BlockCodegenNode | MemoExpression) {\r\n  if (node.type === NodeTypes.JS_CALL_EXPRESSION && node.callee === WITH_MEMO) {\r\n    return node.arguments[1].returns as VNodeCall\r\n  } else {\r\n    return node\r\n  }\r\n}\r\n\r\nexport function makeBlock(\r\n  node: VNodeCall,\r\n  { helper, removeHelper, inSSR }: TransformContext\r\n) {\r\n  if (!node.isBlock) {\r\n    node.isBlock = true\r\n    removeHelper(getVNodeHelper(inSSR, node.isComponent))\r\n    helper(OPEN_BLOCK)\r\n    helper(getVNodeBlockHelper(inSSR, node.isComponent))\r\n  }\r\n}\r\n","import { ErrorHandlingOptions, ParserOptions } from './options'\r\nimport { NO, isArray, makeMap, extend } from '@vue/shared'\r\nimport {\r\n  ErrorCodes,\r\n  createCompilerError,\r\n  defaultOnError,\r\n  defaultOnWarn\r\n} from './errors'\r\nimport {\r\n  assert,\r\n  advancePositionWithMutation,\r\n  advancePositionWithClone,\r\n  isCoreComponent,\r\n  isBindKey\r\n} from './utils'\r\nimport {\r\n  Namespaces,\r\n  AttributeNode,\r\n  CommentNode,\r\n  DirectiveNode,\r\n  ElementNode,\r\n  ElementTypes,\r\n  ExpressionNode,\r\n  NodeTypes,\r\n  Position,\r\n  RootNode,\r\n  SourceLocation,\r\n  TextNode,\r\n  TemplateChildNode,\r\n  InterpolationNode,\r\n  createRoot,\r\n  ConstantTypes\r\n} from './ast'\r\nimport {\r\n  checkCompatEnabled,\r\n  CompilerCompatOptions,\r\n  CompilerDeprecationTypes,\r\n  isCompatEnabled,\r\n  warnDeprecation\r\n} from './compat/compatConfig'\r\n\r\ntype OptionalOptions =\r\n  | 'whitespace'\r\n  | 'isNativeTag'\r\n  | 'isBuiltInComponent'\r\n  | keyof CompilerCompatOptions\r\ntype MergedParserOptions = Omit<Required<ParserOptions>, OptionalOptions> &\r\n  Pick<ParserOptions, OptionalOptions>\r\ntype AttributeValue =\r\n  | {\r\n      content: string\r\n      isQuoted: boolean\r\n      loc: SourceLocation\r\n    }\r\n  | undefined\r\n\r\n// The default decoder only provides escapes for characters reserved as part of\r\n// the template syntax, and is only used if the custom renderer did not provide\r\n// a platform-specific decoder.\r\nconst decodeRE = /&(gt|lt|amp|apos|quot);/g\r\nconst decodeMap: Record<string, string> = {\r\n  gt: '>',\r\n  lt: '<',\r\n  amp: '&',\r\n  apos: \"'\",\r\n  quot: '\"'\r\n}\r\n\r\nexport const defaultParserOptions: MergedParserOptions = {\r\n  delimiters: [`{{`, `}}`],\r\n  getNamespace: () => Namespaces.HTML,\r\n  getTextMode: () => TextModes.DATA,\r\n  isVoidTag: NO,\r\n  isPreTag: NO,\r\n  isCustomElement: NO,\r\n  decodeEntities: (rawText: string): string =>\r\n    rawText.replace(decodeRE, (_, p1) => decodeMap[p1]),\r\n  onError: defaultOnError,\r\n  onWarn: defaultOnWarn,\r\n  comments: __DEV__\r\n}\r\n\r\nexport const enum TextModes {\r\n  //          | Elements | Entities | End sign              | Inside of\r\n  DATA, //    | ✔        | ✔        | End tags of ancestors |\r\n  RCDATA, //  | ✘        | ✔        | End tag of the parent | <textarea>\r\n  RAWTEXT, // | ✘        | ✘        | End tag of the parent | <style>,<script>\r\n  CDATA,\r\n  ATTRIBUTE_VALUE\r\n}\r\n\r\nexport interface ParserContext {\r\n  options: MergedParserOptions\r\n  readonly originalSource: string\r\n  source: string\r\n  offset: number\r\n  line: number\r\n  column: number\r\n  inPre: boolean // HTML <pre> tag, preserve whitespaces\r\n  inVPre: boolean // v-pre, do not process directives and interpolations\r\n  onWarn: NonNullable<ErrorHandlingOptions['onWarn']>\r\n}\r\n\r\nexport function baseParse(\r\n  content: string,\r\n  options: ParserOptions = {}\r\n): RootNode {\r\n  const context = createParserContext(content, options)\r\n  const start = getCursor(context)\r\n  return createRoot(\r\n    parseChildren(context, TextModes.DATA, []),\r\n    getSelection(context, start)\r\n  )\r\n}\r\n\r\nfunction createParserContext(\r\n  content: string,\r\n  rawOptions: ParserOptions\r\n): ParserContext {\r\n  const options = extend({}, defaultParserOptions)\r\n\r\n  let key: keyof ParserOptions\r\n  for (key in rawOptions) {\r\n    // @ts-ignore\r\n    options[key] =\r\n      rawOptions[key] === undefined\r\n        ? defaultParserOptions[key]\r\n        : rawOptions[key]\r\n  }\r\n  return {\r\n    options,\r\n    column: 1,\r\n    line: 1,\r\n    offset: 0,\r\n    originalSource: content,\r\n    source: content,\r\n    inPre: false,\r\n    inVPre: false,\r\n    onWarn: options.onWarn\r\n  }\r\n}\r\n\r\nfunction parseChildren(\r\n  context: ParserContext,\r\n  mode: TextModes,\r\n  ancestors: ElementNode[]\r\n): TemplateChildNode[] {\r\n  const parent = last(ancestors)\r\n  const ns = parent ? parent.ns : Namespaces.HTML\r\n  const nodes: TemplateChildNode[] = []\r\n\r\n  while (!isEnd(context, mode, ancestors)) {\r\n    __TEST__ && assert(context.source.length > 0)\r\n    const s = context.source\r\n    let node: TemplateChildNode | TemplateChildNode[] | undefined = undefined\r\n\r\n    if (mode === TextModes.DATA || mode === TextModes.RCDATA) {\r\n      if (!context.inVPre && startsWith(s, context.options.delimiters[0])) {\r\n        // '{{'\r\n        node = parseInterpolation(context, mode)\r\n      } else if (mode === TextModes.DATA && s[0] === '<') {\r\n        // https://html.spec.whatwg.org/multipage/parsing.html#tag-open-state\r\n        if (s.length === 1) {\r\n          emitError(context, ErrorCodes.EOF_BEFORE_TAG_NAME, 1)\r\n        } else if (s[1] === '!') {\r\n          // https://html.spec.whatwg.org/multipage/parsing.html#markup-declaration-open-state\r\n          if (startsWith(s, '<!--')) {\r\n            node = parseComment(context)\r\n          } else if (startsWith(s, '<!DOCTYPE')) {\r\n            // Ignore DOCTYPE by a limitation.\r\n            node = parseBogusComment(context)\r\n          } else if (startsWith(s, '<![CDATA[')) {\r\n            if (ns !== Namespaces.HTML) {\r\n              node = parseCDATA(context, ancestors)\r\n            } else {\r\n              emitError(context, ErrorCodes.CDATA_IN_HTML_CONTENT)\r\n              node = parseBogusComment(context)\r\n            }\r\n          } else {\r\n            emitError(context, ErrorCodes.INCORRECTLY_OPENED_COMMENT)\r\n            node = parseBogusComment(context)\r\n          }\r\n        } else if (s[1] === '/') {\r\n          // https://html.spec.whatwg.org/multipage/parsing.html#end-tag-open-state\r\n          if (s.length === 2) {\r\n            emitError(context, ErrorCodes.EOF_BEFORE_TAG_NAME, 2)\r\n          } else if (s[2] === '>') {\r\n            emitError(context, ErrorCodes.MISSING_END_TAG_NAME, 2)\r\n            advanceBy(context, 3)\r\n            continue\r\n          } else if (/[a-z]/i.test(s[2])) {\r\n            emitError(context, ErrorCodes.X_INVALID_END_TAG)\r\n            parseTag(context, TagType.End, parent)\r\n            continue\r\n          } else {\r\n            emitError(\r\n              context,\r\n              ErrorCodes.INVALID_FIRST_CHARACTER_OF_TAG_NAME,\r\n              2\r\n            )\r\n            node = parseBogusComment(context)\r\n          }\r\n        } else if (/[a-z]/i.test(s[1])) {\r\n          node = parseElement(context, ancestors)\r\n\r\n          // 2.x <template> with no directive compat\r\n          if (\r\n            __COMPAT__ &&\r\n            isCompatEnabled(\r\n              CompilerDeprecationTypes.COMPILER_NATIVE_TEMPLATE,\r\n              context\r\n            ) &&\r\n            node &&\r\n            node.tag === 'template' &&\r\n            !node.props.some(\r\n              p =>\r\n                p.type === NodeTypes.DIRECTIVE &&\r\n                isSpecialTemplateDirective(p.name)\r\n            )\r\n          ) {\r\n            __DEV__ &&\r\n              warnDeprecation(\r\n                CompilerDeprecationTypes.COMPILER_NATIVE_TEMPLATE,\r\n                context,\r\n                node.loc\r\n              )\r\n            node = node.children\r\n          }\r\n        } else if (s[1] === '?') {\r\n          emitError(\r\n            context,\r\n            ErrorCodes.UNEXPECTED_QUESTION_MARK_INSTEAD_OF_TAG_NAME,\r\n            1\r\n          )\r\n          node = parseBogusComment(context)\r\n        } else {\r\n          emitError(context, ErrorCodes.INVALID_FIRST_CHARACTER_OF_TAG_NAME, 1)\r\n        }\r\n      }\r\n    }\r\n    if (!node) {\r\n      node = parseText(context, mode)\r\n    }\r\n\r\n    if (isArray(node)) {\r\n      for (let i = 0; i < node.length; i++) {\r\n        pushNode(nodes, node[i])\r\n      }\r\n    } else {\r\n      pushNode(nodes, node)\r\n    }\r\n  }\r\n\r\n  // Whitespace handling strategy like v2\r\n  let removedWhitespace = false\r\n  if (mode !== TextModes.RAWTEXT && mode !== TextModes.RCDATA) {\r\n    const shouldCondense = context.options.whitespace !== 'preserve'\r\n    for (let i = 0; i < nodes.length; i++) {\r\n      const node = nodes[i]\r\n      if (!context.inPre && node.type === NodeTypes.TEXT) {\r\n        if (!/[^\\t\\r\\n\\f ]/.test(node.content)) {\r\n          const prev = nodes[i - 1]\r\n          const next = nodes[i + 1]\r\n          // Remove if:\r\n          // - the whitespace is the first or last node, or:\r\n          // - (condense mode) the whitespace is adjacent to a comment, or:\r\n          // - (condense mode) the whitespace is between two elements AND contains newline\r\n          if (\r\n            !prev ||\r\n            !next ||\r\n            (shouldCondense &&\r\n              (prev.type === NodeTypes.COMMENT ||\r\n                next.type === NodeTypes.COMMENT ||\r\n                (prev.type === NodeTypes.ELEMENT &&\r\n                  next.type === NodeTypes.ELEMENT &&\r\n                  /[\\r\\n]/.test(node.content))))\r\n          ) {\r\n            removedWhitespace = true\r\n            nodes[i] = null as any\r\n          } else {\r\n            // Otherwise, the whitespace is condensed into a single space\r\n            node.content = ' '\r\n          }\r\n        } else if (shouldCondense) {\r\n          // in condense mode, consecutive whitespaces in text are condensed\r\n          // down to a single space.\r\n          node.content = node.content.replace(/[\\t\\r\\n\\f ]+/g, ' ')\r\n        }\r\n      }\r\n      // Remove comment nodes if desired by configuration.\r\n      else if (node.type === NodeTypes.COMMENT && !context.options.comments) {\r\n        removedWhitespace = true\r\n        nodes[i] = null as any\r\n      }\r\n    }\r\n    if (context.inPre && parent && context.options.isPreTag(parent.tag)) {\r\n      // remove leading newline per html spec\r\n      // https://html.spec.whatwg.org/multipage/grouping-content.html#the-pre-element\r\n      const first = nodes[0]\r\n      if (first && first.type === NodeTypes.TEXT) {\r\n        first.content = first.content.replace(/^\\r?\\n/, '')\r\n      }\r\n    }\r\n  }\r\n\r\n  return removedWhitespace ? nodes.filter(Boolean) : nodes\r\n}\r\n\r\nfunction pushNode(nodes: TemplateChildNode[], node: TemplateChildNode): void {\r\n  if (node.type === NodeTypes.TEXT) {\r\n    const prev = last(nodes)\r\n    // Merge if both this and the previous node are text and those are\r\n    // consecutive. This happens for cases like \"a < b\".\r\n    if (\r\n      prev &&\r\n      prev.type === NodeTypes.TEXT &&\r\n      prev.loc.end.offset === node.loc.start.offset\r\n    ) {\r\n      prev.content += node.content\r\n      prev.loc.end = node.loc.end\r\n      prev.loc.source += node.loc.source\r\n      return\r\n    }\r\n  }\r\n\r\n  nodes.push(node)\r\n}\r\n\r\nfunction parseCDATA(\r\n  context: ParserContext,\r\n  ancestors: ElementNode[]\r\n): TemplateChildNode[] {\r\n  __TEST__ &&\r\n    assert(last(ancestors) == null || last(ancestors)!.ns !== Namespaces.HTML)\r\n  __TEST__ && assert(startsWith(context.source, '<![CDATA['))\r\n\r\n  advanceBy(context, 9)\r\n  const nodes = parseChildren(context, TextModes.CDATA, ancestors)\r\n  if (context.source.length === 0) {\r\n    emitError(context, ErrorCodes.EOF_IN_CDATA)\r\n  } else {\r\n    __TEST__ && assert(startsWith(context.source, ']]>'))\r\n    advanceBy(context, 3)\r\n  }\r\n\r\n  return nodes\r\n}\r\n\r\nfunction parseComment(context: ParserContext): CommentNode {\r\n  __TEST__ && assert(startsWith(context.source, '<!--'))\r\n\r\n  const start = getCursor(context)\r\n  let content: string\r\n\r\n  // Regular comment.\r\n  const match = /--(\\!)?>/.exec(context.source)\r\n  if (!match) {\r\n    content = context.source.slice(4)\r\n    advanceBy(context, context.source.length)\r\n    emitError(context, ErrorCodes.EOF_IN_COMMENT)\r\n  } else {\r\n    if (match.index <= 3) {\r\n      emitError(context, ErrorCodes.ABRUPT_CLOSING_OF_EMPTY_COMMENT)\r\n    }\r\n    if (match[1]) {\r\n      emitError(context, ErrorCodes.INCORRECTLY_CLOSED_COMMENT)\r\n    }\r\n    content = context.source.slice(4, match.index)\r\n\r\n    // Advancing with reporting nested comments.\r\n    const s = context.source.slice(0, match.index)\r\n    let prevIndex = 1,\r\n      nestedIndex = 0\r\n    while ((nestedIndex = s.indexOf('<!--', prevIndex)) !== -1) {\r\n      advanceBy(context, nestedIndex - prevIndex + 1)\r\n      if (nestedIndex + 4 < s.length) {\r\n        emitError(context, ErrorCodes.NESTED_COMMENT)\r\n      }\r\n      prevIndex = nestedIndex + 1\r\n    }\r\n    advanceBy(context, match.index + match[0].length - prevIndex + 1)\r\n  }\r\n\r\n  return {\r\n    type: NodeTypes.COMMENT,\r\n    content,\r\n    loc: getSelection(context, start)\r\n  }\r\n}\r\n\r\nfunction parseBogusComment(context: ParserContext): CommentNode | undefined {\r\n  __TEST__ && assert(/^<(?:[\\!\\?]|\\/[^a-z>])/i.test(context.source))\r\n\r\n  const start = getCursor(context)\r\n  const contentStart = context.source[1] === '?' ? 1 : 2\r\n  let content: string\r\n\r\n  const closeIndex = context.source.indexOf('>')\r\n  if (closeIndex === -1) {\r\n    content = context.source.slice(contentStart)\r\n    advanceBy(context, context.source.length)\r\n  } else {\r\n    content = context.source.slice(contentStart, closeIndex)\r\n    advanceBy(context, closeIndex + 1)\r\n  }\r\n\r\n  return {\r\n    type: NodeTypes.COMMENT,\r\n    content,\r\n    loc: getSelection(context, start)\r\n  }\r\n}\r\n\r\nfunction parseElement(\r\n  context: ParserContext,\r\n  ancestors: ElementNode[]\r\n): ElementNode | undefined {\r\n  __TEST__ && assert(/^<[a-z]/i.test(context.source))\r\n\r\n  // Start tag.\r\n  const wasInPre = context.inPre\r\n  const wasInVPre = context.inVPre\r\n  const parent = last(ancestors)\r\n  const element = parseTag(context, TagType.Start, parent)\r\n  const isPreBoundary = context.inPre && !wasInPre\r\n  const isVPreBoundary = context.inVPre && !wasInVPre\r\n\r\n  if (element.isSelfClosing || context.options.isVoidTag(element.tag)) {\r\n    // #4030 self-closing <pre> tag\r\n    if (isPreBoundary) {\r\n      context.inPre = false\r\n    }\r\n    if (isVPreBoundary) {\r\n      context.inVPre = false\r\n    }\r\n    return element\r\n  }\r\n\r\n  // Children.\r\n  ancestors.push(element)\r\n  const mode = context.options.getTextMode(element, parent)\r\n  const children = parseChildren(context, mode, ancestors)\r\n  ancestors.pop()\r\n\r\n  // 2.x inline-template compat\r\n  if (__COMPAT__) {\r\n    const inlineTemplateProp = element.props.find(\r\n      p => p.type === NodeTypes.ATTRIBUTE && p.name === 'inline-template'\r\n    ) as AttributeNode\r\n    if (\r\n      inlineTemplateProp &&\r\n      checkCompatEnabled(\r\n        CompilerDeprecationTypes.COMPILER_INLINE_TEMPLATE,\r\n        context,\r\n        inlineTemplateProp.loc\r\n      )\r\n    ) {\r\n      const loc = getSelection(context, element.loc.end)\r\n      inlineTemplateProp.value = {\r\n        type: NodeTypes.TEXT,\r\n        content: loc.source,\r\n        loc\r\n      }\r\n    }\r\n  }\r\n\r\n  element.children = children\r\n\r\n  // End tag.\r\n  if (startsWithEndTagOpen(context.source, element.tag)) {\r\n    parseTag(context, TagType.End, parent)\r\n  } else {\r\n    emitError(context, ErrorCodes.X_MISSING_END_TAG, 0, element.loc.start)\r\n    if (context.source.length === 0 && element.tag.toLowerCase() === 'script') {\r\n      const first = children[0]\r\n      if (first && startsWith(first.loc.source, '<!--')) {\r\n        emitError(context, ErrorCodes.EOF_IN_SCRIPT_HTML_COMMENT_LIKE_TEXT)\r\n      }\r\n    }\r\n  }\r\n\r\n  element.loc = getSelection(context, element.loc.start)\r\n\r\n  if (isPreBoundary) {\r\n    context.inPre = false\r\n  }\r\n  if (isVPreBoundary) {\r\n    context.inVPre = false\r\n  }\r\n  return element\r\n}\r\n\r\nconst enum TagType {\r\n  Start,\r\n  End\r\n}\r\n\r\nconst isSpecialTemplateDirective = /*#__PURE__*/ makeMap(\r\n  `if,else,else-if,for,slot`\r\n)\r\n\r\n/**\r\n * Parse a tag (E.g. `<div id=a>`) with that type (start tag or end tag).\r\n */\r\nfunction parseTag(\r\n  context: ParserContext,\r\n  type: TagType.Start,\r\n  parent: ElementNode | undefined\r\n): ElementNode\r\nfunction parseTag(\r\n  context: ParserContext,\r\n  type: TagType.End,\r\n  parent: ElementNode | undefined\r\n): void\r\nfunction parseTag(\r\n  context: ParserContext,\r\n  type: TagType,\r\n  parent: ElementNode | undefined\r\n): ElementNode | undefined {\r\n  __TEST__ && assert(/^<\\/?[a-z]/i.test(context.source))\r\n  __TEST__ &&\r\n    assert(\r\n      type === (startsWith(context.source, '</') ? TagType.End : TagType.Start)\r\n    )\r\n\r\n  // Tag open.\r\n  const start = getCursor(context)\r\n  const match = /^<\\/?([a-z][^\\t\\r\\n\\f />]*)/i.exec(context.source)!\r\n  const tag = match[1]\r\n  const ns = context.options.getNamespace(tag, parent)\r\n\r\n  advanceBy(context, match[0].length)\r\n  advanceSpaces(context)\r\n\r\n  // save current state in case we need to re-parse attributes with v-pre\r\n  const cursor = getCursor(context)\r\n  const currentSource = context.source\r\n\r\n  // check <pre> tag\r\n  if (context.options.isPreTag(tag)) {\r\n    context.inPre = true\r\n  }\r\n\r\n  // Attributes.\r\n  let props = parseAttributes(context, type)\r\n\r\n  // check v-pre\r\n  if (\r\n    type === TagType.Start &&\r\n    !context.inVPre &&\r\n    props.some(p => p.type === NodeTypes.DIRECTIVE && p.name === 'pre')\r\n  ) {\r\n    context.inVPre = true\r\n    // reset context\r\n    extend(context, cursor)\r\n    context.source = currentSource\r\n    // re-parse attrs and filter out v-pre itself\r\n    props = parseAttributes(context, type).filter(p => p.name !== 'v-pre')\r\n  }\r\n\r\n  // Tag close.\r\n  let isSelfClosing = false\r\n  if (context.source.length === 0) {\r\n    emitError(context, ErrorCodes.EOF_IN_TAG)\r\n  } else {\r\n    isSelfClosing = startsWith(context.source, '/>')\r\n    if (type === TagType.End && isSelfClosing) {\r\n      emitError(context, ErrorCodes.END_TAG_WITH_TRAILING_SOLIDUS)\r\n    }\r\n    advanceBy(context, isSelfClosing ? 2 : 1)\r\n  }\r\n\r\n  if (type === TagType.End) {\r\n    return\r\n  }\r\n\r\n  // 2.x deprecation checks\r\n  if (\r\n    __COMPAT__ &&\r\n    __DEV__ &&\r\n    isCompatEnabled(\r\n      CompilerDeprecationTypes.COMPILER_V_IF_V_FOR_PRECEDENCE,\r\n      context\r\n    )\r\n  ) {\r\n    let hasIf = false\r\n    let hasFor = false\r\n    for (let i = 0; i < props.length; i++) {\r\n      const p = props[i]\r\n      if (p.type === NodeTypes.DIRECTIVE) {\r\n        if (p.name === 'if') {\r\n          hasIf = true\r\n        } else if (p.name === 'for') {\r\n          hasFor = true\r\n        }\r\n      }\r\n      if (hasIf && hasFor) {\r\n        warnDeprecation(\r\n          CompilerDeprecationTypes.COMPILER_V_IF_V_FOR_PRECEDENCE,\r\n          context,\r\n          getSelection(context, start)\r\n        )\r\n      }\r\n    }\r\n  }\r\n\r\n  let tagType = ElementTypes.ELEMENT\r\n  if (!context.inVPre) {\r\n    if (tag === 'slot') {\r\n      tagType = ElementTypes.SLOT\r\n    } else if (tag === 'template') {\r\n      if (\r\n        props.some(\r\n          p =>\r\n            p.type === NodeTypes.DIRECTIVE && isSpecialTemplateDirective(p.name)\r\n        )\r\n      ) {\r\n        tagType = ElementTypes.TEMPLATE\r\n      }\r\n    } else if (isComponent(tag, props, context)) {\r\n      tagType = ElementTypes.COMPONENT\r\n    }\r\n  }\r\n\r\n  return {\r\n    type: NodeTypes.ELEMENT,\r\n    ns,\r\n    tag,\r\n    tagType,\r\n    props,\r\n    isSelfClosing,\r\n    children: [],\r\n    loc: getSelection(context, start),\r\n    codegenNode: undefined // to be created during transform phase\r\n  }\r\n}\r\n\r\nfunction isComponent(\r\n  tag: string,\r\n  props: (AttributeNode | DirectiveNode)[],\r\n  context: ParserContext\r\n) {\r\n  const options = context.options\r\n  if (options.isCustomElement(tag)) {\r\n    return false\r\n  }\r\n  if (\r\n    tag === 'component' ||\r\n    /^[A-Z]/.test(tag) ||\r\n    isCoreComponent(tag) ||\r\n    (options.isBuiltInComponent && options.isBuiltInComponent(tag)) ||\r\n    (options.isNativeTag && !options.isNativeTag(tag))\r\n  ) {\r\n    return true\r\n  }\r\n  // at this point the tag should be a native tag, but check for potential \"is\"\r\n  // casting\r\n  for (let i = 0; i < props.length; i++) {\r\n    const p = props[i]\r\n    if (p.type === NodeTypes.ATTRIBUTE) {\r\n      if (p.name === 'is' && p.value) {\r\n        if (p.value.content.startsWith('vue:')) {\r\n          return true\r\n        } else if (\r\n          __COMPAT__ &&\r\n          checkCompatEnabled(\r\n            CompilerDeprecationTypes.COMPILER_IS_ON_ELEMENT,\r\n            context,\r\n            p.loc\r\n          )\r\n        ) {\r\n          return true\r\n        }\r\n      }\r\n    } else {\r\n      // directive\r\n      // v-is (TODO Deprecate)\r\n      if (p.name === 'is') {\r\n        return true\r\n      } else if (\r\n        // :is on plain element - only treat as component in compat mode\r\n        p.name === 'bind' &&\r\n        isBindKey(p.arg, 'is') &&\r\n        __COMPAT__ &&\r\n        checkCompatEnabled(\r\n          CompilerDeprecationTypes.COMPILER_IS_ON_ELEMENT,\r\n          context,\r\n          p.loc\r\n        )\r\n      ) {\r\n        return true\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nfunction parseAttributes(\r\n  context: ParserContext,\r\n  type: TagType\r\n): (AttributeNode | DirectiveNode)[] {\r\n  const props = []\r\n  const attributeNames = new Set<string>()\r\n  while (\r\n    context.source.length > 0 &&\r\n    !startsWith(context.source, '>') &&\r\n    !startsWith(context.source, '/>')\r\n  ) {\r\n    if (startsWith(context.source, '/')) {\r\n      emitError(context, ErrorCodes.UNEXPECTED_SOLIDUS_IN_TAG)\r\n      advanceBy(context, 1)\r\n      advanceSpaces(context)\r\n      continue\r\n    }\r\n    if (type === TagType.End) {\r\n      emitError(context, ErrorCodes.END_TAG_WITH_ATTRIBUTES)\r\n    }\r\n\r\n    const attr = parseAttribute(context, attributeNames)\r\n    if (type === TagType.Start) {\r\n      props.push(attr)\r\n    }\r\n\r\n    if (/^[^\\t\\r\\n\\f />]/.test(context.source)) {\r\n      emitError(context, ErrorCodes.MISSING_WHITESPACE_BETWEEN_ATTRIBUTES)\r\n    }\r\n    advanceSpaces(context)\r\n  }\r\n  return props\r\n}\r\n\r\nfunction parseAttribute(\r\n  context: ParserContext,\r\n  nameSet: Set<string>\r\n): AttributeNode | DirectiveNode {\r\n  __TEST__ && assert(/^[^\\t\\r\\n\\f />]/.test(context.source))\r\n\r\n  // Name.\r\n  const start = getCursor(context)\r\n  const match = /^[^\\t\\r\\n\\f />][^\\t\\r\\n\\f />=]*/.exec(context.source)!\r\n  const name = match[0]\r\n\r\n  if (nameSet.has(name)) {\r\n    emitError(context, ErrorCodes.DUPLICATE_ATTRIBUTE)\r\n  }\r\n  nameSet.add(name)\r\n\r\n  if (name[0] === '=') {\r\n    emitError(context, ErrorCodes.UNEXPECTED_EQUALS_SIGN_BEFORE_ATTRIBUTE_NAME)\r\n  }\r\n  {\r\n    const pattern = /[\"'<]/g\r\n    let m: RegExpExecArray | null\r\n    while ((m = pattern.exec(name))) {\r\n      emitError(\r\n        context,\r\n        ErrorCodes.UNEXPECTED_CHARACTER_IN_ATTRIBUTE_NAME,\r\n        m.index\r\n      )\r\n    }\r\n  }\r\n\r\n  advanceBy(context, name.length)\r\n\r\n  // Value\r\n  let value: AttributeValue = undefined\r\n\r\n  if (/^[\\t\\r\\n\\f ]*=/.test(context.source)) {\r\n    advanceSpaces(context)\r\n    advanceBy(context, 1)\r\n    advanceSpaces(context)\r\n    value = parseAttributeValue(context)\r\n    if (!value) {\r\n      emitError(context, ErrorCodes.MISSING_ATTRIBUTE_VALUE)\r\n    }\r\n  }\r\n  const loc = getSelection(context, start)\r\n\r\n  if (!context.inVPre && /^(v-|:|\\.|@|#)/.test(name)) {\r\n    const match =\r\n      /(?:^v-([a-z0-9-]+))?(?:(?::|^\\.|^@|^#)(\\[[^\\]]+\\]|[^\\.]+))?(.+)?$/i.exec(\r\n        name\r\n      )!\r\n\r\n    let isPropShorthand = startsWith(name, '.')\r\n    let dirName =\r\n      match[1] ||\r\n      (isPropShorthand || startsWith(name, ':')\r\n        ? 'bind'\r\n        : startsWith(name, '@')\r\n        ? 'on'\r\n        : 'slot')\r\n    let arg: ExpressionNode | undefined\r\n\r\n    if (match[2]) {\r\n      const isSlot = dirName === 'slot'\r\n      const startOffset = name.lastIndexOf(match[2])\r\n      const loc = getSelection(\r\n        context,\r\n        getNewPosition(context, start, startOffset),\r\n        getNewPosition(\r\n          context,\r\n          start,\r\n          startOffset + match[2].length + ((isSlot && match[3]) || '').length\r\n        )\r\n      )\r\n      let content = match[2]\r\n      let isStatic = true\r\n\r\n      if (content.startsWith('[')) {\r\n        isStatic = false\r\n\r\n        if (!content.endsWith(']')) {\r\n          emitError(\r\n            context,\r\n            ErrorCodes.X_MISSING_DYNAMIC_DIRECTIVE_ARGUMENT_END\r\n          )\r\n        }\r\n\r\n        content = content.substr(1, content.length - 2)\r\n      } else if (isSlot) {\r\n        // #1241 special case for v-slot: vuetify relies extensively on slot\r\n        // names containing dots. v-slot doesn't have any modifiers and Vue 2.x\r\n        // supports such usage so we are keeping it consistent with 2.x.\r\n        content += match[3] || ''\r\n      }\r\n\r\n      arg = {\r\n        type: NodeTypes.SIMPLE_EXPRESSION,\r\n        content,\r\n        isStatic,\r\n        constType: isStatic\r\n          ? ConstantTypes.CAN_STRINGIFY\r\n          : ConstantTypes.NOT_CONSTANT,\r\n        loc\r\n      }\r\n    }\r\n\r\n    if (value && value.isQuoted) {\r\n      const valueLoc = value.loc\r\n      valueLoc.start.offset++\r\n      valueLoc.start.column++\r\n      valueLoc.end = advancePositionWithClone(valueLoc.start, value.content)\r\n      valueLoc.source = valueLoc.source.slice(1, -1)\r\n    }\r\n\r\n    const modifiers = match[3] ? match[3].substr(1).split('.') : []\r\n    if (isPropShorthand) modifiers.push('prop')\r\n\r\n    // 2.x compat v-bind:foo.sync -> v-model:foo\r\n    if (__COMPAT__ && dirName === 'bind' && arg) {\r\n      if (\r\n        modifiers.includes('sync') &&\r\n        checkCompatEnabled(\r\n          CompilerDeprecationTypes.COMPILER_V_BIND_SYNC,\r\n          context,\r\n          loc,\r\n          arg.loc.source\r\n        )\r\n      ) {\r\n        dirName = 'model'\r\n        modifiers.splice(modifiers.indexOf('sync'), 1)\r\n      }\r\n\r\n      if (__DEV__ && modifiers.includes('prop')) {\r\n        checkCompatEnabled(\r\n          CompilerDeprecationTypes.COMPILER_V_BIND_PROP,\r\n          context,\r\n          loc\r\n        )\r\n      }\r\n    }\r\n\r\n    return {\r\n      type: NodeTypes.DIRECTIVE,\r\n      name: dirName,\r\n      exp: value && {\r\n        type: NodeTypes.SIMPLE_EXPRESSION,\r\n        content: value.content,\r\n        isStatic: false,\r\n        // Treat as non-constant by default. This can be potentially set to\r\n        // other values by `transformExpression` to make it eligible for hoisting.\r\n        constType: ConstantTypes.NOT_CONSTANT,\r\n        loc: value.loc\r\n      },\r\n      arg,\r\n      modifiers,\r\n      loc\r\n    }\r\n  }\r\n\r\n  return {\r\n    type: NodeTypes.ATTRIBUTE,\r\n    name,\r\n    value: value && {\r\n      type: NodeTypes.TEXT,\r\n      content: value.content,\r\n      loc: value.loc\r\n    },\r\n    loc\r\n  }\r\n}\r\n\r\nfunction parseAttributeValue(context: ParserContext): AttributeValue {\r\n  const start = getCursor(context)\r\n  let content: string\r\n\r\n  const quote = context.source[0]\r\n  const isQuoted = quote === `\"` || quote === `'`\r\n  if (isQuoted) {\r\n    // Quoted value.\r\n    advanceBy(context, 1)\r\n\r\n    const endIndex = context.source.indexOf(quote)\r\n    if (endIndex === -1) {\r\n      content = parseTextData(\r\n        context,\r\n        context.source.length,\r\n        TextModes.ATTRIBUTE_VALUE\r\n      )\r\n    } else {\r\n      content = parseTextData(context, endIndex, TextModes.ATTRIBUTE_VALUE)\r\n      advanceBy(context, 1)\r\n    }\r\n  } else {\r\n    // Unquoted\r\n    const match = /^[^\\t\\r\\n\\f >]+/.exec(context.source)\r\n    if (!match) {\r\n      return undefined\r\n    }\r\n    const unexpectedChars = /[\"'<=`]/g\r\n    let m: RegExpExecArray | null\r\n    while ((m = unexpectedChars.exec(match[0]))) {\r\n      emitError(\r\n        context,\r\n        ErrorCodes.UNEXPECTED_CHARACTER_IN_UNQUOTED_ATTRIBUTE_VALUE,\r\n        m.index\r\n      )\r\n    }\r\n    content = parseTextData(context, match[0].length, TextModes.ATTRIBUTE_VALUE)\r\n  }\r\n\r\n  return { content, isQuoted, loc: getSelection(context, start) }\r\n}\r\n\r\nfunction parseInterpolation(\r\n  context: ParserContext,\r\n  mode: TextModes\r\n): InterpolationNode | undefined {\r\n  const [open, close] = context.options.delimiters\r\n  __TEST__ && assert(startsWith(context.source, open))\r\n\r\n  const closeIndex = context.source.indexOf(close, open.length)\r\n  if (closeIndex === -1) {\r\n    emitError(context, ErrorCodes.X_MISSING_INTERPOLATION_END)\r\n    return undefined\r\n  }\r\n\r\n  const start = getCursor(context)\r\n  advanceBy(context, open.length)\r\n  const innerStart = getCursor(context)\r\n  const innerEnd = getCursor(context)\r\n  const rawContentLength = closeIndex - open.length\r\n  const rawContent = context.source.slice(0, rawContentLength)\r\n  const preTrimContent = parseTextData(context, rawContentLength, mode)\r\n  const content = preTrimContent.trim()\r\n  const startOffset = preTrimContent.indexOf(content)\r\n  if (startOffset > 0) {\r\n    advancePositionWithMutation(innerStart, rawContent, startOffset)\r\n  }\r\n  const endOffset =\r\n    rawContentLength - (preTrimContent.length - content.length - startOffset)\r\n  advancePositionWithMutation(innerEnd, rawContent, endOffset)\r\n  advanceBy(context, close.length)\r\n\r\n  return {\r\n    type: NodeTypes.INTERPOLATION,\r\n    content: {\r\n      type: NodeTypes.SIMPLE_EXPRESSION,\r\n      isStatic: false,\r\n      // Set `isConstant` to false by default and will decide in transformExpression\r\n      constType: ConstantTypes.NOT_CONSTANT,\r\n      content,\r\n      loc: getSelection(context, innerStart, innerEnd)\r\n    },\r\n    loc: getSelection(context, start)\r\n  }\r\n}\r\n\r\nfunction parseText(context: ParserContext, mode: TextModes): TextNode {\r\n  __TEST__ && assert(context.source.length > 0)\r\n\r\n  const endTokens = ['<', context.options.delimiters[0]]\r\n  if (mode === TextModes.CDATA) {\r\n    endTokens.push(']]>')\r\n  }\r\n\r\n  let endIndex = context.source.length\r\n  for (let i = 0; i < endTokens.length; i++) {\r\n    const index = context.source.indexOf(endTokens[i], 1)\r\n    if (index !== -1 && endIndex > index) {\r\n      endIndex = index\r\n    }\r\n  }\r\n\r\n  __TEST__ && assert(endIndex > 0)\r\n\r\n  const start = getCursor(context)\r\n  const content = parseTextData(context, endIndex, mode)\r\n\r\n  return {\r\n    type: NodeTypes.TEXT,\r\n    content,\r\n    loc: getSelection(context, start)\r\n  }\r\n}\r\n\r\n/**\r\n * Get text data with a given length from the current location.\r\n * This translates HTML entities in the text data.\r\n */\r\nfunction parseTextData(\r\n  context: ParserContext,\r\n  length: number,\r\n  mode: TextModes\r\n): string {\r\n  const rawText = context.source.slice(0, length)\r\n  advanceBy(context, length)\r\n  if (\r\n    mode === TextModes.RAWTEXT ||\r\n    mode === TextModes.CDATA ||\r\n    rawText.indexOf('&') === -1\r\n  ) {\r\n    return rawText\r\n  } else {\r\n    // DATA or RCDATA containing \"&\"\". Entity decoding required.\r\n    return context.options.decodeEntities(\r\n      rawText,\r\n      mode === TextModes.ATTRIBUTE_VALUE\r\n    )\r\n  }\r\n}\r\n\r\nfunction getCursor(context: ParserContext): Position {\r\n  const { column, line, offset } = context\r\n  return { column, line, offset }\r\n}\r\n\r\nfunction getSelection(\r\n  context: ParserContext,\r\n  start: Position,\r\n  end?: Position\r\n): SourceLocation {\r\n  end = end || getCursor(context)\r\n  return {\r\n    start,\r\n    end,\r\n    source: context.originalSource.slice(start.offset, end.offset)\r\n  }\r\n}\r\n\r\nfunction last<T>(xs: T[]): T | undefined {\r\n  return xs[xs.length - 1]\r\n}\r\n\r\nfunction startsWith(source: string, searchString: string): boolean {\r\n  return source.startsWith(searchString)\r\n}\r\n\r\nfunction advanceBy(context: ParserContext, numberOfCharacters: number): void {\r\n  const { source } = context\r\n  __TEST__ && assert(numberOfCharacters <= source.length)\r\n  advancePositionWithMutation(context, source, numberOfCharacters)\r\n  context.source = source.slice(numberOfCharacters)\r\n}\r\n\r\nfunction advanceSpaces(context: ParserContext): void {\r\n  const match = /^[\\t\\r\\n\\f ]+/.exec(context.source)\r\n  if (match) {\r\n    advanceBy(context, match[0].length)\r\n  }\r\n}\r\n\r\nfunction getNewPosition(\r\n  context: ParserContext,\r\n  start: Position,\r\n  numberOfCharacters: number\r\n): Position {\r\n  return advancePositionWithClone(\r\n    start,\r\n    context.originalSource.slice(start.offset, numberOfCharacters),\r\n    numberOfCharacters\r\n  )\r\n}\r\n\r\nfunction emitError(\r\n  context: ParserContext,\r\n  code: ErrorCodes,\r\n  offset?: number,\r\n  loc: Position = getCursor(context)\r\n): void {\r\n  if (offset) {\r\n    loc.offset += offset\r\n    loc.column += offset\r\n  }\r\n  context.options.onError(\r\n    createCompilerError(code, {\r\n      start: loc,\r\n      end: loc,\r\n      source: ''\r\n    })\r\n  )\r\n}\r\n\r\nfunction isEnd(\r\n  context: ParserContext,\r\n  mode: TextModes,\r\n  ancestors: ElementNode[]\r\n): boolean {\r\n  const s = context.source\r\n\r\n  switch (mode) {\r\n    case TextModes.DATA:\r\n      if (startsWith(s, '</')) {\r\n        // TODO: probably bad performance\r\n        for (let i = ancestors.length - 1; i >= 0; --i) {\r\n          if (startsWithEndTagOpen(s, ancestors[i].tag)) {\r\n            return true\r\n          }\r\n        }\r\n      }\r\n      break\r\n\r\n    case TextModes.RCDATA:\r\n    case TextModes.RAWTEXT: {\r\n      const parent = last(ancestors)\r\n      if (parent && startsWithEndTagOpen(s, parent.tag)) {\r\n        return true\r\n      }\r\n      break\r\n    }\r\n\r\n    case TextModes.CDATA:\r\n      if (startsWith(s, ']]>')) {\r\n        return true\r\n      }\r\n      break\r\n  }\r\n\r\n  return !s\r\n}\r\n\r\nfunction startsWithEndTagOpen(source: string, tag: string): boolean {\r\n  return (\r\n    startsWith(source, '</') &&\r\n    source.substr(2, tag.length).toLowerCase() === tag.toLowerCase() &&\r\n    /[\\t\\r\\n\\f />]/.test(source[2 + tag.length] || '>')\r\n  )\r\n}\r\n","import {\r\n  ConstantTypes,\r\n  RootNode,\r\n  NodeTypes,\r\n  TemplateChildNode,\r\n  SimpleExpressionNode,\r\n  ElementTypes,\r\n  PlainElementNode,\r\n  ComponentNode,\r\n  TemplateNode,\r\n  VNodeCall,\r\n  ParentNode,\r\n  JSChildNode,\r\n  CallExpression,\r\n  createArrayExpression\r\n} from '../ast'\r\nimport { TransformContext } from '../transform'\r\nimport { PatchFlags, isString, isSymbol, isArray } from '@vue/shared'\r\nimport { getVNodeBlockHelper, getVNodeHelper, isSlotOutlet } from '../utils'\r\nimport {\r\n  OPEN_BLOCK,\r\n  GUARD_REACTIVE_PROPS,\r\n  NORMALIZE_CLASS,\r\n  NORMALIZE_PROPS,\r\n  NORMALIZE_STYLE\r\n} from '../runtimeHelpers'\r\n\r\nexport function hoistStatic(root: RootNode, context: TransformContext) {\r\n  walk(\r\n    root,\r\n    context,\r\n    // Root node is unfortunately non-hoistable due to potential parent\r\n    // fallthrough attributes.\r\n    isSingleElementRoot(root, root.children[0])\r\n  )\r\n}\r\n\r\nexport function isSingleElementRoot(\r\n  root: RootNode,\r\n  child: TemplateChildNode\r\n): child is PlainElementNode | ComponentNode | TemplateNode {\r\n  const { children } = root\r\n  return (\r\n    children.length === 1 &&\r\n    child.type === NodeTypes.ELEMENT &&\r\n    !isSlotOutlet(child)\r\n  )\r\n}\r\n\r\nfunction walk(\r\n  node: ParentNode,\r\n  context: TransformContext,\r\n  doNotHoistNode: boolean = false\r\n) {\r\n  // Some transforms, e.g. transformAssetUrls from @vue/compiler-sfc, replaces\r\n  // static bindings with expressions. These expressions are guaranteed to be\r\n  // constant so they are still eligible for hoisting, but they are only\r\n  // available at runtime and therefore cannot be evaluated ahead of time.\r\n  // This is only a concern for pre-stringification (via transformHoist by\r\n  // @vue/compiler-dom), but doing it here allows us to perform only one full\r\n  // walk of the AST and allow `stringifyStatic` to stop walking as soon as its\r\n  // stringficiation threshold is met.\r\n  let canStringify = true\r\n\r\n  const { children } = node\r\n  const originalCount = children.length\r\n  let hoistedCount = 0\r\n\r\n  for (let i = 0; i < children.length; i++) {\r\n    const child = children[i]\r\n    // only plain elements & text calls are eligible for hoisting.\r\n    if (\r\n      child.type === NodeTypes.ELEMENT &&\r\n      child.tagType === ElementTypes.ELEMENT\r\n    ) {\r\n      const constantType = doNotHoistNode\r\n        ? ConstantTypes.NOT_CONSTANT\r\n        : getConstantType(child, context)\r\n      if (constantType > ConstantTypes.NOT_CONSTANT) {\r\n        if (constantType < ConstantTypes.CAN_STRINGIFY) {\r\n          canStringify = false\r\n        }\r\n        if (constantType >= ConstantTypes.CAN_HOIST) {\r\n          ;(child.codegenNode as VNodeCall).patchFlag =\r\n            PatchFlags.HOISTED + (__DEV__ ? ` /* HOISTED */` : ``)\r\n          child.codegenNode = context.hoist(child.codegenNode!)\r\n          hoistedCount++\r\n          continue\r\n        }\r\n      } else {\r\n        // node may contain dynamic children, but its props may be eligible for\r\n        // hoisting.\r\n        const codegenNode = child.codegenNode!\r\n        if (codegenNode.type === NodeTypes.VNODE_CALL) {\r\n          const flag = getPatchFlag(codegenNode)\r\n          if (\r\n            (!flag ||\r\n              flag === PatchFlags.NEED_PATCH ||\r\n              flag === PatchFlags.TEXT) &&\r\n            getGeneratedPropsConstantType(child, context) >=\r\n              ConstantTypes.CAN_HOIST\r\n          ) {\r\n            const props = getNodeProps(child)\r\n            if (props) {\r\n              codegenNode.props = context.hoist(props)\r\n            }\r\n          }\r\n          if (codegenNode.dynamicProps) {\r\n            codegenNode.dynamicProps = context.hoist(codegenNode.dynamicProps)\r\n          }\r\n        }\r\n      }\r\n    } else if (child.type === NodeTypes.TEXT_CALL) {\r\n      const contentType = getConstantType(child.content, context)\r\n      if (contentType > 0) {\r\n        if (contentType < ConstantTypes.CAN_STRINGIFY) {\r\n          canStringify = false\r\n        }\r\n        if (contentType >= ConstantTypes.CAN_HOIST) {\r\n          child.codegenNode = context.hoist(child.codegenNode)\r\n          hoistedCount++\r\n        }\r\n      }\r\n    }\r\n\r\n    // walk further\r\n    if (child.type === NodeTypes.ELEMENT) {\r\n      const isComponent = child.tagType === ElementTypes.COMPONENT\r\n      if (isComponent) {\r\n        context.scopes.vSlot++\r\n      }\r\n      walk(child, context)\r\n      if (isComponent) {\r\n        context.scopes.vSlot--\r\n      }\r\n    } else if (child.type === NodeTypes.FOR) {\r\n      // Do not hoist v-for single child because it has to be a block\r\n      walk(child, context, child.children.length === 1)\r\n    } else if (child.type === NodeTypes.IF) {\r\n      for (let i = 0; i < child.branches.length; i++) {\r\n        // Do not hoist v-if single child because it has to be a block\r\n        walk(\r\n          child.branches[i],\r\n          context,\r\n          child.branches[i].children.length === 1\r\n        )\r\n      }\r\n    }\r\n  }\r\n\r\n  if (canStringify && hoistedCount && context.transformHoist) {\r\n    context.transformHoist(children, context, node)\r\n  }\r\n\r\n  // all children were hoisted - the entire children array is hoistable.\r\n  if (\r\n    hoistedCount &&\r\n    hoistedCount === originalCount &&\r\n    node.type === NodeTypes.ELEMENT &&\r\n    node.tagType === ElementTypes.ELEMENT &&\r\n    node.codegenNode &&\r\n    node.codegenNode.type === NodeTypes.VNODE_CALL &&\r\n    isArray(node.codegenNode.children)\r\n  ) {\r\n    node.codegenNode.children = context.hoist(\r\n      createArrayExpression(node.codegenNode.children)\r\n    )\r\n  }\r\n}\r\n\r\nexport function getConstantType(\r\n  node: TemplateChildNode | SimpleExpressionNode,\r\n  context: TransformContext\r\n): ConstantTypes {\r\n  const { constantCache } = context\r\n  switch (node.type) {\r\n    case NodeTypes.ELEMENT:\r\n      if (node.tagType !== ElementTypes.ELEMENT) {\r\n        return ConstantTypes.NOT_CONSTANT\r\n      }\r\n      const cached = constantCache.get(node)\r\n      if (cached !== undefined) {\r\n        return cached\r\n      }\r\n      const codegenNode = node.codegenNode!\r\n      if (codegenNode.type !== NodeTypes.VNODE_CALL) {\r\n        return ConstantTypes.NOT_CONSTANT\r\n      }\r\n      const flag = getPatchFlag(codegenNode)\r\n      if (!flag) {\r\n        let returnType = ConstantTypes.CAN_STRINGIFY\r\n\r\n        // Element itself has no patch flag. However we still need to check:\r\n\r\n        // 1. Even for a node with no patch flag, it is possible for it to contain\r\n        // non-hoistable expressions that refers to scope variables, e.g. compiler\r\n        // injected keys or cached event handlers. Therefore we need to always\r\n        // check the codegenNode's props to be sure.\r\n        const generatedPropsType = getGeneratedPropsConstantType(node, context)\r\n        if (generatedPropsType === ConstantTypes.NOT_CONSTANT) {\r\n          constantCache.set(node, ConstantTypes.NOT_CONSTANT)\r\n          return ConstantTypes.NOT_CONSTANT\r\n        }\r\n        if (generatedPropsType < returnType) {\r\n          returnType = generatedPropsType\r\n        }\r\n\r\n        // 2. its children.\r\n        for (let i = 0; i < node.children.length; i++) {\r\n          const childType = getConstantType(node.children[i], context)\r\n          if (childType === ConstantTypes.NOT_CONSTANT) {\r\n            constantCache.set(node, ConstantTypes.NOT_CONSTANT)\r\n            return ConstantTypes.NOT_CONSTANT\r\n          }\r\n          if (childType < returnType) {\r\n            returnType = childType\r\n          }\r\n        }\r\n\r\n        // 3. if the type is not already CAN_SKIP_PATCH which is the lowest non-0\r\n        // type, check if any of the props can cause the type to be lowered\r\n        // we can skip can_patch because it's guaranteed by the absence of a\r\n        // patchFlag.\r\n        if (returnType > ConstantTypes.CAN_SKIP_PATCH) {\r\n          for (let i = 0; i < node.props.length; i++) {\r\n            const p = node.props[i]\r\n            if (p.type === NodeTypes.DIRECTIVE && p.name === 'bind' && p.exp) {\r\n              const expType = getConstantType(p.exp, context)\r\n              if (expType === ConstantTypes.NOT_CONSTANT) {\r\n                constantCache.set(node, ConstantTypes.NOT_CONSTANT)\r\n                return ConstantTypes.NOT_CONSTANT\r\n              }\r\n              if (expType < returnType) {\r\n                returnType = expType\r\n              }\r\n            }\r\n          }\r\n        }\r\n\r\n        // only svg/foreignObject could be block here, however if they are\r\n        // static then they don't need to be blocks since there will be no\r\n        // nested updates.\r\n        if (codegenNode.isBlock) {\r\n          context.removeHelper(OPEN_BLOCK)\r\n          context.removeHelper(\r\n            getVNodeBlockHelper(context.inSSR, codegenNode.isComponent)\r\n          )\r\n          codegenNode.isBlock = false\r\n          context.helper(getVNodeHelper(context.inSSR, codegenNode.isComponent))\r\n        }\r\n\r\n        constantCache.set(node, returnType)\r\n        return returnType\r\n      } else {\r\n        constantCache.set(node, ConstantTypes.NOT_CONSTANT)\r\n        return ConstantTypes.NOT_CONSTANT\r\n      }\r\n    case NodeTypes.TEXT:\r\n    case NodeTypes.COMMENT:\r\n      return ConstantTypes.CAN_STRINGIFY\r\n    case NodeTypes.IF:\r\n    case NodeTypes.FOR:\r\n    case NodeTypes.IF_BRANCH:\r\n      return ConstantTypes.NOT_CONSTANT\r\n    case NodeTypes.INTERPOLATION:\r\n    case NodeTypes.TEXT_CALL:\r\n      return getConstantType(node.content, context)\r\n    case NodeTypes.SIMPLE_EXPRESSION:\r\n      return node.constType\r\n    case NodeTypes.COMPOUND_EXPRESSION:\r\n      let returnType = ConstantTypes.CAN_STRINGIFY\r\n      for (let i = 0; i < node.children.length; i++) {\r\n        const child = node.children[i]\r\n        if (isString(child) || isSymbol(child)) {\r\n          continue\r\n        }\r\n        const childType = getConstantType(child, context)\r\n        if (childType === ConstantTypes.NOT_CONSTANT) {\r\n          return ConstantTypes.NOT_CONSTANT\r\n        } else if (childType < returnType) {\r\n          returnType = childType\r\n        }\r\n      }\r\n      return returnType\r\n    default:\r\n      if (__DEV__) {\r\n        const exhaustiveCheck: never = node\r\n        exhaustiveCheck\r\n      }\r\n      return ConstantTypes.NOT_CONSTANT\r\n  }\r\n}\r\n\r\nconst allowHoistedHelperSet = new Set([\r\n  NORMALIZE_CLASS,\r\n  NORMALIZE_STYLE,\r\n  NORMALIZE_PROPS,\r\n  GUARD_REACTIVE_PROPS\r\n])\r\n\r\nfunction getConstantTypeOfHelperCall(\r\n  value: CallExpression,\r\n  context: TransformContext\r\n): ConstantTypes {\r\n  if (\r\n    value.type === NodeTypes.JS_CALL_EXPRESSION &&\r\n    !isString(value.callee) &&\r\n    allowHoistedHelperSet.has(value.callee)\r\n  ) {\r\n    const arg = value.arguments[0] as JSChildNode\r\n    if (arg.type === NodeTypes.SIMPLE_EXPRESSION) {\r\n      return getConstantType(arg, context)\r\n    } else if (arg.type === NodeTypes.JS_CALL_EXPRESSION) {\r\n      // in the case of nested helper call, e.g. `normalizeProps(guardReactiveProps(exp))`\r\n      return getConstantTypeOfHelperCall(arg, context)\r\n    }\r\n  }\r\n  return ConstantTypes.NOT_CONSTANT\r\n}\r\n\r\nfunction getGeneratedPropsConstantType(\r\n  node: PlainElementNode,\r\n  context: TransformContext\r\n): ConstantTypes {\r\n  let returnType = ConstantTypes.CAN_STRINGIFY\r\n  const props = getNodeProps(node)\r\n  if (props && props.type === NodeTypes.JS_OBJECT_EXPRESSION) {\r\n    const { properties } = props\r\n    for (let i = 0; i < properties.length; i++) {\r\n      const { key, value } = properties[i]\r\n      const keyType = getConstantType(key, context)\r\n      if (keyType === ConstantTypes.NOT_CONSTANT) {\r\n        return keyType\r\n      }\r\n      if (keyType < returnType) {\r\n        returnType = keyType\r\n      }\r\n      if (value.type !== NodeTypes.SIMPLE_EXPRESSION) {\r\n        // some helper calls can be hoisted,\r\n        // such as the `normalizeProps` generated by the compiler for pre-normalize class,\r\n        // in this case we need to respect the ConstanType of the helper's argments\r\n        if (value.type === NodeTypes.JS_CALL_EXPRESSION) {\r\n          return getConstantTypeOfHelperCall(value, context)\r\n        }\r\n        return ConstantTypes.NOT_CONSTANT\r\n      }\r\n      const valueType = getConstantType(value, context)\r\n      if (valueType === ConstantTypes.NOT_CONSTANT) {\r\n        return valueType\r\n      }\r\n      if (valueType < returnType) {\r\n        returnType = valueType\r\n      }\r\n    }\r\n  }\r\n  return returnType\r\n}\r\n\r\nfunction getNodeProps(node: PlainElementNode) {\r\n  const codegenNode = node.codegenNode!\r\n  if (codegenNode.type === NodeTypes.VNODE_CALL) {\r\n    return codegenNode.props\r\n  }\r\n}\r\n\r\nfunction getPatchFlag(node: VNodeCall): number | undefined {\r\n  const flag = node.patchFlag\r\n  return flag ? parseInt(flag, 10) : undefined\r\n}\r\n","import { TransformOptions } from './options'\r\nimport {\r\n  RootNode,\r\n  NodeTypes,\r\n  ParentNode,\r\n  TemplateChildNode,\r\n  ElementNode,\r\n  DirectiveNode,\r\n  Property,\r\n  ExpressionNode,\r\n  createSimpleExpression,\r\n  JSChildNode,\r\n  SimpleExpressionNode,\r\n  ElementTypes,\r\n  CacheExpression,\r\n  createCacheExpression,\r\n  TemplateLiteral,\r\n  createVNodeCall,\r\n  ConstantTypes,\r\n  ArrayExpression\r\n} from './ast'\r\nimport {\r\n  isString,\r\n  isArray,\r\n  NOOP,\r\n  PatchFlags,\r\n  PatchFlagNames,\r\n  EMPTY_OBJ,\r\n  capitalize,\r\n  camelize\r\n} from '@vue/shared'\r\nimport { defaultOnError, defaultOnWarn } from './errors'\r\nimport {\r\n  TO_DISPLAY_STRING,\r\n  FRAGMENT,\r\n  helperNameMap,\r\n  CREATE_COMMENT\r\n} from './runtimeHelpers'\r\nimport { isVSlot, makeBlock } from './utils'\r\nimport { hoistStatic, isSingleElementRoot } from './transforms/hoistStatic'\r\nimport { CompilerCompatOptions } from './compat/compatConfig'\r\n\r\n// There are two types of transforms:\r\n//\r\n// - NodeTransform:\r\n//   Transforms that operate directly on a ChildNode. NodeTransforms may mutate,\r\n//   replace or remove the node being processed.\r\nexport type NodeTransform = (\r\n  node: RootNode | TemplateChildNode,\r\n  context: TransformContext\r\n) => void | (() => void) | (() => void)[]\r\n\r\n// - DirectiveTransform:\r\n//   Transforms that handles a single directive attribute on an element.\r\n//   It translates the raw directive into actual props for the VNode.\r\nexport type DirectiveTransform = (\r\n  dir: DirectiveNode,\r\n  node: ElementNode,\r\n  context: TransformContext,\r\n  // a platform specific compiler can import the base transform and augment\r\n  // it by passing in this optional argument.\r\n  augmentor?: (ret: DirectiveTransformResult) => DirectiveTransformResult\r\n) => DirectiveTransformResult\r\n\r\nexport interface DirectiveTransformResult {\r\n  props: Property[]\r\n  needRuntime?: boolean | symbol\r\n  ssrTagParts?: TemplateLiteral['elements']\r\n}\r\n\r\n// A structural directive transform is a technically a NodeTransform;\r\n// Only v-if and v-for fall into this category.\r\nexport type StructuralDirectiveTransform = (\r\n  node: ElementNode,\r\n  dir: DirectiveNode,\r\n  context: TransformContext\r\n) => void | (() => void)\r\n\r\nexport interface ImportItem {\r\n  exp: string | ExpressionNode\r\n  path: string\r\n}\r\n\r\nexport interface TransformContext\r\n  extends Required<\r\n      Omit<TransformOptions, 'filename' | keyof CompilerCompatOptions>\r\n    >,\r\n    CompilerCompatOptions {\r\n  selfName: string | null\r\n  root: RootNode\r\n  helpers: Map<symbol, number>\r\n  components: Set<string>\r\n  directives: Set<string>\r\n  hoists: (JSChildNode | null)[]\r\n  imports: ImportItem[]\r\n  temps: number\r\n  cached: number\r\n  identifiers: { [name: string]: number | undefined }\r\n  scopes: {\r\n    vFor: number\r\n    vSlot: number\r\n    vPre: number\r\n    vOnce: number\r\n  }\r\n  parent: ParentNode | null\r\n  childIndex: number\r\n  currentNode: RootNode | TemplateChildNode | null\r\n  inVOnce: boolean\r\n  helper<T extends symbol>(name: T): T\r\n  removeHelper<T extends symbol>(name: T): void\r\n  helperString(name: symbol): string\r\n  replaceNode(node: TemplateChildNode): void\r\n  removeNode(node?: TemplateChildNode): void\r\n  onNodeRemoved(): void\r\n  addIdentifiers(exp: ExpressionNode | string): void\r\n  removeIdentifiers(exp: ExpressionNode | string): void\r\n  hoist(exp: string | JSChildNode | ArrayExpression): SimpleExpressionNode\r\n  cache<T extends JSChildNode>(exp: T, isVNode?: boolean): CacheExpression | T\r\n  constantCache: Map<TemplateChildNode, ConstantTypes>\r\n\r\n  // 2.x Compat only\r\n  filters?: Set<string>\r\n}\r\n\r\nexport function createTransformContext(\r\n  root: RootNode,\r\n  {\r\n    filename = '',\r\n    prefixIdentifiers = false,\r\n    hoistStatic = false,\r\n    cacheHandlers = false,\r\n    nodeTransforms = [],\r\n    directiveTransforms = {},\r\n    transformHoist = null,\r\n    isBuiltInComponent = NOOP,\r\n    isCustomElement = NOOP,\r\n    expressionPlugins = [],\r\n    scopeId = null,\r\n    slotted = true,\r\n    ssr = false,\r\n    inSSR = false,\r\n    ssrCssVars = ``,\r\n    bindingMetadata = EMPTY_OBJ,\r\n    inline = false,\r\n    isTS = false,\r\n    onError = defaultOnError,\r\n    onWarn = defaultOnWarn,\r\n    compatConfig\r\n  }: TransformOptions\r\n): TransformContext {\r\n  const nameMatch = filename.replace(/\\?.*$/, '').match(/([^/\\\\]+)\\.\\w+$/)\r\n  const context: TransformContext = {\r\n    // options\r\n    selfName: nameMatch && capitalize(camelize(nameMatch[1])),\r\n    prefixIdentifiers,\r\n    hoistStatic,\r\n    cacheHandlers,\r\n    nodeTransforms,\r\n    directiveTransforms,\r\n    transformHoist,\r\n    isBuiltInComponent,\r\n    isCustomElement,\r\n    expressionPlugins,\r\n    scopeId,\r\n    slotted,\r\n    ssr,\r\n    inSSR,\r\n    ssrCssVars,\r\n    bindingMetadata,\r\n    inline,\r\n    isTS,\r\n    onError,\r\n    onWarn,\r\n    compatConfig,\r\n\r\n    // state\r\n    root,\r\n    helpers: new Map(),\r\n    components: new Set(),\r\n    directives: new Set(),\r\n    hoists: [],\r\n    imports: [],\r\n    constantCache: new Map(),\r\n    temps: 0,\r\n    cached: 0,\r\n    identifiers: Object.create(null),\r\n    scopes: {\r\n      vFor: 0,\r\n      vSlot: 0,\r\n      vPre: 0,\r\n      vOnce: 0\r\n    },\r\n    parent: null,\r\n    currentNode: root,\r\n    childIndex: 0,\r\n    inVOnce: false,\r\n\r\n    // methods\r\n    helper(name) {\r\n      const count = context.helpers.get(name) || 0\r\n      context.helpers.set(name, count + 1)\r\n      return name\r\n    },\r\n    removeHelper(name) {\r\n      const count = context.helpers.get(name)\r\n      if (count) {\r\n        const currentCount = count - 1\r\n        if (!currentCount) {\r\n          context.helpers.delete(name)\r\n        } else {\r\n          context.helpers.set(name, currentCount)\r\n        }\r\n      }\r\n    },\r\n    helperString(name) {\r\n      return `_${helperNameMap[context.helper(name)]}`\r\n    },\r\n    replaceNode(node) {\r\n      /* istanbul ignore if */\r\n      if (__DEV__) {\r\n        if (!context.currentNode) {\r\n          throw new Error(`Node being replaced is already removed.`)\r\n        }\r\n        if (!context.parent) {\r\n          throw new Error(`Cannot replace root node.`)\r\n        }\r\n      }\r\n      context.parent!.children[context.childIndex] = context.currentNode = node\r\n    },\r\n    removeNode(node) {\r\n      if (__DEV__ && !context.parent) {\r\n        throw new Error(`Cannot remove root node.`)\r\n      }\r\n      const list = context.parent!.children\r\n      const removalIndex = node\r\n        ? list.indexOf(node)\r\n        : context.currentNode\r\n        ? context.childIndex\r\n        : -1\r\n      /* istanbul ignore if */\r\n      if (__DEV__ && removalIndex < 0) {\r\n        throw new Error(`node being removed is not a child of current parent`)\r\n      }\r\n      if (!node || node === context.currentNode) {\r\n        // current node removed\r\n        context.currentNode = null\r\n        context.onNodeRemoved()\r\n      } else {\r\n        // sibling node removed\r\n        if (context.childIndex > removalIndex) {\r\n          context.childIndex--\r\n          context.onNodeRemoved()\r\n        }\r\n      }\r\n      context.parent!.children.splice(removalIndex, 1)\r\n    },\r\n    onNodeRemoved: () => {},\r\n    addIdentifiers(exp) {\r\n      // identifier tracking only happens in non-browser builds.\r\n      if (!__BROWSER__) {\r\n        if (isString(exp)) {\r\n          addId(exp)\r\n        } else if (exp.identifiers) {\r\n          exp.identifiers.forEach(addId)\r\n        } else if (exp.type === NodeTypes.SIMPLE_EXPRESSION) {\r\n          addId(exp.content)\r\n        }\r\n      }\r\n    },\r\n    removeIdentifiers(exp) {\r\n      if (!__BROWSER__) {\r\n        if (isString(exp)) {\r\n          removeId(exp)\r\n        } else if (exp.identifiers) {\r\n          exp.identifiers.forEach(removeId)\r\n        } else if (exp.type === NodeTypes.SIMPLE_EXPRESSION) {\r\n          removeId(exp.content)\r\n        }\r\n      }\r\n    },\r\n    hoist(exp) {\r\n      if (isString(exp)) exp = createSimpleExpression(exp)\r\n      context.hoists.push(exp)\r\n      const identifier = createSimpleExpression(\r\n        `_hoisted_${context.hoists.length}`,\r\n        false,\r\n        exp.loc,\r\n        ConstantTypes.CAN_HOIST\r\n      )\r\n      identifier.hoisted = exp\r\n      return identifier\r\n    },\r\n    cache(exp, isVNode = false) {\r\n      return createCacheExpression(context.cached++, exp, isVNode)\r\n    }\r\n  }\r\n\r\n  if (__COMPAT__) {\r\n    context.filters = new Set()\r\n  }\r\n\r\n  function addId(id: string) {\r\n    const { identifiers } = context\r\n    if (identifiers[id] === undefined) {\r\n      identifiers[id] = 0\r\n    }\r\n    identifiers[id]!++\r\n  }\r\n\r\n  function removeId(id: string) {\r\n    context.identifiers[id]!--\r\n  }\r\n\r\n  return context\r\n}\r\n\r\nexport function transform(root: RootNode, options: TransformOptions) {\r\n  const context = createTransformContext(root, options)\r\n  traverseNode(root, context)\r\n  if (options.hoistStatic) {\r\n    hoistStatic(root, context)\r\n  }\r\n  if (!options.ssr) {\r\n    createRootCodegen(root, context)\r\n  }\r\n  // finalize meta information\r\n  root.helpers = [...context.helpers.keys()]\r\n  root.components = [...context.components]\r\n  root.directives = [...context.directives]\r\n  root.imports = context.imports\r\n  root.hoists = context.hoists\r\n  root.temps = context.temps\r\n  root.cached = context.cached\r\n\r\n  if (__COMPAT__) {\r\n    root.filters = [...context.filters!]\r\n  }\r\n}\r\n\r\nfunction createRootCodegen(root: RootNode, context: TransformContext) {\r\n  const { helper } = context\r\n  const { children } = root\r\n  if (children.length === 1) {\r\n    const child = children[0]\r\n    // if the single child is an element, turn it into a block.\r\n    if (isSingleElementRoot(root, child) && child.codegenNode) {\r\n      // single element root is never hoisted so codegenNode will never be\r\n      // SimpleExpressionNode\r\n      const codegenNode = child.codegenNode\r\n      if (codegenNode.type === NodeTypes.VNODE_CALL) {\r\n        makeBlock(codegenNode, context)\r\n      }\r\n      root.codegenNode = codegenNode\r\n    } else {\r\n      // - single <slot/>, IfNode, ForNode: already blocks.\r\n      // - single text node: always patched.\r\n      // root codegen falls through via genNode()\r\n      root.codegenNode = child\r\n    }\r\n  } else if (children.length > 1) {\r\n    // root has multiple nodes - return a fragment block.\r\n    let patchFlag = PatchFlags.STABLE_FRAGMENT\r\n    let patchFlagText = PatchFlagNames[PatchFlags.STABLE_FRAGMENT]\r\n    // check if the fragment actually contains a single valid child with\r\n    // the rest being comments\r\n    if (\r\n      __DEV__ &&\r\n      children.filter(c => c.type !== NodeTypes.COMMENT).length === 1\r\n    ) {\r\n      patchFlag |= PatchFlags.DEV_ROOT_FRAGMENT\r\n      patchFlagText += `, ${PatchFlagNames[PatchFlags.DEV_ROOT_FRAGMENT]}`\r\n    }\r\n    root.codegenNode = createVNodeCall(\r\n      context,\r\n      helper(FRAGMENT),\r\n      undefined,\r\n      root.children,\r\n      patchFlag + (__DEV__ ? ` /* ${patchFlagText} */` : ``),\r\n      undefined,\r\n      undefined,\r\n      true,\r\n      undefined,\r\n      false /* isComponent */\r\n    )\r\n  } else {\r\n    // no children = noop. codegen will return null.\r\n  }\r\n}\r\n\r\nexport function traverseChildren(\r\n  parent: ParentNode,\r\n  context: TransformContext\r\n) {\r\n  let i = 0\r\n  const nodeRemoved = () => {\r\n    i--\r\n  }\r\n  for (; i < parent.children.length; i++) {\r\n    const child = parent.children[i]\r\n    if (isString(child)) continue\r\n    context.parent = parent\r\n    context.childIndex = i\r\n    context.onNodeRemoved = nodeRemoved\r\n    traverseNode(child, context)\r\n  }\r\n}\r\n\r\nexport function traverseNode(\r\n  node: RootNode | TemplateChildNode,\r\n  context: TransformContext\r\n) {\r\n  context.currentNode = node\r\n  // apply transform plugins\r\n  const { nodeTransforms } = context\r\n  const exitFns = []\r\n  for (let i = 0; i < nodeTransforms.length; i++) {\r\n    const onExit = nodeTransforms[i](node, context)\r\n    if (onExit) {\r\n      if (isArray(onExit)) {\r\n        exitFns.push(...onExit)\r\n      } else {\r\n        exitFns.push(onExit)\r\n      }\r\n    }\r\n    if (!context.currentNode) {\r\n      // node was removed\r\n      return\r\n    } else {\r\n      // node may have been replaced\r\n      node = context.currentNode\r\n    }\r\n  }\r\n\r\n  switch (node.type) {\r\n    case NodeTypes.COMMENT:\r\n      if (!context.ssr) {\r\n        // inject import for the Comment symbol, which is needed for creating\r\n        // comment nodes with `createVNode`\r\n        context.helper(CREATE_COMMENT)\r\n      }\r\n      break\r\n    case NodeTypes.INTERPOLATION:\r\n      // no need to traverse, but we need to inject toString helper\r\n      if (!context.ssr) {\r\n        context.helper(TO_DISPLAY_STRING)\r\n      }\r\n      break\r\n\r\n    // for container types, further traverse downwards\r\n    case NodeTypes.IF:\r\n      for (let i = 0; i < node.branches.length; i++) {\r\n        traverseNode(node.branches[i], context)\r\n      }\r\n      break\r\n    case NodeTypes.IF_BRANCH:\r\n    case NodeTypes.FOR:\r\n    case NodeTypes.ELEMENT:\r\n    case NodeTypes.ROOT:\r\n      traverseChildren(node, context)\r\n      break\r\n  }\r\n\r\n  // exit transforms\r\n  context.currentNode = node\r\n  let i = exitFns.length\r\n  while (i--) {\r\n    exitFns[i]()\r\n  }\r\n}\r\n\r\nexport function createStructuralDirectiveTransform(\r\n  name: string | RegExp,\r\n  fn: StructuralDirectiveTransform\r\n): NodeTransform {\r\n  const matches = isString(name)\r\n    ? (n: string) => n === name\r\n    : (n: string) => name.test(n)\r\n\r\n  return (node, context) => {\r\n    if (node.type === NodeTypes.ELEMENT) {\r\n      const { props } = node\r\n      // structural directive transforms are not concerned with slots\r\n      // as they are handled separately in vSlot.ts\r\n      if (node.tagType === ElementTypes.TEMPLATE && props.some(isVSlot)) {\r\n        return\r\n      }\r\n      const exitFns = []\r\n      for (let i = 0; i < props.length; i++) {\r\n        const prop = props[i]\r\n        if (prop.type === NodeTypes.DIRECTIVE && matches(prop.name)) {\r\n          // structural directives are removed to avoid infinite recursion\r\n          // also we remove them *before* applying so that it can further\r\n          // traverse itself in case it moves the node around\r\n          props.splice(i, 1)\r\n          i--\r\n          const onExit = fn(node, prop, context)\r\n          if (onExit) exitFns.push(onExit)\r\n        }\r\n      }\r\n      return exitFns\r\n    }\r\n  }\r\n}\r\n","import { CodegenOptions } from './options'\r\nimport {\r\n  RootNode,\r\n  TemplateChildNode,\r\n  TextNode,\r\n  CommentNode,\r\n  ExpressionNode,\r\n  NodeTypes,\r\n  JSChildNode,\r\n  CallExpression,\r\n  ArrayExpression,\r\n  ObjectExpression,\r\n  Position,\r\n  InterpolationNode,\r\n  CompoundExpressionNode,\r\n  SimpleExpressionNode,\r\n  FunctionExpression,\r\n  ConditionalExpression,\r\n  CacheExpression,\r\n  locStub,\r\n  SSRCodegenNode,\r\n  TemplateLiteral,\r\n  IfStatement,\r\n  AssignmentExpression,\r\n  ReturnStatement,\r\n  VNodeCall,\r\n  SequenceExpression\r\n} from './ast'\r\nimport { SourceMapGenerator, RawSourceMap } from 'source-map'\r\nimport {\r\n  advancePositionWithMutation,\r\n  assert,\r\n  getVNodeBlockHelper,\r\n  getVNodeHelper,\r\n  isSimpleIdentifier,\r\n  toValidAssetId\r\n} from './utils'\r\nimport { isString, isArray, isSymbol } from '@vue/shared'\r\nimport {\r\n  helperNameMap,\r\n  TO_DISPLAY_STRING,\r\n  CREATE_VNODE,\r\n  RESOLVE_COMPONENT,\r\n  RESOLVE_DIRECTIVE,\r\n  SET_BLOCK_TRACKING,\r\n  CREATE_COMMENT,\r\n  CREATE_TEXT,\r\n  PUSH_SCOPE_ID,\r\n  POP_SCOPE_ID,\r\n  WITH_SCOPE_ID,\r\n  WITH_DIRECTIVES,\r\n  CREATE_ELEMENT_VNODE,\r\n  OPEN_BLOCK,\r\n  CREATE_STATIC,\r\n  WITH_CTX,\r\n  RESOLVE_FILTER\r\n} from './runtimeHelpers'\r\nimport { ImportItem } from './transform'\r\n\r\nconst PURE_ANNOTATION = `/*#__PURE__*/`\r\n\r\ntype CodegenNode = TemplateChildNode | JSChildNode | SSRCodegenNode\r\n\r\nexport interface CodegenResult {\r\n  code: string\r\n  preamble: string\r\n  ast: RootNode\r\n  map?: RawSourceMap\r\n}\r\n\r\nexport interface CodegenContext\r\n  extends Omit<Required<CodegenOptions>, 'bindingMetadata' | 'inline'> {\r\n  source: string\r\n  code: string\r\n  line: number\r\n  column: number\r\n  offset: number\r\n  indentLevel: number\r\n  pure: boolean\r\n  map?: SourceMapGenerator\r\n  helper(key: symbol): string\r\n  push(code: string, node?: CodegenNode): void\r\n  indent(): void\r\n  deindent(withoutNewLine?: boolean): void\r\n  newline(): void\r\n}\r\n\r\nfunction createCodegenContext(\r\n  ast: RootNode,\r\n  {\r\n    mode = 'function',\r\n    prefixIdentifiers = mode === 'module',\r\n    sourceMap = false,\r\n    filename = `template.vue.html`,\r\n    scopeId = null,\r\n    optimizeImports = false,\r\n    runtimeGlobalName = `Vue`,\r\n    runtimeModuleName = `vue`,\r\n    ssr = false,\r\n    isTS = false,\r\n    inSSR = false\r\n  }: CodegenOptions\r\n): CodegenContext {\r\n  const context: CodegenContext = {\r\n    mode,\r\n    prefixIdentifiers,\r\n    sourceMap,\r\n    filename,\r\n    scopeId,\r\n    optimizeImports,\r\n    runtimeGlobalName,\r\n    runtimeModuleName,\r\n    ssr,\r\n    isTS,\r\n    inSSR,\r\n    source: ast.loc.source,\r\n    code: ``,\r\n    column: 1,\r\n    line: 1,\r\n    offset: 0,\r\n    indentLevel: 0,\r\n    pure: false,\r\n    map: undefined,\r\n    helper(key) {\r\n      return `_${helperNameMap[key]}`\r\n    },\r\n    push(code, node) {\r\n      context.code += code\r\n      if (!__BROWSER__ && context.map) {\r\n        if (node) {\r\n          let name\r\n          if (node.type === NodeTypes.SIMPLE_EXPRESSION && !node.isStatic) {\r\n            const content = node.content.replace(/^_ctx\\./, '')\r\n            if (content !== node.content && isSimpleIdentifier(content)) {\r\n              name = content\r\n            }\r\n          }\r\n          addMapping(node.loc.start, name)\r\n        }\r\n        advancePositionWithMutation(context, code)\r\n        if (node && node.loc !== locStub) {\r\n          addMapping(node.loc.end)\r\n        }\r\n      }\r\n    },\r\n    indent() {\r\n      newline(++context.indentLevel)\r\n    },\r\n    deindent(withoutNewLine = false) {\r\n      if (withoutNewLine) {\r\n        --context.indentLevel\r\n      } else {\r\n        newline(--context.indentLevel)\r\n      }\r\n    },\r\n    newline() {\r\n      newline(context.indentLevel)\r\n    }\r\n  }\r\n\r\n  function newline(n: number) {\r\n    context.push('\\n' + `  `.repeat(n))\r\n  }\r\n\r\n  function addMapping(loc: Position, name?: string) {\r\n    context.map!.addMapping({\r\n      name,\r\n      source: context.filename,\r\n      original: {\r\n        line: loc.line,\r\n        column: loc.column - 1 // source-map column is 0 based\r\n      },\r\n      generated: {\r\n        line: context.line,\r\n        column: context.column - 1\r\n      }\r\n    })\r\n  }\r\n\r\n  if (!__BROWSER__ && sourceMap) {\r\n    // lazy require source-map implementation, only in non-browser builds\r\n    context.map = new SourceMapGenerator()\r\n    context.map!.setSourceContent(filename, context.source)\r\n  }\r\n\r\n  return context\r\n}\r\n\r\nexport function generate(\r\n  ast: RootNode,\r\n  options: CodegenOptions & {\r\n    onContextCreated?: (context: CodegenContext) => void\r\n  } = {}\r\n): CodegenResult {\r\n  const context = createCodegenContext(ast, options)\r\n  if (options.onContextCreated) options.onContextCreated(context)\r\n  const {\r\n    mode,\r\n    push,\r\n    prefixIdentifiers,\r\n    indent,\r\n    deindent,\r\n    newline,\r\n    scopeId,\r\n    ssr\r\n  } = context\r\n\r\n  const hasHelpers = ast.helpers.length > 0\r\n  const useWithBlock = !prefixIdentifiers && mode !== 'module'\r\n  const genScopeId = !__BROWSER__ && scopeId != null && mode === 'module'\r\n  const isSetupInlined = !__BROWSER__ && !!options.inline\r\n\r\n  // preambles\r\n  // in setup() inline mode, the preamble is generated in a sub context\r\n  // and returned separately.\r\n  const preambleContext = isSetupInlined\r\n    ? createCodegenContext(ast, options)\r\n    : context\r\n  if (!__BROWSER__ && mode === 'module') {\r\n    genModulePreamble(ast, preambleContext, genScopeId, isSetupInlined)\r\n  } else {\r\n    genFunctionPreamble(ast, preambleContext)\r\n  }\r\n  // enter render function\r\n  const functionName = ssr ? `ssrRender` : `render`\r\n  const args = ssr ? ['_ctx', '_push', '_parent', '_attrs'] : ['_ctx', '_cache']\r\n  if (!__BROWSER__ && options.bindingMetadata && !options.inline) {\r\n    // binding optimization args\r\n    args.push('$props', '$setup', '$data', '$options')\r\n  }\r\n  const signature =\r\n    !__BROWSER__ && options.isTS\r\n      ? args.map(arg => `${arg}: any`).join(',')\r\n      : args.join(', ')\r\n\r\n  if (isSetupInlined) {\r\n    push(`(${signature}) => {`)\r\n  } else {\r\n    push(`function ${functionName}(${signature}) {`)\r\n  }\r\n  indent()\r\n\r\n  if (useWithBlock) {\r\n    push(`with (_ctx) {`)\r\n    indent()\r\n    // function mode const declarations should be inside with block\r\n    // also they should be renamed to avoid collision with user properties\r\n    if (hasHelpers) {\r\n      push(\r\n        `const { ${ast.helpers\r\n          .map(s => `${helperNameMap[s]}: _${helperNameMap[s]}`)\r\n          .join(', ')} } = _Vue`\r\n      )\r\n      push(`\\n`)\r\n      newline()\r\n    }\r\n  }\r\n\r\n  // generate asset resolution statements\r\n  if (ast.components.length) {\r\n    genAssets(ast.components, 'component', context)\r\n    if (ast.directives.length || ast.temps > 0) {\r\n      newline()\r\n    }\r\n  }\r\n  if (ast.directives.length) {\r\n    genAssets(ast.directives, 'directive', context)\r\n    if (ast.temps > 0) {\r\n      newline()\r\n    }\r\n  }\r\n  if (__COMPAT__ && ast.filters && ast.filters.length) {\r\n    newline()\r\n    genAssets(ast.filters, 'filter', context)\r\n    newline()\r\n  }\r\n\r\n  if (ast.temps > 0) {\r\n    push(`let `)\r\n    for (let i = 0; i < ast.temps; i++) {\r\n      push(`${i > 0 ? `, ` : ``}_temp${i}`)\r\n    }\r\n  }\r\n  if (ast.components.length || ast.directives.length || ast.temps) {\r\n    push(`\\n`)\r\n    newline()\r\n  }\r\n\r\n  // generate the VNode tree expression\r\n  if (!ssr) {\r\n    push(`return `)\r\n  }\r\n  if (ast.codegenNode) {\r\n    genNode(ast.codegenNode, context)\r\n  } else {\r\n    push(`null`)\r\n  }\r\n\r\n  if (useWithBlock) {\r\n    deindent()\r\n    push(`}`)\r\n  }\r\n\r\n  deindent()\r\n  push(`}`)\r\n\r\n  return {\r\n    ast,\r\n    code: context.code,\r\n    preamble: isSetupInlined ? preambleContext.code : ``,\r\n    // SourceMapGenerator does have toJSON() method but it's not in the types\r\n    map: context.map ? (context.map as any).toJSON() : undefined\r\n  }\r\n}\r\n\r\nfunction genFunctionPreamble(ast: RootNode, context: CodegenContext) {\r\n  const {\r\n    ssr,\r\n    prefixIdentifiers,\r\n    push,\r\n    newline,\r\n    runtimeModuleName,\r\n    runtimeGlobalName\r\n  } = context\r\n  const VueBinding =\r\n    !__BROWSER__ && ssr\r\n      ? `require(${JSON.stringify(runtimeModuleName)})`\r\n      : runtimeGlobalName\r\n  const aliasHelper = (s: symbol) => `${helperNameMap[s]}: _${helperNameMap[s]}`\r\n  // Generate const declaration for helpers\r\n  // In prefix mode, we place the const declaration at top so it's done\r\n  // only once; But if we not prefixing, we place the declaration inside the\r\n  // with block so it doesn't incur the `in` check cost for every helper access.\r\n  if (ast.helpers.length > 0) {\r\n    if (!__BROWSER__ && prefixIdentifiers) {\r\n      push(\r\n        `const { ${ast.helpers.map(aliasHelper).join(', ')} } = ${VueBinding}\\n`\r\n      )\r\n    } else {\r\n      // \"with\" mode.\r\n      // save Vue in a separate variable to avoid collision\r\n      push(`const _Vue = ${VueBinding}\\n`)\r\n      // in \"with\" mode, helpers are declared inside the with block to avoid\r\n      // has check cost, but hoists are lifted out of the function - we need\r\n      // to provide the helper here.\r\n      if (ast.hoists.length) {\r\n        const staticHelpers = [\r\n          CREATE_VNODE,\r\n          CREATE_ELEMENT_VNODE,\r\n          CREATE_COMMENT,\r\n          CREATE_TEXT,\r\n          CREATE_STATIC\r\n        ]\r\n          .filter(helper => ast.helpers.includes(helper))\r\n          .map(aliasHelper)\r\n          .join(', ')\r\n        push(`const { ${staticHelpers} } = _Vue\\n`)\r\n      }\r\n    }\r\n  }\r\n  // generate variables for ssr helpers\r\n  if (!__BROWSER__ && ast.ssrHelpers && ast.ssrHelpers.length) {\r\n    // ssr guarantees prefixIdentifier: true\r\n    push(\r\n      `const { ${ast.ssrHelpers\r\n        .map(aliasHelper)\r\n        .join(', ')} } = require(\"@vue/server-renderer\")\\n`\r\n    )\r\n  }\r\n  genHoists(ast.hoists, context)\r\n  newline()\r\n  push(`return `)\r\n}\r\n\r\nfunction genModulePreamble(\r\n  ast: RootNode,\r\n  context: CodegenContext,\r\n  genScopeId: boolean,\r\n  inline?: boolean\r\n) {\r\n  const { push, newline, optimizeImports, runtimeModuleName } = context\r\n\r\n  if (genScopeId) {\r\n    ast.helpers.push(WITH_SCOPE_ID)\r\n    if (ast.hoists.length) {\r\n      ast.helpers.push(PUSH_SCOPE_ID, POP_SCOPE_ID)\r\n    }\r\n  }\r\n\r\n  // generate import statements for helpers\r\n  if (ast.helpers.length) {\r\n    if (optimizeImports) {\r\n      // when bundled with webpack with code-split, calling an import binding\r\n      // as a function leads to it being wrapped with `Object(a.b)` or `(0,a.b)`,\r\n      // incurring both payload size increase and potential perf overhead.\r\n      // therefore we assign the imports to variables (which is a constant ~50b\r\n      // cost per-component instead of scaling with template size)\r\n      push(\r\n        `import { ${ast.helpers\r\n          .map(s => helperNameMap[s])\r\n          .join(', ')} } from ${JSON.stringify(runtimeModuleName)}\\n`\r\n      )\r\n      push(\r\n        `\\n// Binding optimization for webpack code-split\\nconst ${ast.helpers\r\n          .map(s => `_${helperNameMap[s]} = ${helperNameMap[s]}`)\r\n          .join(', ')}\\n`\r\n      )\r\n    } else {\r\n      push(\r\n        `import { ${ast.helpers\r\n          .map(s => `${helperNameMap[s]} as _${helperNameMap[s]}`)\r\n          .join(', ')} } from ${JSON.stringify(runtimeModuleName)}\\n`\r\n      )\r\n    }\r\n  }\r\n\r\n  if (ast.ssrHelpers && ast.ssrHelpers.length) {\r\n    push(\r\n      `import { ${ast.ssrHelpers\r\n        .map(s => `${helperNameMap[s]} as _${helperNameMap[s]}`)\r\n        .join(', ')} } from \"@vue/server-renderer\"\\n`\r\n    )\r\n  }\r\n\r\n  if (ast.imports.length) {\r\n    genImports(ast.imports, context)\r\n    newline()\r\n  }\r\n\r\n  genHoists(ast.hoists, context)\r\n  newline()\r\n\r\n  if (!inline) {\r\n    push(`export `)\r\n  }\r\n}\r\n\r\nfunction genAssets(\r\n  assets: string[],\r\n  type: 'component' | 'directive' | 'filter',\r\n  { helper, push, newline, isTS }: CodegenContext\r\n) {\r\n  const resolver = helper(\r\n    __COMPAT__ && type === 'filter'\r\n      ? RESOLVE_FILTER\r\n      : type === 'component'\r\n      ? RESOLVE_COMPONENT\r\n      : RESOLVE_DIRECTIVE\r\n  )\r\n  for (let i = 0; i < assets.length; i++) {\r\n    let id = assets[i]\r\n    // potential component implicit self-reference inferred from SFC filename\r\n    const maybeSelfReference = id.endsWith('__self')\r\n    if (maybeSelfReference) {\r\n      id = id.slice(0, -6)\r\n    }\r\n    push(\r\n      `const ${toValidAssetId(id, type)} = ${resolver}(${JSON.stringify(id)}${\r\n        maybeSelfReference ? `, true` : ``\r\n      })${isTS ? `!` : ``}`\r\n    )\r\n    if (i < assets.length - 1) {\r\n      newline()\r\n    }\r\n  }\r\n}\r\n\r\nfunction genHoists(hoists: (JSChildNode | null)[], context: CodegenContext) {\r\n  if (!hoists.length) {\r\n    return\r\n  }\r\n  context.pure = true\r\n  const { push, newline, helper, scopeId, mode } = context\r\n  const genScopeId = !__BROWSER__ && scopeId != null && mode !== 'function'\r\n  newline()\r\n\r\n  // push scope Id before initializing hoisted vnodes so that these vnodes\r\n  // get the proper scopeId as well.\r\n  if (genScopeId) {\r\n    push(`${helper(PUSH_SCOPE_ID)}(\"${scopeId}\")`)\r\n    newline()\r\n  }\r\n\r\n  hoists.forEach((exp, i) => {\r\n    if (exp) {\r\n      push(`const _hoisted_${i + 1} = `)\r\n      genNode(exp, context)\r\n      newline()\r\n    }\r\n  })\r\n\r\n  if (genScopeId) {\r\n    push(`${helper(POP_SCOPE_ID)}()`)\r\n    newline()\r\n  }\r\n  context.pure = false\r\n}\r\n\r\nfunction genImports(importsOptions: ImportItem[], context: CodegenContext) {\r\n  if (!importsOptions.length) {\r\n    return\r\n  }\r\n  importsOptions.forEach(imports => {\r\n    context.push(`import `)\r\n    genNode(imports.exp, context)\r\n    context.push(` from '${imports.path}'`)\r\n    context.newline()\r\n  })\r\n}\r\n\r\nfunction isText(n: string | CodegenNode) {\r\n  return (\r\n    isString(n) ||\r\n    n.type === NodeTypes.SIMPLE_EXPRESSION ||\r\n    n.type === NodeTypes.TEXT ||\r\n    n.type === NodeTypes.INTERPOLATION ||\r\n    n.type === NodeTypes.COMPOUND_EXPRESSION\r\n  )\r\n}\r\n\r\nfunction genNodeListAsArray(\r\n  nodes: (string | CodegenNode | TemplateChildNode[])[],\r\n  context: CodegenContext\r\n) {\r\n  const multilines =\r\n    nodes.length > 3 ||\r\n    ((!__BROWSER__ || __DEV__) && nodes.some(n => isArray(n) || !isText(n)))\r\n  context.push(`[`)\r\n  multilines && context.indent()\r\n  genNodeList(nodes, context, multilines)\r\n  multilines && context.deindent()\r\n  context.push(`]`)\r\n}\r\n\r\nfunction genNodeList(\r\n  nodes: (string | symbol | CodegenNode | TemplateChildNode[])[],\r\n  context: CodegenContext,\r\n  multilines: boolean = false,\r\n  comma: boolean = true\r\n) {\r\n  const { push, newline } = context\r\n  for (let i = 0; i < nodes.length; i++) {\r\n    const node = nodes[i]\r\n    if (isString(node)) {\r\n      push(node)\r\n    } else if (isArray(node)) {\r\n      genNodeListAsArray(node, context)\r\n    } else {\r\n      genNode(node, context)\r\n    }\r\n    if (i < nodes.length - 1) {\r\n      if (multilines) {\r\n        comma && push(',')\r\n        newline()\r\n      } else {\r\n        comma && push(', ')\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nfunction genNode(node: CodegenNode | symbol | string, context: CodegenContext) {\r\n  if (isString(node)) {\r\n    context.push(node)\r\n    return\r\n  }\r\n  if (isSymbol(node)) {\r\n    context.push(context.helper(node))\r\n    return\r\n  }\r\n  switch (node.type) {\r\n    case NodeTypes.ELEMENT:\r\n    case NodeTypes.IF:\r\n    case NodeTypes.FOR:\r\n      __DEV__ &&\r\n        assert(\r\n          node.codegenNode != null,\r\n          `Codegen node is missing for element/if/for node. ` +\r\n            `Apply appropriate transforms first.`\r\n        )\r\n      genNode(node.codegenNode!, context)\r\n      break\r\n    case NodeTypes.TEXT:\r\n      genText(node, context)\r\n      break\r\n    case NodeTypes.SIMPLE_EXPRESSION:\r\n      genExpression(node, context)\r\n      break\r\n    case NodeTypes.INTERPOLATION:\r\n      genInterpolation(node, context)\r\n      break\r\n    case NodeTypes.TEXT_CALL:\r\n      genNode(node.codegenNode, context)\r\n      break\r\n    case NodeTypes.COMPOUND_EXPRESSION:\r\n      genCompoundExpression(node, context)\r\n      break\r\n    case NodeTypes.COMMENT:\r\n      genComment(node, context)\r\n      break\r\n    case NodeTypes.VNODE_CALL:\r\n      genVNodeCall(node, context)\r\n      break\r\n\r\n    case NodeTypes.JS_CALL_EXPRESSION:\r\n      genCallExpression(node, context)\r\n      break\r\n    case NodeTypes.JS_OBJECT_EXPRESSION:\r\n      genObjectExpression(node, context)\r\n      break\r\n    case NodeTypes.JS_ARRAY_EXPRESSION:\r\n      genArrayExpression(node, context)\r\n      break\r\n    case NodeTypes.JS_FUNCTION_EXPRESSION:\r\n      genFunctionExpression(node, context)\r\n      break\r\n    case NodeTypes.JS_CONDITIONAL_EXPRESSION:\r\n      genConditionalExpression(node, context)\r\n      break\r\n    case NodeTypes.JS_CACHE_EXPRESSION:\r\n      genCacheExpression(node, context)\r\n      break\r\n    case NodeTypes.JS_BLOCK_STATEMENT:\r\n      genNodeList(node.body, context, true, false)\r\n      break\r\n\r\n    // SSR only types\r\n    case NodeTypes.JS_TEMPLATE_LITERAL:\r\n      !__BROWSER__ && genTemplateLiteral(node, context)\r\n      break\r\n    case NodeTypes.JS_IF_STATEMENT:\r\n      !__BROWSER__ && genIfStatement(node, context)\r\n      break\r\n    case NodeTypes.JS_ASSIGNMENT_EXPRESSION:\r\n      !__BROWSER__ && genAssignmentExpression(node, context)\r\n      break\r\n    case NodeTypes.JS_SEQUENCE_EXPRESSION:\r\n      !__BROWSER__ && genSequenceExpression(node, context)\r\n      break\r\n    case NodeTypes.JS_RETURN_STATEMENT:\r\n      !__BROWSER__ && genReturnStatement(node, context)\r\n      break\r\n\r\n    /* istanbul ignore next */\r\n    case NodeTypes.IF_BRANCH:\r\n      // noop\r\n      break\r\n    default:\r\n      if (__DEV__) {\r\n        assert(false, `unhandled codegen node type: ${(node as any).type}`)\r\n        // make sure we exhaust all possible types\r\n        const exhaustiveCheck: never = node\r\n        return exhaustiveCheck\r\n      }\r\n  }\r\n}\r\n\r\nfunction genText(\r\n  node: TextNode | SimpleExpressionNode,\r\n  context: CodegenContext\r\n) {\r\n  context.push(JSON.stringify(node.content), node)\r\n}\r\n\r\nfunction genExpression(node: SimpleExpressionNode, context: CodegenContext) {\r\n  const { content, isStatic } = node\r\n  context.push(isStatic ? JSON.stringify(content) : content, node)\r\n}\r\n\r\nfunction genInterpolation(node: InterpolationNode, context: CodegenContext) {\r\n  const { push, helper, pure } = context\r\n  if (pure) push(PURE_ANNOTATION)\r\n  push(`${helper(TO_DISPLAY_STRING)}(`)\r\n  genNode(node.content, context)\r\n  push(`)`)\r\n}\r\n\r\nfunction genCompoundExpression(\r\n  node: CompoundExpressionNode,\r\n  context: CodegenContext\r\n) {\r\n  for (let i = 0; i < node.children!.length; i++) {\r\n    const child = node.children![i]\r\n    if (isString(child)) {\r\n      context.push(child)\r\n    } else {\r\n      genNode(child, context)\r\n    }\r\n  }\r\n}\r\n\r\nfunction genExpressionAsPropertyKey(\r\n  node: ExpressionNode,\r\n  context: CodegenContext\r\n) {\r\n  const { push } = context\r\n  if (node.type === NodeTypes.COMPOUND_EXPRESSION) {\r\n    push(`[`)\r\n    genCompoundExpression(node, context)\r\n    push(`]`)\r\n  } else if (node.isStatic) {\r\n    // only quote keys if necessary\r\n    const text = isSimpleIdentifier(node.content)\r\n      ? node.content\r\n      : JSON.stringify(node.content)\r\n    push(text, node)\r\n  } else {\r\n    push(`[${node.content}]`, node)\r\n  }\r\n}\r\n\r\nfunction genComment(node: CommentNode, context: CodegenContext) {\r\n  const { push, helper, pure } = context\r\n  if (pure) {\r\n    push(PURE_ANNOTATION)\r\n  }\r\n  push(`${helper(CREATE_COMMENT)}(${JSON.stringify(node.content)})`, node)\r\n}\r\n\r\nfunction genVNodeCall(node: VNodeCall, context: CodegenContext) {\r\n  const { push, helper, pure } = context\r\n  const {\r\n    tag,\r\n    props,\r\n    children,\r\n    patchFlag,\r\n    dynamicProps,\r\n    directives,\r\n    isBlock,\r\n    disableTracking,\r\n    isComponent\r\n  } = node\r\n  if (directives) {\r\n    push(helper(WITH_DIRECTIVES) + `(`)\r\n  }\r\n  if (isBlock) {\r\n    push(`(${helper(OPEN_BLOCK)}(${disableTracking ? `true` : ``}), `)\r\n  }\r\n  if (pure) {\r\n    push(PURE_ANNOTATION)\r\n  }\r\n  const callHelper: symbol = isBlock\r\n    ? getVNodeBlockHelper(context.inSSR, isComponent)\r\n    : getVNodeHelper(context.inSSR, isComponent)\r\n  push(helper(callHelper) + `(`, node)\r\n  genNodeList(\r\n    genNullableArgs([tag, props, children, patchFlag, dynamicProps]),\r\n    context\r\n  )\r\n  push(`)`)\r\n  if (isBlock) {\r\n    push(`)`)\r\n  }\r\n  if (directives) {\r\n    push(`, `)\r\n    genNode(directives, context)\r\n    push(`)`)\r\n  }\r\n}\r\n\r\nfunction genNullableArgs(args: any[]): CallExpression['arguments'] {\r\n  let i = args.length\r\n  while (i--) {\r\n    if (args[i] != null) break\r\n  }\r\n  return args.slice(0, i + 1).map(arg => arg || `null`)\r\n}\r\n\r\n// JavaScript\r\nfunction genCallExpression(node: CallExpression, context: CodegenContext) {\r\n  const { push, helper, pure } = context\r\n  const callee = isString(node.callee) ? node.callee : helper(node.callee)\r\n  if (pure) {\r\n    push(PURE_ANNOTATION)\r\n  }\r\n  push(callee + `(`, node)\r\n  genNodeList(node.arguments, context)\r\n  push(`)`)\r\n}\r\n\r\nfunction genObjectExpression(node: ObjectExpression, context: CodegenContext) {\r\n  const { push, indent, deindent, newline } = context\r\n  const { properties } = node\r\n  if (!properties.length) {\r\n    push(`{}`, node)\r\n    return\r\n  }\r\n  const multilines =\r\n    properties.length > 1 ||\r\n    ((!__BROWSER__ || __DEV__) &&\r\n      properties.some(p => p.value.type !== NodeTypes.SIMPLE_EXPRESSION))\r\n  push(multilines ? `{` : `{ `)\r\n  multilines && indent()\r\n  for (let i = 0; i < properties.length; i++) {\r\n    const { key, value } = properties[i]\r\n    // key\r\n    genExpressionAsPropertyKey(key, context)\r\n    push(`: `)\r\n    // value\r\n    genNode(value, context)\r\n    if (i < properties.length - 1) {\r\n      // will only reach this if it's multilines\r\n      push(`,`)\r\n      newline()\r\n    }\r\n  }\r\n  multilines && deindent()\r\n  push(multilines ? `}` : ` }`)\r\n}\r\n\r\nfunction genArrayExpression(node: ArrayExpression, context: CodegenContext) {\r\n  genNodeListAsArray(node.elements as CodegenNode[], context)\r\n}\r\n\r\nfunction genFunctionExpression(\r\n  node: FunctionExpression,\r\n  context: CodegenContext\r\n) {\r\n  const { push, indent, deindent } = context\r\n  const { params, returns, body, newline, isSlot } = node\r\n  if (isSlot) {\r\n    // wrap slot functions with owner context\r\n    push(`_${helperNameMap[WITH_CTX]}(`)\r\n  }\r\n  push(`(`, node)\r\n  if (isArray(params)) {\r\n    genNodeList(params, context)\r\n  } else if (params) {\r\n    genNode(params, context)\r\n  }\r\n  push(`) => `)\r\n  if (newline || body) {\r\n    push(`{`)\r\n    indent()\r\n  }\r\n  if (returns) {\r\n    if (newline) {\r\n      push(`return `)\r\n    }\r\n    if (isArray(returns)) {\r\n      genNodeListAsArray(returns, context)\r\n    } else {\r\n      genNode(returns, context)\r\n    }\r\n  } else if (body) {\r\n    genNode(body, context)\r\n  }\r\n  if (newline || body) {\r\n    deindent()\r\n    push(`}`)\r\n  }\r\n  if (isSlot) {\r\n    if (__COMPAT__ && node.isNonScopedSlot) {\r\n      push(`, undefined, true`)\r\n    }\r\n    push(`)`)\r\n  }\r\n}\r\n\r\nfunction genConditionalExpression(\r\n  node: ConditionalExpression,\r\n  context: CodegenContext\r\n) {\r\n  const { test, consequent, alternate, newline: needNewline } = node\r\n  const { push, indent, deindent, newline } = context\r\n  if (test.type === NodeTypes.SIMPLE_EXPRESSION) {\r\n    const needsParens = !isSimpleIdentifier(test.content)\r\n    needsParens && push(`(`)\r\n    genExpression(test, context)\r\n    needsParens && push(`)`)\r\n  } else {\r\n    push(`(`)\r\n    genNode(test, context)\r\n    push(`)`)\r\n  }\r\n  needNewline && indent()\r\n  context.indentLevel++\r\n  needNewline || push(` `)\r\n  push(`? `)\r\n  genNode(consequent, context)\r\n  context.indentLevel--\r\n  needNewline && newline()\r\n  needNewline || push(` `)\r\n  push(`: `)\r\n  const isNested = alternate.type === NodeTypes.JS_CONDITIONAL_EXPRESSION\r\n  if (!isNested) {\r\n    context.indentLevel++\r\n  }\r\n  genNode(alternate, context)\r\n  if (!isNested) {\r\n    context.indentLevel--\r\n  }\r\n  needNewline && deindent(true /* without newline */)\r\n}\r\n\r\nfunction genCacheExpression(node: CacheExpression, context: CodegenContext) {\r\n  const { push, helper, indent, deindent, newline } = context\r\n  push(`_cache[${node.index}] || (`)\r\n  if (node.isVNode) {\r\n    indent()\r\n    push(`${helper(SET_BLOCK_TRACKING)}(-1),`)\r\n    newline()\r\n  }\r\n  push(`_cache[${node.index}] = `)\r\n  genNode(node.value, context)\r\n  if (node.isVNode) {\r\n    push(`,`)\r\n    newline()\r\n    push(`${helper(SET_BLOCK_TRACKING)}(1),`)\r\n    newline()\r\n    push(`_cache[${node.index}]`)\r\n    deindent()\r\n  }\r\n  push(`)`)\r\n}\r\n\r\nfunction genTemplateLiteral(node: TemplateLiteral, context: CodegenContext) {\r\n  const { push, indent, deindent } = context\r\n  push('`')\r\n  const l = node.elements.length\r\n  const multilines = l > 3\r\n  for (let i = 0; i < l; i++) {\r\n    const e = node.elements[i]\r\n    if (isString(e)) {\r\n      push(e.replace(/(`|\\$|\\\\)/g, '\\\\$1'))\r\n    } else {\r\n      push('${')\r\n      if (multilines) indent()\r\n      genNode(e, context)\r\n      if (multilines) deindent()\r\n      push('}')\r\n    }\r\n  }\r\n  push('`')\r\n}\r\n\r\nfunction genIfStatement(node: IfStatement, context: CodegenContext) {\r\n  const { push, indent, deindent } = context\r\n  const { test, consequent, alternate } = node\r\n  push(`if (`)\r\n  genNode(test, context)\r\n  push(`) {`)\r\n  indent()\r\n  genNode(consequent, context)\r\n  deindent()\r\n  push(`}`)\r\n  if (alternate) {\r\n    push(` else `)\r\n    if (alternate.type === NodeTypes.JS_IF_STATEMENT) {\r\n      genIfStatement(alternate, context)\r\n    } else {\r\n      push(`{`)\r\n      indent()\r\n      genNode(alternate, context)\r\n      deindent()\r\n      push(`}`)\r\n    }\r\n  }\r\n}\r\n\r\nfunction genAssignmentExpression(\r\n  node: AssignmentExpression,\r\n  context: CodegenContext\r\n) {\r\n  genNode(node.left, context)\r\n  context.push(` = `)\r\n  genNode(node.right, context)\r\n}\r\n\r\nfunction genSequenceExpression(\r\n  node: SequenceExpression,\r\n  context: CodegenContext\r\n) {\r\n  context.push(`(`)\r\n  genNodeList(node.expressions, context)\r\n  context.push(`)`)\r\n}\r\n\r\nfunction genReturnStatement(\r\n  { returns }: ReturnStatement,\r\n  context: CodegenContext\r\n) {\r\n  context.push(`return `)\r\n  if (isArray(returns)) {\r\n    genNodeListAsArray(returns, context)\r\n  } else {\r\n    genNode(returns, context)\r\n  }\r\n}\r\n","import {\r\n  createStructuralDirectiveTransform,\r\n  TransformContext,\r\n  traverseNode\r\n} from '../transform'\r\nimport {\r\n  NodeTypes,\r\n  ElementTypes,\r\n  ElementNode,\r\n  DirectiveNode,\r\n  IfBranchNode,\r\n  SimpleExpressionNode,\r\n  createCallExpression,\r\n  createConditionalExpression,\r\n  createSimpleExpression,\r\n  createObjectProperty,\r\n  createObjectExpression,\r\n  IfConditionalExpression,\r\n  BlockCodegenNode,\r\n  IfNode,\r\n  createVNodeCall,\r\n  AttributeNode,\r\n  locStub,\r\n  CacheExpression,\r\n  ConstantTypes,\r\n  MemoExpression\r\n} from '../ast'\r\nimport { createCompilerError, ErrorCodes } from '../errors'\r\nimport { processExpression } from './transformExpression'\r\nimport { validateBrowserExpression } from '../validateExpression'\r\nimport { FRAGMENT, CREATE_COMMENT } from '../runtimeHelpers'\r\nimport {\r\n  injectProp,\r\n  findDir,\r\n  findProp,\r\n  isBuiltInType,\r\n  makeBlock\r\n} from '../utils'\r\nimport { PatchFlags, PatchFlagNames } from '@vue/shared'\r\nimport { getMemoedVNodeCall } from '..'\r\n\r\nexport const transformIf = createStructuralDirectiveTransform(\r\n  /^(if|else|else-if)$/,\r\n  (node, dir, context) => {\r\n    return processIf(node, dir, context, (ifNode, branch, isRoot) => {\r\n      // #1587: We need to dynamically increment the key based on the current\r\n      // node's sibling nodes, since chained v-if/else branches are\r\n      // rendered at the same depth\r\n      const siblings = context.parent!.children\r\n      let i = siblings.indexOf(ifNode)\r\n      let key = 0\r\n      while (i-- >= 0) {\r\n        const sibling = siblings[i]\r\n        if (sibling && sibling.type === NodeTypes.IF) {\r\n          key += sibling.branches.length\r\n        }\r\n      }\r\n\r\n      // Exit callback. Complete the codegenNode when all children have been\r\n      // transformed.\r\n      return () => {\r\n        if (isRoot) {\r\n          ifNode.codegenNode = createCodegenNodeForBranch(\r\n            branch,\r\n            key,\r\n            context\r\n          ) as IfConditionalExpression\r\n        } else {\r\n          // attach this branch's codegen node to the v-if root.\r\n          const parentCondition = getParentCondition(ifNode.codegenNode!)\r\n          parentCondition.alternate = createCodegenNodeForBranch(\r\n            branch,\r\n            key + ifNode.branches.length - 1,\r\n            context\r\n          )\r\n        }\r\n      }\r\n    })\r\n  }\r\n)\r\n\r\n// target-agnostic transform used for both Client and SSR\r\nexport function processIf(\r\n  node: ElementNode,\r\n  dir: DirectiveNode,\r\n  context: TransformContext,\r\n  processCodegen?: (\r\n    node: IfNode,\r\n    branch: IfBranchNode,\r\n    isRoot: boolean\r\n  ) => (() => void) | undefined\r\n) {\r\n  if (\r\n    dir.name !== 'else' &&\r\n    (!dir.exp || !(dir.exp as SimpleExpressionNode).content.trim())\r\n  ) {\r\n    const loc = dir.exp ? dir.exp.loc : node.loc\r\n    context.onError(\r\n      createCompilerError(ErrorCodes.X_V_IF_NO_EXPRESSION, dir.loc)\r\n    )\r\n    dir.exp = createSimpleExpression(`true`, false, loc)\r\n  }\r\n\r\n  if (!__BROWSER__ && context.prefixIdentifiers && dir.exp) {\r\n    // dir.exp can only be simple expression because vIf transform is applied\r\n    // before expression transform.\r\n    dir.exp = processExpression(dir.exp as SimpleExpressionNode, context)\r\n  }\r\n\r\n  if (__DEV__ && __BROWSER__ && dir.exp) {\r\n    validateBrowserExpression(dir.exp as SimpleExpressionNode, context)\r\n  }\r\n\r\n  if (dir.name === 'if') {\r\n    const branch = createIfBranch(node, dir)\r\n    const ifNode: IfNode = {\r\n      type: NodeTypes.IF,\r\n      loc: node.loc,\r\n      branches: [branch]\r\n    }\r\n    context.replaceNode(ifNode)\r\n    if (processCodegen) {\r\n      return processCodegen(ifNode, branch, true)\r\n    }\r\n  } else {\r\n    // locate the adjacent v-if\r\n    const siblings = context.parent!.children\r\n    const comments = []\r\n    let i = siblings.indexOf(node)\r\n    while (i-- >= -1) {\r\n      const sibling = siblings[i]\r\n      if (__DEV__ && sibling && sibling.type === NodeTypes.COMMENT) {\r\n        context.removeNode(sibling)\r\n        comments.unshift(sibling)\r\n        continue\r\n      }\r\n\r\n      if (\r\n        sibling &&\r\n        sibling.type === NodeTypes.TEXT &&\r\n        !sibling.content.trim().length\r\n      ) {\r\n        context.removeNode(sibling)\r\n        continue\r\n      }\r\n\r\n      if (sibling && sibling.type === NodeTypes.IF) {\r\n        // move the node to the if node's branches\r\n        context.removeNode()\r\n        const branch = createIfBranch(node, dir)\r\n        if (\r\n          __DEV__ &&\r\n          comments.length &&\r\n          // #3619 ignore comments if the v-if is direct child of <transition>\r\n          !(\r\n            context.parent &&\r\n            context.parent.type === NodeTypes.ELEMENT &&\r\n            isBuiltInType(context.parent.tag, 'transition')\r\n          )\r\n        ) {\r\n          branch.children = [...comments, ...branch.children]\r\n        }\r\n\r\n        // check if user is forcing same key on different branches\r\n        if (__DEV__ || !__BROWSER__) {\r\n          const key = branch.userKey\r\n          if (key) {\r\n            sibling.branches.forEach(({ userKey }) => {\r\n              if (isSameKey(userKey, key)) {\r\n                context.onError(\r\n                  createCompilerError(\r\n                    ErrorCodes.X_V_IF_SAME_KEY,\r\n                    branch.userKey!.loc\r\n                  )\r\n                )\r\n              }\r\n            })\r\n          }\r\n        }\r\n\r\n        sibling.branches.push(branch)\r\n        const onExit = processCodegen && processCodegen(sibling, branch, false)\r\n        // since the branch was removed, it will not be traversed.\r\n        // make sure to traverse here.\r\n        traverseNode(branch, context)\r\n        // call on exit\r\n        if (onExit) onExit()\r\n        // make sure to reset currentNode after traversal to indicate this\r\n        // node has been removed.\r\n        context.currentNode = null\r\n      } else {\r\n        context.onError(\r\n          createCompilerError(ErrorCodes.X_V_ELSE_NO_ADJACENT_IF, node.loc)\r\n        )\r\n      }\r\n      break\r\n    }\r\n  }\r\n}\r\n\r\nfunction createIfBranch(node: ElementNode, dir: DirectiveNode): IfBranchNode {\r\n  return {\r\n    type: NodeTypes.IF_BRANCH,\r\n    loc: node.loc,\r\n    condition: dir.name === 'else' ? undefined : dir.exp,\r\n    children:\r\n      node.tagType === ElementTypes.TEMPLATE && !findDir(node, 'for')\r\n        ? node.children\r\n        : [node],\r\n    userKey: findProp(node, `key`)\r\n  }\r\n}\r\n\r\nfunction createCodegenNodeForBranch(\r\n  branch: IfBranchNode,\r\n  keyIndex: number,\r\n  context: TransformContext\r\n): IfConditionalExpression | BlockCodegenNode | MemoExpression {\r\n  if (branch.condition) {\r\n    return createConditionalExpression(\r\n      branch.condition,\r\n      createChildrenCodegenNode(branch, keyIndex, context),\r\n      // make sure to pass in asBlock: true so that the comment node call\r\n      // closes the current block.\r\n      createCallExpression(context.helper(CREATE_COMMENT), [\r\n        __DEV__ ? '\"v-if\"' : '\"\"',\r\n        'true'\r\n      ])\r\n    ) as IfConditionalExpression\r\n  } else {\r\n    return createChildrenCodegenNode(branch, keyIndex, context)\r\n  }\r\n}\r\n\r\nfunction createChildrenCodegenNode(\r\n  branch: IfBranchNode,\r\n  keyIndex: number,\r\n  context: TransformContext\r\n): BlockCodegenNode | MemoExpression {\r\n  const { helper } = context\r\n  const keyProperty = createObjectProperty(\r\n    `key`,\r\n    createSimpleExpression(\r\n      `${keyIndex}`,\r\n      false,\r\n      locStub,\r\n      ConstantTypes.CAN_HOIST\r\n    )\r\n  )\r\n  const { children } = branch\r\n  const firstChild = children[0]\r\n  const needFragmentWrapper =\r\n    children.length !== 1 || firstChild.type !== NodeTypes.ELEMENT\r\n  if (needFragmentWrapper) {\r\n    if (children.length === 1 && firstChild.type === NodeTypes.FOR) {\r\n      // optimize away nested fragments when child is a ForNode\r\n      const vnodeCall = firstChild.codegenNode!\r\n      injectProp(vnodeCall, keyProperty, context)\r\n      return vnodeCall\r\n    } else {\r\n      let patchFlag = PatchFlags.STABLE_FRAGMENT\r\n      let patchFlagText = PatchFlagNames[PatchFlags.STABLE_FRAGMENT]\r\n      // check if the fragment actually contains a single valid child with\r\n      // the rest being comments\r\n      if (\r\n        __DEV__ &&\r\n        children.filter(c => c.type !== NodeTypes.COMMENT).length === 1\r\n      ) {\r\n        patchFlag |= PatchFlags.DEV_ROOT_FRAGMENT\r\n        patchFlagText += `, ${PatchFlagNames[PatchFlags.DEV_ROOT_FRAGMENT]}`\r\n      }\r\n\r\n      return createVNodeCall(\r\n        context,\r\n        helper(FRAGMENT),\r\n        createObjectExpression([keyProperty]),\r\n        children,\r\n        patchFlag + (__DEV__ ? ` /* ${patchFlagText} */` : ``),\r\n        undefined,\r\n        undefined,\r\n        true,\r\n        false,\r\n        false /* isComponent */,\r\n        branch.loc\r\n      )\r\n    }\r\n  } else {\r\n    const ret = (firstChild as ElementNode).codegenNode as\r\n      | BlockCodegenNode\r\n      | MemoExpression\r\n    const vnodeCall = getMemoedVNodeCall(ret)\r\n    // Change createVNode to createBlock.\r\n    if (vnodeCall.type === NodeTypes.VNODE_CALL) {\r\n      makeBlock(vnodeCall, context)\r\n    }\r\n    // inject branch key\r\n    injectProp(vnodeCall, keyProperty, context)\r\n    return ret\r\n  }\r\n}\r\n\r\nfunction isSameKey(\r\n  a: AttributeNode | DirectiveNode | undefined,\r\n  b: AttributeNode | DirectiveNode\r\n): boolean {\r\n  if (!a || a.type !== b.type) {\r\n    return false\r\n  }\r\n  if (a.type === NodeTypes.ATTRIBUTE) {\r\n    if (a.value!.content !== (b as AttributeNode).value!.content) {\r\n      return false\r\n    }\r\n  } else {\r\n    // directive\r\n    const exp = a.exp!\r\n    const branchExp = (b as DirectiveNode).exp!\r\n    if (exp.type !== branchExp.type) {\r\n      return false\r\n    }\r\n    if (\r\n      exp.type !== NodeTypes.SIMPLE_EXPRESSION ||\r\n      exp.isStatic !== (branchExp as SimpleExpressionNode).isStatic ||\r\n      exp.content !== (branchExp as SimpleExpressionNode).content\r\n    ) {\r\n      return false\r\n    }\r\n  }\r\n  return true\r\n}\r\n\r\nfunction getParentCondition(\r\n  node: IfConditionalExpression | CacheExpression\r\n): IfConditionalExpression {\r\n  while (true) {\r\n    if (node.type === NodeTypes.JS_CONDITIONAL_EXPRESSION) {\r\n      if (node.alternate.type === NodeTypes.JS_CONDITIONAL_EXPRESSION) {\r\n        node = node.alternate\r\n      } else {\r\n        return node\r\n      }\r\n    } else if (node.type === NodeTypes.JS_CACHE_EXPRESSION) {\r\n      node = node.value as IfConditionalExpression\r\n    }\r\n  }\r\n}\r\n","import {\r\n  createStructuralDirectiveTransform,\r\n  TransformContext\r\n} from '../transform'\r\nimport {\r\n  NodeTypes,\r\n  ExpressionNode,\r\n  createSimpleExpression,\r\n  SourceLocation,\r\n  SimpleExpressionNode,\r\n  createCallExpression,\r\n  createFunctionExpression,\r\n  createObjectExpression,\r\n  createObjectProperty,\r\n  ForCodegenNode,\r\n  RenderSlotCall,\r\n  SlotOutletNode,\r\n  ElementNode,\r\n  DirectiveNode,\r\n  ForNode,\r\n  PlainElementNode,\r\n  createVNodeCall,\r\n  VNodeCall,\r\n  ForRenderListExpression,\r\n  BlockCodegenNode,\r\n  ForIteratorExpression,\r\n  ConstantTypes,\r\n  createBlockStatement,\r\n  createCompoundExpression\r\n} from '../ast'\r\nimport { createCompilerError, ErrorCodes } from '../errors'\r\nimport {\r\n  getInnerRange,\r\n  findProp,\r\n  isTemplateNode,\r\n  isSlotOutlet,\r\n  injectProp,\r\n  getVNodeBlockHelper,\r\n  getVNodeHelper,\r\n  findDir\r\n} from '../utils'\r\nimport {\r\n  RENDER_LIST,\r\n  OPEN_BLOCK,\r\n  FRAGMENT,\r\n  IS_MEMO_SAME\r\n} from '../runtimeHelpers'\r\nimport { processExpression } from './transformExpression'\r\nimport { validateBrowserExpression } from '../validateExpression'\r\nimport { PatchFlags, PatchFlagNames } from '@vue/shared'\r\n\r\nexport const transformFor = createStructuralDirectiveTransform(\r\n  'for',\r\n  (node, dir, context) => {\r\n    const { helper, removeHelper } = context\r\n    return processFor(node, dir, context, forNode => {\r\n      // create the loop render function expression now, and add the\r\n      // iterator on exit after all children have been traversed\r\n      const renderExp = createCallExpression(helper(RENDER_LIST), [\r\n        forNode.source\r\n      ]) as ForRenderListExpression\r\n      const memo = findDir(node, 'memo')\r\n      const keyProp = findProp(node, `key`)\r\n      const keyExp =\r\n        keyProp &&\r\n        (keyProp.type === NodeTypes.ATTRIBUTE\r\n          ? createSimpleExpression(keyProp.value!.content, true)\r\n          : keyProp.exp!)\r\n      const keyProperty = keyProp ? createObjectProperty(`key`, keyExp!) : null\r\n\r\n      if (!__BROWSER__ && context.prefixIdentifiers && keyProperty) {\r\n        // #2085 process :key expression needs to be processed in order for it\r\n        // to behave consistently for <template v-for> and <div v-for>.\r\n        // In the case of `<template v-for>`, the node is discarded and never\r\n        // traversed so its key expression won't be processed by the normal\r\n        // transforms.\r\n        keyProperty.value = processExpression(\r\n          keyProperty.value as SimpleExpressionNode,\r\n          context\r\n        )\r\n      }\r\n\r\n      const isStableFragment =\r\n        forNode.source.type === NodeTypes.SIMPLE_EXPRESSION &&\r\n        forNode.source.constType > ConstantTypes.NOT_CONSTANT\r\n      const fragmentFlag = isStableFragment\r\n        ? PatchFlags.STABLE_FRAGMENT\r\n        : keyProp\r\n        ? PatchFlags.KEYED_FRAGMENT\r\n        : PatchFlags.UNKEYED_FRAGMENT\r\n\r\n      forNode.codegenNode = createVNodeCall(\r\n        context,\r\n        helper(FRAGMENT),\r\n        undefined,\r\n        renderExp,\r\n        fragmentFlag +\r\n          (__DEV__ ? ` /* ${PatchFlagNames[fragmentFlag]} */` : ``),\r\n        undefined,\r\n        undefined,\r\n        true /* isBlock */,\r\n        !isStableFragment /* disableTracking */,\r\n        false /* isComponent */,\r\n        node.loc\r\n      ) as ForCodegenNode\r\n\r\n      return () => {\r\n        // finish the codegen now that all children have been traversed\r\n        let childBlock: BlockCodegenNode\r\n        const isTemplate = isTemplateNode(node)\r\n        const { children } = forNode\r\n\r\n        // check <template v-for> key placement\r\n        if ((__DEV__ || !__BROWSER__) && isTemplate) {\r\n          node.children.some(c => {\r\n            if (c.type === NodeTypes.ELEMENT) {\r\n              const key = findProp(c, 'key')\r\n              if (key) {\r\n                context.onError(\r\n                  createCompilerError(\r\n                    ErrorCodes.X_V_FOR_TEMPLATE_KEY_PLACEMENT,\r\n                    key.loc\r\n                  )\r\n                )\r\n                return true\r\n              }\r\n            }\r\n          })\r\n        }\r\n\r\n        const needFragmentWrapper =\r\n          children.length !== 1 || children[0].type !== NodeTypes.ELEMENT\r\n        const slotOutlet = isSlotOutlet(node)\r\n          ? node\r\n          : isTemplate &&\r\n            node.children.length === 1 &&\r\n            isSlotOutlet(node.children[0])\r\n          ? (node.children[0] as SlotOutletNode) // api-extractor somehow fails to infer this\r\n          : null\r\n\r\n        if (slotOutlet) {\r\n          // <slot v-for=\"...\"> or <template v-for=\"...\"><slot/></template>\r\n          childBlock = slotOutlet.codegenNode as RenderSlotCall\r\n          if (isTemplate && keyProperty) {\r\n            // <template v-for=\"...\" :key=\"...\"><slot/></template>\r\n            // we need to inject the key to the renderSlot() call.\r\n            // the props for renderSlot is passed as the 3rd argument.\r\n            injectProp(childBlock, keyProperty, context)\r\n          }\r\n        } else if (needFragmentWrapper) {\r\n          // <template v-for=\"...\"> with text or multi-elements\r\n          // should generate a fragment block for each loop\r\n          childBlock = createVNodeCall(\r\n            context,\r\n            helper(FRAGMENT),\r\n            keyProperty ? createObjectExpression([keyProperty]) : undefined,\r\n            node.children,\r\n            PatchFlags.STABLE_FRAGMENT +\r\n              (__DEV__\r\n                ? ` /* ${PatchFlagNames[PatchFlags.STABLE_FRAGMENT]} */`\r\n                : ``),\r\n            undefined,\r\n            undefined,\r\n            true,\r\n            undefined,\r\n            false /* isComponent */\r\n          )\r\n        } else {\r\n          // Normal element v-for. Directly use the child's codegenNode\r\n          // but mark it as a block.\r\n          childBlock = (children[0] as PlainElementNode)\r\n            .codegenNode as VNodeCall\r\n          if (isTemplate && keyProperty) {\r\n            injectProp(childBlock, keyProperty, context)\r\n          }\r\n          if (childBlock.isBlock !== !isStableFragment) {\r\n            if (childBlock.isBlock) {\r\n              // switch from block to vnode\r\n              removeHelper(OPEN_BLOCK)\r\n              removeHelper(\r\n                getVNodeBlockHelper(context.inSSR, childBlock.isComponent)\r\n              )\r\n            } else {\r\n              // switch from vnode to block\r\n              removeHelper(\r\n                getVNodeHelper(context.inSSR, childBlock.isComponent)\r\n              )\r\n            }\r\n          }\r\n          childBlock.isBlock = !isStableFragment\r\n          if (childBlock.isBlock) {\r\n            helper(OPEN_BLOCK)\r\n            helper(getVNodeBlockHelper(context.inSSR, childBlock.isComponent))\r\n          } else {\r\n            helper(getVNodeHelper(context.inSSR, childBlock.isComponent))\r\n          }\r\n        }\r\n\r\n        if (memo) {\r\n          const loop = createFunctionExpression(\r\n            createForLoopParams(forNode.parseResult, [\r\n              createSimpleExpression(`_cached`)\r\n            ])\r\n          )\r\n          loop.body = createBlockStatement([\r\n            createCompoundExpression([`const _memo = (`, memo.exp!, `)`]),\r\n            createCompoundExpression([\r\n              `if (_cached`,\r\n              ...(keyExp ? [` && _cached.key === `, keyExp] : []),\r\n              ` && ${context.helperString(\r\n                IS_MEMO_SAME\r\n              )}(_cached, _memo)) return _cached`\r\n            ]),\r\n            createCompoundExpression([`const _item = `, childBlock as any]),\r\n            createSimpleExpression(`_item.memo = _memo`),\r\n            createSimpleExpression(`return _item`)\r\n          ])\r\n          renderExp.arguments.push(\r\n            loop as ForIteratorExpression,\r\n            createSimpleExpression(`_cache`),\r\n            createSimpleExpression(String(context.cached++))\r\n          )\r\n        } else {\r\n          renderExp.arguments.push(\r\n            createFunctionExpression(\r\n              createForLoopParams(forNode.parseResult),\r\n              childBlock,\r\n              true /* force newline */\r\n            ) as ForIteratorExpression\r\n          )\r\n        }\r\n      }\r\n    })\r\n  }\r\n)\r\n\r\n// target-agnostic transform used for both Client and SSR\r\nexport function processFor(\r\n  node: ElementNode,\r\n  dir: DirectiveNode,\r\n  context: TransformContext,\r\n  processCodegen?: (forNode: ForNode) => (() => void) | undefined\r\n) {\r\n  if (!dir.exp) {\r\n    context.onError(\r\n      createCompilerError(ErrorCodes.X_V_FOR_NO_EXPRESSION, dir.loc)\r\n    )\r\n    return\r\n  }\r\n\r\n  const parseResult = parseForExpression(\r\n    // can only be simple expression because vFor transform is applied\r\n    // before expression transform.\r\n    dir.exp as SimpleExpressionNode,\r\n    context\r\n  )\r\n\r\n  if (!parseResult) {\r\n    context.onError(\r\n      createCompilerError(ErrorCodes.X_V_FOR_MALFORMED_EXPRESSION, dir.loc)\r\n    )\r\n    return\r\n  }\r\n\r\n  const { addIdentifiers, removeIdentifiers, scopes } = context\r\n  const { source, value, key, index } = parseResult\r\n\r\n  const forNode: ForNode = {\r\n    type: NodeTypes.FOR,\r\n    loc: dir.loc,\r\n    source,\r\n    valueAlias: value,\r\n    keyAlias: key,\r\n    objectIndexAlias: index,\r\n    parseResult,\r\n    children: isTemplateNode(node) ? node.children : [node]\r\n  }\r\n\r\n  context.replaceNode(forNode)\r\n\r\n  // bookkeeping\r\n  scopes.vFor++\r\n  if (!__BROWSER__ && context.prefixIdentifiers) {\r\n    // scope management\r\n    // inject identifiers to context\r\n    value && addIdentifiers(value)\r\n    key && addIdentifiers(key)\r\n    index && addIdentifiers(index)\r\n  }\r\n\r\n  const onExit = processCodegen && processCodegen(forNode)\r\n\r\n  return () => {\r\n    scopes.vFor--\r\n    if (!__BROWSER__ && context.prefixIdentifiers) {\r\n      value && removeIdentifiers(value)\r\n      key && removeIdentifiers(key)\r\n      index && removeIdentifiers(index)\r\n    }\r\n    if (onExit) onExit()\r\n  }\r\n}\r\n\r\nconst forAliasRE = /([\\s\\S]*?)\\s+(?:in|of)\\s+([\\s\\S]*)/\r\n// This regex doesn't cover the case if key or index aliases have destructuring,\r\n// but those do not make sense in the first place, so this works in practice.\r\nconst forIteratorRE = /,([^,\\}\\]]*)(?:,([^,\\}\\]]*))?$/\r\nconst stripParensRE = /^\\(|\\)$/g\r\n\r\nexport interface ForParseResult {\r\n  source: ExpressionNode\r\n  value: ExpressionNode | undefined\r\n  key: ExpressionNode | undefined\r\n  index: ExpressionNode | undefined\r\n}\r\n\r\nexport function parseForExpression(\r\n  input: SimpleExpressionNode,\r\n  context: TransformContext\r\n): ForParseResult | undefined {\r\n  const loc = input.loc\r\n  const exp = input.content\r\n  const inMatch = exp.match(forAliasRE)\r\n  if (!inMatch) return\r\n\r\n  const [, LHS, RHS] = inMatch\r\n\r\n  const result: ForParseResult = {\r\n    source: createAliasExpression(\r\n      loc,\r\n      RHS.trim(),\r\n      exp.indexOf(RHS, LHS.length)\r\n    ),\r\n    value: undefined,\r\n    key: undefined,\r\n    index: undefined\r\n  }\r\n  if (!__BROWSER__ && context.prefixIdentifiers) {\r\n    result.source = processExpression(\r\n      result.source as SimpleExpressionNode,\r\n      context\r\n    )\r\n  }\r\n  if (__DEV__ && __BROWSER__) {\r\n    validateBrowserExpression(result.source as SimpleExpressionNode, context)\r\n  }\r\n\r\n  let valueContent = LHS.trim().replace(stripParensRE, '').trim()\r\n  const trimmedOffset = LHS.indexOf(valueContent)\r\n\r\n  const iteratorMatch = valueContent.match(forIteratorRE)\r\n  if (iteratorMatch) {\r\n    valueContent = valueContent.replace(forIteratorRE, '').trim()\r\n\r\n    const keyContent = iteratorMatch[1].trim()\r\n    let keyOffset: number | undefined\r\n    if (keyContent) {\r\n      keyOffset = exp.indexOf(keyContent, trimmedOffset + valueContent.length)\r\n      result.key = createAliasExpression(loc, keyContent, keyOffset)\r\n      if (!__BROWSER__ && context.prefixIdentifiers) {\r\n        result.key = processExpression(result.key, context, true)\r\n      }\r\n      if (__DEV__ && __BROWSER__) {\r\n        validateBrowserExpression(\r\n          result.key as SimpleExpressionNode,\r\n          context,\r\n          true\r\n        )\r\n      }\r\n    }\r\n\r\n    if (iteratorMatch[2]) {\r\n      const indexContent = iteratorMatch[2].trim()\r\n\r\n      if (indexContent) {\r\n        result.index = createAliasExpression(\r\n          loc,\r\n          indexContent,\r\n          exp.indexOf(\r\n            indexContent,\r\n            result.key\r\n              ? keyOffset! + keyContent.length\r\n              : trimmedOffset + valueContent.length\r\n          )\r\n        )\r\n        if (!__BROWSER__ && context.prefixIdentifiers) {\r\n          result.index = processExpression(result.index, context, true)\r\n        }\r\n        if (__DEV__ && __BROWSER__) {\r\n          validateBrowserExpression(\r\n            result.index as SimpleExpressionNode,\r\n            context,\r\n            true\r\n          )\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  if (valueContent) {\r\n    result.value = createAliasExpression(loc, valueContent, trimmedOffset)\r\n    if (!__BROWSER__ && context.prefixIdentifiers) {\r\n      result.value = processExpression(result.value, context, true)\r\n    }\r\n    if (__DEV__ && __BROWSER__) {\r\n      validateBrowserExpression(\r\n        result.value as SimpleExpressionNode,\r\n        context,\r\n        true\r\n      )\r\n    }\r\n  }\r\n\r\n  return result\r\n}\r\n\r\nfunction createAliasExpression(\r\n  range: SourceLocation,\r\n  content: string,\r\n  offset: number\r\n): SimpleExpressionNode {\r\n  return createSimpleExpression(\r\n    content,\r\n    false,\r\n    getInnerRange(range, offset, content.length)\r\n  )\r\n}\r\n\r\nexport function createForLoopParams(\r\n  { value, key, index }: ForParseResult,\r\n  memoArgs: ExpressionNode[] = []\r\n): ExpressionNode[] {\r\n  return createParamsList([value, key, index, ...memoArgs])\r\n}\r\n\r\nfunction createParamsList(\r\n  args: (ExpressionNode | undefined)[]\r\n): ExpressionNode[] {\r\n  let i = args.length\r\n  while (i--) {\r\n    if (args[i]) break\r\n  }\r\n  return args\r\n    .slice(0, i + 1)\r\n    .map((arg, i) => arg || createSimpleExpression(`_`.repeat(i + 1), false))\r\n}\r\n","import {\r\n  ElementNode,\r\n  ObjectExpression,\r\n  createObjectExpression,\r\n  NodeTypes,\r\n  createObjectProperty,\r\n  createSimpleExpression,\r\n  createFunctionExpression,\r\n  DirectiveNode,\r\n  ElementTypes,\r\n  ExpressionNode,\r\n  Property,\r\n  TemplateChildNode,\r\n  SourceLocation,\r\n  createConditionalExpression,\r\n  ConditionalExpression,\r\n  SimpleExpressionNode,\r\n  FunctionExpression,\r\n  CallExpression,\r\n  createCallExpression,\r\n  createArrayExpression,\r\n  SlotsExpression\r\n} from '../ast'\r\nimport { TransformContext, NodeTransform } from '../transform'\r\nimport { createCompilerError, ErrorCodes } from '../errors'\r\nimport {\r\n  findDir,\r\n  isTemplateNode,\r\n  assert,\r\n  isVSlot,\r\n  hasScopeRef,\r\n  isStaticExp\r\n} from '../utils'\r\nimport { CREATE_SLOTS, RENDER_LIST, WITH_CTX } from '../runtimeHelpers'\r\nimport { parseForExpression, createForLoopParams } from './vFor'\r\nimport { SlotFlags, slotFlagsText } from '@vue/shared'\r\n\r\nconst defaultFallback = createSimpleExpression(`undefined`, false)\r\n\r\n// A NodeTransform that:\r\n// 1. Tracks scope identifiers for scoped slots so that they don't get prefixed\r\n//    by transformExpression. This is only applied in non-browser builds with\r\n//    { prefixIdentifiers: true }.\r\n// 2. Track v-slot depths so that we know a slot is inside another slot.\r\n//    Note the exit callback is executed before buildSlots() on the same node,\r\n//    so only nested slots see positive numbers.\r\nexport const trackSlotScopes: NodeTransform = (node, context) => {\r\n  if (\r\n    node.type === NodeTypes.ELEMENT &&\r\n    (node.tagType === ElementTypes.COMPONENT ||\r\n      node.tagType === ElementTypes.TEMPLATE)\r\n  ) {\r\n    // We are only checking non-empty v-slot here\r\n    // since we only care about slots that introduce scope variables.\r\n    const vSlot = findDir(node, 'slot')\r\n    if (vSlot) {\r\n      const slotProps = vSlot.exp\r\n      if (!__BROWSER__ && context.prefixIdentifiers) {\r\n        slotProps && context.addIdentifiers(slotProps)\r\n      }\r\n      context.scopes.vSlot++\r\n      return () => {\r\n        if (!__BROWSER__ && context.prefixIdentifiers) {\r\n          slotProps && context.removeIdentifiers(slotProps)\r\n        }\r\n        context.scopes.vSlot--\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n// A NodeTransform that tracks scope identifiers for scoped slots with v-for.\r\n// This transform is only applied in non-browser builds with { prefixIdentifiers: true }\r\nexport const trackVForSlotScopes: NodeTransform = (node, context) => {\r\n  let vFor\r\n  if (\r\n    isTemplateNode(node) &&\r\n    node.props.some(isVSlot) &&\r\n    (vFor = findDir(node, 'for'))\r\n  ) {\r\n    const result = (vFor.parseResult = parseForExpression(\r\n      vFor.exp as SimpleExpressionNode,\r\n      context\r\n    ))\r\n    if (result) {\r\n      const { value, key, index } = result\r\n      const { addIdentifiers, removeIdentifiers } = context\r\n      value && addIdentifiers(value)\r\n      key && addIdentifiers(key)\r\n      index && addIdentifiers(index)\r\n\r\n      return () => {\r\n        value && removeIdentifiers(value)\r\n        key && removeIdentifiers(key)\r\n        index && removeIdentifiers(index)\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport type SlotFnBuilder = (\r\n  slotProps: ExpressionNode | undefined,\r\n  slotChildren: TemplateChildNode[],\r\n  loc: SourceLocation\r\n) => FunctionExpression\r\n\r\nconst buildClientSlotFn: SlotFnBuilder = (props, children, loc) =>\r\n  createFunctionExpression(\r\n    props,\r\n    children,\r\n    false /* newline */,\r\n    true /* isSlot */,\r\n    children.length ? children[0].loc : loc\r\n  )\r\n\r\n// Instead of being a DirectiveTransform, v-slot processing is called during\r\n// transformElement to build the slots object for a component.\r\nexport function buildSlots(\r\n  node: ElementNode,\r\n  context: TransformContext,\r\n  buildSlotFn: SlotFnBuilder = buildClientSlotFn\r\n): {\r\n  slots: SlotsExpression\r\n  hasDynamicSlots: boolean\r\n} {\r\n  context.helper(WITH_CTX)\r\n\r\n  const { children, loc } = node\r\n  const slotsProperties: Property[] = []\r\n  const dynamicSlots: (ConditionalExpression | CallExpression)[] = []\r\n\r\n  // If the slot is inside a v-for or another v-slot, force it to be dynamic\r\n  // since it likely uses a scope variable.\r\n  let hasDynamicSlots = context.scopes.vSlot > 0 || context.scopes.vFor > 0\r\n  // with `prefixIdentifiers: true`, this can be further optimized to make\r\n  // it dynamic only when the slot actually uses the scope variables.\r\n  if (!__BROWSER__ && !context.ssr && context.prefixIdentifiers) {\r\n    hasDynamicSlots = hasScopeRef(node, context.identifiers)\r\n  }\r\n\r\n  // 1. Check for slot with slotProps on component itself.\r\n  //    <Comp v-slot=\"{ prop }\"/>\r\n  const onComponentSlot = findDir(node, 'slot', true)\r\n  if (onComponentSlot) {\r\n    const { arg, exp } = onComponentSlot\r\n    if (arg && !isStaticExp(arg)) {\r\n      hasDynamicSlots = true\r\n    }\r\n    slotsProperties.push(\r\n      createObjectProperty(\r\n        arg || createSimpleExpression('default', true),\r\n        buildSlotFn(exp, children, loc)\r\n      )\r\n    )\r\n  }\r\n\r\n  // 2. Iterate through children and check for template slots\r\n  //    <template v-slot:foo=\"{ prop }\">\r\n  let hasTemplateSlots = false\r\n  let hasNamedDefaultSlot = false\r\n  const implicitDefaultChildren: TemplateChildNode[] = []\r\n  const seenSlotNames = new Set<string>()\r\n\r\n  for (let i = 0; i < children.length; i++) {\r\n    const slotElement = children[i]\r\n    let slotDir\r\n\r\n    if (\r\n      !isTemplateNode(slotElement) ||\r\n      !(slotDir = findDir(slotElement, 'slot', true))\r\n    ) {\r\n      // not a <template v-slot>, skip.\r\n      if (slotElement.type !== NodeTypes.COMMENT) {\r\n        implicitDefaultChildren.push(slotElement)\r\n      }\r\n      continue\r\n    }\r\n\r\n    if (onComponentSlot) {\r\n      // already has on-component slot - this is incorrect usage.\r\n      context.onError(\r\n        createCompilerError(ErrorCodes.X_V_SLOT_MIXED_SLOT_USAGE, slotDir.loc)\r\n      )\r\n      break\r\n    }\r\n\r\n    hasTemplateSlots = true\r\n    const { children: slotChildren, loc: slotLoc } = slotElement\r\n    const {\r\n      arg: slotName = createSimpleExpression(`default`, true),\r\n      exp: slotProps,\r\n      loc: dirLoc\r\n    } = slotDir\r\n\r\n    // check if name is dynamic.\r\n    let staticSlotName: string | undefined\r\n    if (isStaticExp(slotName)) {\r\n      staticSlotName = slotName ? slotName.content : `default`\r\n    } else {\r\n      hasDynamicSlots = true\r\n    }\r\n\r\n    const slotFunction = buildSlotFn(slotProps, slotChildren, slotLoc)\r\n    // check if this slot is conditional (v-if/v-for)\r\n    let vIf: DirectiveNode | undefined\r\n    let vElse: DirectiveNode | undefined\r\n    let vFor: DirectiveNode | undefined\r\n    if ((vIf = findDir(slotElement, 'if'))) {\r\n      hasDynamicSlots = true\r\n      dynamicSlots.push(\r\n        createConditionalExpression(\r\n          vIf.exp!,\r\n          buildDynamicSlot(slotName, slotFunction),\r\n          defaultFallback\r\n        )\r\n      )\r\n    } else if (\r\n      (vElse = findDir(slotElement, /^else(-if)?$/, true /* allowEmpty */))\r\n    ) {\r\n      // find adjacent v-if\r\n      let j = i\r\n      let prev\r\n      while (j--) {\r\n        prev = children[j]\r\n        if (prev.type !== NodeTypes.COMMENT) {\r\n          break\r\n        }\r\n      }\r\n      if (prev && isTemplateNode(prev) && findDir(prev, 'if')) {\r\n        // remove node\r\n        children.splice(i, 1)\r\n        i--\r\n        __TEST__ && assert(dynamicSlots.length > 0)\r\n        // attach this slot to previous conditional\r\n        let conditional = dynamicSlots[\r\n          dynamicSlots.length - 1\r\n        ] as ConditionalExpression\r\n        while (\r\n          conditional.alternate.type === NodeTypes.JS_CONDITIONAL_EXPRESSION\r\n        ) {\r\n          conditional = conditional.alternate\r\n        }\r\n        conditional.alternate = vElse.exp\r\n          ? createConditionalExpression(\r\n              vElse.exp,\r\n              buildDynamicSlot(slotName, slotFunction),\r\n              defaultFallback\r\n            )\r\n          : buildDynamicSlot(slotName, slotFunction)\r\n      } else {\r\n        context.onError(\r\n          createCompilerError(ErrorCodes.X_V_ELSE_NO_ADJACENT_IF, vElse.loc)\r\n        )\r\n      }\r\n    } else if ((vFor = findDir(slotElement, 'for'))) {\r\n      hasDynamicSlots = true\r\n      const parseResult =\r\n        vFor.parseResult ||\r\n        parseForExpression(vFor.exp as SimpleExpressionNode, context)\r\n      if (parseResult) {\r\n        // Render the dynamic slots as an array and add it to the createSlot()\r\n        // args. The runtime knows how to handle it appropriately.\r\n        dynamicSlots.push(\r\n          createCallExpression(context.helper(RENDER_LIST), [\r\n            parseResult.source,\r\n            createFunctionExpression(\r\n              createForLoopParams(parseResult),\r\n              buildDynamicSlot(slotName, slotFunction),\r\n              true /* force newline */\r\n            )\r\n          ])\r\n        )\r\n      } else {\r\n        context.onError(\r\n          createCompilerError(ErrorCodes.X_V_FOR_MALFORMED_EXPRESSION, vFor.loc)\r\n        )\r\n      }\r\n    } else {\r\n      // check duplicate static names\r\n      if (staticSlotName) {\r\n        if (seenSlotNames.has(staticSlotName)) {\r\n          context.onError(\r\n            createCompilerError(\r\n              ErrorCodes.X_V_SLOT_DUPLICATE_SLOT_NAMES,\r\n              dirLoc\r\n            )\r\n          )\r\n          continue\r\n        }\r\n        seenSlotNames.add(staticSlotName)\r\n        if (staticSlotName === 'default') {\r\n          hasNamedDefaultSlot = true\r\n        }\r\n      }\r\n      slotsProperties.push(createObjectProperty(slotName, slotFunction))\r\n    }\r\n  }\r\n\r\n  if (!onComponentSlot) {\r\n    const buildDefaultSlotProperty = (\r\n      props: ExpressionNode | undefined,\r\n      children: TemplateChildNode[]\r\n    ) => {\r\n      const fn = buildSlotFn(props, children, loc)\r\n      if (__COMPAT__ && context.compatConfig) {\r\n        fn.isNonScopedSlot = true\r\n      }\r\n      return createObjectProperty(`default`, fn)\r\n    }\r\n\r\n    if (!hasTemplateSlots) {\r\n      // implicit default slot (on component)\r\n      slotsProperties.push(buildDefaultSlotProperty(undefined, children))\r\n    } else if (\r\n      implicitDefaultChildren.length &&\r\n      // #3766\r\n      // with whitespace: 'preserve', whitespaces between slots will end up in\r\n      // implicitDefaultChildren. Ignore if all implicit children are whitespaces.\r\n      implicitDefaultChildren.some(node => isNonWhitespaceContent(node))\r\n    ) {\r\n      // implicit default slot (mixed with named slots)\r\n      if (hasNamedDefaultSlot) {\r\n        context.onError(\r\n          createCompilerError(\r\n            ErrorCodes.X_V_SLOT_EXTRANEOUS_DEFAULT_SLOT_CHILDREN,\r\n            implicitDefaultChildren[0].loc\r\n          )\r\n        )\r\n      } else {\r\n        slotsProperties.push(\r\n          buildDefaultSlotProperty(undefined, implicitDefaultChildren)\r\n        )\r\n      }\r\n    }\r\n  }\r\n\r\n  const slotFlag = hasDynamicSlots\r\n    ? SlotFlags.DYNAMIC\r\n    : hasForwardedSlots(node.children)\r\n    ? SlotFlags.FORWARDED\r\n    : SlotFlags.STABLE\r\n\r\n  let slots = createObjectExpression(\r\n    slotsProperties.concat(\r\n      createObjectProperty(\r\n        `_`,\r\n        // 2 = compiled but dynamic = can skip normalization, but must run diff\r\n        // 1 = compiled and static = can skip normalization AND diff as optimized\r\n        createSimpleExpression(\r\n          slotFlag + (__DEV__ ? ` /* ${slotFlagsText[slotFlag]} */` : ``),\r\n          false\r\n        )\r\n      )\r\n    ),\r\n    loc\r\n  ) as SlotsExpression\r\n  if (dynamicSlots.length) {\r\n    slots = createCallExpression(context.helper(CREATE_SLOTS), [\r\n      slots,\r\n      createArrayExpression(dynamicSlots)\r\n    ]) as SlotsExpression\r\n  }\r\n\r\n  return {\r\n    slots,\r\n    hasDynamicSlots\r\n  }\r\n}\r\n\r\nfunction buildDynamicSlot(\r\n  name: ExpressionNode,\r\n  fn: FunctionExpression\r\n): ObjectExpression {\r\n  return createObjectExpression([\r\n    createObjectProperty(`name`, name),\r\n    createObjectProperty(`fn`, fn)\r\n  ])\r\n}\r\n\r\nfunction hasForwardedSlots(children: TemplateChildNode[]): boolean {\r\n  for (let i = 0; i < children.length; i++) {\r\n    const child = children[i]\r\n    switch (child.type) {\r\n      case NodeTypes.ELEMENT:\r\n        if (\r\n          child.tagType === ElementTypes.SLOT ||\r\n          hasForwardedSlots(child.children)\r\n        ) {\r\n          return true\r\n        }\r\n        break\r\n      case NodeTypes.IF:\r\n        if (hasForwardedSlots(child.branches)) return true\r\n        break\r\n      case NodeTypes.IF_BRANCH:\r\n      case NodeTypes.FOR:\r\n        if (hasForwardedSlots(child.children)) return true\r\n        break\r\n      default:\r\n        break\r\n    }\r\n  }\r\n  return false\r\n}\r\n\r\nfunction isNonWhitespaceContent(node: TemplateChildNode): boolean {\r\n  if (node.type !== NodeTypes.TEXT && node.type !== NodeTypes.TEXT_CALL)\r\n    return true\r\n  return node.type === NodeTypes.TEXT\r\n    ? !!node.content.trim()\r\n    : isNonWhitespaceContent(node.content)\r\n}\r\n","import { NodeTransform, TransformContext } from '../transform'\r\nimport {\r\n  NodeTypes,\r\n  ElementTypes,\r\n  CallExpression,\r\n  ObjectExpression,\r\n  ElementNode,\r\n  DirectiveNode,\r\n  ExpressionNode,\r\n  ArrayExpression,\r\n  createCallExpression,\r\n  createArrayExpression,\r\n  createObjectProperty,\r\n  createSimpleExpression,\r\n  createObjectExpression,\r\n  Property,\r\n  ComponentNode,\r\n  VNodeCall,\r\n  TemplateTextChildNode,\r\n  DirectiveArguments,\r\n  createVNodeCall,\r\n  ConstantTypes\r\n} from '../ast'\r\nimport {\r\n  PatchFlags,\r\n  PatchFlagNames,\r\n  isSymbol,\r\n  isOn,\r\n  isObject,\r\n  isReservedProp,\r\n  capitalize,\r\n  camelize\r\n} from '@vue/shared'\r\nimport { createCompilerError, ErrorCodes } from '../errors'\r\nimport {\r\n  RESOLVE_DIRECTIVE,\r\n  RESOLVE_COMPONENT,\r\n  RESOLVE_DYNAMIC_COMPONENT,\r\n  MERGE_PROPS,\r\n  NORMALIZE_CLASS,\r\n  NORMALIZE_STYLE,\r\n  NORMALIZE_PROPS,\r\n  TO_HANDLERS,\r\n  TELEPORT,\r\n  KEEP_ALIVE,\r\n  SUSPENSE,\r\n  UNREF,\r\n  GUARD_REACTIVE_PROPS\r\n} from '../runtimeHelpers'\r\nimport {\r\n  getInnerRange,\r\n  toValidAssetId,\r\n  findProp,\r\n  isCoreComponent,\r\n  isBindKey,\r\n  findDir,\r\n  isStaticExp\r\n} from '../utils'\r\nimport { buildSlots } from './vSlot'\r\nimport { getConstantType } from './hoistStatic'\r\nimport { BindingTypes } from '../options'\r\nimport {\r\n  checkCompatEnabled,\r\n  CompilerDeprecationTypes,\r\n  isCompatEnabled\r\n} from '../compat/compatConfig'\r\n\r\n// some directive transforms (e.g. v-model) may return a symbol for runtime\r\n// import, which should be used instead of a resolveDirective call.\r\nconst directiveImportMap = new WeakMap<DirectiveNode, symbol>()\r\n\r\n// generate a JavaScript AST for this element's codegen\r\nexport const transformElement: NodeTransform = (node, context) => {\r\n  // perform the work on exit, after all child expressions have been\r\n  // processed and merged.\r\n  return function postTransformElement() {\r\n    node = context.currentNode!\r\n\r\n    if (\r\n      !(\r\n        node.type === NodeTypes.ELEMENT &&\r\n        (node.tagType === ElementTypes.ELEMENT ||\r\n          node.tagType === ElementTypes.COMPONENT)\r\n      )\r\n    ) {\r\n      return\r\n    }\r\n\r\n    const { tag, props } = node\r\n    const isComponent = node.tagType === ElementTypes.COMPONENT\r\n\r\n    // The goal of the transform is to create a codegenNode implementing the\r\n    // VNodeCall interface.\r\n    let vnodeTag = isComponent\r\n      ? resolveComponentType(node as ComponentNode, context)\r\n      : `\"${tag}\"`\r\n\r\n    const isDynamicComponent =\r\n      isObject(vnodeTag) && vnodeTag.callee === RESOLVE_DYNAMIC_COMPONENT\r\n\r\n    let vnodeProps: VNodeCall['props']\r\n    let vnodeChildren: VNodeCall['children']\r\n    let vnodePatchFlag: VNodeCall['patchFlag']\r\n    let patchFlag: number = 0\r\n    let vnodeDynamicProps: VNodeCall['dynamicProps']\r\n    let dynamicPropNames: string[] | undefined\r\n    let vnodeDirectives: VNodeCall['directives']\r\n\r\n    let shouldUseBlock =\r\n      // dynamic component may resolve to plain elements\r\n      isDynamicComponent ||\r\n      vnodeTag === TELEPORT ||\r\n      vnodeTag === SUSPENSE ||\r\n      (!isComponent &&\r\n        // <svg> and <foreignObject> must be forced into blocks so that block\r\n        // updates inside get proper isSVG flag at runtime. (#639, #643)\r\n        // This is technically web-specific, but splitting the logic out of core\r\n        // leads to too much unnecessary complexity.\r\n        (tag === 'svg' ||\r\n          tag === 'foreignObject' ||\r\n          // #938: elements with dynamic keys should be forced into blocks\r\n          findProp(node, 'key', true)))\r\n\r\n    // props\r\n    if (props.length > 0) {\r\n      const propsBuildResult = buildProps(node, context)\r\n      vnodeProps = propsBuildResult.props\r\n      patchFlag = propsBuildResult.patchFlag\r\n      dynamicPropNames = propsBuildResult.dynamicPropNames\r\n      const directives = propsBuildResult.directives\r\n      vnodeDirectives =\r\n        directives && directives.length\r\n          ? (createArrayExpression(\r\n              directives.map(dir => buildDirectiveArgs(dir, context))\r\n            ) as DirectiveArguments)\r\n          : undefined\r\n    }\r\n\r\n    // children\r\n    if (node.children.length > 0) {\r\n      if (vnodeTag === KEEP_ALIVE) {\r\n        // Although a built-in component, we compile KeepAlive with raw children\r\n        // instead of slot functions so that it can be used inside Transition\r\n        // or other Transition-wrapping HOCs.\r\n        // To ensure correct updates with block optimizations, we need to:\r\n        // 1. Force keep-alive into a block. This avoids its children being\r\n        //    collected by a parent block.\r\n        shouldUseBlock = true\r\n        // 2. Force keep-alive to always be updated, since it uses raw children.\r\n        patchFlag |= PatchFlags.DYNAMIC_SLOTS\r\n        if (__DEV__ && node.children.length > 1) {\r\n          context.onError(\r\n            createCompilerError(ErrorCodes.X_KEEP_ALIVE_INVALID_CHILDREN, {\r\n              start: node.children[0].loc.start,\r\n              end: node.children[node.children.length - 1].loc.end,\r\n              source: ''\r\n            })\r\n          )\r\n        }\r\n      }\r\n\r\n      const shouldBuildAsSlots =\r\n        isComponent &&\r\n        // Teleport is not a real component and has dedicated runtime handling\r\n        vnodeTag !== TELEPORT &&\r\n        // explained above.\r\n        vnodeTag !== KEEP_ALIVE\r\n\r\n      if (shouldBuildAsSlots) {\r\n        const { slots, hasDynamicSlots } = buildSlots(node, context)\r\n        vnodeChildren = slots\r\n        if (hasDynamicSlots) {\r\n          patchFlag |= PatchFlags.DYNAMIC_SLOTS\r\n        }\r\n      } else if (node.children.length === 1 && vnodeTag !== TELEPORT) {\r\n        const child = node.children[0]\r\n        const type = child.type\r\n        // check for dynamic text children\r\n        const hasDynamicTextChild =\r\n          type === NodeTypes.INTERPOLATION ||\r\n          type === NodeTypes.COMPOUND_EXPRESSION\r\n        if (\r\n          hasDynamicTextChild &&\r\n          getConstantType(child, context) === ConstantTypes.NOT_CONSTANT\r\n        ) {\r\n          patchFlag |= PatchFlags.TEXT\r\n        }\r\n        // pass directly if the only child is a text node\r\n        // (plain / interpolation / expression)\r\n        if (hasDynamicTextChild || type === NodeTypes.TEXT) {\r\n          vnodeChildren = child as TemplateTextChildNode\r\n        } else {\r\n          vnodeChildren = node.children\r\n        }\r\n      } else {\r\n        vnodeChildren = node.children\r\n      }\r\n    }\r\n\r\n    // patchFlag & dynamicPropNames\r\n    if (patchFlag !== 0) {\r\n      if (__DEV__) {\r\n        if (patchFlag < 0) {\r\n          // special flags (negative and mutually exclusive)\r\n          vnodePatchFlag = patchFlag + ` /* ${PatchFlagNames[patchFlag]} */`\r\n        } else {\r\n          // bitwise flags\r\n          const flagNames = Object.keys(PatchFlagNames)\r\n            .map(Number)\r\n            .filter(n => n > 0 && patchFlag & n)\r\n            .map(n => PatchFlagNames[n])\r\n            .join(`, `)\r\n          vnodePatchFlag = patchFlag + ` /* ${flagNames} */`\r\n        }\r\n      } else {\r\n        vnodePatchFlag = String(patchFlag)\r\n      }\r\n      if (dynamicPropNames && dynamicPropNames.length) {\r\n        vnodeDynamicProps = stringifyDynamicPropNames(dynamicPropNames)\r\n      }\r\n    }\r\n\r\n    node.codegenNode = createVNodeCall(\r\n      context,\r\n      vnodeTag,\r\n      vnodeProps,\r\n      vnodeChildren,\r\n      vnodePatchFlag,\r\n      vnodeDynamicProps,\r\n      vnodeDirectives,\r\n      !!shouldUseBlock,\r\n      false /* disableTracking */,\r\n      isComponent,\r\n      node.loc\r\n    )\r\n  }\r\n}\r\n\r\nexport function resolveComponentType(\r\n  node: ComponentNode,\r\n  context: TransformContext,\r\n  ssr = false\r\n) {\r\n  let { tag } = node\r\n\r\n  // 1. dynamic component\r\n  const isExplicitDynamic = isComponentTag(tag)\r\n  const isProp = findProp(node, 'is')\r\n  if (isProp) {\r\n    if (\r\n      isExplicitDynamic ||\r\n      (__COMPAT__ &&\r\n        isCompatEnabled(\r\n          CompilerDeprecationTypes.COMPILER_IS_ON_ELEMENT,\r\n          context\r\n        ))\r\n    ) {\r\n      const exp =\r\n        isProp.type === NodeTypes.ATTRIBUTE\r\n          ? isProp.value && createSimpleExpression(isProp.value.content, true)\r\n          : isProp.exp\r\n      if (exp) {\r\n        return createCallExpression(context.helper(RESOLVE_DYNAMIC_COMPONENT), [\r\n          exp\r\n        ])\r\n      }\r\n    } else if (\r\n      isProp.type === NodeTypes.ATTRIBUTE &&\r\n      isProp.value!.content.startsWith('vue:')\r\n    ) {\r\n      // <button is=\"vue:xxx\">\r\n      // if not <component>, only is value that starts with \"vue:\" will be\r\n      // treated as component by the parse phase and reach here, unless it's\r\n      // compat mode where all is values are considered components\r\n      tag = isProp.value!.content.slice(4)\r\n    }\r\n  }\r\n\r\n  // 1.5 v-is (TODO: Deprecate)\r\n  const isDir = !isExplicitDynamic && findDir(node, 'is')\r\n  if (isDir && isDir.exp) {\r\n    return createCallExpression(context.helper(RESOLVE_DYNAMIC_COMPONENT), [\r\n      isDir.exp\r\n    ])\r\n  }\r\n\r\n  // 2. built-in components (Teleport, Transition, KeepAlive, Suspense...)\r\n  const builtIn = isCoreComponent(tag) || context.isBuiltInComponent(tag)\r\n  if (builtIn) {\r\n    // built-ins are simply fallthroughs / have special handling during ssr\r\n    // so we don't need to import their runtime equivalents\r\n    if (!ssr) context.helper(builtIn)\r\n    return builtIn\r\n  }\r\n\r\n  // 3. user component (from setup bindings)\r\n  // this is skipped in browser build since browser builds do not perform\r\n  // binding analysis.\r\n  if (!__BROWSER__) {\r\n    const fromSetup = resolveSetupReference(tag, context)\r\n    if (fromSetup) {\r\n      return fromSetup\r\n    }\r\n    const dotIndex = tag.indexOf('.')\r\n    if (dotIndex > 0) {\r\n      const ns = resolveSetupReference(tag.slice(0, dotIndex), context)\r\n      if (ns) {\r\n        return ns + tag.slice(dotIndex)\r\n      }\r\n    }\r\n  }\r\n\r\n  // 4. Self referencing component (inferred from filename)\r\n  if (\r\n    !__BROWSER__ &&\r\n    context.selfName &&\r\n    capitalize(camelize(tag)) === context.selfName\r\n  ) {\r\n    context.helper(RESOLVE_COMPONENT)\r\n    // codegen.ts has special check for __self postfix when generating\r\n    // component imports, which will pass additional `maybeSelfReference` flag\r\n    // to `resolveComponent`.\r\n    context.components.add(tag + `__self`)\r\n    return toValidAssetId(tag, `component`)\r\n  }\r\n\r\n  // 5. user component (resolve)\r\n  context.helper(RESOLVE_COMPONENT)\r\n  context.components.add(tag)\r\n  return toValidAssetId(tag, `component`)\r\n}\r\n\r\nfunction resolveSetupReference(name: string, context: TransformContext) {\r\n  const bindings = context.bindingMetadata\r\n  if (!bindings || bindings.__isScriptSetup === false) {\r\n    return\r\n  }\r\n\r\n  const camelName = camelize(name)\r\n  const PascalName = capitalize(camelName)\r\n  const checkType = (type: BindingTypes) => {\r\n    if (bindings[name] === type) {\r\n      return name\r\n    }\r\n    if (bindings[camelName] === type) {\r\n      return camelName\r\n    }\r\n    if (bindings[PascalName] === type) {\r\n      return PascalName\r\n    }\r\n  }\r\n\r\n  const fromConst = checkType(BindingTypes.SETUP_CONST)\r\n  if (fromConst) {\r\n    return context.inline\r\n      ? // in inline mode, const setup bindings (e.g. imports) can be used as-is\r\n        fromConst\r\n      : `$setup[${JSON.stringify(fromConst)}]`\r\n  }\r\n\r\n  const fromMaybeRef =\r\n    checkType(BindingTypes.SETUP_LET) ||\r\n    checkType(BindingTypes.SETUP_REF) ||\r\n    checkType(BindingTypes.SETUP_MAYBE_REF)\r\n  if (fromMaybeRef) {\r\n    return context.inline\r\n      ? // setup scope bindings that may be refs need to be unrefed\r\n        `${context.helperString(UNREF)}(${fromMaybeRef})`\r\n      : `$setup[${JSON.stringify(fromMaybeRef)}]`\r\n  }\r\n}\r\n\r\nexport type PropsExpression = ObjectExpression | CallExpression | ExpressionNode\r\n\r\nexport function buildProps(\r\n  node: ElementNode,\r\n  context: TransformContext,\r\n  props: ElementNode['props'] = node.props,\r\n  ssr = false\r\n): {\r\n  props: PropsExpression | undefined\r\n  directives: DirectiveNode[]\r\n  patchFlag: number\r\n  dynamicPropNames: string[]\r\n} {\r\n  const { tag, loc: elementLoc } = node\r\n  const isComponent = node.tagType === ElementTypes.COMPONENT\r\n  let properties: ObjectExpression['properties'] = []\r\n  const mergeArgs: PropsExpression[] = []\r\n  const runtimeDirectives: DirectiveNode[] = []\r\n\r\n  // patchFlag analysis\r\n  let patchFlag = 0\r\n  let hasRef = false\r\n  let hasClassBinding = false\r\n  let hasStyleBinding = false\r\n  let hasHydrationEventBinding = false\r\n  let hasDynamicKeys = false\r\n  let hasVnodeHook = false\r\n  const dynamicPropNames: string[] = []\r\n\r\n  const analyzePatchFlag = ({ key, value }: Property) => {\r\n    if (isStaticExp(key)) {\r\n      const name = key.content\r\n      const isEventHandler = isOn(name)\r\n      if (\r\n        !isComponent &&\r\n        isEventHandler &&\r\n        // omit the flag for click handlers because hydration gives click\r\n        // dedicated fast path.\r\n        name.toLowerCase() !== 'onclick' &&\r\n        // omit v-model handlers\r\n        name !== 'onUpdate:modelValue' &&\r\n        // omit onVnodeXXX hooks\r\n        !isReservedProp(name)\r\n      ) {\r\n        hasHydrationEventBinding = true\r\n      }\r\n\r\n      if (isEventHandler && isReservedProp(name)) {\r\n        hasVnodeHook = true\r\n      }\r\n\r\n      if (\r\n        value.type === NodeTypes.JS_CACHE_EXPRESSION ||\r\n        ((value.type === NodeTypes.SIMPLE_EXPRESSION ||\r\n          value.type === NodeTypes.COMPOUND_EXPRESSION) &&\r\n          getConstantType(value, context) > 0)\r\n      ) {\r\n        // skip if the prop is a cached handler or has constant value\r\n        return\r\n      }\r\n\r\n      if (name === 'ref') {\r\n        hasRef = true\r\n      } else if (name === 'class') {\r\n        hasClassBinding = true\r\n      } else if (name === 'style') {\r\n        hasStyleBinding = true\r\n      } else if (name !== 'key' && !dynamicPropNames.includes(name)) {\r\n        dynamicPropNames.push(name)\r\n      }\r\n\r\n      // treat the dynamic class and style binding of the component as dynamic props\r\n      if (\r\n        isComponent &&\r\n        (name === 'class' || name === 'style') &&\r\n        !dynamicPropNames.includes(name)\r\n      ) {\r\n        dynamicPropNames.push(name)\r\n      }\r\n    } else {\r\n      hasDynamicKeys = true\r\n    }\r\n  }\r\n\r\n  for (let i = 0; i < props.length; i++) {\r\n    // static attribute\r\n    const prop = props[i]\r\n    if (prop.type === NodeTypes.ATTRIBUTE) {\r\n      const { loc, name, value } = prop\r\n      let isStatic = true\r\n      if (name === 'ref') {\r\n        hasRef = true\r\n        // in inline mode there is no setupState object, so we can't use string\r\n        // keys to set the ref. Instead, we need to transform it to pass the\r\n        // acrtual ref instead.\r\n        if (!__BROWSER__ && context.inline) {\r\n          isStatic = false\r\n        }\r\n      }\r\n      // skip is on <component>, or is=\"vue:xxx\"\r\n      if (\r\n        name === 'is' &&\r\n        (isComponentTag(tag) ||\r\n          (value && value.content.startsWith('vue:')) ||\r\n          (__COMPAT__ &&\r\n            isCompatEnabled(\r\n              CompilerDeprecationTypes.COMPILER_IS_ON_ELEMENT,\r\n              context\r\n            )))\r\n      ) {\r\n        continue\r\n      }\r\n      properties.push(\r\n        createObjectProperty(\r\n          createSimpleExpression(\r\n            name,\r\n            true,\r\n            getInnerRange(loc, 0, name.length)\r\n          ),\r\n          createSimpleExpression(\r\n            value ? value.content : '',\r\n            isStatic,\r\n            value ? value.loc : loc\r\n          )\r\n        )\r\n      )\r\n    } else {\r\n      // directives\r\n      const { name, arg, exp, loc } = prop\r\n      const isVBind = name === 'bind'\r\n      const isVOn = name === 'on'\r\n\r\n      // skip v-slot - it is handled by its dedicated transform.\r\n      if (name === 'slot') {\r\n        if (!isComponent) {\r\n          context.onError(\r\n            createCompilerError(ErrorCodes.X_V_SLOT_MISPLACED, loc)\r\n          )\r\n        }\r\n        continue\r\n      }\r\n      // skip v-once/v-memo - they are handled by dedicated transforms.\r\n      if (name === 'once' || name === 'memo') {\r\n        continue\r\n      }\r\n      // skip v-is and :is on <component>\r\n      if (\r\n        name === 'is' ||\r\n        (isVBind &&\r\n          isBindKey(arg, 'is') &&\r\n          (isComponentTag(tag) ||\r\n            (__COMPAT__ &&\r\n              isCompatEnabled(\r\n                CompilerDeprecationTypes.COMPILER_IS_ON_ELEMENT,\r\n                context\r\n              ))))\r\n      ) {\r\n        continue\r\n      }\r\n      // skip v-on in SSR compilation\r\n      if (isVOn && ssr) {\r\n        continue\r\n      }\r\n\r\n      // special case for v-bind and v-on with no argument\r\n      if (!arg && (isVBind || isVOn)) {\r\n        hasDynamicKeys = true\r\n        if (exp) {\r\n          if (properties.length) {\r\n            mergeArgs.push(\r\n              createObjectExpression(dedupeProperties(properties), elementLoc)\r\n            )\r\n            properties = []\r\n          }\r\n          if (isVBind) {\r\n            if (__COMPAT__) {\r\n              // 2.x v-bind object order compat\r\n              if (__DEV__) {\r\n                const hasOverridableKeys = mergeArgs.some(arg => {\r\n                  if (arg.type === NodeTypes.JS_OBJECT_EXPRESSION) {\r\n                    return arg.properties.some(({ key }) => {\r\n                      if (\r\n                        key.type !== NodeTypes.SIMPLE_EXPRESSION ||\r\n                        !key.isStatic\r\n                      ) {\r\n                        return true\r\n                      }\r\n                      return (\r\n                        key.content !== 'class' &&\r\n                        key.content !== 'style' &&\r\n                        !isOn(key.content)\r\n                      )\r\n                    })\r\n                  } else {\r\n                    // dynamic expression\r\n                    return true\r\n                  }\r\n                })\r\n                if (hasOverridableKeys) {\r\n                  checkCompatEnabled(\r\n                    CompilerDeprecationTypes.COMPILER_V_BIND_OBJECT_ORDER,\r\n                    context,\r\n                    loc\r\n                  )\r\n                }\r\n              }\r\n\r\n              if (\r\n                isCompatEnabled(\r\n                  CompilerDeprecationTypes.COMPILER_V_BIND_OBJECT_ORDER,\r\n                  context\r\n                )\r\n              ) {\r\n                mergeArgs.unshift(exp)\r\n                continue\r\n              }\r\n            }\r\n\r\n            mergeArgs.push(exp)\r\n          } else {\r\n            // v-on=\"obj\" -> toHandlers(obj)\r\n            mergeArgs.push({\r\n              type: NodeTypes.JS_CALL_EXPRESSION,\r\n              loc,\r\n              callee: context.helper(TO_HANDLERS),\r\n              arguments: [exp]\r\n            })\r\n          }\r\n        } else {\r\n          context.onError(\r\n            createCompilerError(\r\n              isVBind\r\n                ? ErrorCodes.X_V_BIND_NO_EXPRESSION\r\n                : ErrorCodes.X_V_ON_NO_EXPRESSION,\r\n              loc\r\n            )\r\n          )\r\n        }\r\n        continue\r\n      }\r\n\r\n      const directiveTransform = context.directiveTransforms[name]\r\n      if (directiveTransform) {\r\n        // has built-in directive transform.\r\n        const { props, needRuntime } = directiveTransform(prop, node, context)\r\n        !ssr && props.forEach(analyzePatchFlag)\r\n        properties.push(...props)\r\n        if (needRuntime) {\r\n          runtimeDirectives.push(prop)\r\n          if (isSymbol(needRuntime)) {\r\n            directiveImportMap.set(prop, needRuntime)\r\n          }\r\n        }\r\n      } else {\r\n        // no built-in transform, this is a user custom directive.\r\n        runtimeDirectives.push(prop)\r\n      }\r\n    }\r\n\r\n    if (\r\n      __COMPAT__ &&\r\n      prop.type === NodeTypes.ATTRIBUTE &&\r\n      prop.name === 'ref' &&\r\n      context.scopes.vFor > 0 &&\r\n      checkCompatEnabled(\r\n        CompilerDeprecationTypes.COMPILER_V_FOR_REF,\r\n        context,\r\n        prop.loc\r\n      )\r\n    ) {\r\n      properties.push(\r\n        createObjectProperty(\r\n          createSimpleExpression('refInFor', true),\r\n          createSimpleExpression('true', false)\r\n        )\r\n      )\r\n    }\r\n  }\r\n\r\n  let propsExpression: PropsExpression | undefined = undefined\r\n\r\n  // has v-bind=\"object\" or v-on=\"object\", wrap with mergeProps\r\n  if (mergeArgs.length) {\r\n    if (properties.length) {\r\n      mergeArgs.push(\r\n        createObjectExpression(dedupeProperties(properties), elementLoc)\r\n      )\r\n    }\r\n    if (mergeArgs.length > 1) {\r\n      propsExpression = createCallExpression(\r\n        context.helper(MERGE_PROPS),\r\n        mergeArgs,\r\n        elementLoc\r\n      )\r\n    } else {\r\n      // single v-bind with nothing else - no need for a mergeProps call\r\n      propsExpression = mergeArgs[0]\r\n    }\r\n  } else if (properties.length) {\r\n    propsExpression = createObjectExpression(\r\n      dedupeProperties(properties),\r\n      elementLoc\r\n    )\r\n  }\r\n\r\n  // patchFlag analysis\r\n  if (hasDynamicKeys) {\r\n    patchFlag |= PatchFlags.FULL_PROPS\r\n  } else {\r\n    if (hasClassBinding && !isComponent) {\r\n      patchFlag |= PatchFlags.CLASS\r\n    }\r\n    if (hasStyleBinding && !isComponent) {\r\n      patchFlag |= PatchFlags.STYLE\r\n    }\r\n    if (dynamicPropNames.length) {\r\n      patchFlag |= PatchFlags.PROPS\r\n    }\r\n    if (hasHydrationEventBinding) {\r\n      patchFlag |= PatchFlags.HYDRATE_EVENTS\r\n    }\r\n  }\r\n  if (\r\n    (patchFlag === 0 || patchFlag === PatchFlags.HYDRATE_EVENTS) &&\r\n    (hasRef || hasVnodeHook || runtimeDirectives.length > 0)\r\n  ) {\r\n    patchFlag |= PatchFlags.NEED_PATCH\r\n  }\r\n\r\n  // pre-normalize props, SSR is skipped for now\r\n  if (!context.inSSR && propsExpression) {\r\n    switch (propsExpression.type) {\r\n      case NodeTypes.JS_OBJECT_EXPRESSION:\r\n        // means that there is no v-bind,\r\n        // but still need to deal with dynamic key binding\r\n        let classKeyIndex = -1\r\n        let styleKeyIndex = -1\r\n        let hasDynamicKey = false\r\n\r\n        for (let i = 0; i < propsExpression.properties.length; i++) {\r\n          const key = propsExpression.properties[i].key\r\n          if (isStaticExp(key)) {\r\n            if (key.content === 'class') {\r\n              classKeyIndex = i\r\n            } else if (key.content === 'style') {\r\n              styleKeyIndex = i\r\n            }\r\n          } else if (!key.isHandlerKey) {\r\n            hasDynamicKey = true\r\n          }\r\n        }\r\n\r\n        const classProp = propsExpression.properties[classKeyIndex]\r\n        const styleProp = propsExpression.properties[styleKeyIndex]\r\n\r\n        // no dynamic key\r\n        if (!hasDynamicKey) {\r\n          if (classProp && !isStaticExp(classProp.value)) {\r\n            classProp.value = createCallExpression(\r\n              context.helper(NORMALIZE_CLASS),\r\n              [classProp.value]\r\n            )\r\n          }\r\n          if (\r\n            styleProp &&\r\n            !isStaticExp(styleProp.value) &&\r\n            // the static style is compiled into an object,\r\n            // so use `hasStyleBinding` to ensure that it is a dynamic style binding\r\n            hasStyleBinding\r\n          ) {\r\n            styleProp.value = createCallExpression(\r\n              context.helper(NORMALIZE_STYLE),\r\n              [styleProp.value]\r\n            )\r\n          }\r\n        } else {\r\n          // dynamic key binding, wrap with `normalizeProps`\r\n          propsExpression = createCallExpression(\r\n            context.helper(NORMALIZE_PROPS),\r\n            [propsExpression]\r\n          )\r\n        }\r\n        break\r\n      case NodeTypes.JS_CALL_EXPRESSION:\r\n        // mergeProps call, do nothing\r\n        break\r\n      default:\r\n        // single v-bind\r\n        propsExpression = createCallExpression(\r\n          context.helper(NORMALIZE_PROPS),\r\n          [\r\n            createCallExpression(context.helper(GUARD_REACTIVE_PROPS), [\r\n              propsExpression\r\n            ])\r\n          ]\r\n        )\r\n        break\r\n    }\r\n  }\r\n\r\n  return {\r\n    props: propsExpression,\r\n    directives: runtimeDirectives,\r\n    patchFlag,\r\n    dynamicPropNames\r\n  }\r\n}\r\n\r\n// Dedupe props in an object literal.\r\n// Literal duplicated attributes would have been warned during the parse phase,\r\n// however, it's possible to encounter duplicated `onXXX` handlers with different\r\n// modifiers. We also need to merge static and dynamic class / style attributes.\r\n// - onXXX handlers / style: merge into array\r\n// - class: merge into single expression with concatenation\r\nfunction dedupeProperties(properties: Property[]): Property[] {\r\n  const knownProps: Map<string, Property> = new Map()\r\n  const deduped: Property[] = []\r\n  for (let i = 0; i < properties.length; i++) {\r\n    const prop = properties[i]\r\n    // dynamic keys are always allowed\r\n    if (prop.key.type === NodeTypes.COMPOUND_EXPRESSION || !prop.key.isStatic) {\r\n      deduped.push(prop)\r\n      continue\r\n    }\r\n    const name = prop.key.content\r\n    const existing = knownProps.get(name)\r\n    if (existing) {\r\n      if (name === 'style' || name === 'class' || name.startsWith('on')) {\r\n        mergeAsArray(existing, prop)\r\n      }\r\n      // unexpected duplicate, should have emitted error during parse\r\n    } else {\r\n      knownProps.set(name, prop)\r\n      deduped.push(prop)\r\n    }\r\n  }\r\n  return deduped\r\n}\r\n\r\nfunction mergeAsArray(existing: Property, incoming: Property) {\r\n  if (existing.value.type === NodeTypes.JS_ARRAY_EXPRESSION) {\r\n    existing.value.elements.push(incoming.value)\r\n  } else {\r\n    existing.value = createArrayExpression(\r\n      [existing.value, incoming.value],\r\n      existing.loc\r\n    )\r\n  }\r\n}\r\n\r\nfunction buildDirectiveArgs(\r\n  dir: DirectiveNode,\r\n  context: TransformContext\r\n): ArrayExpression {\r\n  const dirArgs: ArrayExpression['elements'] = []\r\n  const runtime = directiveImportMap.get(dir)\r\n  if (runtime) {\r\n    // built-in directive with runtime\r\n    dirArgs.push(context.helperString(runtime))\r\n  } else {\r\n    // user directive.\r\n    // see if we have directives exposed via <script setup>\r\n    const fromSetup =\r\n      !__BROWSER__ && resolveSetupReference('v-' + dir.name, context)\r\n    if (fromSetup) {\r\n      dirArgs.push(fromSetup)\r\n    } else {\r\n      // inject statement for resolving directive\r\n      context.helper(RESOLVE_DIRECTIVE)\r\n      context.directives.add(dir.name)\r\n      dirArgs.push(toValidAssetId(dir.name, `directive`))\r\n    }\r\n  }\r\n  const { loc } = dir\r\n  if (dir.exp) dirArgs.push(dir.exp)\r\n  if (dir.arg) {\r\n    if (!dir.exp) {\r\n      dirArgs.push(`void 0`)\r\n    }\r\n    dirArgs.push(dir.arg)\r\n  }\r\n  if (Object.keys(dir.modifiers).length) {\r\n    if (!dir.arg) {\r\n      if (!dir.exp) {\r\n        dirArgs.push(`void 0`)\r\n      }\r\n      dirArgs.push(`void 0`)\r\n    }\r\n    const trueExpression = createSimpleExpression(`true`, false, loc)\r\n    dirArgs.push(\r\n      createObjectExpression(\r\n        dir.modifiers.map(modifier =>\r\n          createObjectProperty(modifier, trueExpression)\r\n        ),\r\n        loc\r\n      )\r\n    )\r\n  }\r\n  return createArrayExpression(dirArgs, dir.loc)\r\n}\r\n\r\nfunction stringifyDynamicPropNames(props: string[]): string {\r\n  let propsNamesString = `[`\r\n  for (let i = 0, l = props.length; i < l; i++) {\r\n    propsNamesString += JSON.stringify(props[i])\r\n    if (i < l - 1) propsNamesString += ', '\r\n  }\r\n  return propsNamesString + `]`\r\n}\r\n\r\nfunction isComponentTag(tag: string) {\r\n  return tag[0].toLowerCase() + tag.slice(1) === 'component'\r\n}\r\n","import { NodeTransform, TransformContext } from '../transform'\r\nimport {\r\n  NodeTypes,\r\n  CallExpression,\r\n  createCallExpression,\r\n  ExpressionNode,\r\n  SlotOutletNode,\r\n  createFunctionExpression\r\n} from '../ast'\r\nimport { isSlotOutlet, isBindKey, isStaticExp } from '../utils'\r\nimport { buildProps, PropsExpression } from './transformElement'\r\nimport { createCompilerError, ErrorCodes } from '../errors'\r\nimport { RENDER_SLOT } from '../runtimeHelpers'\r\nimport { camelize } from '@vue/shared/'\r\n\r\nexport const transformSlotOutlet: NodeTransform = (node, context) => {\r\n  if (isSlotOutlet(node)) {\r\n    const { children, loc } = node\r\n    const { slotName, slotProps } = processSlotOutlet(node, context)\r\n\r\n    const slotArgs: CallExpression['arguments'] = [\r\n      context.prefixIdentifiers ? `_ctx.$slots` : `$slots`,\r\n      slotName\r\n    ]\r\n\r\n    if (slotProps) {\r\n      slotArgs.push(slotProps)\r\n    }\r\n\r\n    if (children.length) {\r\n      if (!slotProps) {\r\n        slotArgs.push(`{}`)\r\n      }\r\n      slotArgs.push(createFunctionExpression([], children, false, false, loc))\r\n    }\r\n\r\n    if (context.scopeId && !context.slotted) {\r\n      if (!slotProps) {\r\n        slotArgs.push(`{}`)\r\n      }\r\n      if (!children.length) {\r\n        slotArgs.push(`undefined`)\r\n      }\r\n      slotArgs.push(`true`)\r\n    }\r\n\r\n    node.codegenNode = createCallExpression(\r\n      context.helper(RENDER_SLOT),\r\n      slotArgs,\r\n      loc\r\n    )\r\n  }\r\n}\r\n\r\ninterface SlotOutletProcessResult {\r\n  slotName: string | ExpressionNode\r\n  slotProps: PropsExpression | undefined\r\n}\r\n\r\nexport function processSlotOutlet(\r\n  node: SlotOutletNode,\r\n  context: TransformContext\r\n): SlotOutletProcessResult {\r\n  let slotName: string | ExpressionNode = `\"default\"`\r\n  let slotProps: PropsExpression | undefined = undefined\r\n\r\n  const nonNameProps = []\r\n  for (let i = 0; i < node.props.length; i++) {\r\n    const p = node.props[i]\r\n    if (p.type === NodeTypes.ATTRIBUTE) {\r\n      if (p.value) {\r\n        if (p.name === 'name') {\r\n          slotName = JSON.stringify(p.value.content)\r\n        } else {\r\n          p.name = camelize(p.name)\r\n          nonNameProps.push(p)\r\n        }\r\n      }\r\n    } else {\r\n      if (p.name === 'bind' && isBindKey(p.arg, 'name')) {\r\n        if (p.exp) slotName = p.exp\r\n      } else {\r\n        if (p.name === 'bind' && p.arg && isStaticExp(p.arg)) {\r\n          p.arg.content = camelize(p.arg.content)\r\n        }\r\n        nonNameProps.push(p)\r\n      }\r\n    }\r\n  }\r\n\r\n  if (nonNameProps.length > 0) {\r\n    const { props, directives } = buildProps(node, context, nonNameProps)\r\n    slotProps = props\r\n\r\n    if (directives.length) {\r\n      context.onError(\r\n        createCompilerError(\r\n          ErrorCodes.X_V_SLOT_UNEXPECTED_DIRECTIVE_ON_SLOT_OUTLET,\r\n          directives[0].loc\r\n        )\r\n      )\r\n    }\r\n  }\r\n\r\n  return {\r\n    slotName,\r\n    slotProps\r\n  }\r\n}\r\n","import { DirectiveTransform, DirectiveTransformResult } from '../transform'\r\nimport {\r\n  createCompoundExpression,\r\n  createObjectProperty,\r\n  createSimpleExpression,\r\n  DirectiveNode,\r\n  ElementTypes,\r\n  ExpressionNode,\r\n  NodeTypes,\r\n  SimpleExpressionNode\r\n} from '../ast'\r\nimport { camelize, toHandlerKey } from '@vue/shared'\r\nimport { createCompilerError, ErrorCodes } from '../errors'\r\nimport { processExpression } from './transformExpression'\r\nimport { validateBrowserExpression } from '../validateExpression'\r\nimport { hasScopeRef, isMemberExpression } from '../utils'\r\nimport { TO_HANDLER_KEY } from '../runtimeHelpers'\r\n\r\nconst fnExpRE = /^\\s*([\\w$_]+|\\([^)]*?\\))\\s*=>|^\\s*function(?:\\s+[\\w$]+)?\\s*\\(/\r\n\r\nexport interface VOnDirectiveNode extends DirectiveNode {\r\n  // v-on without arg is handled directly in ./transformElements.ts due to it affecting\r\n  // codegen for the entire props object. This transform here is only for v-on\r\n  // *with* args.\r\n  arg: ExpressionNode\r\n  // exp is guaranteed to be a simple expression here because v-on w/ arg is\r\n  // skipped by transformExpression as a special case.\r\n  exp: SimpleExpressionNode | undefined\r\n}\r\n\r\nexport const transformOn: DirectiveTransform = (\r\n  dir,\r\n  node,\r\n  context,\r\n  augmentor\r\n) => {\r\n  const { loc, modifiers, arg } = dir as VOnDirectiveNode\r\n  if (!dir.exp && !modifiers.length) {\r\n    context.onError(createCompilerError(ErrorCodes.X_V_ON_NO_EXPRESSION, loc))\r\n  }\r\n  let eventName: ExpressionNode\r\n  if (arg.type === NodeTypes.SIMPLE_EXPRESSION) {\r\n    if (arg.isStatic) {\r\n      const rawName = arg.content\r\n      // for all event listeners, auto convert it to camelCase. See issue #2249\r\n      eventName = createSimpleExpression(\r\n        toHandlerKey(camelize(rawName)),\r\n        true,\r\n        arg.loc\r\n      )\r\n    } else {\r\n      // #2388\r\n      eventName = createCompoundExpression([\r\n        `${context.helperString(TO_HANDLER_KEY)}(`,\r\n        arg,\r\n        `)`\r\n      ])\r\n    }\r\n  } else {\r\n    // already a compound expression.\r\n    eventName = arg\r\n    eventName.children.unshift(`${context.helperString(TO_HANDLER_KEY)}(`)\r\n    eventName.children.push(`)`)\r\n  }\r\n\r\n  // handler processing\r\n  let exp: ExpressionNode | undefined = dir.exp as\r\n    | SimpleExpressionNode\r\n    | undefined\r\n  if (exp && !exp.content.trim()) {\r\n    exp = undefined\r\n  }\r\n  let shouldCache: boolean = context.cacheHandlers && !exp && !context.inVOnce\r\n  if (exp) {\r\n    const isMemberExp = isMemberExpression(exp.content)\r\n    const isInlineStatement = !(isMemberExp || fnExpRE.test(exp.content))\r\n    const hasMultipleStatements = exp.content.includes(`;`)\r\n\r\n    // process the expression since it's been skipped\r\n    if (!__BROWSER__ && context.prefixIdentifiers) {\r\n      isInlineStatement && context.addIdentifiers(`$event`)\r\n      exp = dir.exp = processExpression(\r\n        exp,\r\n        context,\r\n        false,\r\n        hasMultipleStatements\r\n      )\r\n      isInlineStatement && context.removeIdentifiers(`$event`)\r\n      // with scope analysis, the function is hoistable if it has no reference\r\n      // to scope variables.\r\n      shouldCache =\r\n        context.cacheHandlers &&\r\n        // unnecessary to cache inside v-once\r\n        !context.inVOnce &&\r\n        // runtime constants don't need to be cached\r\n        // (this is analyzed by compileScript in SFC <script setup>)\r\n        !(exp.type === NodeTypes.SIMPLE_EXPRESSION && exp.constType > 0) &&\r\n        // #1541 bail if this is a member exp handler passed to a component -\r\n        // we need to use the original function to preserve arity,\r\n        // e.g. <transition> relies on checking cb.length to determine\r\n        // transition end handling. Inline function is ok since its arity\r\n        // is preserved even when cached.\r\n        !(isMemberExp && node.tagType === ElementTypes.COMPONENT) &&\r\n        // bail if the function references closure variables (v-for, v-slot)\r\n        // it must be passed fresh to avoid stale values.\r\n        !hasScopeRef(exp, context.identifiers)\r\n      // If the expression is optimizable and is a member expression pointing\r\n      // to a function, turn it into invocation (and wrap in an arrow function\r\n      // below) so that it always accesses the latest value when called - thus\r\n      // avoiding the need to be patched.\r\n      if (shouldCache && isMemberExp) {\r\n        if (exp.type === NodeTypes.SIMPLE_EXPRESSION) {\r\n          exp.content = `${exp.content} && ${exp.content}(...args)`\r\n        } else {\r\n          exp.children = [...exp.children, ` && `, ...exp.children, `(...args)`]\r\n        }\r\n      }\r\n    }\r\n\r\n    if (__DEV__ && __BROWSER__) {\r\n      validateBrowserExpression(\r\n        exp as SimpleExpressionNode,\r\n        context,\r\n        false,\r\n        hasMultipleStatements\r\n      )\r\n    }\r\n\r\n    if (isInlineStatement || (shouldCache && isMemberExp)) {\r\n      // wrap inline statement in a function expression\r\n      exp = createCompoundExpression([\r\n        `${\r\n          isInlineStatement\r\n            ? !__BROWSER__ && context.isTS\r\n              ? `($event: any)`\r\n              : `$event`\r\n            : `${\r\n                !__BROWSER__ && context.isTS ? `\\n//@ts-ignore\\n` : ``\r\n              }(...args)`\r\n        } => ${hasMultipleStatements ? `{` : `(`}`,\r\n        exp,\r\n        hasMultipleStatements ? `}` : `)`\r\n      ])\r\n    }\r\n  }\r\n\r\n  let ret: DirectiveTransformResult = {\r\n    props: [\r\n      createObjectProperty(\r\n        eventName,\r\n        exp || createSimpleExpression(`() => {}`, false, loc)\r\n      )\r\n    ]\r\n  }\r\n\r\n  // apply extended compiler augmentor\r\n  if (augmentor) {\r\n    ret = augmentor(ret)\r\n  }\r\n\r\n  if (shouldCache) {\r\n    // cache handlers so that it's always the same handler being passed down.\r\n    // this avoids unnecessary re-renders when users use inline handlers on\r\n    // components.\r\n    ret.props[0].value = context.cache(ret.props[0].value)\r\n  }\r\n\r\n  // mark the key as handler for props normalization check\r\n  ret.props.forEach(p => (p.key.isHandlerKey = true))\r\n  return ret\r\n}\r\n","import { DirectiveTransform } from '../transform'\r\nimport {\r\n  createObjectProperty,\r\n  createSimpleExpression,\r\n  ExpressionNode,\r\n  NodeTypes\r\n} from '../ast'\r\nimport { createCompilerError, ErrorCodes } from '../errors'\r\nimport { camelize } from '@vue/shared'\r\nimport { CAMELIZE } from '../runtimeHelpers'\r\n\r\n// v-bind without arg is handled directly in ./transformElements.ts due to it affecting\r\n// codegen for the entire props object. This transform here is only for v-bind\r\n// *with* args.\r\nexport const transformBind: DirectiveTransform = (dir, _node, context) => {\r\n  const { exp, modifiers, loc } = dir\r\n  const arg = dir.arg!\r\n\r\n  if (arg.type !== NodeTypes.SIMPLE_EXPRESSION) {\r\n    arg.children.unshift(`(`)\r\n    arg.children.push(`) || \"\"`)\r\n  } else if (!arg.isStatic) {\r\n    arg.content = `${arg.content} || \"\"`\r\n  }\r\n\r\n  // .sync is replaced by v-model:arg\r\n  if (modifiers.includes('camel')) {\r\n    if (arg.type === NodeTypes.SIMPLE_EXPRESSION) {\r\n      if (arg.isStatic) {\r\n        arg.content = camelize(arg.content)\r\n      } else {\r\n        arg.content = `${context.helperString(CAMELIZE)}(${arg.content})`\r\n      }\r\n    } else {\r\n      arg.children.unshift(`${context.helperString(CAMELIZE)}(`)\r\n      arg.children.push(`)`)\r\n    }\r\n  }\r\n\r\n  if (!context.inSSR) {\r\n    if (modifiers.includes('prop')) {\r\n      injectPrefix(arg, '.')\r\n    }\r\n    if (modifiers.includes('attr')) {\r\n      injectPrefix(arg, '^')\r\n    }\r\n  }\r\n\r\n  if (\r\n    !exp ||\r\n    (exp.type === NodeTypes.SIMPLE_EXPRESSION && !exp.content.trim())\r\n  ) {\r\n    context.onError(createCompilerError(ErrorCodes.X_V_BIND_NO_EXPRESSION, loc))\r\n    return {\r\n      props: [createObjectProperty(arg, createSimpleExpression('', true, loc))]\r\n    }\r\n  }\r\n\r\n  return {\r\n    props: [createObjectProperty(arg, exp)]\r\n  }\r\n}\r\n\r\nconst injectPrefix = (arg: ExpressionNode, prefix: string) => {\r\n  if (arg.type === NodeTypes.SIMPLE_EXPRESSION) {\r\n    if (arg.isStatic) {\r\n      arg.content = prefix + arg.content\r\n    } else {\r\n      arg.content = `\\`${prefix}\\${${arg.content}}\\``\r\n    }\r\n  } else {\r\n    arg.children.unshift(`'${prefix}' + (`)\r\n    arg.children.push(`)`)\r\n  }\r\n}\r\n","import { NodeTransform } from '../transform'\r\nimport {\r\n  NodeTypes,\r\n  CompoundExpressionNode,\r\n  createCallExpression,\r\n  CallExpression,\r\n  ElementTypes,\r\n  ConstantTypes\r\n} from '../ast'\r\nimport { isText } from '../utils'\r\nimport { CREATE_TEXT } from '../runtimeHelpers'\r\nimport { PatchFlags, PatchFlagNames } from '@vue/shared'\r\nimport { getConstantType } from './hoistStatic'\r\n\r\n// Merge adjacent text nodes and expressions into a single expression\r\n// e.g. <div>abc {{ d }} {{ e }}</div> should have a single expression node as child.\r\nexport const transformText: NodeTransform = (node, context) => {\r\n  if (\r\n    node.type === NodeTypes.ROOT ||\r\n    node.type === NodeTypes.ELEMENT ||\r\n    node.type === NodeTypes.FOR ||\r\n    node.type === NodeTypes.IF_BRANCH\r\n  ) {\r\n    // perform the transform on node exit so that all expressions have already\r\n    // been processed.\r\n    return () => {\r\n      const children = node.children\r\n      let currentContainer: CompoundExpressionNode | undefined = undefined\r\n      let hasText = false\r\n\r\n      for (let i = 0; i < children.length; i++) {\r\n        const child = children[i]\r\n        if (isText(child)) {\r\n          hasText = true\r\n          for (let j = i + 1; j < children.length; j++) {\r\n            const next = children[j]\r\n            if (isText(next)) {\r\n              if (!currentContainer) {\r\n                currentContainer = children[i] = {\r\n                  type: NodeTypes.COMPOUND_EXPRESSION,\r\n                  loc: child.loc,\r\n                  children: [child]\r\n                }\r\n              }\r\n              // merge adjacent text node into current\r\n              currentContainer.children.push(` + `, next)\r\n              children.splice(j, 1)\r\n              j--\r\n            } else {\r\n              currentContainer = undefined\r\n              break\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      if (\r\n        !hasText ||\r\n        // if this is a plain element with a single text child, leave it\r\n        // as-is since the runtime has dedicated fast path for this by directly\r\n        // setting textContent of the element.\r\n        // for component root it's always normalized anyway.\r\n        (children.length === 1 &&\r\n          (node.type === NodeTypes.ROOT ||\r\n            (node.type === NodeTypes.ELEMENT &&\r\n              node.tagType === ElementTypes.ELEMENT &&\r\n              // #3756\r\n              // custom directives can potentially add DOM elements arbitrarily,\r\n              // we need to avoid setting textContent of the element at runtime\r\n              // to avoid accidentally overwriting the DOM elements added\r\n              // by the user through custom directives.\r\n              !node.props.find(\r\n                p =>\r\n                  p.type === NodeTypes.DIRECTIVE &&\r\n                  !context.directiveTransforms[p.name]\r\n              ) &&\r\n              // in compat mode, <template> tags with no special directives\r\n              // will be rendered as a fragment so its children must be\r\n              // converted into vnodes.\r\n              !(__COMPAT__ && node.tag === 'template'))))\r\n      ) {\r\n        return\r\n      }\r\n\r\n      // pre-convert text nodes into createTextVNode(text) calls to avoid\r\n      // runtime normalization.\r\n      for (let i = 0; i < children.length; i++) {\r\n        const child = children[i]\r\n        if (isText(child) || child.type === NodeTypes.COMPOUND_EXPRESSION) {\r\n          const callArgs: CallExpression['arguments'] = []\r\n          // createTextVNode defaults to single whitespace, so if it is a\r\n          // single space the code could be an empty call to save bytes.\r\n          if (child.type !== NodeTypes.TEXT || child.content !== ' ') {\r\n            callArgs.push(child)\r\n          }\r\n          // mark dynamic text with flag so it gets patched inside a block\r\n          if (\r\n            !context.ssr &&\r\n            getConstantType(child, context) === ConstantTypes.NOT_CONSTANT\r\n          ) {\r\n            callArgs.push(\r\n              PatchFlags.TEXT +\r\n                (__DEV__ ? ` /* ${PatchFlagNames[PatchFlags.TEXT]} */` : ``)\r\n            )\r\n          }\r\n          children[i] = {\r\n            type: NodeTypes.TEXT_CALL,\r\n            content: child,\r\n            loc: child.loc,\r\n            codegenNode: createCallExpression(\r\n              context.helper(CREATE_TEXT),\r\n              callArgs\r\n            )\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n","import { NodeTransform } from '../transform'\r\nimport { findDir } from '../utils'\r\nimport { ElementNode, ForNode, IfNode, NodeTypes } from '../ast'\r\nimport { SET_BLOCK_TRACKING } from '../runtimeHelpers'\r\n\r\nconst seen = new WeakSet()\r\n\r\nexport const transformOnce: NodeTransform = (node, context) => {\r\n  if (node.type === NodeTypes.ELEMENT && findDir(node, 'once', true)) {\r\n    if (seen.has(node) || context.inVOnce) {\r\n      return\r\n    }\r\n    seen.add(node)\r\n    context.inVOnce = true\r\n    context.helper(SET_BLOCK_TRACKING)\r\n    return () => {\r\n      context.inVOnce = false\r\n      const cur = context.currentNode as ElementNode | IfNode | ForNode\r\n      if (cur.codegenNode) {\r\n        cur.codegenNode = context.cache(cur.codegenNode, true /* isVNode */)\r\n      }\r\n    }\r\n  }\r\n}\r\n","import { DirectiveTransform } from '../transform'\r\nimport {\r\n  createSimpleExpression,\r\n  createObjectProperty,\r\n  createCompoundExpression,\r\n  NodeTypes,\r\n  Property,\r\n  ElementTypes,\r\n  ExpressionNode,\r\n  ConstantTypes\r\n} from '../ast'\r\nimport { createCompilerError, ErrorCodes } from '../errors'\r\nimport {\r\n  isMemberExpression,\r\n  isSimpleIdentifier,\r\n  hasScopeRef,\r\n  isStaticExp\r\n} from '../utils'\r\nimport { IS_REF } from '../runtimeHelpers'\r\nimport { BindingTypes } from '../options'\r\n\r\nexport const transformModel: DirectiveTransform = (dir, node, context) => {\r\n  const { exp, arg } = dir\r\n  if (!exp) {\r\n    context.onError(\r\n      createCompilerError(ErrorCodes.X_V_MODEL_NO_EXPRESSION, dir.loc)\r\n    )\r\n    return createTransformProps()\r\n  }\r\n\r\n  const rawExp = exp.loc.source\r\n  const expString =\r\n    exp.type === NodeTypes.SIMPLE_EXPRESSION ? exp.content : rawExp\r\n\r\n  // im SFC <script setup> inline mode, the exp may have been transformed into\r\n  // _unref(exp)\r\n  const bindingType = context.bindingMetadata[rawExp]\r\n  const maybeRef =\r\n    !__BROWSER__ &&\r\n    context.inline &&\r\n    bindingType &&\r\n    bindingType !== BindingTypes.SETUP_CONST\r\n\r\n  if (!expString.trim() || (!isMemberExpression(expString) && !maybeRef)) {\r\n    context.onError(\r\n      createCompilerError(ErrorCodes.X_V_MODEL_MALFORMED_EXPRESSION, exp.loc)\r\n    )\r\n    return createTransformProps()\r\n  }\r\n\r\n  if (\r\n    !__BROWSER__ &&\r\n    context.prefixIdentifiers &&\r\n    isSimpleIdentifier(expString) &&\r\n    context.identifiers[expString]\r\n  ) {\r\n    context.onError(\r\n      createCompilerError(ErrorCodes.X_V_MODEL_ON_SCOPE_VARIABLE, exp.loc)\r\n    )\r\n    return createTransformProps()\r\n  }\r\n\r\n  const propName = arg ? arg : createSimpleExpression('modelValue', true)\r\n  const eventName = arg\r\n    ? isStaticExp(arg)\r\n      ? `onUpdate:${arg.content}`\r\n      : createCompoundExpression(['\"onUpdate:\" + ', arg])\r\n    : `onUpdate:modelValue`\r\n\r\n  let assignmentExp: ExpressionNode\r\n  const eventArg = context.isTS ? `($event: any)` : `$event`\r\n  if (maybeRef) {\r\n    if (bindingType === BindingTypes.SETUP_REF) {\r\n      // v-model used on known ref.\r\n      assignmentExp = createCompoundExpression([\r\n        `${eventArg} => (`,\r\n        createSimpleExpression(rawExp, false, exp.loc),\r\n        `.value = $event)`\r\n      ])\r\n    } else {\r\n      // v-model used on a potentially ref binding in <script setup> inline mode.\r\n      // the assignment needs to check whether the binding is actually a ref.\r\n      const altAssignment =\r\n        bindingType === BindingTypes.SETUP_LET ? `${rawExp} = $event` : `null`\r\n      assignmentExp = createCompoundExpression([\r\n        `${eventArg} => (${context.helperString(IS_REF)}(${rawExp}) ? `,\r\n        createSimpleExpression(rawExp, false, exp.loc),\r\n        `.value = $event : ${altAssignment})`\r\n      ])\r\n    }\r\n  } else {\r\n    assignmentExp = createCompoundExpression([\r\n      `${eventArg} => (`,\r\n      exp,\r\n      ` = $event)`\r\n    ])\r\n  }\r\n\r\n  const props = [\r\n    // modelValue: foo\r\n    createObjectProperty(propName, dir.exp!),\r\n    // \"onUpdate:modelValue\": $event => (foo = $event)\r\n    createObjectProperty(eventName, assignmentExp)\r\n  ]\r\n\r\n  // cache v-model handler if applicable (when it doesn't refer any scope vars)\r\n  if (\r\n    !__BROWSER__ &&\r\n    context.prefixIdentifiers &&\r\n    !context.inVOnce &&\r\n    context.cacheHandlers &&\r\n    !hasScopeRef(exp, context.identifiers)\r\n  ) {\r\n    props[1].value = context.cache(props[1].value)\r\n  }\r\n\r\n  // modelModifiers: { foo: true, \"bar-baz\": true }\r\n  if (dir.modifiers.length && node.tagType === ElementTypes.COMPONENT) {\r\n    const modifiers = dir.modifiers\r\n      .map(m => (isSimpleIdentifier(m) ? m : JSON.stringify(m)) + `: true`)\r\n      .join(`, `)\r\n    const modifiersKey = arg\r\n      ? isStaticExp(arg)\r\n        ? `${arg.content}Modifiers`\r\n        : createCompoundExpression([arg, ' + \"Modifiers\"'])\r\n      : `modelModifiers`\r\n    props.push(\r\n      createObjectProperty(\r\n        modifiersKey,\r\n        createSimpleExpression(\r\n          `{ ${modifiers} }`,\r\n          false,\r\n          dir.loc,\r\n          ConstantTypes.CAN_HOIST\r\n        )\r\n      )\r\n    )\r\n  }\r\n\r\n  return createTransformProps(props)\r\n}\r\n\r\nfunction createTransformProps(props: Property[] = []) {\r\n  return { props }\r\n}\r\n","import { NodeTransform } from '../transform'\r\nimport { findDir, makeBlock } from '../utils'\r\nimport {\r\n  createCallExpression,\r\n  createFunctionExpression,\r\n  ElementTypes,\r\n  MemoExpression,\r\n  NodeTypes,\r\n  PlainElementNode\r\n} from '../ast'\r\nimport { WITH_MEMO } from '../runtimeHelpers'\r\n\r\nconst seen = new WeakSet()\r\n\r\nexport const transformMemo: NodeTransform = (node, context) => {\r\n  if (node.type === NodeTypes.ELEMENT) {\r\n    const dir = findDir(node, 'memo')\r\n    if (!dir || seen.has(node)) {\r\n      return\r\n    }\r\n    seen.add(node)\r\n    return () => {\r\n      const codegenNode =\r\n        node.codegenNode ||\r\n        (context.currentNode as PlainElementNode).codegenNode\r\n      if (codegenNode && codegenNode.type === NodeTypes.VNODE_CALL) {\r\n        // non-component sub tree should be turned into a block\r\n        if (node.tagType !== ElementTypes.COMPONENT) {\r\n          makeBlock(codegenNode, context)\r\n        }\r\n        node.codegenNode = createCallExpression(context.helper(WITH_MEMO), [\r\n          dir.exp!,\r\n          createFunctionExpression(undefined, codegenNode),\r\n          `_cache`,\r\n          String(context.cached++)\r\n        ]) as MemoExpression\r\n      }\r\n    }\r\n  }\r\n}\r\n","import { CompilerOptions } from './options'\r\nimport { baseParse } from './parse'\r\nimport { transform, NodeTransform, DirectiveTransform } from './transform'\r\nimport { generate, CodegenResult } from './codegen'\r\nimport { RootNode } from './ast'\r\nimport { isString, extend } from '@vue/shared'\r\nimport { transformIf } from './transforms/vIf'\r\nimport { transformFor } from './transforms/vFor'\r\nimport { transformExpression } from './transforms/transformExpression'\r\nimport { transformSlotOutlet } from './transforms/transformSlotOutlet'\r\nimport { transformElement } from './transforms/transformElement'\r\nimport { transformOn } from './transforms/vOn'\r\nimport { transformBind } from './transforms/vBind'\r\nimport { trackSlotScopes, trackVForSlotScopes } from './transforms/vSlot'\r\nimport { transformText } from './transforms/transformText'\r\nimport { transformOnce } from './transforms/vOnce'\r\nimport { transformModel } from './transforms/vModel'\r\nimport { transformFilter } from './compat/transformFilter'\r\nimport { defaultOnError, createCompilerError, ErrorCodes } from './errors'\r\nimport { transformMemo } from './transforms/vMemo'\r\n\r\nexport type TransformPreset = [\r\n  NodeTransform[],\r\n  Record<string, DirectiveTransform>\r\n]\r\n\r\nexport function getBaseTransformPreset(\r\n  prefixIdentifiers?: boolean\r\n): TransformPreset {\r\n  return [\r\n    [\r\n      transformOnce,\r\n      transformIf,\r\n      transformMemo,\r\n      transformFor,\r\n      ...(__COMPAT__ ? [transformFilter] : []),\r\n      ...(!__BROWSER__ && prefixIdentifiers\r\n        ? [\r\n            // order is important\r\n            trackVForSlotScopes,\r\n            transformExpression\r\n          ]\r\n        : __BROWSER__ && __DEV__\r\n        ? [transformExpression]\r\n        : []),\r\n      transformSlotOutlet,\r\n      transformElement,\r\n      trackSlotScopes,\r\n      transformText\r\n    ],\r\n    {\r\n      on: transformOn,\r\n      bind: transformBind,\r\n      model: transformModel\r\n    }\r\n  ]\r\n}\r\n\r\n// we name it `baseCompile` so that higher order compilers like\r\n// @vue/compiler-dom can export `compile` while re-exporting everything else.\r\nexport function baseCompile(\r\n  template: string | RootNode,\r\n  options: CompilerOptions = {}\r\n): CodegenResult {\r\n  const onError = options.onError || defaultOnError\r\n  const isModuleMode = options.mode === 'module'\r\n  /* istanbul ignore if */\r\n  if (__BROWSER__) {\r\n    if (options.prefixIdentifiers === true) {\r\n      onError(createCompilerError(ErrorCodes.X_PREFIX_ID_NOT_SUPPORTED))\r\n    } else if (isModuleMode) {\r\n      onError(createCompilerError(ErrorCodes.X_MODULE_MODE_NOT_SUPPORTED))\r\n    }\r\n  }\r\n\r\n  const prefixIdentifiers =\r\n    !__BROWSER__ && (options.prefixIdentifiers === true || isModuleMode)\r\n  if (!prefixIdentifiers && options.cacheHandlers) {\r\n    onError(createCompilerError(ErrorCodes.X_CACHE_HANDLER_NOT_SUPPORTED))\r\n  }\r\n  if (options.scopeId && !isModuleMode) {\r\n    onError(createCompilerError(ErrorCodes.X_SCOPE_ID_NOT_SUPPORTED))\r\n  }\r\n\r\n  const ast = isString(template) ? baseParse(template, options) : template\r\n  const [nodeTransforms, directiveTransforms] =\r\n    getBaseTransformPreset(prefixIdentifiers)\r\n  transform(\r\n    ast,\r\n    extend({}, options, {\r\n      prefixIdentifiers,\r\n      nodeTransforms: [\r\n        ...nodeTransforms,\r\n        ...(options.nodeTransforms || []) // user transforms\r\n      ],\r\n      directiveTransforms: extend(\r\n        {},\r\n        directiveTransforms,\r\n        options.directiveTransforms || {} // user transforms\r\n      )\r\n    })\r\n  )\r\n\r\n  return generate(\r\n    ast,\r\n    extend({}, options, {\r\n      prefixIdentifiers\r\n    })\r\n  )\r\n}\r\n","import { DirectiveTransform } from '../transform'\r\n\r\nexport const noopDirectiveTransform: DirectiveTransform = () => ({ props: [] })\r\n","import { registerRuntimeHelpers } from '@vue/compiler-core'\r\n\r\nexport const V_MODEL_RADIO = Symbol(__DEV__ ? `vModelRadio` : ``)\r\nexport const V_MODEL_CHECKBOX = Symbol(__DEV__ ? `vModelCheckbox` : ``)\r\nexport const V_MODEL_TEXT = Symbol(__DEV__ ? `vModelText` : ``)\r\nexport const V_MODEL_SELECT = Symbol(__DEV__ ? `vModelSelect` : ``)\r\nexport const V_MODEL_DYNAMIC = Symbol(__DEV__ ? `vModelDynamic` : ``)\r\n\r\nexport const V_ON_WITH_MODIFIERS = Symbol(__DEV__ ? `vOnModifiersGuard` : ``)\r\nexport const V_ON_WITH_KEYS = Symbol(__DEV__ ? `vOnKeysGuard` : ``)\r\n\r\nexport const V_SHOW = Symbol(__DEV__ ? `vShow` : ``)\r\n\r\nexport const TRANSITION = Symbol(__DEV__ ? `Transition` : ``)\r\nexport const TRANSITION_GROUP = Symbol(__DEV__ ? `TransitionGroup` : ``)\r\n\r\nregisterRuntimeHelpers({\r\n  [V_MODEL_RADIO]: `vModelRadio`,\r\n  [V_MODEL_CHECKBOX]: `vModelCheckbox`,\r\n  [V_MODEL_TEXT]: `vModelText`,\r\n  [V_MODEL_SELECT]: `vModelSelect`,\r\n  [V_MODEL_DYNAMIC]: `vModelDynamic`,\r\n  [V_ON_WITH_MODIFIERS]: `withModifiers`,\r\n  [V_ON_WITH_KEYS]: `withKeys`,\r\n  [V_SHOW]: `vShow`,\r\n  [TRANSITION]: `Transition`,\r\n  [TRANSITION_GROUP]: `TransitionGroup`\r\n})\r\n","/* eslint-disable no-restricted-globals */\r\n\r\nlet decoder: HTMLDivElement\r\n\r\nexport function decodeHtmlBrowser(raw: string, asAttr = false): string {\r\n  if (!decoder) {\r\n    decoder = document.createElement('div')\r\n  }\r\n  if (asAttr) {\r\n    decoder.innerHTML = `<div foo=\"${raw.replace(/\"/g, '&quot;')}\">`\r\n    return decoder.children[0].getAttribute('foo') as string\r\n  } else {\r\n    decoder.innerHTML = raw\r\n    return decoder.textContent as string\r\n  }\r\n}\r\n","import {\r\n  TextModes,\r\n  ParserOptions,\r\n  ElementNode,\r\n  Namespaces,\r\n  NodeTypes,\r\n  isBuiltInType\r\n} from '@vue/compiler-core'\r\nimport { makeMap, isVoidTag, isHTMLTag, isSVGTag } from '@vue/shared'\r\nimport { TRANSITION, TRANSITION_GROUP } from './runtimeHelpers'\r\nimport { decodeHtml } from './decodeHtml'\r\nimport { decodeHtmlBrowser } from './decodeHtmlBrowser'\r\n\r\nconst isRawTextContainer = /*#__PURE__*/ makeMap(\r\n  'style,iframe,script,noscript',\r\n  true\r\n)\r\n\r\nexport const enum DOMNamespaces {\r\n  HTML = Namespaces.HTML,\r\n  SVG,\r\n  MATH_ML\r\n}\r\n\r\nexport const parserOptions: ParserOptions = {\r\n  isVoidTag,\r\n  isNativeTag: tag => isHTMLTag(tag) || isSVGTag(tag),\r\n  isPreTag: tag => tag === 'pre',\r\n  decodeEntities: __BROWSER__ ? decodeHtmlBrowser : decodeHtml,\r\n\r\n  isBuiltInComponent: (tag: string): symbol | undefined => {\r\n    if (isBuiltInType(tag, `Transition`)) {\r\n      return TRANSITION\r\n    } else if (isBuiltInType(tag, `TransitionGroup`)) {\r\n      return TRANSITION_GROUP\r\n    }\r\n  },\r\n\r\n  // https://html.spec.whatwg.org/multipage/parsing.html#tree-construction-dispatcher\r\n  getNamespace(tag: string, parent: ElementNode | undefined): DOMNamespaces {\r\n    let ns = parent ? parent.ns : DOMNamespaces.HTML\r\n\r\n    if (parent && ns === DOMNamespaces.MATH_ML) {\r\n      if (parent.tag === 'annotation-xml') {\r\n        if (tag === 'svg') {\r\n          return DOMNamespaces.SVG\r\n        }\r\n        if (\r\n          parent.props.some(\r\n            a =>\r\n              a.type === NodeTypes.ATTRIBUTE &&\r\n              a.name === 'encoding' &&\r\n              a.value != null &&\r\n              (a.value.content === 'text/html' ||\r\n                a.value.content === 'application/xhtml+xml')\r\n          )\r\n        ) {\r\n          ns = DOMNamespaces.HTML\r\n        }\r\n      } else if (\r\n        /^m(?:[ions]|text)$/.test(parent.tag) &&\r\n        tag !== 'mglyph' &&\r\n        tag !== 'malignmark'\r\n      ) {\r\n        ns = DOMNamespaces.HTML\r\n      }\r\n    } else if (parent && ns === DOMNamespaces.SVG) {\r\n      if (\r\n        parent.tag === 'foreignObject' ||\r\n        parent.tag === 'desc' ||\r\n        parent.tag === 'title'\r\n      ) {\r\n        ns = DOMNamespaces.HTML\r\n      }\r\n    }\r\n\r\n    if (ns === DOMNamespaces.HTML) {\r\n      if (tag === 'svg') {\r\n        return DOMNamespaces.SVG\r\n      }\r\n      if (tag === 'math') {\r\n        return DOMNamespaces.MATH_ML\r\n      }\r\n    }\r\n    return ns\r\n  },\r\n\r\n  // https://html.spec.whatwg.org/multipage/parsing.html#parsing-html-fragments\r\n  getTextMode({ tag, ns }: ElementNode): TextModes {\r\n    if (ns === DOMNamespaces.HTML) {\r\n      if (tag === 'textarea' || tag === 'title') {\r\n        return TextModes.RCDATA\r\n      }\r\n      if (isRawTextContainer(tag)) {\r\n        return TextModes.RAWTEXT\r\n      }\r\n    }\r\n    return TextModes.DATA\r\n  }\r\n}\r\n","import {\r\n  NodeTransform,\r\n  NodeTypes,\r\n  createSimpleExpression,\r\n  SimpleExpressionNode,\r\n  SourceLocation,\r\n  ConstantTypes\r\n} from '@vue/compiler-core'\r\nimport { parseStringStyle } from '@vue/shared'\r\n\r\n// Parse inline CSS strings for static style attributes into an object.\r\n// This is a NodeTransform since it works on the static `style` attribute and\r\n// converts it into a dynamic equivalent:\r\n// style=\"color: red\" -> :style='{ \"color\": \"red\" }'\r\n// It is then processed by `transformElement` and included in the generated\r\n// props.\r\nexport const transformStyle: NodeTransform = node => {\r\n  if (node.type === NodeTypes.ELEMENT) {\r\n    node.props.forEach((p, i) => {\r\n      if (p.type === NodeTypes.ATTRIBUTE && p.name === 'style' && p.value) {\r\n        // replace p with an expression node\r\n        node.props[i] = {\r\n          type: NodeTypes.DIRECTIVE,\r\n          name: `bind`,\r\n          arg: createSimpleExpression(`style`, true, p.loc),\r\n          exp: parseInlineCSS(p.value.content, p.loc),\r\n          modifiers: [],\r\n          loc: p.loc\r\n        }\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\nconst parseInlineCSS = (\r\n  cssText: string,\r\n  loc: SourceLocation\r\n): SimpleExpressionNode => {\r\n  const normalized = parseStringStyle(cssText)\r\n  return createSimpleExpression(\r\n    JSON.stringify(normalized),\r\n    false,\r\n    loc,\r\n    ConstantTypes.CAN_STRINGIFY\r\n  )\r\n}\r\n","import {\r\n  DirectiveTransform,\r\n  createObjectProperty,\r\n  createSimpleExpression\r\n} from '@vue/compiler-core'\r\nimport { createDOMCompilerError, DOMErrorCodes } from '../errors'\r\n\r\nexport const transformVHtml: DirectiveTransform = (dir, node, context) => {\r\n  const { exp, loc } = dir\r\n  if (!exp) {\r\n    context.onError(\r\n      createDOMCompilerError(DOMErrorCodes.X_V_HTML_NO_EXPRESSION, loc)\r\n    )\r\n  }\r\n  if (node.children.length) {\r\n    context.onError(\r\n      createDOMCompilerError(DOMErrorCodes.X_V_HTML_WITH_CHILDREN, loc)\r\n    )\r\n    node.children.length = 0\r\n  }\r\n  return {\r\n    props: [\r\n      createObjectProperty(\r\n        createSimpleExpression(`innerHTML`, true, loc),\r\n        exp || createSimpleExpression('', true)\r\n      )\r\n    ]\r\n  }\r\n}\r\n","import {\r\n  transformOn as baseTransform,\r\n  DirectiveTransform,\r\n  createObjectProperty,\r\n  createCallExpression,\r\n  createSimpleExpression,\r\n  NodeTypes,\r\n  createCompoundExpression,\r\n  ExpressionNode,\r\n  SimpleExpressionNode,\r\n  isStaticExp,\r\n  CompilerDeprecationTypes,\r\n  TransformContext,\r\n  SourceLocation,\r\n  checkCompatEnabled\r\n} from '@vue/compiler-core'\r\nimport { V_ON_WITH_MODIFIERS, V_ON_WITH_KEYS } from '../runtimeHelpers'\r\nimport { makeMap, capitalize } from '@vue/shared'\r\n\r\nconst isEventOptionModifier = /*#__PURE__*/ makeMap(`passive,once,capture`)\r\nconst isNonKeyModifier = /*#__PURE__*/ makeMap(\r\n  // event propagation management\r\n  `stop,prevent,self,` +\r\n    // system modifiers + exact\r\n    `ctrl,shift,alt,meta,exact,` +\r\n    // mouse\r\n    `middle`\r\n)\r\n// left & right could be mouse or key modifiers based on event type\r\nconst maybeKeyModifier = /*#__PURE__*/ makeMap('left,right')\r\nconst isKeyboardEvent = /*#__PURE__*/ makeMap(\r\n  `onkeyup,onkeydown,onkeypress`,\r\n  true\r\n)\r\n\r\nconst resolveModifiers = (\r\n  key: ExpressionNode,\r\n  modifiers: string[],\r\n  context: TransformContext,\r\n  loc: SourceLocation\r\n) => {\r\n  const keyModifiers = []\r\n  const nonKeyModifiers = []\r\n  const eventOptionModifiers = []\r\n\r\n  for (let i = 0; i < modifiers.length; i++) {\r\n    const modifier = modifiers[i]\r\n\r\n    if (\r\n      __COMPAT__ &&\r\n      modifier === 'native' &&\r\n      checkCompatEnabled(\r\n        CompilerDeprecationTypes.COMPILER_V_ON_NATIVE,\r\n        context,\r\n        loc\r\n      )\r\n    ) {\r\n      eventOptionModifiers.push(modifier)\r\n    } else if (isEventOptionModifier(modifier)) {\r\n      // eventOptionModifiers: modifiers for addEventListener() options,\r\n      // e.g. .passive & .capture\r\n      eventOptionModifiers.push(modifier)\r\n    } else {\r\n      // runtimeModifiers: modifiers that needs runtime guards\r\n      if (maybeKeyModifier(modifier)) {\r\n        if (isStaticExp(key)) {\r\n          if (isKeyboardEvent((key as SimpleExpressionNode).content)) {\r\n            keyModifiers.push(modifier)\r\n          } else {\r\n            nonKeyModifiers.push(modifier)\r\n          }\r\n        } else {\r\n          keyModifiers.push(modifier)\r\n          nonKeyModifiers.push(modifier)\r\n        }\r\n      } else {\r\n        if (isNonKeyModifier(modifier)) {\r\n          nonKeyModifiers.push(modifier)\r\n        } else {\r\n          keyModifiers.push(modifier)\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  return {\r\n    keyModifiers,\r\n    nonKeyModifiers,\r\n    eventOptionModifiers\r\n  }\r\n}\r\n\r\nconst transformClick = (key: ExpressionNode, event: string) => {\r\n  const isStaticClick =\r\n    isStaticExp(key) && key.content.toLowerCase() === 'onclick'\r\n  return isStaticClick\r\n    ? createSimpleExpression(event, true)\r\n    : key.type !== NodeTypes.SIMPLE_EXPRESSION\r\n    ? createCompoundExpression([\r\n        `(`,\r\n        key,\r\n        `) === \"onClick\" ? \"${event}\" : (`,\r\n        key,\r\n        `)`\r\n      ])\r\n    : key\r\n}\r\n\r\nexport const transformOn: DirectiveTransform = (dir, node, context) => {\r\n  return baseTransform(dir, node, context, baseResult => {\r\n    const { modifiers } = dir\r\n    if (!modifiers.length) return baseResult\r\n\r\n    let { key, value: handlerExp } = baseResult.props[0]\r\n    const { keyModifiers, nonKeyModifiers, eventOptionModifiers } =\r\n      resolveModifiers(key, modifiers, context, dir.loc)\r\n\r\n    // normalize click.right and click.middle since they don't actually fire\r\n    if (nonKeyModifiers.includes('right')) {\r\n      key = transformClick(key, `onContextmenu`)\r\n    }\r\n    if (nonKeyModifiers.includes('middle')) {\r\n      key = transformClick(key, `onMouseup`)\r\n    }\r\n\r\n    if (nonKeyModifiers.length) {\r\n      handlerExp = createCallExpression(context.helper(V_ON_WITH_MODIFIERS), [\r\n        handlerExp,\r\n        JSON.stringify(nonKeyModifiers)\r\n      ])\r\n    }\r\n\r\n    if (\r\n      keyModifiers.length &&\r\n      // if event name is dynamic, always wrap with keys guard\r\n      (!isStaticExp(key) || isKeyboardEvent(key.content))\r\n    ) {\r\n      handlerExp = createCallExpression(context.helper(V_ON_WITH_KEYS), [\r\n        handlerExp,\r\n        JSON.stringify(keyModifiers)\r\n      ])\r\n    }\r\n\r\n    if (eventOptionModifiers.length) {\r\n      const modifierPostfix = eventOptionModifiers.map(capitalize).join('')\r\n      key = isStaticExp(key)\r\n        ? createSimpleExpression(`${key.content}${modifierPostfix}`, true)\r\n        : createCompoundExpression([`(`, key, `) + \"${modifierPostfix}\"`])\r\n    }\r\n\r\n    return {\r\n      props: [createObjectProperty(key, handlerExp)]\r\n    }\r\n  })\r\n}\r\n","import { NodeTransform, NodeTypes, ElementTypes } from '@vue/compiler-core'\r\nimport { DOMErrorCodes, createDOMCompilerError } from '../errors'\r\n\r\nexport const ignoreSideEffectTags: NodeTransform = (node, context) => {\r\n  if (\r\n    node.type === NodeTypes.ELEMENT &&\r\n    node.tagType === ElementTypes.ELEMENT &&\r\n    (node.tag === 'script' || node.tag === 'style')\r\n  ) {\r\n    context.onError(\r\n      createDOMCompilerError(DOMErrorCodes.X_IGNORED_SIDE_EFFECT_TAG, node.loc)\r\n    )\r\n    context.removeNode()\r\n  }\r\n}\r\n","import {\r\n  baseCompile,\r\n  baseParse,\r\n  CompilerOptions,\r\n  CodegenResult,\r\n  ParserOptions,\r\n  RootNode,\r\n  noopDirectiveTransform,\r\n  NodeTransform,\r\n  DirectiveTransform\r\n} from '@vue/compiler-core'\r\nimport { parserOptions } from './parserOptions'\r\nimport { transformStyle } from './transforms/transformStyle'\r\nimport { transformVHtml } from './transforms/vHtml'\r\nimport { transformVText } from './transforms/vText'\r\nimport { transformModel } from './transforms/vModel'\r\nimport { transformOn } from './transforms/vOn'\r\nimport { transformShow } from './transforms/vShow'\r\nimport { warnTransitionChildren } from './transforms/warnTransitionChildren'\r\nimport { stringifyStatic } from './transforms/stringifyStatic'\r\nimport { ignoreSideEffectTags } from './transforms/ignoreSideEffectTags'\r\nimport { extend } from '@vue/shared'\r\n\r\nexport { parserOptions }\r\n\r\nexport const DOMNodeTransforms: NodeTransform[] = [\r\n  transformStyle,\r\n  ...(__DEV__ ? [warnTransitionChildren] : [])\r\n]\r\n\r\nexport const DOMDirectiveTransforms: Record<string, DirectiveTransform> = {\r\n  cloak: noopDirectiveTransform,\r\n  html: transformVHtml,\r\n  text: transformVText,\r\n  model: transformModel, // override compiler-core\r\n  on: transformOn, // override compiler-core\r\n  show: transformShow\r\n}\r\n\r\nexport function compile(\r\n  template: string,\r\n  options: CompilerOptions = {}\r\n): CodegenResult {\r\n  return baseCompile(\r\n    template,\r\n    extend({}, parserOptions, options, {\r\n      nodeTransforms: [\r\n        // ignore <script> and <tag>\r\n        // this is not put inside DOMNodeTransforms because that list is used\r\n        // by compiler-ssr to generate vnode fallback branches\r\n        ignoreSideEffectTags,\r\n        ...DOMNodeTransforms,\r\n        ...(options.nodeTransforms || [])\r\n      ],\r\n      directiveTransforms: extend(\r\n        {},\r\n        DOMDirectiveTransforms,\r\n        options.directiveTransforms || {}\r\n      ),\r\n      transformHoist: __BROWSER__ ? null : stringifyStatic\r\n    })\r\n  )\r\n}\r\n\r\nexport function parse(template: string, options: ParserOptions = {}): RootNode {\r\n  return baseParse(template, extend({}, parserOptions, options))\r\n}\r\n\r\nexport * from './runtimeHelpers'\r\nexport { transformStyle } from './transforms/transformStyle'\r\nexport { createDOMCompilerError, DOMErrorCodes } from './errors'\r\nexport * from '@vue/compiler-core'\r\n","import {\r\n  DirectiveTransform,\r\n  createObjectProperty,\r\n  createSimpleExpression,\r\n  TO_DISPLAY_STRING,\r\n  createCallExpression\r\n} from '@vue/compiler-core'\r\nimport { createDOMCompilerError, DOMErrorCodes } from '../errors'\r\n\r\nexport const transformVText: DirectiveTransform = (dir, node, context) => {\r\n  const { exp, loc } = dir\r\n  if (!exp) {\r\n    context.onError(\r\n      createDOMCompilerError(DOMErrorCodes.X_V_TEXT_NO_EXPRESSION, loc)\r\n    )\r\n  }\r\n  if (node.children.length) {\r\n    context.onError(\r\n      createDOMCompilerError(DOMErrorCodes.X_V_TEXT_WITH_CHILDREN, loc)\r\n    )\r\n    node.children.length = 0\r\n  }\r\n  return {\r\n    props: [\r\n      createObjectProperty(\r\n        createSimpleExpression(`textContent`, true),\r\n        exp\r\n          ? createCallExpression(\r\n              context.helperString(TO_DISPLAY_STRING),\r\n              [exp],\r\n              loc\r\n            )\r\n          : createSimpleExpression('', true)\r\n      )\r\n    ]\r\n  }\r\n}\r\n","import {\r\n  transformModel as baseTransform,\r\n  DirectiveTransform,\r\n  ElementTypes,\r\n  findProp,\r\n  NodeTypes,\r\n  hasDynamicKeyVBind\r\n} from '@vue/compiler-core'\r\nimport { createDOMCompilerError, DOMErrorCodes } from '../errors'\r\nimport {\r\n  V_MODEL_CHECKBOX,\r\n  V_MODEL_RADIO,\r\n  V_MODEL_SELECT,\r\n  V_MODEL_TEXT,\r\n  V_MODEL_DYNAMIC\r\n} from '../runtimeHelpers'\r\n\r\nexport const transformModel: DirectiveTransform = (dir, node, context) => {\r\n  const baseResult = baseTransform(dir, node, context)\r\n  // base transform has errors OR component v-model (only need props)\r\n  if (!baseResult.props.length || node.tagType === ElementTypes.COMPONENT) {\r\n    return baseResult\r\n  }\r\n\r\n  if (dir.arg) {\r\n    context.onError(\r\n      createDOMCompilerError(\r\n        DOMErrorCodes.X_V_MODEL_ARG_ON_ELEMENT,\r\n        dir.arg.loc\r\n      )\r\n    )\r\n  }\r\n\r\n  function checkDuplicatedValue() {\r\n    const value = findProp(node, 'value')\r\n    if (value) {\r\n      context.onError(\r\n        createDOMCompilerError(\r\n          DOMErrorCodes.X_V_MODEL_UNNECESSARY_VALUE,\r\n          value.loc\r\n        )\r\n      )\r\n    }\r\n  }\r\n\r\n  const { tag } = node\r\n  const isCustomElement = context.isCustomElement(tag)\r\n  if (\r\n    tag === 'input' ||\r\n    tag === 'textarea' ||\r\n    tag === 'select' ||\r\n    isCustomElement\r\n  ) {\r\n    let directiveToUse = V_MODEL_TEXT\r\n    let isInvalidType = false\r\n    if (tag === 'input' || isCustomElement) {\r\n      const type = findProp(node, `type`)\r\n      if (type) {\r\n        if (type.type === NodeTypes.DIRECTIVE) {\r\n          // :type=\"foo\"\r\n          directiveToUse = V_MODEL_DYNAMIC\r\n        } else if (type.value) {\r\n          switch (type.value.content) {\r\n            case 'radio':\r\n              directiveToUse = V_MODEL_RADIO\r\n              break\r\n            case 'checkbox':\r\n              directiveToUse = V_MODEL_CHECKBOX\r\n              break\r\n            case 'file':\r\n              isInvalidType = true\r\n              context.onError(\r\n                createDOMCompilerError(\r\n                  DOMErrorCodes.X_V_MODEL_ON_FILE_INPUT_ELEMENT,\r\n                  dir.loc\r\n                )\r\n              )\r\n              break\r\n            default:\r\n              // text type\r\n              __DEV__ && checkDuplicatedValue()\r\n              break\r\n          }\r\n        }\r\n      } else if (hasDynamicKeyVBind(node)) {\r\n        // element has bindings with dynamic keys, which can possibly contain\r\n        // \"type\".\r\n        directiveToUse = V_MODEL_DYNAMIC\r\n      } else {\r\n        // text type\r\n        __DEV__ && checkDuplicatedValue()\r\n      }\r\n    } else if (tag === 'select') {\r\n      directiveToUse = V_MODEL_SELECT\r\n    } else {\r\n      // textarea\r\n      __DEV__ && checkDuplicatedValue()\r\n    }\r\n    // inject runtime directive\r\n    // by returning the helper symbol via needRuntime\r\n    // the import will replaced a resolveDirective call.\r\n    if (!isInvalidType) {\r\n      baseResult.needRuntime = context.helper(directiveToUse)\r\n    }\r\n  } else {\r\n    context.onError(\r\n      createDOMCompilerError(\r\n        DOMErrorCodes.X_V_MODEL_ON_INVALID_ELEMENT,\r\n        dir.loc\r\n      )\r\n    )\r\n  }\r\n\r\n  // native vmodel doesn't need the `modelValue` props since they are also\r\n  // passed to the runtime as `binding.value`. removing it reduces code size.\r\n  baseResult.props = baseResult.props.filter(\r\n    p =>\r\n      !(\r\n        p.key.type === NodeTypes.SIMPLE_EXPRESSION &&\r\n        p.key.content === 'modelValue'\r\n      )\r\n  )\r\n\r\n  return baseResult\r\n}\r\n","import { DirectiveTransform } from '@vue/compiler-core'\r\nimport { createDOMCompilerError, DOMErrorCodes } from '../errors'\r\nimport { V_SHOW } from '../runtimeHelpers'\r\n\r\nexport const transformShow: DirectiveTransform = (dir, node, context) => {\r\n  const { exp, loc } = dir\r\n  if (!exp) {\r\n    context.onError(\r\n      createDOMCompilerError(DOMErrorCodes.X_V_SHOW_NO_EXPRESSION, loc)\r\n    )\r\n  }\r\n\r\n  return {\r\n    props: [],\r\n    needRuntime: context.helper(V_SHOW)\r\n  }\r\n}\r\n","// This entry is the \"full-build\" that includes both the runtime\r\n// and the compiler, and supports on-the-fly compilation of the template option.\r\nimport { initDev } from './dev'\r\nimport { compile, CompilerOptions, CompilerError } from '@vue/compiler-dom'\r\nimport { registerRuntimeCompiler, RenderFunction, warn } from '@vue/runtime-dom'\r\nimport * as runtimeDom from '@vue/runtime-dom'\r\nimport { isString, NOOP, generateCodeFrame, extend } from '@vue/shared'\r\nimport { InternalRenderFunction } from 'packages/runtime-core/src/component'\r\n\r\nif (__DEV__) {\r\n  initDev()\r\n}\r\n\r\nconst compileCache: Record<string, RenderFunction> = Object.create(null)\r\n\r\nfunction compileToFunction(\r\n  template: string | HTMLElement,\r\n  options?: CompilerOptions\r\n): RenderFunction {\r\n  if (!isString(template)) {\r\n    if (template.nodeType) {\r\n      template = template.innerHTML\r\n    } else {\r\n      __DEV__ && warn(`invalid template option: `, template)\r\n      return NOOP\r\n    }\r\n  }\r\n\r\n  const key = template\r\n  const cached = compileCache[key]\r\n  if (cached) {\r\n    return cached\r\n  }\r\n\r\n  if (template[0] === '#') {\r\n    const el = document.querySelector(template)\r\n    if (__DEV__ && !el) {\r\n      warn(`Template element not found or is empty: ${template}`)\r\n    }\r\n    // __UNSAFE__\r\n    // Reason: potential execution of JS expressions in in-DOM template.\r\n    // The user must make sure the in-DOM template is trusted. If it's rendered\r\n    // by the server, the template should not contain any user data.\r\n    template = el ? el.innerHTML : ``\r\n  }\r\n\r\n  const { code } = compile(\r\n    template,\r\n    extend(\r\n      {\r\n        hoistStatic: true,\r\n        onError: __DEV__ ? onError : undefined,\r\n        onWarn: __DEV__ ? e => onError(e, true) : NOOP\r\n      } as CompilerOptions,\r\n      options\r\n    )\r\n  )\r\n\r\n  function onError(err: CompilerError, asWarning = false) {\r\n    const message = asWarning\r\n      ? err.message\r\n      : `Template compilation error: ${err.message}`\r\n    const codeFrame =\r\n      err.loc &&\r\n      generateCodeFrame(\r\n        template as string,\r\n        err.loc.start.offset,\r\n        err.loc.end.offset\r\n      )\r\n    warn(codeFrame ? `${message}\\n${codeFrame}` : message)\r\n  }\r\n\r\n  // The wildcard import results in a huge object with every export\r\n  // with keys that cannot be mangled, and can be quite heavy size-wise.\r\n  // In the global build we know `Vue` is available globally so we can avoid\r\n  // the wildcard object.\r\n  const render = (\r\n    __GLOBAL__ ? new Function(code)() : new Function('Vue', code)(runtimeDom)\r\n  ) as RenderFunction\r\n\r\n  // mark the function as runtime compiled\r\n  ;(render as InternalRenderFunction)._rc = true\r\n\r\n  return (compileCache[key] = render)\r\n}\r\n\r\nregisterRuntimeCompiler(compileToFunction)\r\n\r\nexport { compileToFunction as compile }\r\nexport * from '@vue/runtime-dom'\r\n"],"names":["makeMap","str","expectsLowerCase","map","Object","create","list","split","i","length","val","toLowerCase","isGloballyWhitelisted","isSpecialBooleanAttr","normalizeStyle","value","isArray","res","item","normalized","isString","parseStringStyle","key","isObject","listDelimiterRE","propertyDelimiterRE","cssText","ret","forEach","tmp","trim","normalizeClass","name","normalizeProps","props","class","klass","style","isHTMLTag","isSVGTag","isVoidTag","looseEqual","a","b","aValidType","isDate","bValidType","getTime","equal","looseCompareArrays","keys","aHasKey","hasOwnProperty","bHasKey","String","looseIndexOf","arr","findIndex","toDisplayString","toString","objectToString","JSON","stringify","replacer","_key","__v_isRef","isMap","[object Object]","size","entries","reduce","isSet","values","isPlainObject","EMPTY_OBJ","EMPTY_ARR","NOOP","NO","onRE","isOn","test","isModelListener","startsWith","extend","assign","remove","el","indexOf","splice","prototype","hasOwn","call","Array","toTypeString","Date","isFunction","isSymbol","isPromise","then","catch","isIntegerKey","parseInt","isReservedProp","cacheStringFunction","fn","cache","camelizeRE","camelize","replace","_","c","toUpperCase","hyphenateRE","hyphenate","capitalize","charAt","slice","toHandlerKey","hasChanged","oldValue","is","invokeArrayFns","fns","arg","def","obj","defineProperty","configurable","enumerable","toNumber","n","parseFloat","isNaN","createDep","effects","dep","Set","w","wasTracked","trackOpBit","newTracked","activeEffectScope","effectScopeStack","EffectScope","detached","this","parent","index","scopes","push","active","on","off","pop","fromParent","e","stop","cleanups","cleanup","last","effectScope","recordEffectScope","effect","scope","getCurrentScope","onScopeDispose","targetMap","WeakMap","effectTrackDepth","effectStack","activeEffect","ITERATE_KEY","Symbol","MAP_KEY_ITERATE_KEY","ReactiveEffect","scheduler","includes","trackStack","shouldTrack","deps","initDepMarkers","cleanupEffect","ptr","delete","finalizeDepMarkers","resetTracking","undefined","onStop","options","_effect","lazy","run","runner","bind","pauseTracking","track","target","type","isTracking","depsMap","get","set","Map","trackEffects","debuggerEventExtraInfo","has","add","trigger","newValue","oldTarget","triggerEffects","allowRecurse","isNonTrackableKeys","builtInSymbols","getOwnPropertyNames","filter","createGetter","shallowGet","readonlyGet","shallowReadonlyGet","arrayInstrumentations","createArrayInstrumentations","instrumentations","args","toRaw","l","apply","isReadonly","shallow","receiver","shallowReadonlyMap","readonlyMap","shallowReactiveMap","reactiveMap","targetIsArray","Reflect","isRef","readonly","reactive","createSetter","hadKey","Number","result","mutableHandlers","deleteProperty","ownKeys","readonlyHandlers","shallowReactiveHandlers","shallowReadonlyHandlers","toReactive","toReadonly","toShallow","getProto","v","getPrototypeOf","isShallow","rawTarget","rawKey","wrap","deleteEntry","clear","hadItems","createForEach","callback","thisArg","observed","createIterableMethod","method","targetIsMap","isPair","iterator","isKeyOnly","innerIterator","done","next","createReadonlyMethod","createInstrumentations","mutableInstrumentations","shallowInstrumentations","readonlyInstrumentations","shallowReadonlyInstrumentations","createInstrumentationGetter","mutableCollectionHandlers","shallowCollectionHandlers","readonlyCollectionHandlers","shallowReadonlyCollectionHandlers","getTargetType","isExtensible","rawType","targetTypeMap","toRawType","createReactiveObject","shallowReactive","shallowReadonly","baseHandlers","collectionHandlers","proxyMap","existingProxy","targetType","proxy","Proxy","isReactive","isProxy","raw","markRaw","trackRefValue","ref","triggerRefValue","newVal","convert","r","Boolean","createRef","shallowRef","RefImpl","_shallow","_rawValue","_value","rawValue","triggerRef","unref","shallowUnwrapHandlers","proxyRefs","objectWithRefs","CustomRefImpl","factory","_get","_set","customRef","toRefs","object","toRef","ObjectRefImpl","_object","ComputedRefImpl","getter","_setter","_dirty","self","computed","getterOrOptions","debugOptions","setter","devtools","setDevtoolsHook","hook","emit","instance","event","rawArgs","vnode","modelArg","modifiersKey","number","handlerName","handler","callWithAsyncErrorHandling","onceHandler","emitted","normalizeEmitsOptions","comp","appContext","asMixin","emitsCache","cached","emits","hasExtends","extendEmits","normalizedFromExtend","mixins","extends","isEmitListener","currentRenderingInstance","currentScopeId","setCurrentRenderingInstance","prev","__scopeId","pushScopeId","id","popScopeId","withScopeId","_id","withCtx","ctx","isNonScopedSlot","_n","renderFnWithContext","_d","setBlockTracking","prevInstance","_c","renderComponentRoot","Component","withProxy","propsOptions","slots","attrs","render","renderCache","data","setupState","inheritAttrs","fallthroughAttrs","shapeFlag","proxyToUse","normalizeVNode","getFunctionalFallthrough","root","some","filterModelListeners","cloneVNode","dirs","concat","transition","err","blockStack","handleError","createVNode","Comment","filterSingleRoot","children","singleRoot","child","isVNode","hasPropsChanged","prevProps","nextProps","emitsOptions","nextKeys","updateHOCHostEl","subTree","Suspense","__isSuspense","n1","n2","container","anchor","parentComponent","parentSuspense","isSVG","slotScopeIds","optimized","rendererInternals","p","patch","o","createElement","hiddenContainer","suspense","createSuspenseBoundary","pendingBranch","ssContent","triggerEvent","ssFallback","setActiveBranch","resolve","mountSuspense","um","unmount","newBranch","newFallback","activeBranch","isInFallback","isHydrating","isSameVNodeType","pendingId","timeout","setTimeout","fallback","patchSuspense","hydrate","node","hydrateNode","parentNode","document","normalize","isSlotChildren","normalizeSuspenseSlot","default","eventListener","m","move","isUnmounted","resume","delayEnter","mode","afterLeave","hasUnresolvedAncestor","queuePostFlushCb","fallbackVNode","mountFallback","setupRenderEffect","isInPendingSuspense","hydratedEl","asyncDep","asyncSetupResult","suspenseId","asyncResolved","handleSetupResult","placeholder","doRemove","s","block","isCompiledSlot","openBlock","currentBlock","closeBlock","singleChild","dynamicChildren","queueEffectWithSuspense","branch","provide","currentInstance","provides","parentProvides","inject","defaultValue","treatDefaultAsFactory","arguments","useTransitionState","state","isMounted","isLeaving","isUnmounting","leavingVNodes","onMounted","onBeforeUnmount","TransitionHookValidator","Function","BaseTransition","appear","persisted","onBeforeEnter","onEnter","onAfterEnter","onEnterCancelled","onBeforeLeave","onLeave","onAfterLeave","onLeaveCancelled","onBeforeAppear","onAppear","onAfterAppear","onAppearCancelled","getCurrentInstance","prevTransitionKey","getTransitionRawChildren","rawProps","emptyPlaceholder","innerChild","getKeepAliveChild","enterHooks","resolveTransitionHooks","setTransitionHooks","oldChild","oldInnerChild","transitionKeyChanged","getTransitionKey","leavingHooks","update","delayLeave","earlyRemove","delayedLeave","getLeavingNodesForType","_leaveCb","leavingVNodesCache","callHook","hooks","leavingVNode","afterHook","cancelHook","called","_enterCb","cancelled","clone","isKeepAlive","component","keepComment","keyedFragmentCount","Fragment","patchFlag","defineComponent","setup","isAsyncWrapper","__asyncLoader","defineAsyncComponent","source","loader","loadingComponent","errorComponent","delay","suspensible","onError","userOnError","resolvedComp","pendingRequest","retries","load","thisRequest","Error","Promise","reject","__esModule","toStringTag","__asyncResolved","createInnerComp","error","loaded","delayed","queueJob","__isKeepAlive","KeepAlive","include","RegExp","exclude","max","sharedContext","renderer","current","_unmount","storageContainer","resetShapeFlag","pruneCache","getComponentName","pruneCacheEntry","activate","queuePostRenderEffect","isDeactivated","vnodeHook","onVnodeMounted","invokeVNodeHook","deactivate","da","onVnodeUnmounted","watch","matches","flush","deep","pendingCacheKey","cacheSubtree","getInnerChild","onUpdated","rawVNode","cachedVNode","pattern","onActivated","registerKeepAliveHook","onDeactivated","wrappedHook","__wdc","injectHook","injectToKeepAliveRoot","keepAliveRoot","injected","onUnmounted","prepend","__weh","setCurrentInstance","unsetCurrentInstance","unshift","createHook","lifecycle","isInSSRComponentSetup","onBeforeMount","onBeforeUpdate","onServerPrefetch","onRenderTriggered","onRenderTracked","onErrorCaptured","shouldCacheAccess","applyOptions","resolveMergedOptions","publicThis","beforeCreate","dataOptions","computedOptions","methods","watchOptions","provideOptions","injectOptions","created","beforeMount","mounted","beforeUpdate","updated","activated","deactivated","beforeUnmount","unmounted","renderTracked","renderTriggered","errorCaptured","serverPrefetch","expose","components","directives","checkDuplicateProperties","unwrapRef","normalizeInject","opt","from","resolveInjections","config","unwrapInjectedRef","methodHandler","createWatcher","registerLifecycleHook","register","_hook","exposed","h","createPathGetter","base","extendsOptions","globalMixins","optionsCache","optionMergeStrategies","resolved","mergeOptions","to","strats","strat","internalOptionMergeStrats","mergeDataFn","mergeObjectOptions","mergeAsArray","beforeDestroy","destroyed","merged","setFullProps","needCastKeys","rawCastValues","hasAttrsChanged","camelKey","rawCurrentProps","castValues","resolvePropValue","isAbsent","hasDefault","propsDefaults","normalizePropsOptions","propsCache","extendProps","normalizedKey","validatePropName","prop","booleanIndex","getTypeIndex","stringIndex","getType","ctor","match","isSameType","expectedTypes","t","isInternalKey","normalizeSlotValue","normalizeSlot","rawSlot","normalizeObjectSlots","rawSlots","_ctx","normalizeVNodeSlots","withDirectives","bindings","dir","modifiers","traverse","invokeDirectiveHook","prevVNode","oldBindings","binding","createAppContext","app","isNativeTag","performance","globalProperties","errorHandler","warnHandler","compilerOptions","uid","createAppAPI","rootComponent","rootProps","context","installedPlugins","_uid","_component","_props","_container","_context","_instance","version","use","plugin","install","mixin","directive","rootContainer","isHydrate","__vue_app__","hasMismatch","isSVGContainer","namespaceURI","tagName","isComment","nodeType","createHydrationFunctions","mt","mountComponent","patchProp","nextSibling","insert","createComment","isFragmentStart","onMismatch","handleMismatch","domType","nextNode","Text","Static","needToAdoptContent","staticCount","outerHTML","hydrateFragment","hydrateElement","locateClosingAsyncAnchor","previousSibling","lastChild","createTextVNode","hydrateChildren","setRef","forcePatchValue","endsWith","onClick","vnodeHooks","onVnodeBeforeMount","innerHTML","textContent","firstChild","cur","parentVNode","fragmentSlotScopeIds","isFragment","end","hasChildNodes","flushPostFlushCbs","console","createRenderer","baseCreateRenderer","createHydrationRenderer","createHydrationFns","hostInsert","hostRemove","hostPatchProp","hostCreateElement","createText","hostCreateText","hostCreateComment","setText","hostSetText","setElementText","hostSetElementText","hostParentNode","hostNextSibling","setScopeId","hostSetScopeId","cloneNode","hostCloneNode","insertStaticContent","hostInsertStaticContent","getNextHostNode","processText","processCommentNode","mountStaticNode","processFragment","processElement","processComponent","process","internals","mountElement","patchElement","mountChildren","unmountChildren","scopeId","needCallTransitionHooks","beforeEnter","enter","start","cloneIfMounted","oldProps","newProps","onVnodeBeforeUpdate","patchProps","propsToUpdate","dynamicProps","areChildrenSVG","patchBlockChildren","patchChildren","onVnodeUpdated","oldChildren","newChildren","fallbackContainer","oldVNode","newVNode","fragmentStartAnchor","fragmentEndAnchor","traverseStaticChildren","updateComponent","initialVNode","emptyAppContext","exposeProxy","accessCache","refs","setupContext","bc","bm","bu","u","bum","rtg","rtc","ec","sp","ce","createComponentInstance","isSSR","isStateful","isStatefulComponent","InternalObjectKey","initProps","initSlots","setupResult","PublicInstanceProxyHandlers","createSetupContext","callWithErrorHandling","resolvedResult","finishComponentSetup","setupStatefulComponent","setupComponent","registerDep","nextVNode","prevChildren","nextChildren","$stable","shouldUpdateComponent","updateComponentPreRender","job","queue","flushIndex","invalidateJob","originNext","nextTree","prevTree","hydrateSubTree","scopedInitialVNode","rawPrevProps","kebabKey","camelizedKey","updateProps","needDeletionCheck","deletionComparisonTarget","updateSlots","flushPreFlushCbs","c1","prevShapeFlag","c2","patchKeyedChildren","patchUnkeyedChildren","oldLength","newLength","commonLength","Math","min","nextChild","parentAnchor","l2","e1","e2","nextPos","s1","s2","keyToNewIndexMap","j","patched","toBePatched","moved","maxNewIndexSoFar","newIndexToOldIndexMap","prevChild","newIndex","increasingNewIndexSequence","len","arrI","getSequence","nextIndex","moveType","moveStaticNode","leave","performLeave","shouldInvokeDirs","onVnodeBeforeUnmount","unmountComponent","removeFragment","removeStaticNode","performRemove","_vnode","mc","pc","pbc","createApp","rawRef","oldRawRef","isUnmount","refValue","getExposeProxy","owner","oldRef","doSet","ch1","ch2","isTeleportDisabled","disabled","isTargetSVG","SVGElement","resolveTarget","select","targetSelector","moveTeleport","targetAnchor","isReorder","Teleport","__isTeleport","querySelector","mainAnchor","mount","wasDisabled","currentContainer","currentAnchor","nextTarget","targetNode","_lpa","resolveComponent","maybeSelfReference","resolveAsset","NULL_DYNAMIC_COMPONENT","resolveDynamicComponent","resolveDirective","warnMissing","selfName","registry","disableTracking","isBlockTreeEnabled","setupBlock","createElementBlock","createBaseVNode","createBlock","__v_isVNode","transformVNodeArgs","transformer","normalizeKey","normalizeRef","isBlockNode","needFullChildrenNormalization","__v_skip","normalizeChildren","cloned","__vccOpts","guardReactiveProps","isSuspense","isTeleport","extraProps","mergeRef","mergedProps","mergeProps","text","flag","createStaticVNode","content","numberOfNodes","createCommentVNode","asBlock","memo","slot","slotFlag","toMerge","existing","incoming","renderList","renderItem","createSlots","dynamicSlots","renderSlot","noSlotted","isCE","validSlotContent","ensureValidVNode","rendered","vnodes","toHandlers","getPublicInstance","publicPropertiesMap","$","$el","$data","$props","$attrs","$slots","$refs","$parent","$root","$emit","$options","$forceUpdate","$nextTick","nextTick","$watch","instanceWatch","normalizedProps","publicGetter","cssModule","__cssModules","RuntimeCompiledPublicInstanceProxyHandlers","unscopables","compile","installWithProxy","registerRuntimeCompiler","_compile","_rc","isRuntimeOnly","skipOptions","template","isCustomElement","delimiters","componentCompilerOptions","finalCompilerOptions","createAttrsProxy","classifyRE","displayName","formatComponentName","isRoot","__file","inferFromRegistry","stack","warn","msg","appWarnHandler","trace","currentVNode","normalizedStack","recurseCount","parentInstance","getComponentTrace","join","warnArgs","logs","entry","postfix","open","close","formatProps","formatTraceEntry","formatTrace","formatProp","throwInDev","exposedInstance","errorInfo","errorCapturedHooks","appErrorHandler","contextVNode","logError","isFlushing","isFlushPending","pendingPreFlushCbs","activePreFlushCbs","preFlushIndex","pendingPostFlushCbs","activePostFlushCbs","postFlushIndex","resolvedPromise","currentFlushPromise","currentPreFlushParentJob","middle","getId","findInsertionIndex","queueFlush","flushJobs","queueCb","cb","activeQueue","pendingQueue","seen","parentJob","deduped","sort","Infinity","watchEffect","doWatch","watchPostEffect","watchSyncEffect","INITIAL_WATCHER_VALUE","immediate","forceTrigger","isMultiSource","onInvalidate","baseGetter","queuePreFlushCb","path","segments","defineProps","defineEmits","defineExpose","withDefaults","defaults","useSlots","getContext","useAttrs","mergeDefaults","withAsyncContext","getAwaitable","awaitable","propsOrChildren","ssrContextKey","useSSRContext","initCustomFormatter","withMemo","isMemoSame","$ref","$computed","$fromRefs","$raw","ssrUtils","resolveFilter","compatUtils","doc","staticTemplateCache","nodeOps","insertBefore","removeChild","tag","createElementNS","multiple","setAttribute","createTextNode","nodeValue","selector","before","wrapper","appendChild","importantRE","setStyle","setProperty","prefixed","rawName","prefixCache","prefixes","autoPrefix","xlinkNS","_getNow","now","skipTimestampCheck","window","createEvent","timeStamp","ffMatch","navigator","userAgent","cachedNow","reset","addEventListener","patchEvent","prevValue","nextValue","invokers","_vei","existingInvoker","optionsModifierRE","parseName","initialValue","invoker","attached","originalStop","stopImmediatePropagation","_stopped","patchStopImmediatePropagation","getNow","createInvoker","removeEventListener","nativeOnRE","defineCustomElement","hydate","Comp","VueCustomElement","VueElement","initialProps","super","defineSSRCustomElement","BaseClass","HTMLElement","_def","shadowRoot","_createVNode","attachShadow","attributes","_setAttr","MutationObserver","mutations","attributeName","observe","_connected","_resolveDef","_resolved","_setProp","styles","rawKeys","_getProp","_applyStyles","asyncDef","getAttribute","shouldReflect","removeAttribute","dispatchEvent","CustomEvent","detail","host","css","useCssModule","modules","mod","useCssVars","setVars","setVarsOnVNode","ob","childList","disconnect","vars","setVarsOnNode","Transition","resolveTransitionProps","DOMTransitionPropsValidators","duration","enterFromClass","enterActiveClass","enterToClass","appearFromClass","appearActiveClass","appearToClass","leaveFromClass","leaveActiveClass","leaveToClass","TransitionPropsValidators","hasExplicitCallback","baseProps","durations","NumberOf","normalizeDuration","enterDuration","leaveDuration","finishEnter","isAppear","removeTransitionClass","finishLeave","makeEnterHook","nextFrame","addTransitionClass","whenTransitionEnds","forceReflow","cls","classList","_vtc","requestAnimationFrame","endId","expectedType","explicitTimeout","_endId","resolveIfNotStale","propCount","getTransitionInfo","endEvent","ended","onEnd","getComputedStyle","getStyleProperties","transitionDelays","TRANSITION","transitionDurations","transitionTimeout","getTimeout","animationDelays","ANIMATION","animationDurations","animationTimeout","hasTransform","delays","d","toMs","body","offsetHeight","positionMap","newPositionMap","TransitionGroup","moveClass","display","hasCSSTransform","callPendingCbs","recordPosition","movedChildren","applyTranslation","transform","webkitTransform","transitionDuration","_moveCb","propertyName","cssTransitionProps","getBoundingClientRect","oldPos","newPos","dx","left","dy","top","getModelAssigner","onCompositionStart","composing","onCompositionEnd","initEvent","vModelText","_assign","castToNumber","domValue","activeElement","vModelCheckbox","modelValue","_modelValue","elementValue","getValue","checked","found","filtered","getCheckboxValue","setChecked","vModelRadio","vModelSelect","isSetModel","selectedVal","selected","setSelected","_binding","isMultiple","option","optionValue","selectedIndex","vModelDynamic","callModelHook","modelToUse","systemModifiers","modifierGuards","stopPropagation","prevent","preventDefault","currentTarget","ctrl","ctrlKey","shift","shiftKey","alt","altKey","meta","metaKey","button","right","exact","withModifiers","guard","keyNames","esc","space","up","down","withKeys","eventKey","k","vShow","_vod","setDisplay","rendererOptions","transitionClasses","className","patchClass","patchStyle","shouldSetAsProp","patchDOMProp","_trueValue","_falseValue","removeAttributeNS","setAttributeNS","isBoolean","patchAttr","enabledHydration","ensureRenderer","ensureHydrationRenderer","containerOrSelector","normalizeContainer","Element","createSSRApp","defaultOnError","defaultOnWarn","code","loc","messages","additionalMessage","SyntaxError","FRAGMENT","TELEPORT","SUSPENSE","KEEP_ALIVE","BASE_TRANSITION","OPEN_BLOCK","CREATE_BLOCK","CREATE_ELEMENT_BLOCK","CREATE_VNODE","CREATE_ELEMENT_VNODE","CREATE_COMMENT","CREATE_TEXT","CREATE_STATIC","RESOLVE_COMPONENT","RESOLVE_DYNAMIC_COMPONENT","RESOLVE_DIRECTIVE","RESOLVE_FILTER","WITH_DIRECTIVES","RENDER_LIST","RENDER_SLOT","CREATE_SLOTS","TO_DISPLAY_STRING","MERGE_PROPS","NORMALIZE_CLASS","NORMALIZE_STYLE","NORMALIZE_PROPS","GUARD_REACTIVE_PROPS","TO_HANDLERS","CAMELIZE","CAPITALIZE","TO_HANDLER_KEY","SET_BLOCK_TRACKING","PUSH_SCOPE_ID","POP_SCOPE_ID","WITH_SCOPE_ID","WITH_CTX","UNREF","IS_REF","WITH_MEMO","IS_MEMO_SAME","helperNameMap","locStub","line","column","offset","createVNodeCall","isBlock","isComponent","helper","getVNodeBlockHelper","inSSR","getVNodeHelper","createArrayExpression","elements","createObjectExpression","properties","createObjectProperty","createSimpleExpression","isStatic","constType","createCompoundExpression","createCallExpression","callee","createFunctionExpression","params","returns","newline","isSlot","createConditionalExpression","consequent","alternate","isStaticExp","isBuiltInType","expected","isCoreComponent","nonIdentifierRE","isSimpleIdentifier","validFirstIdentCharRE","validIdentCharRE","whitespaceRE","isMemberExpression","stateStack","currentOpenBracketCount","currentOpenParensCount","currentStringType","char","getInnerRange","newLoc","substr","advancePositionWithClone","pos","numberOfCharacters","advancePositionWithMutation","linesCount","lastNewLinePos","charCodeAt","findDir","allowEmpty","exp","findProp","dynamicOnly","isBindKey","isText","isVSlot","isTemplateNode","tagType","isSlotOutlet","ssr","propsHelperSet","getUnnormalizedProps","callPath","injectProp","propsWithInjection","parentCall","first","alreadyExists","propKeyName","toValidAssetId","makeBlock","removeHelper","decodeRE","decodeMap","gt","lt","amp","apos","quot","defaultParserOptions","getNamespace","getTextMode","isPreTag","decodeEntities","rawText","p1","onWarn","comments","baseParse","rawOptions","originalSource","inPre","inVPre","createParserContext","getCursor","helpers","hoists","imports","temps","codegenNode","createRoot","parseChildren","getSelection","ancestors","ns","nodes","isEnd","parseInterpolation","parseComment","parseBogusComment","parseCDATA","advanceBy","parseTag","parseElement","parseText","pushNode","removedWhitespace","shouldCondense","whitespace","exec","prevIndex","nestedIndex","contentStart","closeIndex","wasInPre","wasInVPre","element","isPreBoundary","isVPreBoundary","isSelfClosing","startsWithEndTagOpen","isSpecialTemplateDirective","advanceSpaces","cursor","currentSource","parseAttributes","isBuiltInComponent","attributeNames","attr","parseAttribute","nameSet","quote","isQuoted","endIndex","parseTextData","unexpectedChars","parseAttributeValue","isPropShorthand","dirName","startOffset","lastIndexOf","getNewPosition","valueLoc","innerStart","innerEnd","rawContentLength","rawContent","preTrimContent","endTokens","xs","searchString","hoistStatic","walk","isSingleElementRoot","doNotHoistNode","canStringify","originalCount","hoistedCount","constantType","getConstantType","hoist","getPatchFlag","getGeneratedPropsConstantType","getNodeProps","contentType","vSlot","branches","transformHoist","constantCache","returnType","generatedPropsType","childType","expType","allowHoistedHelperSet","getConstantTypeOfHelperCall","keyType","valueType","createTransformContext","filename","prefixIdentifiers","cacheHandlers","nodeTransforms","directiveTransforms","expressionPlugins","slotted","ssrCssVars","bindingMetadata","inline","isTS","compatConfig","nameMatch","identifiers","vFor","vPre","vOnce","currentNode","childIndex","inVOnce","count","currentCount","helperString","removalIndex","onNodeRemoved","identifier","hoisted","createCacheExpression","traverseNode","createRootCodegen","exitFns","onExit","nodeRemoved","traverseChildren","createStructuralDirectiveTransform","generate","ast","sourceMap","optimizeImports","runtimeGlobalName","runtimeModuleName","indentLevel","pure","withoutNewLine","repeat","createCodegenContext","onContextCreated","indent","deindent","hasHelpers","useWithBlock","VueBinding","aliasHelper","genNode","genHoists","genFunctionPreamble","genAssets","preamble","toJSON","assets","resolver","genNodeListAsArray","multilines","genNodeList","comma","genText","genExpression","genInterpolation","genCompoundExpression","genComment","callHelper","genNullableArgs","genVNodeCall","genCallExpression","genExpressionAsPropertyKey","genObjectExpression","genArrayExpression","genFunctionExpression","needNewline","needsParens","isNested","genConditionalExpression","genCacheExpression","transformIf","processCodegen","createIfBranch","ifNode","replaceNode","siblings","sibling","removeNode","processIf","createCodegenNodeForBranch","getParentCondition","condition","userKey","keyIndex","createChildrenCodegenNode","keyProperty","vnodeCall","transformFor","parseResult","parseForExpression","forNode","valueAlias","keyAlias","objectIndexAlias","processFor","renderExp","keyProp","keyExp","isStableFragment","fragmentFlag","childBlock","isTemplate","needFragmentWrapper","slotOutlet","loop","createForLoopParams","forAliasRE","forIteratorRE","stripParensRE","input","inMatch","LHS","RHS","createAliasExpression","valueContent","trimmedOffset","iteratorMatch","keyContent","keyOffset","indexContent","range","memoArgs","createParamsList","defaultFallback","trackSlotScopes","buildClientSlotFn","buildSlots","buildSlotFn","slotsProperties","hasDynamicSlots","onComponentSlot","hasTemplateSlots","hasNamedDefaultSlot","implicitDefaultChildren","seenSlotNames","slotElement","slotDir","slotChildren","slotLoc","slotName","slotProps","staticSlotName","slotFunction","vIf","vElse","buildDynamicSlot","conditional","buildDefaultSlotProperty","isNonWhitespaceContent","hasForwardedSlots","directiveImportMap","transformElement","vnodeTag","isExplicitDynamic","isComponentTag","isProp","isDir","builtIn","resolveComponentType","vnodeProps","vnodeChildren","vnodePatchFlag","vnodeDynamicProps","dynamicPropNames","vnodeDirectives","shouldUseBlock","propsBuildResult","buildProps","dirArgs","runtime","trueExpression","modifier","buildDirectiveArgs","hasDynamicTextChild","propsNamesString","stringifyDynamicPropNames","elementLoc","mergeArgs","runtimeDirectives","hasRef","hasClassBinding","hasStyleBinding","hasHydrationEventBinding","hasDynamicKeys","hasVnodeHook","analyzePatchFlag","isEventHandler","isVBind","isVOn","dedupeProperties","directiveTransform","needRuntime","propsExpression","classKeyIndex","styleKeyIndex","hasDynamicKey","isHandlerKey","classProp","styleProp","knownProps","transformSlotOutlet","nonNameProps","processSlotOutlet","slotArgs","fnExpRE","transformOn","augmentor","eventName","shouldCache","isMemberExp","isInlineStatement","hasMultipleStatements","transformBind","_node","injectPrefix","prefix","transformText","hasText","find","callArgs","WeakSet","transformOnce","transformModel","createTransformProps","rawExp","expString","propName","assignmentExp","transformMemo","baseCompile","isModuleMode","model","V_MODEL_RADIO","V_MODEL_CHECKBOX","V_MODEL_TEXT","V_MODEL_SELECT","V_MODEL_DYNAMIC","V_ON_WITH_MODIFIERS","V_ON_WITH_KEYS","V_SHOW","TRANSITION_GROUP","decoder","getOwnPropertySymbols","isRawTextContainer","parserOptions","asAttr","parseInlineCSS","isEventOptionModifier","isNonKeyModifier","maybeKeyModifier","isKeyboardEvent","transformClick","ignoreSideEffectTags","DOMNodeTransforms","DOMDirectiveTransforms","cloak","html","baseResult","baseTransform","directiveToUse","isInvalidType","hasDynamicKeyVBind","handlerExp","keyModifiers","nonKeyModifiers","eventOptionModifiers","resolveModifiers","modifierPostfix","show","compileCache","compileToFunction","runtimeDom"],"mappings":"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"}