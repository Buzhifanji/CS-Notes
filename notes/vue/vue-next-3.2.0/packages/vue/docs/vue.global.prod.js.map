{"version":3,"file":"vue.global.prod.js","sources":["../../shared/src/makeMap.ts","../../shared/src/globalsWhitelist.ts","../../shared/src/domAttrConfig.ts","../../shared/src/normalizeProp.ts","../../shared/src/domTagConfig.ts","../../shared/src/looseEqual.ts","../../shared/src/toDisplayString.ts","../../shared/src/index.ts","../../reactivity/src/dep.ts","../../reactivity/src/effectScope.ts","../../reactivity/src/effect.ts","../../reactivity/src/baseHandlers.ts","../../reactivity/src/collectionHandlers.ts","../../reactivity/src/reactive.ts","../../reactivity/src/ref.ts","../../reactivity/src/computed.ts","../../runtime-core/src/componentEmits.ts","../../runtime-core/src/componentRenderContext.ts","../../runtime-core/src/componentRenderUtils.ts","../../runtime-core/src/components/Suspense.ts","../../runtime-core/src/apiInject.ts","../../runtime-core/src/components/BaseTransition.ts","../../runtime-core/src/apiDefineComponent.ts","../../runtime-core/src/apiAsyncComponent.ts","../../runtime-core/src/components/KeepAlive.ts","../../runtime-core/src/apiLifecycle.ts","../../runtime-core/src/componentOptions.ts","../../runtime-core/src/componentProps.ts","../../runtime-core/src/componentSlots.ts","../../runtime-core/src/directives.ts","../../runtime-core/src/apiCreateApp.ts","../../runtime-core/src/hydration.ts","../../runtime-core/src/renderer.ts","../../runtime-core/src/component.ts","../../runtime-core/src/scheduler.ts","../../runtime-core/src/components/Teleport.ts","../../runtime-core/src/helpers/resolveAssets.ts","../../runtime-core/src/vnode.ts","../../runtime-core/src/helpers/renderSlot.ts","../../runtime-core/src/componentPublicInstance.ts","../../runtime-core/src/warning.ts","../../runtime-core/src/errorHandling.ts","../../runtime-core/src/apiWatch.ts","../../runtime-core/src/apiSetupHelpers.ts","../../runtime-core/src/h.ts","../../runtime-core/src/helpers/useSsrContext.ts","../../runtime-core/src/helpers/withMemo.ts","../../runtime-core/src/index.ts","../../runtime-dom/src/nodeOps.ts","../../runtime-dom/src/modules/style.ts","../../runtime-dom/src/modules/attrs.ts","../../runtime-dom/src/modules/events.ts","../../runtime-dom/src/patchProp.ts","../../runtime-dom/src/apiCustomElement.ts","../../runtime-dom/src/helpers/useCssVars.ts","../../runtime-dom/src/components/Transition.ts","../../runtime-dom/src/components/TransitionGroup.ts","../../runtime-dom/src/directives/vModel.ts","../../runtime-dom/src/directives/vOn.ts","../../runtime-dom/src/directives/vShow.ts","../../runtime-dom/src/index.ts","../../runtime-dom/src/modules/class.ts","../../runtime-dom/src/modules/props.ts","../../compiler-core/src/errors.ts","../../compiler-core/src/runtimeHelpers.ts","../../compiler-core/src/ast.ts","../../compiler-core/src/utils.ts","../../compiler-core/src/parse.ts","../../compiler-core/src/transforms/hoistStatic.ts","../../compiler-core/src/transform.ts","../../compiler-core/src/codegen.ts","../../compiler-core/src/transforms/vIf.ts","../../compiler-core/src/transforms/vFor.ts","../../compiler-core/src/transforms/vSlot.ts","../../compiler-core/src/transforms/transformElement.ts","../../compiler-core/src/transforms/transformSlotOutlet.ts","../../compiler-core/src/transforms/vOn.ts","../../compiler-core/src/transforms/vBind.ts","../../compiler-core/src/transforms/transformText.ts","../../compiler-core/src/transforms/vOnce.ts","../../compiler-core/src/transforms/vModel.ts","../../compiler-core/src/transforms/vMemo.ts","../../compiler-core/src/compile.ts","../../compiler-core/src/transforms/noopDirectiveTransform.ts","../../compiler-dom/src/runtimeHelpers.ts","../../compiler-dom/src/decodeHtmlBrowser.ts","../../compiler-dom/src/parserOptions.ts","../../compiler-dom/src/transforms/transformStyle.ts","../../compiler-dom/src/transforms/vHtml.ts","../../compiler-dom/src/transforms/vOn.ts","../../compiler-dom/src/transforms/ignoreSideEffectTags.ts","../../compiler-dom/src/index.ts","../../compiler-dom/src/transforms/vText.ts","../../compiler-dom/src/transforms/vModel.ts","../../compiler-dom/src/transforms/vShow.ts","../src/index.ts","../../runtime-core/src/helpers/refSugar.ts","../../runtime-core/src/helpers/createSlots.ts","../../runtime-core/src/helpers/renderList.ts","../../runtime-core/src/devtools.ts","../../runtime-core/src/helpers/toHandlers.ts","../../runtime-dom/src/helpers/useCssModule.ts"],"sourcesContent":["/**\r\n * Make a map and return a function for checking if a key\r\n * is in that map.\r\n * IMPORTANT: all calls of this function must be prefixed with\r\n * \\/\\*#\\_\\_PURE\\_\\_\\*\\/\r\n * So that rollup can tree-shake them if necessary.\r\n */\r\nexport function makeMap(\r\n  str: string,\r\n  expectsLowerCase?: boolean\r\n): (key: string) => boolean {\r\n  const map: Record<string, boolean> = Object.create(null)\r\n  const list: Array<string> = str.split(',')\r\n  for (let i = 0; i < list.length; i++) {\r\n    map[list[i]] = true\r\n  }\r\n  return expectsLowerCase ? val => !!map[val.toLowerCase()] : val => !!map[val]\r\n}\r\n","import { makeMap } from './makeMap'\r\n\r\nconst GLOBALS_WHITE_LISTED =\r\n  'Infinity,undefined,NaN,isFinite,isNaN,parseFloat,parseInt,decodeURI,' +\r\n  'decodeURIComponent,encodeURI,encodeURIComponent,Math,Number,Date,Array,' +\r\n  'Object,Boolean,String,RegExp,Map,Set,JSON,Intl,BigInt'\r\n\r\nexport const isGloballyWhitelisted = /*#__PURE__*/ makeMap(GLOBALS_WHITE_LISTED)\r\n","import { makeMap } from './makeMap'\r\n\r\n/**\r\n * On the client we only need to offer special cases for boolean attributes that\r\n * have different names from their corresponding dom properties:\r\n * - itemscope -> N/A\r\n * - allowfullscreen -> allowFullscreen\r\n * - formnovalidate -> formNoValidate\r\n * - ismap -> isMap\r\n * - nomodule -> noModule\r\n * - novalidate -> noValidate\r\n * - readonly -> readOnly\r\n */\r\nconst specialBooleanAttrs = `itemscope,allowfullscreen,formnovalidate,ismap,nomodule,novalidate,readonly`\r\nexport const isSpecialBooleanAttr = /*#__PURE__*/ makeMap(specialBooleanAttrs)\r\n\r\n/**\r\n * The full list is needed during SSR to produce the correct initial markup.\r\n */\r\nexport const isBooleanAttr = /*#__PURE__*/ makeMap(\r\n  specialBooleanAttrs +\r\n    `,async,autofocus,autoplay,controls,default,defer,disabled,hidden,` +\r\n    `loop,open,required,reversed,scoped,seamless,` +\r\n    `checked,muted,multiple,selected`\r\n)\r\n\r\nconst unsafeAttrCharRE = /[>/=\"'\\u0009\\u000a\\u000c\\u0020]/\r\nconst attrValidationCache: Record<string, boolean> = {}\r\n\r\nexport function isSSRSafeAttrName(name: string): boolean {\r\n  if (attrValidationCache.hasOwnProperty(name)) {\r\n    return attrValidationCache[name]\r\n  }\r\n  const isUnsafe = unsafeAttrCharRE.test(name)\r\n  if (isUnsafe) {\r\n    console.error(`unsafe attribute name: ${name}`)\r\n  }\r\n  return (attrValidationCache[name] = !isUnsafe)\r\n}\r\n\r\nexport const propsToAttrMap: Record<string, string | undefined> = {\r\n  acceptCharset: 'accept-charset',\r\n  className: 'class',\r\n  htmlFor: 'for',\r\n  httpEquiv: 'http-equiv'\r\n}\r\n\r\n/**\r\n * CSS properties that accept plain numbers\r\n */\r\nexport const isNoUnitNumericStyleProp = /*#__PURE__*/ makeMap(\r\n  `animation-iteration-count,border-image-outset,border-image-slice,` +\r\n    `border-image-width,box-flex,box-flex-group,box-ordinal-group,column-count,` +\r\n    `columns,flex,flex-grow,flex-positive,flex-shrink,flex-negative,flex-order,` +\r\n    `grid-row,grid-row-end,grid-row-span,grid-row-start,grid-column,` +\r\n    `grid-column-end,grid-column-span,grid-column-start,font-weight,line-clamp,` +\r\n    `line-height,opacity,order,orphans,tab-size,widows,z-index,zoom,` +\r\n    // SVG\r\n    `fill-opacity,flood-opacity,stop-opacity,stroke-dasharray,stroke-dashoffset,` +\r\n    `stroke-miterlimit,stroke-opacity,stroke-width`\r\n)\r\n\r\n/**\r\n * Known attributes, this is used for stringification of runtime static nodes\r\n * so that we don't stringify bindings that cannot be set from HTML.\r\n * Don't also forget to allow `data-*` and `aria-*`!\r\n * Generated from https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes\r\n */\r\nexport const isKnownHtmlAttr = /*#__PURE__*/ makeMap(\r\n  `accept,accept-charset,accesskey,action,align,allow,alt,async,` +\r\n    `autocapitalize,autocomplete,autofocus,autoplay,background,bgcolor,` +\r\n    `border,buffered,capture,challenge,charset,checked,cite,class,code,` +\r\n    `codebase,color,cols,colspan,content,contenteditable,contextmenu,controls,` +\r\n    `coords,crossorigin,csp,data,datetime,decoding,default,defer,dir,dirname,` +\r\n    `disabled,download,draggable,dropzone,enctype,enterkeyhint,for,form,` +\r\n    `formaction,formenctype,formmethod,formnovalidate,formtarget,headers,` +\r\n    `height,hidden,high,href,hreflang,http-equiv,icon,id,importance,integrity,` +\r\n    `ismap,itemprop,keytype,kind,label,lang,language,loading,list,loop,low,` +\r\n    `manifest,max,maxlength,minlength,media,min,multiple,muted,name,novalidate,` +\r\n    `open,optimum,pattern,ping,placeholder,poster,preload,radiogroup,readonly,` +\r\n    `referrerpolicy,rel,required,reversed,rows,rowspan,sandbox,scope,scoped,` +\r\n    `selected,shape,size,sizes,slot,span,spellcheck,src,srcdoc,srclang,srcset,` +\r\n    `start,step,style,summary,tabindex,target,title,translate,type,usemap,` +\r\n    `value,width,wrap`\r\n)\r\n\r\n/**\r\n * Generated from https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute\r\n */\r\nexport const isKnownSvgAttr = /*#__PURE__*/ makeMap(\r\n  `xmlns,accent-height,accumulate,additive,alignment-baseline,alphabetic,amplitude,` +\r\n    `arabic-form,ascent,attributeName,attributeType,azimuth,baseFrequency,` +\r\n    `baseline-shift,baseProfile,bbox,begin,bias,by,calcMode,cap-height,class,` +\r\n    `clip,clipPathUnits,clip-path,clip-rule,color,color-interpolation,` +\r\n    `color-interpolation-filters,color-profile,color-rendering,` +\r\n    `contentScriptType,contentStyleType,crossorigin,cursor,cx,cy,d,decelerate,` +\r\n    `descent,diffuseConstant,direction,display,divisor,dominant-baseline,dur,dx,` +\r\n    `dy,edgeMode,elevation,enable-background,end,exponent,fill,fill-opacity,` +\r\n    `fill-rule,filter,filterRes,filterUnits,flood-color,flood-opacity,` +\r\n    `font-family,font-size,font-size-adjust,font-stretch,font-style,` +\r\n    `font-variant,font-weight,format,from,fr,fx,fy,g1,g2,glyph-name,` +\r\n    `glyph-orientation-horizontal,glyph-orientation-vertical,glyphRef,` +\r\n    `gradientTransform,gradientUnits,hanging,height,href,hreflang,horiz-adv-x,` +\r\n    `horiz-origin-x,id,ideographic,image-rendering,in,in2,intercept,k,k1,k2,k3,` +\r\n    `k4,kernelMatrix,kernelUnitLength,kerning,keyPoints,keySplines,keyTimes,` +\r\n    `lang,lengthAdjust,letter-spacing,lighting-color,limitingConeAngle,local,` +\r\n    `marker-end,marker-mid,marker-start,markerHeight,markerUnits,markerWidth,` +\r\n    `mask,maskContentUnits,maskUnits,mathematical,max,media,method,min,mode,` +\r\n    `name,numOctaves,offset,opacity,operator,order,orient,orientation,origin,` +\r\n    `overflow,overline-position,overline-thickness,panose-1,paint-order,path,` +\r\n    `pathLength,patternContentUnits,patternTransform,patternUnits,ping,` +\r\n    `pointer-events,points,pointsAtX,pointsAtY,pointsAtZ,preserveAlpha,` +\r\n    `preserveAspectRatio,primitiveUnits,r,radius,referrerPolicy,refX,refY,rel,` +\r\n    `rendering-intent,repeatCount,repeatDur,requiredExtensions,requiredFeatures,` +\r\n    `restart,result,rotate,rx,ry,scale,seed,shape-rendering,slope,spacing,` +\r\n    `specularConstant,specularExponent,speed,spreadMethod,startOffset,` +\r\n    `stdDeviation,stemh,stemv,stitchTiles,stop-color,stop-opacity,` +\r\n    `strikethrough-position,strikethrough-thickness,string,stroke,` +\r\n    `stroke-dasharray,stroke-dashoffset,stroke-linecap,stroke-linejoin,` +\r\n    `stroke-miterlimit,stroke-opacity,stroke-width,style,surfaceScale,` +\r\n    `systemLanguage,tabindex,tableValues,target,targetX,targetY,text-anchor,` +\r\n    `text-decoration,text-rendering,textLength,to,transform,transform-origin,` +\r\n    `type,u1,u2,underline-position,underline-thickness,unicode,unicode-bidi,` +\r\n    `unicode-range,units-per-em,v-alphabetic,v-hanging,v-ideographic,` +\r\n    `v-mathematical,values,vector-effect,version,vert-adv-y,vert-origin-x,` +\r\n    `vert-origin-y,viewBox,viewTarget,visibility,width,widths,word-spacing,` +\r\n    `writing-mode,x,x-height,x1,x2,xChannelSelector,xlink:actuate,xlink:arcrole,` +\r\n    `xlink:href,xlink:role,xlink:show,xlink:title,xlink:type,xml:base,xml:lang,` +\r\n    `xml:space,y,y1,y2,yChannelSelector,z,zoomAndPan`\r\n)\r\n","import { isArray, isString, isObject, hyphenate } from './'\r\nimport { isNoUnitNumericStyleProp } from './domAttrConfig'\r\n\r\nexport type NormalizedStyle = Record<string, string | number>\r\n\r\nexport function normalizeStyle(\r\n  value: unknown\r\n): NormalizedStyle | string | undefined {\r\n  if (isArray(value)) {\r\n    const res: NormalizedStyle = {}\r\n    for (let i = 0; i < value.length; i++) {\r\n      const item = value[i]\r\n      const normalized = isString(item)\r\n        ? parseStringStyle(item)\r\n        : (normalizeStyle(item) as NormalizedStyle)\r\n      if (normalized) {\r\n        for (const key in normalized) {\r\n          res[key] = normalized[key]\r\n        }\r\n      }\r\n    }\r\n    return res\r\n  } else if (isString(value)) {\r\n    return value\r\n  } else if (isObject(value)) {\r\n    return value\r\n  }\r\n}\r\n\r\nconst listDelimiterRE = /;(?![^(]*\\))/g\r\nconst propertyDelimiterRE = /:(.+)/\r\n\r\nexport function parseStringStyle(cssText: string): NormalizedStyle {\r\n  const ret: NormalizedStyle = {}\r\n  cssText.split(listDelimiterRE).forEach(item => {\r\n    if (item) {\r\n      const tmp = item.split(propertyDelimiterRE)\r\n      tmp.length > 1 && (ret[tmp[0].trim()] = tmp[1].trim())\r\n    }\r\n  })\r\n  return ret\r\n}\r\n\r\nexport function stringifyStyle(\r\n  styles: NormalizedStyle | string | undefined\r\n): string {\r\n  let ret = ''\r\n  if (!styles || isString(styles)) {\r\n    return ret\r\n  }\r\n  for (const key in styles) {\r\n    const value = styles[key]\r\n    const normalizedKey = key.startsWith(`--`) ? key : hyphenate(key)\r\n    if (\r\n      isString(value) ||\r\n      (typeof value === 'number' && isNoUnitNumericStyleProp(normalizedKey))\r\n    ) {\r\n      // only render valid values\r\n      ret += `${normalizedKey}:${value};`\r\n    }\r\n  }\r\n  return ret\r\n}\r\n\r\nexport function normalizeClass(value: unknown): string {\r\n  let res = ''\r\n  if (isString(value)) {\r\n    res = value\r\n  } else if (isArray(value)) {\r\n    for (let i = 0; i < value.length; i++) {\r\n      const normalized = normalizeClass(value[i])\r\n      if (normalized) {\r\n        res += normalized + ' '\r\n      }\r\n    }\r\n  } else if (isObject(value)) {\r\n    for (const name in value) {\r\n      if (value[name]) {\r\n        res += name + ' '\r\n      }\r\n    }\r\n  }\r\n  return res.trim()\r\n}\r\n\r\nexport function normalizeProps(props: Record<string, any> | null) {\r\n  if (!props) return null\r\n  let { class: klass, style } = props\r\n  if (klass && !isString(klass)) {\r\n    props.class = normalizeClass(klass)\r\n  }\r\n  if (style) {\r\n    props.style = normalizeStyle(style)\r\n  }\r\n  return props\r\n}\r\n","// These tag configs are shared between compiler-dom and runtime-dom, so they\r\n// must be extracted in shared to avoid creating a dependency between the two.\r\nimport { makeMap } from './makeMap'\r\n\r\n// https://developer.mozilla.org/en-US/docs/Web/HTML/Element\r\nconst HTML_TAGS =\r\n  'html,body,base,head,link,meta,style,title,address,article,aside,footer,' +\r\n  'header,h1,h2,h3,h4,h5,h6,nav,section,div,dd,dl,dt,figcaption,' +\r\n  'figure,picture,hr,img,li,main,ol,p,pre,ul,a,b,abbr,bdi,bdo,br,cite,code,' +\r\n  'data,dfn,em,i,kbd,mark,q,rp,rt,ruby,s,samp,small,span,strong,sub,sup,' +\r\n  'time,u,var,wbr,area,audio,map,track,video,embed,object,param,source,' +\r\n  'canvas,script,noscript,del,ins,caption,col,colgroup,table,thead,tbody,td,' +\r\n  'th,tr,button,datalist,fieldset,form,input,label,legend,meter,optgroup,' +\r\n  'option,output,progress,select,textarea,details,dialog,menu,' +\r\n  'summary,template,blockquote,iframe,tfoot'\r\n\r\n// https://developer.mozilla.org/en-US/docs/Web/SVG/Element\r\nconst SVG_TAGS =\r\n  'svg,animate,animateMotion,animateTransform,circle,clipPath,color-profile,' +\r\n  'defs,desc,discard,ellipse,feBlend,feColorMatrix,feComponentTransfer,' +\r\n  'feComposite,feConvolveMatrix,feDiffuseLighting,feDisplacementMap,' +\r\n  'feDistanceLight,feDropShadow,feFlood,feFuncA,feFuncB,feFuncG,feFuncR,' +\r\n  'feGaussianBlur,feImage,feMerge,feMergeNode,feMorphology,feOffset,' +\r\n  'fePointLight,feSpecularLighting,feSpotLight,feTile,feTurbulence,filter,' +\r\n  'foreignObject,g,hatch,hatchpath,image,line,linearGradient,marker,mask,' +\r\n  'mesh,meshgradient,meshpatch,meshrow,metadata,mpath,path,pattern,' +\r\n  'polygon,polyline,radialGradient,rect,set,solidcolor,stop,switch,symbol,' +\r\n  'text,textPath,title,tspan,unknown,use,view'\r\n\r\nconst VOID_TAGS =\r\n  'area,base,br,col,embed,hr,img,input,link,meta,param,source,track,wbr'\r\n\r\nexport const isHTMLTag = /*#__PURE__*/ makeMap(HTML_TAGS)\r\nexport const isSVGTag = /*#__PURE__*/ makeMap(SVG_TAGS)\r\nexport const isVoidTag = /*#__PURE__*/ makeMap(VOID_TAGS)\r\n","import { isArray, isDate, isObject } from './'\r\n\r\nfunction looseCompareArrays(a: any[], b: any[]) {\r\n  if (a.length !== b.length) return false\r\n  let equal = true\r\n  for (let i = 0; equal && i < a.length; i++) {\r\n    equal = looseEqual(a[i], b[i])\r\n  }\r\n  return equal\r\n}\r\n\r\nexport function looseEqual(a: any, b: any): boolean {\r\n  if (a === b) return true\r\n  let aValidType = isDate(a)\r\n  let bValidType = isDate(b)\r\n  if (aValidType || bValidType) {\r\n    return aValidType && bValidType ? a.getTime() === b.getTime() : false\r\n  }\r\n  aValidType = isArray(a)\r\n  bValidType = isArray(b)\r\n  if (aValidType || bValidType) {\r\n    return aValidType && bValidType ? looseCompareArrays(a, b) : false\r\n  }\r\n  aValidType = isObject(a)\r\n  bValidType = isObject(b)\r\n  if (aValidType || bValidType) {\r\n    /* istanbul ignore if: this if will probably never be called */\r\n    if (!aValidType || !bValidType) {\r\n      return false\r\n    }\r\n    const aKeysCount = Object.keys(a).length\r\n    const bKeysCount = Object.keys(b).length\r\n    if (aKeysCount !== bKeysCount) {\r\n      return false\r\n    }\r\n    for (const key in a) {\r\n      const aHasKey = a.hasOwnProperty(key)\r\n      const bHasKey = b.hasOwnProperty(key)\r\n      if (\r\n        (aHasKey && !bHasKey) ||\r\n        (!aHasKey && bHasKey) ||\r\n        !looseEqual(a[key], b[key])\r\n      ) {\r\n        return false\r\n      }\r\n    }\r\n  }\r\n  return String(a) === String(b)\r\n}\r\n\r\nexport function looseIndexOf(arr: any[], val: any): number {\r\n  return arr.findIndex(item => looseEqual(item, val))\r\n}\r\n","import {\r\n  isArray,\r\n  isMap,\r\n  isObject,\r\n  isPlainObject,\r\n  isSet,\r\n  objectToString\r\n} from './index'\r\n\r\n/**\r\n * For converting {{ interpolation }} values to displayed strings.\r\n * @private\r\n */\r\nexport const toDisplayString = (val: unknown): string => {\r\n  return val == null\r\n    ? ''\r\n    : isArray(val) || (isObject(val) && val.toString === objectToString)\r\n    ? JSON.stringify(val, replacer, 2)\r\n    : String(val)\r\n}\r\n\r\nconst replacer = (_key: string, val: any): any => {\r\n  // can't use isRef here since @vue/shared has no deps\r\n  if (val && val.__v_isRef) {\r\n    return replacer(_key, val.value)\r\n  } else if (isMap(val)) {\r\n    return {\r\n      [`Map(${val.size})`]: [...val.entries()].reduce((entries, [key, val]) => {\r\n        ;(entries as any)[`${key} =>`] = val\r\n        return entries\r\n      }, {})\r\n    }\r\n  } else if (isSet(val)) {\r\n    return {\r\n      [`Set(${val.size})`]: [...val.values()]\r\n    }\r\n  } else if (isObject(val) && !isArray(val) && !isPlainObject(val)) {\r\n    return String(val)\r\n  }\r\n  return val\r\n}\r\n","import { makeMap } from './makeMap'\r\n\r\nexport { makeMap }\r\nexport * from './patchFlags'\r\nexport * from './shapeFlags'\r\nexport * from './slotFlags'\r\nexport * from './globalsWhitelist'\r\nexport * from './codeframe'\r\nexport * from './normalizeProp'\r\nexport * from './domTagConfig'\r\nexport * from './domAttrConfig'\r\nexport * from './escapeHtml'\r\nexport * from './looseEqual'\r\nexport * from './toDisplayString'\r\n\r\n/**\r\n * List of @babel/parser plugins that are used for template expression\r\n * transforms and SFC script transforms. By default we enable proposals slated\r\n * for ES2020. This will need to be updated as the spec moves forward.\r\n * Full list at https://babeljs.io/docs/en/next/babel-parser#plugins\r\n */\r\nexport const babelParserDefaultPlugins = [\r\n  'bigInt',\r\n  'optionalChaining',\r\n  'nullishCoalescingOperator'\r\n] as const\r\n\r\nexport const EMPTY_OBJ: { readonly [key: string]: any } = __DEV__\r\n  ? Object.freeze({})\r\n  : {}\r\nexport const EMPTY_ARR = __DEV__ ? Object.freeze([]) : []\r\n\r\nexport const NOOP = () => {}\r\n\r\n/**\r\n * Always return false.\r\n */\r\nexport const NO = () => false\r\n\r\nconst onRE = /^on[^a-z]/\r\nexport const isOn = (key: string) => onRE.test(key)\r\n\r\nexport const isModelListener = (key: string) => key.startsWith('onUpdate:')\r\n\r\nexport const extend = Object.assign\r\n\r\nexport const remove = <T>(arr: T[], el: T) => {\r\n  const i = arr.indexOf(el)\r\n  if (i > -1) {\r\n    arr.splice(i, 1)\r\n  }\r\n}\r\n\r\nconst hasOwnProperty = Object.prototype.hasOwnProperty\r\nexport const hasOwn = (\r\n  val: object,\r\n  key: string | symbol\r\n): key is keyof typeof val => hasOwnProperty.call(val, key)\r\n\r\nexport const isArray = Array.isArray\r\nexport const isMap = (val: unknown): val is Map<any, any> =>\r\n  toTypeString(val) === '[object Map]'\r\nexport const isSet = (val: unknown): val is Set<any> =>\r\n  toTypeString(val) === '[object Set]'\r\n\r\nexport const isDate = (val: unknown): val is Date => val instanceof Date\r\nexport const isFunction = (val: unknown): val is Function =>\r\n  typeof val === 'function'\r\nexport const isString = (val: unknown): val is string => typeof val === 'string'\r\nexport const isSymbol = (val: unknown): val is symbol => typeof val === 'symbol'\r\nexport const isObject = (val: unknown): val is Record<any, any> =>\r\n  val !== null && typeof val === 'object'\r\n\r\nexport const isPromise = <T = any>(val: unknown): val is Promise<T> => {\r\n  return isObject(val) && isFunction(val.then) && isFunction(val.catch)\r\n}\r\n\r\nexport const objectToString = Object.prototype.toString\r\nexport const toTypeString = (value: unknown): string =>\r\n  objectToString.call(value)\r\n\r\nexport const toRawType = (value: unknown): string => {\r\n  // extract \"RawType\" from strings like \"[object RawType]\"\r\n  return toTypeString(value).slice(8, -1)\r\n}\r\n\r\nexport const isPlainObject = (val: unknown): val is object =>\r\n  toTypeString(val) === '[object Object]'\r\n\r\nexport const isIntegerKey = (key: unknown) =>\r\n  isString(key) &&\r\n  key !== 'NaN' &&\r\n  key[0] !== '-' &&\r\n  '' + parseInt(key, 10) === key\r\n\r\nexport const isReservedProp = /*#__PURE__*/ makeMap(\r\n  // the leading comma is intentional so empty string \"\" is also included\r\n  ',key,ref,' +\r\n    'onVnodeBeforeMount,onVnodeMounted,' +\r\n    'onVnodeBeforeUpdate,onVnodeUpdated,' +\r\n    'onVnodeBeforeUnmount,onVnodeUnmounted'\r\n)\r\n\r\nconst cacheStringFunction = <T extends (str: string) => string>(fn: T): T => {\r\n  const cache: Record<string, string> = Object.create(null)\r\n  return ((str: string) => {\r\n    const hit = cache[str]\r\n    return hit || (cache[str] = fn(str))\r\n  }) as any\r\n}\r\n\r\nconst camelizeRE = /-(\\w)/g\r\n/**\r\n * @private\r\n */\r\nexport const camelize = cacheStringFunction((str: string): string => {\r\n  return str.replace(camelizeRE, (_, c) => (c ? c.toUpperCase() : ''))\r\n})\r\n\r\nconst hyphenateRE = /\\B([A-Z])/g\r\n/**\r\n * @private\r\n */\r\nexport const hyphenate = cacheStringFunction((str: string) =>\r\n  str.replace(hyphenateRE, '-$1').toLowerCase()\r\n)\r\n\r\n/**\r\n * @private\r\n */\r\nexport const capitalize = cacheStringFunction(\r\n  (str: string) => str.charAt(0).toUpperCase() + str.slice(1)\r\n)\r\n\r\n/**\r\n * @private\r\n */\r\nexport const toHandlerKey = cacheStringFunction((str: string) =>\r\n  str ? `on${capitalize(str)}` : ``\r\n)\r\n\r\n// compare whether a value has changed, accounting for NaN.\r\nexport const hasChanged = (value: any, oldValue: any): boolean =>\r\n  !Object.is(value, oldValue)\r\n\r\nexport const invokeArrayFns = (fns: Function[], arg?: any) => {\r\n  for (let i = 0; i < fns.length; i++) {\r\n    fns[i](arg)\r\n  }\r\n}\r\n\r\nexport const def = (obj: object, key: string | symbol, value: any) => {\r\n  Object.defineProperty(obj, key, {\r\n    configurable: true,\r\n    enumerable: false,\r\n    value\r\n  })\r\n}\r\n\r\nexport const toNumber = (val: any): any => {\r\n  const n = parseFloat(val)\r\n  return isNaN(n) ? val : n\r\n}\r\n\r\nlet _globalThis: any\r\nexport const getGlobalThis = (): any => {\r\n  return (\r\n    _globalThis ||\r\n    (_globalThis =\r\n      typeof globalThis !== 'undefined'\r\n        ? globalThis\r\n        : typeof self !== 'undefined'\r\n        ? self\r\n        : typeof window !== 'undefined'\r\n        ? window\r\n        : typeof global !== 'undefined'\r\n        ? global\r\n        : {})\r\n  )\r\n}\r\n","import { ReactiveEffect, trackOpBit } from './effect'\r\n\r\nexport type Dep = Set<ReactiveEffect> & TrackedMarkers\r\n\r\n/**\r\n * wasTracked and newTracked maintain the status for several levels of effect\r\n * tracking recursion. One bit per level is used to define wheter the dependency\r\n * was/is tracked.\r\n */\r\ntype TrackedMarkers = {\r\n  /**\r\n   * wasTracked\r\n   */\r\n  w: number\r\n  /**\r\n   * newTracked\r\n   */\r\n  n: number\r\n}\r\n\r\nexport const createDep = (effects?: ReactiveEffect[]): Dep => {\r\n  const dep = new Set<ReactiveEffect>(effects) as Dep\r\n  dep.w = 0\r\n  dep.n = 0\r\n  return dep\r\n}\r\n\r\nexport const wasTracked = (dep: Dep): boolean => (dep.w & trackOpBit) > 0\r\n\r\nexport const newTracked = (dep: Dep): boolean => (dep.n & trackOpBit) > 0\r\n\r\nexport const initDepMarkers = ({ deps }: ReactiveEffect) => {\r\n  if (deps.length) {\r\n    for (let i = 0; i < deps.length; i++) {\r\n      deps[i].w |= trackOpBit // set was tracked\r\n    }\r\n  }\r\n}\r\n\r\nexport const finalizeDepMarkers = (effect: ReactiveEffect) => {\r\n  const { deps } = effect\r\n  if (deps.length) {\r\n    let ptr = 0\r\n    for (let i = 0; i < deps.length; i++) {\r\n      const dep = deps[i]\r\n      if (wasTracked(dep) && !newTracked(dep)) {\r\n        dep.delete(effect)\r\n      } else {\r\n        deps[ptr++] = dep\r\n      }\r\n      // clear bits\r\n      dep.w &= ~trackOpBit\r\n      dep.n &= ~trackOpBit\r\n    }\r\n    deps.length = ptr\r\n  }\r\n}\r\n","import { ReactiveEffect } from './effect'\r\nimport { warn } from './warning'\r\n\r\nlet activeEffectScope: EffectScope | undefined\r\nconst effectScopeStack: EffectScope[] = []\r\n\r\nexport class EffectScope {\r\n  active = true\r\n  effects: ReactiveEffect[] = []\r\n  cleanups: (() => void)[] = []\r\n\r\n  parent: EffectScope | undefined\r\n  scopes: EffectScope[] | undefined\r\n  /**\r\n   * track a child scope's index in its parent's scopes array for optimized\r\n   * removal\r\n   */\r\n  private index: number | undefined\r\n\r\n  constructor(detached = false) {\r\n    if (!detached && activeEffectScope) {\r\n      this.parent = activeEffectScope\r\n      this.index =\r\n        (activeEffectScope.scopes || (activeEffectScope.scopes = [])).push(\r\n          this\r\n        ) - 1\r\n    }\r\n  }\r\n\r\n  run<T>(fn: () => T): T | undefined {\r\n    if (this.active) {\r\n      try {\r\n        this.on()\r\n        return fn()\r\n      } finally {\r\n        this.off()\r\n      }\r\n    } else if (__DEV__) {\r\n      warn(`cannot run an inactive effect scope.`)\r\n    }\r\n  }\r\n\r\n  on() {\r\n    if (this.active) {\r\n      effectScopeStack.push(this)\r\n      activeEffectScope = this\r\n    }\r\n  }\r\n\r\n  off() {\r\n    if (this.active) {\r\n      effectScopeStack.pop()\r\n      activeEffectScope = effectScopeStack[effectScopeStack.length - 1]\r\n    }\r\n  }\r\n\r\n  stop(fromParent?: boolean) {\r\n    if (this.active) {\r\n      this.effects.forEach(e => e.stop())\r\n      this.cleanups.forEach(cleanup => cleanup())\r\n      if (this.scopes) {\r\n        this.scopes.forEach(e => e.stop(true))\r\n      }\r\n      // nested scope, dereference from parent to avoid memory leaks\r\n      if (this.parent && !fromParent) {\r\n        // optimized O(1) removal\r\n        const last = this.parent.scopes!.pop()\r\n        if (last && last !== this) {\r\n          this.parent.scopes![this.index!] = last\r\n          last.index = this.index!\r\n        }\r\n      }\r\n      this.active = false\r\n    }\r\n  }\r\n}\r\n\r\nexport function effectScope(detached?: boolean) {\r\n  return new EffectScope(detached)\r\n}\r\n\r\nexport function recordEffectScope(\r\n  effect: ReactiveEffect,\r\n  scope?: EffectScope | null\r\n) {\r\n  scope = scope || activeEffectScope\r\n  if (scope && scope.active) {\r\n    scope.effects.push(effect)\r\n  }\r\n}\r\n\r\nexport function getCurrentScope() {\r\n  return activeEffectScope\r\n}\r\n\r\nexport function onScopeDispose(fn: () => void) {\r\n  if (activeEffectScope) {\r\n    activeEffectScope.cleanups.push(fn)\r\n  } else if (__DEV__) {\r\n    warn(\r\n      `onDispose() is called when there is no active effect scope ` +\r\n        ` to be associated with.`\r\n    )\r\n  }\r\n}\r\n","import { extend, isArray, isIntegerKey, isMap } from '@vue/shared'\r\nimport {\r\n  createDep,\r\n  Dep,\r\n  finalizeDepMarkers,\r\n  initDepMarkers,\r\n  newTracked,\r\n  wasTracked\r\n} from './dep'\r\nimport { EffectScope, recordEffectScope } from './effectScope'\r\nimport { TrackOpTypes, TriggerOpTypes } from './operations'\r\n\r\n// The main WeakMap that stores {target -> key -> dep} connections.\r\n// Conceptually, it's easier to think of a dependency as a Dep class\r\n// which maintains a Set of subscribers, but we simply store them as\r\n// raw Sets to reduce memory overhead.\r\ntype KeyToDepMap = Map<any, Dep>\r\nconst targetMap = new WeakMap<any, KeyToDepMap>()\r\n\r\n// The number of effects currently being tracked recursively.\r\nlet effectTrackDepth = 0\r\n\r\nexport let trackOpBit = 1\r\n\r\n/**\r\n * The bitwise track markers support at most 30 levels op recursion.\r\n * This value is chosen to enable modern JS engines to use a SMI on all platforms.\r\n * When recursion depth is greater, fall back to using a full cleanup.\r\n */\r\nconst maxMarkerBits = 30\r\n\r\nexport type EffectScheduler = (...args: any[]) => any\r\n\r\nexport type DebuggerEvent = {\r\n  effect: ReactiveEffect\r\n} & DebuggerEventExtraInfo\r\n\r\nexport type DebuggerEventExtraInfo = {\r\n  target: object\r\n  type: TrackOpTypes | TriggerOpTypes\r\n  key: any\r\n  newValue?: any\r\n  oldValue?: any\r\n  oldTarget?: Map<any, any> | Set<any>\r\n}\r\n\r\nconst effectStack: ReactiveEffect[] = []\r\nlet activeEffect: ReactiveEffect | undefined\r\n\r\nexport const ITERATE_KEY = Symbol(__DEV__ ? 'iterate' : '')\r\nexport const MAP_KEY_ITERATE_KEY = Symbol(__DEV__ ? 'Map key iterate' : '')\r\n\r\nexport class ReactiveEffect<T = any> {\r\n  active = true\r\n  deps: Dep[] = []\r\n\r\n  // can be attached after creation\r\n  computed?: boolean\r\n  allowRecurse?: boolean\r\n  onStop?: () => void\r\n  // dev only\r\n  onTrack?: (event: DebuggerEvent) => void\r\n  // dev only\r\n  onTrigger?: (event: DebuggerEvent) => void\r\n\r\n  constructor(\r\n    public fn: () => T,\r\n    public scheduler: EffectScheduler | null = null,\r\n    scope?: EffectScope | null\r\n  ) {\r\n    recordEffectScope(this, scope)\r\n  }\r\n\r\n  run() {\r\n    if (!this.active) {\r\n      return this.fn()\r\n    }\r\n    if (!effectStack.includes(this)) {\r\n      try {\r\n        //\r\n        effectStack.push((activeEffect = this))\r\n        enableTracking()\r\n\r\n        trackOpBit = 1 << ++effectTrackDepth\r\n\r\n        if (effectTrackDepth <= maxMarkerBits) {\r\n          initDepMarkers(this)\r\n        } else {\r\n          cleanupEffect(this)\r\n        }\r\n        return this.fn()\r\n      } finally {\r\n        if (effectTrackDepth <= maxMarkerBits) {\r\n          finalizeDepMarkers(this)\r\n        }\r\n\r\n        trackOpBit = 1 << --effectTrackDepth\r\n\r\n        resetTracking()\r\n        effectStack.pop()\r\n        const n = effectStack.length\r\n        activeEffect = n > 0 ? effectStack[n - 1] : undefined\r\n      }\r\n    }\r\n  }\r\n\r\n  stop() {\r\n    if (this.active) {\r\n      cleanupEffect(this)\r\n      if (this.onStop) {\r\n        this.onStop()\r\n      }\r\n      this.active = false\r\n    }\r\n  }\r\n}\r\n\r\nfunction cleanupEffect(effect: ReactiveEffect) {\r\n  const { deps } = effect\r\n  if (deps.length) {\r\n    for (let i = 0; i < deps.length; i++) {\r\n      deps[i].delete(effect)\r\n    }\r\n    deps.length = 0\r\n  }\r\n}\r\n\r\nexport interface DebuggerOptions {\r\n  onTrack?: (event: DebuggerEvent) => void\r\n  onTrigger?: (event: DebuggerEvent) => void\r\n}\r\n\r\nexport interface ReactiveEffectOptions extends DebuggerOptions {\r\n  lazy?: boolean\r\n  scheduler?: EffectScheduler\r\n  scope?: EffectScope\r\n  allowRecurse?: boolean\r\n  onStop?: () => void\r\n}\r\n\r\nexport interface ReactiveEffectRunner<T = any> {\r\n  (): T\r\n  effect: ReactiveEffect\r\n}\r\n\r\nexport function effect<T = any>(\r\n  fn: () => T,\r\n  options?: ReactiveEffectOptions\r\n): ReactiveEffectRunner {\r\n  if ((fn as ReactiveEffectRunner).effect) {\r\n    fn = (fn as ReactiveEffectRunner).effect.fn\r\n  }\r\n  // 实例化 ReactiveEffect,并赋值给_effect,\r\n  const _effect = new ReactiveEffect(fn)\r\n  if (options) {\r\n    extend(_effect, options)\r\n    if (options.scope) recordEffectScope(_effect, options.scope)\r\n  }\r\n  // 如果 用户 延迟执行\r\n  if (!options || !options.lazy) {\r\n    _effect.run()\r\n  }\r\n\r\n  // 执行 run,并把run函数的中this指向给_effect\r\n  const runner = _effect.run.bind(_effect) as ReactiveEffectRunner\r\n  runner.effect = _effect\r\n  return runner\r\n}\r\n\r\nexport function stop(runner: ReactiveEffectRunner) {\r\n  runner.effect.stop()\r\n}\r\n\r\nlet shouldTrack = true\r\nconst trackStack: boolean[] = []\r\n\r\nexport function pauseTracking() {\r\n  trackStack.push(shouldTrack)\r\n  shouldTrack = false\r\n}\r\n\r\nexport function enableTracking() {\r\n  trackStack.push(shouldTrack)\r\n  shouldTrack = true\r\n}\r\n\r\nexport function resetTracking() {\r\n  const last = trackStack.pop()\r\n  shouldTrack = last === undefined ? true : last\r\n}\r\n\r\nexport function track(target: object, type: TrackOpTypes, key: unknown) {\r\n  if (!isTracking()) {\r\n    return\r\n  }\r\n  let depsMap = targetMap.get(target)\r\n  if (!depsMap) {\r\n    targetMap.set(target, (depsMap = new Map()))\r\n  }\r\n  let dep = depsMap.get(key)\r\n  if (!dep) {\r\n    depsMap.set(key, (dep = createDep()))\r\n  }\r\n\r\n  const eventInfo = __DEV__\r\n    ? { effect: activeEffect, target, type, key }\r\n    : undefined\r\n\r\n  trackEffects(dep, eventInfo)\r\n}\r\n\r\nexport function isTracking() {\r\n  return shouldTrack && activeEffect !== undefined\r\n}\r\n\r\nexport function trackEffects(\r\n  dep: Dep,\r\n  debuggerEventExtraInfo?: DebuggerEventExtraInfo\r\n) {\r\n  let shouldTrack = false\r\n  if (effectTrackDepth <= maxMarkerBits) {\r\n    if (!newTracked(dep)) {\r\n      dep.n |= trackOpBit // set newly tracked\r\n      shouldTrack = !wasTracked(dep)\r\n    }\r\n  } else {\r\n    // Full cleanup mode.\r\n    shouldTrack = !dep.has(activeEffect!)\r\n  }\r\n\r\n  if (shouldTrack) {\r\n    dep.add(activeEffect!)\r\n    activeEffect!.deps.push(dep)\r\n    if (__DEV__ && activeEffect!.onTrack) {\r\n      activeEffect!.onTrack(\r\n        Object.assign(\r\n          {\r\n            effect: activeEffect!\r\n          },\r\n          debuggerEventExtraInfo\r\n        )\r\n      )\r\n    }\r\n  }\r\n}\r\n\r\nexport function trigger(\r\n  target: object,\r\n  type: TriggerOpTypes,\r\n  key?: unknown,\r\n  newValue?: unknown,\r\n  oldValue?: unknown,\r\n  oldTarget?: Map<unknown, unknown> | Set<unknown>\r\n) {\r\n  const depsMap = targetMap.get(target)\r\n  if (!depsMap) {\r\n    // never been tracked\r\n    return\r\n  }\r\n\r\n  let deps: (Dep | undefined)[] = []\r\n  if (type === TriggerOpTypes.CLEAR) {\r\n    // collection being cleared\r\n    // trigger all effects for target\r\n    deps = [...depsMap.values()]\r\n  } else if (key === 'length' && isArray(target)) {\r\n    depsMap.forEach((dep, key) => {\r\n      if (key === 'length' || key >= (newValue as number)) {\r\n        deps.push(dep)\r\n      }\r\n    })\r\n  } else {\r\n    // schedule runs for SET | ADD | DELETE\r\n    if (key !== void 0) {\r\n      deps.push(depsMap.get(key))\r\n    }\r\n\r\n    // also run for iteration key on ADD | DELETE | Map.SET\r\n    switch (type) {\r\n      case TriggerOpTypes.ADD:\r\n        if (!isArray(target)) {\r\n          deps.push(depsMap.get(ITERATE_KEY))\r\n          if (isMap(target)) {\r\n            deps.push(depsMap.get(MAP_KEY_ITERATE_KEY))\r\n          }\r\n        } else if (isIntegerKey(key)) {\r\n          // new index added to array -> length changes\r\n          deps.push(depsMap.get('length'))\r\n        }\r\n        break\r\n      case TriggerOpTypes.DELETE:\r\n        if (!isArray(target)) {\r\n          deps.push(depsMap.get(ITERATE_KEY))\r\n          if (isMap(target)) {\r\n            deps.push(depsMap.get(MAP_KEY_ITERATE_KEY))\r\n          }\r\n        }\r\n        break\r\n      case TriggerOpTypes.SET:\r\n        if (isMap(target)) {\r\n          deps.push(depsMap.get(ITERATE_KEY))\r\n        }\r\n        break\r\n    }\r\n  }\r\n\r\n  const eventInfo = __DEV__\r\n    ? { target, type, key, newValue, oldValue, oldTarget }\r\n    : undefined\r\n\r\n  if (deps.length === 1) {\r\n    if (deps[0]) {\r\n      if (__DEV__) {\r\n        triggerEffects(deps[0], eventInfo)\r\n      } else {\r\n        triggerEffects(deps[0])\r\n      }\r\n    }\r\n  } else {\r\n    const effects: ReactiveEffect[] = []\r\n    for (const dep of deps) {\r\n      if (dep) {\r\n        effects.push(...dep)\r\n      }\r\n    }\r\n    if (__DEV__) {\r\n      triggerEffects(createDep(effects), eventInfo)\r\n    } else {\r\n      triggerEffects(createDep(effects))\r\n    }\r\n  }\r\n}\r\n\r\nexport function triggerEffects(\r\n  dep: Dep | ReactiveEffect[],\r\n  debuggerEventExtraInfo?: DebuggerEventExtraInfo\r\n) {\r\n  // spread into array for stabilization\r\n  for (const effect of isArray(dep) ? dep : [...dep]) {\r\n    if (effect !== activeEffect || effect.allowRecurse) {\r\n      if (__DEV__ && effect.onTrigger) {\r\n        effect.onTrigger(extend({ effect }, debuggerEventExtraInfo))\r\n      }\r\n      if (effect.scheduler) {\r\n        effect.scheduler()\r\n      } else {\r\n        effect.run()\r\n      }\r\n    }\r\n  }\r\n}\r\n","import {\r\n  reactive,\r\n  readonly,\r\n  toRaw,\r\n  ReactiveFlags,\r\n  Target,\r\n  readonlyMap,\r\n  reactiveMap,\r\n  shallowReactiveMap,\r\n  shallowReadonlyMap\r\n} from './reactive'\r\nimport { TrackOpTypes, TriggerOpTypes } from './operations'\r\nimport {\r\n  track,\r\n  trigger,\r\n  ITERATE_KEY,\r\n  pauseTracking,\r\n  resetTracking\r\n} from './effect'\r\nimport {\r\n  isObject,\r\n  hasOwn,\r\n  isSymbol,\r\n  hasChanged,\r\n  isArray,\r\n  isIntegerKey,\r\n  extend,\r\n  makeMap\r\n} from '@vue/shared'\r\nimport { isRef } from './ref'\r\n\r\nconst isNonTrackableKeys = /*#__PURE__*/ makeMap(`__proto__,__v_isRef,__isVue`)\r\n\r\nconst builtInSymbols = new Set(\r\n  Object.getOwnPropertyNames(Symbol)\r\n    .map(key => (Symbol as any)[key])\r\n    .filter(isSymbol)\r\n)\r\n\r\nconst get = /*#__PURE__*/ createGetter()\r\nconst shallowGet = /*#__PURE__*/ createGetter(false, true)\r\nconst readonlyGet = /*#__PURE__*/ createGetter(true)\r\nconst shallowReadonlyGet = /*#__PURE__*/ createGetter(true, true)\r\n\r\nconst arrayInstrumentations = /*#__PURE__*/ createArrayInstrumentations()\r\n\r\nfunction createArrayInstrumentations() {\r\n  const instrumentations: Record<string, Function> = {}\r\n  // instrument identity-sensitive Array methods to account for possible reactive\r\n  // values\r\n  ;(['includes', 'indexOf', 'lastIndexOf'] as const).forEach(key => {\r\n    instrumentations[key] = function (this: unknown[], ...args: unknown[]) {\r\n      const arr = toRaw(this) as any\r\n      for (let i = 0, l = this.length; i < l; i++) {\r\n        track(arr, TrackOpTypes.GET, i + '')\r\n      }\r\n      // we run the method using the original args first (which may be reactive)\r\n      const res = arr[key](...args)\r\n      if (res === -1 || res === false) {\r\n        // if that didn't work, run it again using raw values.\r\n        return arr[key](...args.map(toRaw))\r\n      } else {\r\n        return res\r\n      }\r\n    }\r\n  })\r\n  // instrument length-altering mutation methods to avoid length being tracked\r\n  // which leads to infinite loops in some cases (#2137)\r\n  ;(['push', 'pop', 'shift', 'unshift', 'splice'] as const).forEach(key => {\r\n    instrumentations[key] = function (this: unknown[], ...args: unknown[]) {\r\n      pauseTracking()\r\n      const res = (toRaw(this) as any)[key].apply(this, args)\r\n      resetTracking()\r\n      return res\r\n    }\r\n  })\r\n  return instrumentations\r\n}\r\n\r\nfunction createGetter(isReadonly = false, shallow = false) {\r\n  return function get(target: Target, key: string | symbol, receiver: object) {\r\n    if (key === ReactiveFlags.IS_REACTIVE) {\r\n      return !isReadonly\r\n    } else if (key === ReactiveFlags.IS_READONLY) {\r\n      return isReadonly\r\n    } else if (\r\n      key === ReactiveFlags.RAW &&\r\n      receiver ===\r\n        (isReadonly\r\n          ? shallow\r\n            ? shallowReadonlyMap\r\n            : readonlyMap\r\n          : shallow\r\n          ? shallowReactiveMap\r\n          : reactiveMap\r\n        ).get(target)\r\n    ) {\r\n      return target\r\n    }\r\n\r\n    const targetIsArray = isArray(target)\r\n\r\n    if (!isReadonly && targetIsArray && hasOwn(arrayInstrumentations, key)) {\r\n      return Reflect.get(arrayInstrumentations, key, receiver)\r\n    }\r\n\r\n    const res = Reflect.get(target, key, receiver)\r\n\r\n    if (isSymbol(key) ? builtInSymbols.has(key) : isNonTrackableKeys(key)) {\r\n      return res\r\n    }\r\n\r\n    if (!isReadonly) {\r\n      track(target, TrackOpTypes.GET, key)\r\n    }\r\n\r\n    if (shallow) {\r\n      return res\r\n    }\r\n\r\n    if (isRef(res)) {\r\n      // ref unwrapping - does not apply for Array + integer key.\r\n      const shouldUnwrap = !targetIsArray || !isIntegerKey(key)\r\n      return shouldUnwrap ? res.value : res\r\n    }\r\n\r\n    if (isObject(res)) {\r\n      // Convert returned value into a proxy as well. we do the isObject check\r\n      // here to avoid invalid value warning. Also need to lazy access readonly\r\n      // and reactive here to avoid circular dependency.\r\n      return isReadonly ? readonly(res) : reactive(res)\r\n    }\r\n\r\n    return res\r\n  }\r\n}\r\n\r\nconst set = /*#__PURE__*/ createSetter()\r\nconst shallowSet = /*#__PURE__*/ createSetter(true)\r\n\r\nfunction createSetter(shallow = false) {\r\n  return function set(\r\n    target: object,\r\n    key: string | symbol,\r\n    value: unknown,\r\n    receiver: object\r\n  ): boolean {\r\n    let oldValue = (target as any)[key]\r\n    if (!shallow) {\r\n      value = toRaw(value)\r\n      oldValue = toRaw(oldValue)\r\n      if (!isArray(target) && isRef(oldValue) && !isRef(value)) {\r\n        oldValue.value = value\r\n        return true\r\n      }\r\n    } else {\r\n      // in shallow mode, objects are set as-is regardless of reactive or not\r\n    }\r\n\r\n    const hadKey =\r\n      isArray(target) && isIntegerKey(key)\r\n        ? Number(key) < target.length\r\n        : hasOwn(target, key)\r\n    const result = Reflect.set(target, key, value, receiver)\r\n    // don't trigger if target is something up in the prototype chain of original\r\n    if (target === toRaw(receiver)) {\r\n      if (!hadKey) {\r\n        trigger(target, TriggerOpTypes.ADD, key, value)\r\n      } else if (hasChanged(value, oldValue)) {\r\n        trigger(target, TriggerOpTypes.SET, key, value, oldValue)\r\n      }\r\n    }\r\n    return result\r\n  }\r\n}\r\n\r\nfunction deleteProperty(target: object, key: string | symbol): boolean {\r\n  const hadKey = hasOwn(target, key)\r\n  const oldValue = (target as any)[key]\r\n  const result = Reflect.deleteProperty(target, key)\r\n  if (result && hadKey) {\r\n    trigger(target, TriggerOpTypes.DELETE, key, undefined, oldValue)\r\n  }\r\n  return result\r\n}\r\n\r\nfunction has(target: object, key: string | symbol): boolean {\r\n  const result = Reflect.has(target, key)\r\n  if (!isSymbol(key) || !builtInSymbols.has(key)) {\r\n    track(target, TrackOpTypes.HAS, key)\r\n  }\r\n  return result\r\n}\r\n\r\nfunction ownKeys(target: object): (string | symbol)[] {\r\n  track(target, TrackOpTypes.ITERATE, isArray(target) ? 'length' : ITERATE_KEY)\r\n  return Reflect.ownKeys(target)\r\n}\r\n\r\nexport const mutableHandlers: ProxyHandler<object> = {\r\n  get,\r\n  set,\r\n  deleteProperty,\r\n  has,\r\n  ownKeys\r\n}\r\n\r\nexport const readonlyHandlers: ProxyHandler<object> = {\r\n  get: readonlyGet,\r\n  set(target, key) {\r\n    if (__DEV__) {\r\n      console.warn(\r\n        `Set operation on key \"${String(key)}\" failed: target is readonly.`,\r\n        target\r\n      )\r\n    }\r\n    return true\r\n  },\r\n  deleteProperty(target, key) {\r\n    if (__DEV__) {\r\n      console.warn(\r\n        `Delete operation on key \"${String(key)}\" failed: target is readonly.`,\r\n        target\r\n      )\r\n    }\r\n    return true\r\n  }\r\n}\r\n\r\nexport const shallowReactiveHandlers = /*#__PURE__*/ extend(\r\n  {},\r\n  mutableHandlers,\r\n  {\r\n    get: shallowGet,\r\n    set: shallowSet\r\n  }\r\n)\r\n\r\n// Props handlers are special in the sense that it should not unwrap top-level\r\n// refs (in order to allow refs to be explicitly passed down), but should\r\n// retain the reactivity of the normal readonly object.\r\nexport const shallowReadonlyHandlers = /*#__PURE__*/ extend(\r\n  {},\r\n  readonlyHandlers,\r\n  {\r\n    get: shallowReadonlyGet\r\n  }\r\n)\r\n","import { toRaw, reactive, readonly, ReactiveFlags } from './reactive'\r\nimport { track, trigger, ITERATE_KEY, MAP_KEY_ITERATE_KEY } from './effect'\r\nimport { TrackOpTypes, TriggerOpTypes } from './operations'\r\nimport {\r\n  isObject,\r\n  capitalize,\r\n  hasOwn,\r\n  hasChanged,\r\n  toRawType,\r\n  isMap\r\n} from '@vue/shared'\r\n\r\nexport type CollectionTypes = IterableCollections | WeakCollections\r\n\r\ntype IterableCollections = Map<any, any> | Set<any>\r\ntype WeakCollections = WeakMap<any, any> | WeakSet<any>\r\ntype MapTypes = Map<any, any> | WeakMap<any, any>\r\ntype SetTypes = Set<any> | WeakSet<any>\r\n\r\nconst toReactive = <T extends unknown>(value: T): T =>\r\n  isObject(value) ? reactive(value) : value\r\n\r\nconst toReadonly = <T extends unknown>(value: T): T =>\r\n  isObject(value) ? readonly(value as Record<any, any>) : value\r\n\r\nconst toShallow = <T extends unknown>(value: T): T => value\r\n\r\nconst getProto = <T extends CollectionTypes>(v: T): any =>\r\n  Reflect.getPrototypeOf(v)\r\n\r\nfunction get(\r\n  target: MapTypes,\r\n  key: unknown,\r\n  isReadonly = false,\r\n  isShallow = false\r\n) {\r\n  // #1772: readonly(reactive(Map)) should return readonly + reactive version\r\n  // of the value\r\n  target = (target as any)[ReactiveFlags.RAW]\r\n  const rawTarget = toRaw(target)\r\n  const rawKey = toRaw(key)\r\n  if (key !== rawKey) {\r\n    !isReadonly && track(rawTarget, TrackOpTypes.GET, key)\r\n  }\r\n  !isReadonly && track(rawTarget, TrackOpTypes.GET, rawKey)\r\n  const { has } = getProto(rawTarget)\r\n  const wrap = isShallow ? toShallow : isReadonly ? toReadonly : toReactive\r\n  if (has.call(rawTarget, key)) {\r\n    return wrap(target.get(key))\r\n  } else if (has.call(rawTarget, rawKey)) {\r\n    return wrap(target.get(rawKey))\r\n  } else if (target !== rawTarget) {\r\n    // #3602 readonly(reactive(Map))\r\n    // ensure that the nested reactive `Map` can do tracking for itself\r\n    target.get(key)\r\n  }\r\n}\r\n\r\nfunction has(this: CollectionTypes, key: unknown, isReadonly = false): boolean {\r\n  const target = (this as any)[ReactiveFlags.RAW]\r\n  const rawTarget = toRaw(target)\r\n  const rawKey = toRaw(key)\r\n  if (key !== rawKey) {\r\n    !isReadonly && track(rawTarget, TrackOpTypes.HAS, key)\r\n  }\r\n  !isReadonly && track(rawTarget, TrackOpTypes.HAS, rawKey)\r\n  return key === rawKey\r\n    ? target.has(key)\r\n    : target.has(key) || target.has(rawKey)\r\n}\r\n\r\nfunction size(target: IterableCollections, isReadonly = false) {\r\n  target = (target as any)[ReactiveFlags.RAW]\r\n  !isReadonly && track(toRaw(target), TrackOpTypes.ITERATE, ITERATE_KEY)\r\n  return Reflect.get(target, 'size', target)\r\n}\r\n\r\nfunction add(this: SetTypes, value: unknown) {\r\n  value = toRaw(value)\r\n  const target = toRaw(this)\r\n  const proto = getProto(target)\r\n  const hadKey = proto.has.call(target, value)\r\n  if (!hadKey) {\r\n    target.add(value)\r\n    trigger(target, TriggerOpTypes.ADD, value, value)\r\n  }\r\n  return this\r\n}\r\n\r\nfunction set(this: MapTypes, key: unknown, value: unknown) {\r\n  value = toRaw(value)\r\n  const target = toRaw(this)\r\n  const { has, get } = getProto(target)\r\n\r\n  let hadKey = has.call(target, key)\r\n  if (!hadKey) {\r\n    key = toRaw(key)\r\n    hadKey = has.call(target, key)\r\n  } else if (__DEV__) {\r\n    checkIdentityKeys(target, has, key)\r\n  }\r\n\r\n  const oldValue = get.call(target, key)\r\n  target.set(key, value)\r\n  if (!hadKey) {\r\n    trigger(target, TriggerOpTypes.ADD, key, value)\r\n  } else if (hasChanged(value, oldValue)) {\r\n    trigger(target, TriggerOpTypes.SET, key, value, oldValue)\r\n  }\r\n  return this\r\n}\r\n\r\nfunction deleteEntry(this: CollectionTypes, key: unknown) {\r\n  const target = toRaw(this)\r\n  const { has, get } = getProto(target)\r\n  let hadKey = has.call(target, key)\r\n  if (!hadKey) {\r\n    key = toRaw(key)\r\n    hadKey = has.call(target, key)\r\n  } else if (__DEV__) {\r\n    checkIdentityKeys(target, has, key)\r\n  }\r\n\r\n  const oldValue = get ? get.call(target, key) : undefined\r\n  // forward the operation before queueing reactions\r\n  const result = target.delete(key)\r\n  if (hadKey) {\r\n    trigger(target, TriggerOpTypes.DELETE, key, undefined, oldValue)\r\n  }\r\n  return result\r\n}\r\n\r\nfunction clear(this: IterableCollections) {\r\n  const target = toRaw(this)\r\n  const hadItems = target.size !== 0\r\n  const oldTarget = __DEV__\r\n    ? isMap(target)\r\n      ? new Map(target)\r\n      : new Set(target)\r\n    : undefined\r\n  // forward the operation before queueing reactions\r\n  const result = target.clear()\r\n  if (hadItems) {\r\n    trigger(target, TriggerOpTypes.CLEAR, undefined, undefined, oldTarget)\r\n  }\r\n  return result\r\n}\r\n\r\nfunction createForEach(isReadonly: boolean, isShallow: boolean) {\r\n  return function forEach(\r\n    this: IterableCollections,\r\n    callback: Function,\r\n    thisArg?: unknown\r\n  ) {\r\n    const observed = this as any\r\n    const target = observed[ReactiveFlags.RAW]\r\n    const rawTarget = toRaw(target)\r\n    const wrap = isShallow ? toShallow : isReadonly ? toReadonly : toReactive\r\n    !isReadonly && track(rawTarget, TrackOpTypes.ITERATE, ITERATE_KEY)\r\n    return target.forEach((value: unknown, key: unknown) => {\r\n      // important: make sure the callback is\r\n      // 1. invoked with the reactive map as `this` and 3rd arg\r\n      // 2. the value received should be a corresponding reactive/readonly.\r\n      return callback.call(thisArg, wrap(value), wrap(key), observed)\r\n    })\r\n  }\r\n}\r\n\r\ninterface Iterable {\r\n  [Symbol.iterator](): Iterator\r\n}\r\n\r\ninterface Iterator {\r\n  next(value?: any): IterationResult\r\n}\r\n\r\ninterface IterationResult {\r\n  value: any\r\n  done: boolean\r\n}\r\n\r\nfunction createIterableMethod(\r\n  method: string | symbol,\r\n  isReadonly: boolean,\r\n  isShallow: boolean\r\n) {\r\n  return function (\r\n    this: IterableCollections,\r\n    ...args: unknown[]\r\n  ): Iterable & Iterator {\r\n    const target = (this as any)[ReactiveFlags.RAW]\r\n    const rawTarget = toRaw(target)\r\n    const targetIsMap = isMap(rawTarget)\r\n    const isPair =\r\n      method === 'entries' || (method === Symbol.iterator && targetIsMap)\r\n    const isKeyOnly = method === 'keys' && targetIsMap\r\n    const innerIterator = target[method](...args)\r\n    const wrap = isShallow ? toShallow : isReadonly ? toReadonly : toReactive\r\n    !isReadonly &&\r\n      track(\r\n        rawTarget,\r\n        TrackOpTypes.ITERATE,\r\n        isKeyOnly ? MAP_KEY_ITERATE_KEY : ITERATE_KEY\r\n      )\r\n    // return a wrapped iterator which returns observed versions of the\r\n    // values emitted from the real iterator\r\n    return {\r\n      // iterator protocol\r\n      next() {\r\n        const { value, done } = innerIterator.next()\r\n        return done\r\n          ? { value, done }\r\n          : {\r\n              value: isPair ? [wrap(value[0]), wrap(value[1])] : wrap(value),\r\n              done\r\n            }\r\n      },\r\n      // iterable protocol\r\n      [Symbol.iterator]() {\r\n        return this\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nfunction createReadonlyMethod(type: TriggerOpTypes): Function {\r\n  return function (this: CollectionTypes, ...args: unknown[]) {\r\n    if (__DEV__) {\r\n      const key = args[0] ? `on key \"${args[0]}\" ` : ``\r\n      console.warn(\r\n        `${capitalize(type)} operation ${key}failed: target is readonly.`,\r\n        toRaw(this)\r\n      )\r\n    }\r\n    return type === TriggerOpTypes.DELETE ? false : this\r\n  }\r\n}\r\n\r\nfunction createInstrumentations() {\r\n  const mutableInstrumentations: Record<string, Function> = {\r\n    get(this: MapTypes, key: unknown) {\r\n      return get(this, key)\r\n    },\r\n    get size() {\r\n      return size(this as unknown as IterableCollections)\r\n    },\r\n    has,\r\n    add,\r\n    set,\r\n    delete: deleteEntry,\r\n    clear,\r\n    forEach: createForEach(false, false)\r\n  }\r\n\r\n  const shallowInstrumentations: Record<string, Function> = {\r\n    get(this: MapTypes, key: unknown) {\r\n      return get(this, key, false, true)\r\n    },\r\n    get size() {\r\n      return size(this as unknown as IterableCollections)\r\n    },\r\n    has,\r\n    add,\r\n    set,\r\n    delete: deleteEntry,\r\n    clear,\r\n    forEach: createForEach(false, true)\r\n  }\r\n\r\n  const readonlyInstrumentations: Record<string, Function> = {\r\n    get(this: MapTypes, key: unknown) {\r\n      return get(this, key, true)\r\n    },\r\n    get size() {\r\n      return size(this as unknown as IterableCollections, true)\r\n    },\r\n    has(this: MapTypes, key: unknown) {\r\n      return has.call(this, key, true)\r\n    },\r\n    add: createReadonlyMethod(TriggerOpTypes.ADD),\r\n    set: createReadonlyMethod(TriggerOpTypes.SET),\r\n    delete: createReadonlyMethod(TriggerOpTypes.DELETE),\r\n    clear: createReadonlyMethod(TriggerOpTypes.CLEAR),\r\n    forEach: createForEach(true, false)\r\n  }\r\n\r\n  const shallowReadonlyInstrumentations: Record<string, Function> = {\r\n    get(this: MapTypes, key: unknown) {\r\n      return get(this, key, true, true)\r\n    },\r\n    get size() {\r\n      return size(this as unknown as IterableCollections, true)\r\n    },\r\n    has(this: MapTypes, key: unknown) {\r\n      return has.call(this, key, true)\r\n    },\r\n    add: createReadonlyMethod(TriggerOpTypes.ADD),\r\n    set: createReadonlyMethod(TriggerOpTypes.SET),\r\n    delete: createReadonlyMethod(TriggerOpTypes.DELETE),\r\n    clear: createReadonlyMethod(TriggerOpTypes.CLEAR),\r\n    forEach: createForEach(true, true)\r\n  }\r\n\r\n  const iteratorMethods = ['keys', 'values', 'entries', Symbol.iterator]\r\n  iteratorMethods.forEach(method => {\r\n    mutableInstrumentations[method as string] = createIterableMethod(\r\n      method,\r\n      false,\r\n      false\r\n    )\r\n    readonlyInstrumentations[method as string] = createIterableMethod(\r\n      method,\r\n      true,\r\n      false\r\n    )\r\n    shallowInstrumentations[method as string] = createIterableMethod(\r\n      method,\r\n      false,\r\n      true\r\n    )\r\n    shallowReadonlyInstrumentations[method as string] = createIterableMethod(\r\n      method,\r\n      true,\r\n      true\r\n    )\r\n  })\r\n\r\n  return [\r\n    mutableInstrumentations,\r\n    readonlyInstrumentations,\r\n    shallowInstrumentations,\r\n    shallowReadonlyInstrumentations\r\n  ]\r\n}\r\n\r\nconst [\r\n  mutableInstrumentations,\r\n  readonlyInstrumentations,\r\n  shallowInstrumentations,\r\n  shallowReadonlyInstrumentations\r\n] = /* #__PURE__*/ createInstrumentations()\r\n\r\nfunction createInstrumentationGetter(isReadonly: boolean, shallow: boolean) {\r\n  const instrumentations = shallow\r\n    ? isReadonly\r\n      ? shallowReadonlyInstrumentations\r\n      : shallowInstrumentations\r\n    : isReadonly\r\n    ? readonlyInstrumentations\r\n    : mutableInstrumentations\r\n\r\n  return (\r\n    target: CollectionTypes,\r\n    key: string | symbol,\r\n    receiver: CollectionTypes\r\n  ) => {\r\n    if (key === ReactiveFlags.IS_REACTIVE) {\r\n      return !isReadonly\r\n    } else if (key === ReactiveFlags.IS_READONLY) {\r\n      return isReadonly\r\n    } else if (key === ReactiveFlags.RAW) {\r\n      return target\r\n    }\r\n\r\n    return Reflect.get(\r\n      hasOwn(instrumentations, key) && key in target\r\n        ? instrumentations\r\n        : target,\r\n      key,\r\n      receiver\r\n    )\r\n  }\r\n}\r\n\r\nexport const mutableCollectionHandlers: ProxyHandler<CollectionTypes> = {\r\n  get: /*#__PURE__*/ createInstrumentationGetter(false, false)\r\n}\r\n\r\nexport const shallowCollectionHandlers: ProxyHandler<CollectionTypes> = {\r\n  get: /*#__PURE__*/ createInstrumentationGetter(false, true)\r\n}\r\n\r\nexport const readonlyCollectionHandlers: ProxyHandler<CollectionTypes> = {\r\n  get: /*#__PURE__*/ createInstrumentationGetter(true, false)\r\n}\r\n\r\nexport const shallowReadonlyCollectionHandlers: ProxyHandler<CollectionTypes> =\r\n  {\r\n    get: /*#__PURE__*/ createInstrumentationGetter(true, true)\r\n  }\r\n\r\nfunction checkIdentityKeys(\r\n  target: CollectionTypes,\r\n  has: (key: unknown) => boolean,\r\n  key: unknown\r\n) {\r\n  const rawKey = toRaw(key)\r\n  if (rawKey !== key && has.call(target, rawKey)) {\r\n    const type = toRawType(target)\r\n    console.warn(\r\n      `Reactive ${type} contains both the raw and reactive ` +\r\n        `versions of the same object${type === `Map` ? ` as keys` : ``}, ` +\r\n        `which can lead to inconsistencies. ` +\r\n        `Avoid differentiating between the raw and reactive versions ` +\r\n        `of an object and only use the reactive version if possible.`\r\n    )\r\n  }\r\n}\r\n","import { isObject, toRawType, def } from '@vue/shared'\r\nimport {\r\n  mutableHandlers,\r\n  readonlyHandlers,\r\n  shallowReactiveHandlers,\r\n  shallowReadonlyHandlers\r\n} from './baseHandlers'\r\nimport {\r\n  mutableCollectionHandlers,\r\n  readonlyCollectionHandlers,\r\n  shallowCollectionHandlers,\r\n  shallowReadonlyCollectionHandlers\r\n} from './collectionHandlers'\r\nimport { UnwrapRefSimple, Ref } from './ref'\r\n\r\nexport const enum ReactiveFlags {\r\n  SKIP = '__v_skip',\r\n  IS_REACTIVE = '__v_isReactive',\r\n  IS_READONLY = '__v_isReadonly',\r\n  RAW = '__v_raw'\r\n}\r\n\r\nexport interface Target {\r\n  [ReactiveFlags.SKIP]?: boolean\r\n  [ReactiveFlags.IS_REACTIVE]?: boolean\r\n  [ReactiveFlags.IS_READONLY]?: boolean\r\n  [ReactiveFlags.RAW]?: any\r\n}\r\n\r\nexport const reactiveMap = new WeakMap<Target, any>()\r\nexport const shallowReactiveMap = new WeakMap<Target, any>()\r\nexport const readonlyMap = new WeakMap<Target, any>()\r\nexport const shallowReadonlyMap = new WeakMap<Target, any>()\r\n\r\nconst enum TargetType {\r\n  INVALID = 0,\r\n  COMMON = 1,\r\n  COLLECTION = 2\r\n}\r\n\r\nfunction targetTypeMap(rawType: string) {\r\n  switch (rawType) {\r\n    case 'Object':\r\n    case 'Array':\r\n      return TargetType.COMMON\r\n    case 'Map':\r\n    case 'Set':\r\n    case 'WeakMap':\r\n    case 'WeakSet':\r\n      return TargetType.COLLECTION\r\n    default:\r\n      return TargetType.INVALID\r\n  }\r\n}\r\n\r\nfunction getTargetType(value: Target) {\r\n  return value[ReactiveFlags.SKIP] || !Object.isExtensible(value)\r\n    ? TargetType.INVALID\r\n    : targetTypeMap(toRawType(value))\r\n}\r\n\r\n// only unwrap nested ref\r\nexport type UnwrapNestedRefs<T> = T extends Ref ? T : UnwrapRefSimple<T>\r\n\r\n/**\r\n * Creates a reactive copy of the original object.\r\n *\r\n * The reactive conversion is \"deep\"—it affects all nested properties. In the\r\n * ES2015 Proxy based implementation, the returned proxy is **not** equal to the\r\n * original object. It is recommended to work exclusively with the reactive\r\n * proxy and avoid relying on the original object.\r\n *\r\n * A reactive object also automatically unwraps refs contained in it, so you\r\n * don't need to use `.value` when accessing and mutating their value:\r\n *\r\n * ```js\r\n * const count = ref(0)\r\n * const obj = reactive({\r\n *   count\r\n * })\r\n *\r\n * obj.count++\r\n * obj.count // -> 1\r\n * count.value // -> 1\r\n * ```\r\n */\r\nexport function reactive<T extends object>(target: T): UnwrapNestedRefs<T>\r\nexport function reactive(target: object) {\r\n  // if trying to observe a readonly proxy, return the readonly version.\r\n  if (target && (target as Target)[ReactiveFlags.IS_READONLY]) {\r\n    return target\r\n  }\r\n  return createReactiveObject(\r\n    target,\r\n    false,\r\n    mutableHandlers,\r\n    mutableCollectionHandlers,\r\n    reactiveMap\r\n  )\r\n}\r\n\r\n/**\r\n * Return a shallowly-reactive copy of the original object, where only the root\r\n * level properties are reactive. It also does not auto-unwrap refs (even at the\r\n * root level).\r\n */\r\nexport function shallowReactive<T extends object>(target: T): T {\r\n  return createReactiveObject(\r\n    target,\r\n    false,\r\n    shallowReactiveHandlers,\r\n    shallowCollectionHandlers,\r\n    shallowReactiveMap\r\n  )\r\n}\r\n\r\ntype Primitive = string | number | boolean | bigint | symbol | undefined | null\r\ntype Builtin = Primitive | Function | Date | Error | RegExp\r\nexport type DeepReadonly<T> = T extends Builtin\r\n  ? T\r\n  : T extends Map<infer K, infer V>\r\n  ? ReadonlyMap<DeepReadonly<K>, DeepReadonly<V>>\r\n  : T extends ReadonlyMap<infer K, infer V>\r\n  ? ReadonlyMap<DeepReadonly<K>, DeepReadonly<V>>\r\n  : T extends WeakMap<infer K, infer V>\r\n  ? WeakMap<DeepReadonly<K>, DeepReadonly<V>>\r\n  : T extends Set<infer U>\r\n  ? ReadonlySet<DeepReadonly<U>>\r\n  : T extends ReadonlySet<infer U>\r\n  ? ReadonlySet<DeepReadonly<U>>\r\n  : T extends WeakSet<infer U>\r\n  ? WeakSet<DeepReadonly<U>>\r\n  : T extends Promise<infer U>\r\n  ? Promise<DeepReadonly<U>>\r\n  : T extends {}\r\n  ? { readonly [K in keyof T]: DeepReadonly<T[K]> }\r\n  : Readonly<T>\r\n\r\n/**\r\n * Creates a readonly copy of the original object. Note the returned copy is not\r\n * made reactive, but `readonly` can be called on an already reactive object.\r\n */\r\nexport function readonly<T extends object>(\r\n  target: T\r\n): DeepReadonly<UnwrapNestedRefs<T>> {\r\n  return createReactiveObject(\r\n    target,\r\n    true,\r\n    readonlyHandlers,\r\n    readonlyCollectionHandlers,\r\n    readonlyMap\r\n  )\r\n}\r\n\r\n/**\r\n * Returns a reactive-copy of the original object, where only the root level\r\n * properties are readonly, and does NOT unwrap refs nor recursively convert\r\n * returned properties.\r\n * This is used for creating the props proxy object for stateful components.\r\n */\r\nexport function shallowReadonly<T extends object>(\r\n  target: T\r\n): Readonly<{ [K in keyof T]: UnwrapNestedRefs<T[K]> }> {\r\n  return createReactiveObject(\r\n    target,\r\n    true,\r\n    shallowReadonlyHandlers,\r\n    shallowReadonlyCollectionHandlers,\r\n    shallowReadonlyMap\r\n  )\r\n}\r\n\r\nfunction createReactiveObject(\r\n  target: Target,\r\n  isReadonly: boolean,\r\n  baseHandlers: ProxyHandler<any>,\r\n  collectionHandlers: ProxyHandler<any>,\r\n  proxyMap: WeakMap<Target, any>\r\n) {\r\n  if (!isObject(target)) {\r\n    if (__DEV__) {\r\n      console.warn(`value cannot be made reactive: ${String(target)}`)\r\n    }\r\n    return target\r\n  }\r\n  // target is already a Proxy, return it.\r\n  // exception: calling readonly() on a reactive object\r\n  if (\r\n    target[ReactiveFlags.RAW] &&\r\n    !(isReadonly && target[ReactiveFlags.IS_REACTIVE])\r\n  ) {\r\n    return target\r\n  }\r\n  // target already has corresponding Proxy\r\n  const existingProxy = proxyMap.get(target)\r\n  if (existingProxy) {\r\n    return existingProxy\r\n  }\r\n  // only a whitelist of value types can be observed.\r\n  const targetType = getTargetType(target)\r\n  if (targetType === TargetType.INVALID) {\r\n    return target\r\n  }\r\n  const proxy = new Proxy(\r\n    target,\r\n    targetType === TargetType.COLLECTION ? collectionHandlers : baseHandlers\r\n  )\r\n  proxyMap.set(target, proxy)\r\n  return proxy\r\n}\r\n\r\nexport function isReactive(value: unknown): boolean {\r\n  if (isReadonly(value)) {\r\n    return isReactive((value as Target)[ReactiveFlags.RAW])\r\n  }\r\n  return !!(value && (value as Target)[ReactiveFlags.IS_REACTIVE])\r\n}\r\n\r\nexport function isReadonly(value: unknown): boolean {\r\n  return !!(value && (value as Target)[ReactiveFlags.IS_READONLY])\r\n}\r\n\r\nexport function isProxy(value: unknown): boolean {\r\n  return isReactive(value) || isReadonly(value)\r\n}\r\n\r\nexport function toRaw<T>(observed: T): T {\r\n  const raw = observed && (observed as Target)[ReactiveFlags.RAW]\r\n  return raw ? toRaw(raw) : observed\r\n}\r\n\r\nexport function markRaw<T extends object>(value: T): T {\r\n  def(value, ReactiveFlags.SKIP, true)\r\n  return value\r\n}\r\n","import { isTracking, trackEffects, triggerEffects } from './effect'\r\nimport { TrackOpTypes, TriggerOpTypes } from './operations'\r\nimport { isArray, isObject, hasChanged } from '@vue/shared'\r\nimport { reactive, isProxy, toRaw, isReactive } from './reactive'\r\nimport { CollectionTypes } from './collectionHandlers'\r\nimport { createDep, Dep } from './dep'\r\n\r\nexport declare const RefSymbol: unique symbol\r\n\r\nexport interface Ref<T = any> {\r\n  value: T\r\n  /**\r\n   * Type differentiator only.\r\n   * We need this to be in public d.ts but don't want it to show up in IDE\r\n   * autocomplete, so we use a private Symbol instead.\r\n   */\r\n  [RefSymbol]: true\r\n  /**\r\n   * @internal\r\n   */\r\n  _shallow?: boolean\r\n}\r\n\r\ntype RefBase<T> = {\r\n  dep?: Dep\r\n  value: T\r\n}\r\n\r\nexport function trackRefValue(ref: RefBase<any>) {\r\n  if (isTracking()) {\r\n    ref = toRaw(ref)\r\n    if (!ref.dep) {\r\n      ref.dep = createDep()\r\n    }\r\n    if (__DEV__) {\r\n      trackEffects(ref.dep, {\r\n        target: ref,\r\n        type: TrackOpTypes.GET,\r\n        key: 'value'\r\n      })\r\n    } else {\r\n      trackEffects(ref.dep)\r\n    }\r\n  }\r\n}\r\n\r\nexport function triggerRefValue(ref: RefBase<any>, newVal?: any) {\r\n  ref = toRaw(ref)\r\n  if (ref.dep) {\r\n    if (__DEV__) {\r\n      triggerEffects(ref.dep, {\r\n        target: ref,\r\n        type: TriggerOpTypes.SET,\r\n        key: 'value',\r\n        newValue: newVal\r\n      })\r\n    } else {\r\n      triggerEffects(ref.dep)\r\n    }\r\n  }\r\n}\r\n\r\nexport type ToRef<T> = [T] extends [Ref] ? T : Ref<UnwrapRef<T>>\r\nexport type ToRefs<T = any> = {\r\n  // #2687: somehow using ToRef<T[K]> here turns the resulting type into\r\n  // a union of multiple Ref<*> types instead of a single Ref<* | *> type.\r\n  [K in keyof T]: T[K] extends Ref ? T[K] : Ref<UnwrapRef<T[K]>>\r\n}\r\n\r\nconst convert = <T extends unknown>(val: T): T =>\r\n  isObject(val) ? reactive(val) : val\r\n\r\nexport function isRef<T>(r: Ref<T> | unknown): r is Ref<T>\r\nexport function isRef(r: any): r is Ref {\r\n  return Boolean(r && r.__v_isRef === true)\r\n}\r\n\r\nexport function ref<T extends object>(value: T): ToRef<T>\r\nexport function ref<T>(value: T): Ref<UnwrapRef<T>>\r\nexport function ref<T = any>(): Ref<T | undefined>\r\nexport function ref(value?: unknown) {\r\n  return createRef(value)\r\n}\r\n\r\nexport function shallowRef<T extends object>(\r\n  value: T\r\n): T extends Ref ? T : Ref<T>\r\nexport function shallowRef<T>(value: T): Ref<T>\r\nexport function shallowRef<T = any>(): Ref<T | undefined>\r\nexport function shallowRef(value?: unknown) {\r\n  return createRef(value, true)\r\n}\r\n\r\nclass RefImpl<T> {\r\n  private _value: T\r\n  private _rawValue: T\r\n\r\n  public dep?: Dep = undefined\r\n  public readonly __v_isRef = true\r\n\r\n  constructor(value: T, public readonly _shallow = false) {\r\n    this._rawValue = _shallow ? value : toRaw(value)\r\n    this._value = _shallow ? value : convert(value)\r\n  }\r\n\r\n  get value() {\r\n    trackRefValue(this)\r\n    return this._value\r\n  }\r\n\r\n  set value(newVal) {\r\n    newVal = this._shallow ? newVal : toRaw(newVal)\r\n    if (hasChanged(newVal, this._rawValue)) {\r\n      this._rawValue = newVal\r\n      this._value = this._shallow ? newVal : convert(newVal)\r\n      triggerRefValue(this, newVal)\r\n    }\r\n  }\r\n}\r\n\r\nfunction createRef(rawValue: unknown, shallow = false) {\r\n  if (isRef(rawValue)) {\r\n    return rawValue\r\n  }\r\n  return new RefImpl(rawValue, shallow)\r\n}\r\n\r\nexport function triggerRef(ref: Ref) {\r\n  triggerRefValue(ref, __DEV__ ? ref.value : void 0)\r\n}\r\n\r\nexport function unref<T>(ref: T | Ref<T>): T {\r\n  return isRef(ref) ? (ref.value as any) : ref\r\n}\r\n\r\nconst shallowUnwrapHandlers: ProxyHandler<any> = {\r\n  get: (target, key, receiver) => unref(Reflect.get(target, key, receiver)),\r\n  set: (target, key, value, receiver) => {\r\n    const oldValue = target[key]\r\n    if (isRef(oldValue) && !isRef(value)) {\r\n      oldValue.value = value\r\n      return true\r\n    } else {\r\n      return Reflect.set(target, key, value, receiver)\r\n    }\r\n  }\r\n}\r\n\r\nexport function proxyRefs<T extends object>(\r\n  objectWithRefs: T\r\n): ShallowUnwrapRef<T> {\r\n  return isReactive(objectWithRefs)\r\n    ? objectWithRefs\r\n    : new Proxy(objectWithRefs, shallowUnwrapHandlers)\r\n}\r\n\r\nexport type CustomRefFactory<T> = (\r\n  track: () => void,\r\n  trigger: () => void\r\n) => {\r\n  get: () => T\r\n  set: (value: T) => void\r\n}\r\n\r\nclass CustomRefImpl<T> {\r\n  public dep?: Dep = undefined\r\n\r\n  private readonly _get: ReturnType<CustomRefFactory<T>>['get']\r\n  private readonly _set: ReturnType<CustomRefFactory<T>>['set']\r\n\r\n  public readonly __v_isRef = true\r\n\r\n  constructor(factory: CustomRefFactory<T>) {\r\n    const { get, set } = factory(\r\n      () => trackRefValue(this),\r\n      () => triggerRefValue(this)\r\n    )\r\n    this._get = get\r\n    this._set = set\r\n  }\r\n\r\n  get value() {\r\n    return this._get()\r\n  }\r\n\r\n  set value(newVal) {\r\n    this._set(newVal)\r\n  }\r\n}\r\n\r\nexport function customRef<T>(factory: CustomRefFactory<T>): Ref<T> {\r\n  return new CustomRefImpl(factory) as any\r\n}\r\n\r\nexport function toRefs<T extends object>(object: T): ToRefs<T> {\r\n  if (__DEV__ && !isProxy(object)) {\r\n    console.warn(`toRefs() expects a reactive object but received a plain one.`)\r\n  }\r\n  const ret: any = isArray(object) ? new Array(object.length) : {}\r\n  for (const key in object) {\r\n    ret[key] = toRef(object, key)\r\n  }\r\n  return ret\r\n}\r\n\r\nclass ObjectRefImpl<T extends object, K extends keyof T> {\r\n  public readonly __v_isRef = true\r\n\r\n  constructor(private readonly _object: T, private readonly _key: K) {}\r\n\r\n  get value() {\r\n    return this._object[this._key]\r\n  }\r\n\r\n  set value(newVal) {\r\n    this._object[this._key] = newVal\r\n  }\r\n}\r\n\r\nexport function toRef<T extends object, K extends keyof T>(\r\n  object: T,\r\n  key: K\r\n): ToRef<T[K]> {\r\n  return isRef(object[key])\r\n    ? object[key]\r\n    : (new ObjectRefImpl(object, key) as any)\r\n}\r\n\r\n// corner case when use narrows type\r\n// Ex. type RelativePath = string & { __brand: unknown }\r\n// RelativePath extends object -> true\r\ntype BaseTypes = string | number | boolean\r\n\r\n/**\r\n * This is a special exported interface for other packages to declare\r\n * additional types that should bail out for ref unwrapping. For example\r\n * \\@vue/runtime-dom can declare it like so in its d.ts:\r\n *\r\n * ``` ts\r\n * declare module '@vue/reactivity' {\r\n *   export interface RefUnwrapBailTypes {\r\n *     runtimeDOMBailTypes: Node | Window\r\n *   }\r\n * }\r\n * ```\r\n *\r\n * Note that api-extractor somehow refuses to include `declare module`\r\n * augmentations in its generated d.ts, so we have to manually append them\r\n * to the final generated d.ts in our build process.\r\n */\r\nexport interface RefUnwrapBailTypes {}\r\n\r\nexport type ShallowUnwrapRef<T> = {\r\n  [K in keyof T]: T[K] extends Ref<infer V>\r\n    ? V\r\n    : T[K] extends Ref<infer V> | undefined // if `V` is `unknown` that means it does not extend `Ref` and is undefined\r\n    ? unknown extends V\r\n      ? undefined\r\n      : V | undefined\r\n    : T[K]\r\n}\r\n\r\nexport type UnwrapRef<T> = T extends Ref<infer V>\r\n  ? UnwrapRefSimple<V>\r\n  : UnwrapRefSimple<T>\r\n\r\nexport type UnwrapRefSimple<T> = T extends\r\n  | Function\r\n  | CollectionTypes\r\n  | BaseTypes\r\n  | Ref\r\n  | RefUnwrapBailTypes[keyof RefUnwrapBailTypes]\r\n  ? T\r\n  : T extends Array<any>\r\n  ? { [K in keyof T]: UnwrapRefSimple<T[K]> }\r\n  : T extends object\r\n  ? {\r\n      [P in keyof T]: P extends symbol ? T[P] : UnwrapRef<T[P]>\r\n    }\r\n  : T\r\n","import { DebuggerOptions, ReactiveEffect } from './effect'\r\nimport { Ref, trackRefValue, triggerRefValue } from './ref'\r\nimport { isFunction, NOOP } from '@vue/shared'\r\nimport { ReactiveFlags, toRaw } from './reactive'\r\nimport { Dep } from './dep'\r\n\r\nexport interface ComputedRef<T = any> extends WritableComputedRef<T> {\r\n  readonly value: T\r\n}\r\n\r\nexport interface WritableComputedRef<T> extends Ref<T> {\r\n  readonly effect: ReactiveEffect<T>\r\n}\r\n\r\nexport type ComputedGetter<T> = (...args: any[]) => T\r\nexport type ComputedSetter<T> = (v: T) => void\r\n\r\nexport interface WritableComputedOptions<T> {\r\n  get: ComputedGetter<T>\r\n  set: ComputedSetter<T>\r\n}\r\n\r\nclass ComputedRefImpl<T> {\r\n  public dep?: Dep = undefined\r\n\r\n  private _value!: T\r\n  private _dirty = true\r\n  public readonly effect: ReactiveEffect<T>\r\n\r\n  public readonly __v_isRef = true\r\n  public readonly [ReactiveFlags.IS_READONLY]: boolean\r\n\r\n  constructor(\r\n    getter: ComputedGetter<T>,\r\n    private readonly _setter: ComputedSetter<T>,\r\n    isReadonly: boolean\r\n  ) {\r\n    this.effect = new ReactiveEffect(getter, () => {\r\n      if (!this._dirty) {\r\n        this._dirty = true\r\n        triggerRefValue(this)\r\n      }\r\n    })\r\n    this[ReactiveFlags.IS_READONLY] = isReadonly\r\n  }\r\n\r\n  get value() {\r\n    // the computed ref may get wrapped by other proxies e.g. readonly() #3376\r\n    const self = toRaw(this)\r\n    trackRefValue(self)\r\n    if (self._dirty) {\r\n      self._dirty = false\r\n      self._value = self.effect.run()!\r\n    }\r\n    return self._value\r\n  }\r\n\r\n  set value(newValue: T) {\r\n    this._setter(newValue)\r\n  }\r\n}\r\n\r\nexport function computed<T>(\r\n  getter: ComputedGetter<T>,\r\n  debugOptions?: DebuggerOptions\r\n): ComputedRef<T>\r\nexport function computed<T>(\r\n  options: WritableComputedOptions<T>,\r\n  debugOptions?: DebuggerOptions\r\n): WritableComputedRef<T>\r\nexport function computed<T>(\r\n  getterOrOptions: ComputedGetter<T> | WritableComputedOptions<T>,\r\n  debugOptions?: DebuggerOptions\r\n) {\r\n  let getter: ComputedGetter<T>\r\n  let setter: ComputedSetter<T>\r\n\r\n  if (isFunction(getterOrOptions)) {\r\n    getter = getterOrOptions\r\n    setter = __DEV__\r\n      ? () => {\r\n          console.warn('Write operation failed: computed value is readonly')\r\n        }\r\n      : NOOP\r\n  } else {\r\n    getter = getterOrOptions.get\r\n    setter = getterOrOptions.set\r\n  }\r\n\r\n  const cRef = new ComputedRefImpl(\r\n    getter,\r\n    setter,\r\n    isFunction(getterOrOptions) || !getterOrOptions.set\r\n  )\r\n\r\n  if (__DEV__ && debugOptions) {\r\n    cRef.effect.onTrack = debugOptions.onTrack\r\n    cRef.effect.onTrigger = debugOptions.onTrigger\r\n  }\r\n\r\n  return cRef as any\r\n}\r\n","import {\r\n  camelize,\r\n  EMPTY_OBJ,\r\n  toHandlerKey,\r\n  extend,\r\n  hasOwn,\r\n  hyphenate,\r\n  isArray,\r\n  isFunction,\r\n  isOn,\r\n  toNumber\r\n} from '@vue/shared'\r\nimport {\r\n  ComponentInternalInstance,\r\n  ComponentOptions,\r\n  ConcreteComponent,\r\n  formatComponentName\r\n} from './component'\r\nimport { callWithAsyncErrorHandling, ErrorCodes } from './errorHandling'\r\nimport { warn } from './warning'\r\nimport { UnionToIntersection } from './helpers/typeUtils'\r\nimport { devtoolsComponentEmit } from './devtools'\r\nimport { AppContext } from './apiCreateApp'\r\nimport { emit as compatInstanceEmit } from './compat/instanceEventEmitter'\r\nimport {\r\n  compatModelEventPrefix,\r\n  compatModelEmit\r\n} from './compat/componentVModel'\r\n\r\nexport type ObjectEmitsOptions = Record<\r\n  string,\r\n  ((...args: any[]) => any) | null\r\n>\r\n\r\nexport type EmitsOptions = ObjectEmitsOptions | string[]\r\n\r\nexport type EmitsToProps<T extends EmitsOptions> = T extends string[]\r\n  ? {\r\n      [K in string & `on${Capitalize<T[number]>}`]?: (...args: any[]) => any\r\n    }\r\n  : T extends ObjectEmitsOptions\r\n  ? {\r\n      [K in string &\r\n        `on${Capitalize<string & keyof T>}`]?: K extends `on${infer C}`\r\n        ? T[Uncapitalize<C>] extends null\r\n          ? (...args: any[]) => any\r\n          : T[Uncapitalize<C>]\r\n        : never\r\n    }\r\n  : {}\r\n\r\nexport type EmitFn<\r\n  Options = ObjectEmitsOptions,\r\n  Event extends keyof Options = keyof Options\r\n> = Options extends Array<infer V>\r\n  ? (event: V, ...args: any[]) => void\r\n  : {} extends Options // if the emit is empty object (usually the default value for emit) should be converted to function\r\n  ? (event: string, ...args: any[]) => void\r\n  : UnionToIntersection<\r\n      {\r\n        [key in Event]: Options[key] extends (...args: infer Args) => any\r\n          ? (event: key, ...args: Args) => void\r\n          : (event: key, ...args: any[]) => void\r\n      }[Event]\r\n    >\r\n\r\nexport function emit(\r\n  instance: ComponentInternalInstance,\r\n  event: string,\r\n  ...rawArgs: any[]\r\n) {\r\n  const props = instance.vnode.props || EMPTY_OBJ\r\n\r\n  if (__DEV__) {\r\n    const {\r\n      emitsOptions,\r\n      propsOptions: [propsOptions]\r\n    } = instance\r\n    if (emitsOptions) {\r\n      if (\r\n        !(event in emitsOptions) &&\r\n        !(\r\n          __COMPAT__ &&\r\n          (event.startsWith('hook:') ||\r\n            event.startsWith(compatModelEventPrefix))\r\n        )\r\n      ) {\r\n        if (!propsOptions || !(toHandlerKey(event) in propsOptions)) {\r\n          warn(\r\n            `Component emitted event \"${event}\" but it is neither declared in ` +\r\n              `the emits option nor as an \"${toHandlerKey(event)}\" prop.`\r\n          )\r\n        }\r\n      } else {\r\n        const validator = emitsOptions[event]\r\n        if (isFunction(validator)) {\r\n          const isValid = validator(...rawArgs)\r\n          if (!isValid) {\r\n            warn(\r\n              `Invalid event arguments: event validation failed for event \"${event}\".`\r\n            )\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  let args = rawArgs\r\n  const isModelListener = event.startsWith('update:')\r\n\r\n  // for v-model update:xxx events, apply modifiers on args\r\n  const modelArg = isModelListener && event.slice(7)\r\n  if (modelArg && modelArg in props) {\r\n    const modifiersKey = `${\r\n      modelArg === 'modelValue' ? 'model' : modelArg\r\n    }Modifiers`\r\n    const { number, trim } = props[modifiersKey] || EMPTY_OBJ\r\n    if (trim) {\r\n      args = rawArgs.map(a => a.trim())\r\n    } else if (number) {\r\n      args = rawArgs.map(toNumber)\r\n    }\r\n  }\r\n\r\n  if (__DEV__ || __FEATURE_PROD_DEVTOOLS__) {\r\n    devtoolsComponentEmit(instance, event, args)\r\n  }\r\n\r\n  if (__DEV__) {\r\n    const lowerCaseEvent = event.toLowerCase()\r\n    if (lowerCaseEvent !== event && props[toHandlerKey(lowerCaseEvent)]) {\r\n      warn(\r\n        `Event \"${lowerCaseEvent}\" is emitted in component ` +\r\n          `${formatComponentName(\r\n            instance,\r\n            instance.type\r\n          )} but the handler is registered for \"${event}\". ` +\r\n          `Note that HTML attributes are case-insensitive and you cannot use ` +\r\n          `v-on to listen to camelCase events when using in-DOM templates. ` +\r\n          `You should probably use \"${hyphenate(event)}\" instead of \"${event}\".`\r\n      )\r\n    }\r\n  }\r\n\r\n  let handlerName\r\n  let handler =\r\n    props[(handlerName = toHandlerKey(event))] ||\r\n    // also try camelCase event handler (#2249)\r\n    props[(handlerName = toHandlerKey(camelize(event)))]\r\n  // for v-model update:xxx events, also trigger kebab-case equivalent\r\n  // for props passed via kebab-case\r\n  if (!handler && isModelListener) {\r\n    handler = props[(handlerName = toHandlerKey(hyphenate(event)))]\r\n  }\r\n\r\n  if (handler) {\r\n    callWithAsyncErrorHandling(\r\n      handler,\r\n      instance,\r\n      ErrorCodes.COMPONENT_EVENT_HANDLER,\r\n      args\r\n    )\r\n  }\r\n\r\n  const onceHandler = props[handlerName + `Once`]\r\n  if (onceHandler) {\r\n    if (!instance.emitted) {\r\n      instance.emitted = {} as Record<any, boolean>\r\n    } else if (instance.emitted[handlerName]) {\r\n      return\r\n    }\r\n    instance.emitted[handlerName] = true\r\n    callWithAsyncErrorHandling(\r\n      onceHandler,\r\n      instance,\r\n      ErrorCodes.COMPONENT_EVENT_HANDLER,\r\n      args\r\n    )\r\n  }\r\n\r\n  if (__COMPAT__) {\r\n    compatModelEmit(instance, event, args)\r\n    return compatInstanceEmit(instance, event, args)\r\n  }\r\n}\r\n\r\nexport function normalizeEmitsOptions(\r\n  comp: ConcreteComponent,\r\n  appContext: AppContext,\r\n  asMixin = false\r\n): ObjectEmitsOptions | null {\r\n  const cache = appContext.emitsCache\r\n  const cached = cache.get(comp)\r\n  if (cached !== undefined) {\r\n    return cached\r\n  }\r\n\r\n  const raw = comp.emits\r\n  let normalized: ObjectEmitsOptions = {}\r\n\r\n  // apply mixin/extends props\r\n  let hasExtends = false\r\n  if (__FEATURE_OPTIONS_API__ && !isFunction(comp)) {\r\n    const extendEmits = (raw: ComponentOptions) => {\r\n      const normalizedFromExtend = normalizeEmitsOptions(raw, appContext, true)\r\n      if (normalizedFromExtend) {\r\n        hasExtends = true\r\n        extend(normalized, normalizedFromExtend)\r\n      }\r\n    }\r\n    if (!asMixin && appContext.mixins.length) {\r\n      appContext.mixins.forEach(extendEmits)\r\n    }\r\n    if (comp.extends) {\r\n      extendEmits(comp.extends)\r\n    }\r\n    if (comp.mixins) {\r\n      comp.mixins.forEach(extendEmits)\r\n    }\r\n  }\r\n\r\n  if (!raw && !hasExtends) {\r\n    cache.set(comp, null)\r\n    return null\r\n  }\r\n\r\n  if (isArray(raw)) {\r\n    raw.forEach(key => (normalized[key] = null))\r\n  } else {\r\n    extend(normalized, raw)\r\n  }\r\n\r\n  cache.set(comp, normalized)\r\n  return normalized\r\n}\r\n\r\n// Check if an incoming prop key is a declared emit event listener.\r\n// e.g. With `emits: { click: null }`, props named `onClick` and `onclick` are\r\n// both considered matched listeners.\r\nexport function isEmitListener(\r\n  options: ObjectEmitsOptions | null,\r\n  key: string\r\n): boolean {\r\n  if (!options || !isOn(key)) {\r\n    return false\r\n  }\r\n\r\n  if (__COMPAT__ && key.startsWith(compatModelEventPrefix)) {\r\n    return true\r\n  }\r\n\r\n  key = key.slice(2).replace(/Once$/, '')\r\n  return (\r\n    hasOwn(options, key[0].toLowerCase() + key.slice(1)) ||\r\n    hasOwn(options, hyphenate(key)) ||\r\n    hasOwn(options, key)\r\n  )\r\n}\r\n","import { ComponentInternalInstance } from './component'\r\nimport { devtoolsComponentUpdated } from './devtools'\r\nimport { setBlockTracking } from './vnode'\r\n\r\n/**\r\n * mark the current rendering instance for asset resolution (e.g.\r\n * resolveComponent, resolveDirective) during render\r\n */\r\nexport let currentRenderingInstance: ComponentInternalInstance | null = null\r\nexport let currentScopeId: string | null = null\r\n\r\n/**\r\n * Note: rendering calls maybe nested. The function returns the parent rendering\r\n * instance if present, which should be restored after the render is done:\r\n *\r\n * ```js\r\n * const prev = setCurrentRenderingInstance(i)\r\n * // ...render\r\n * setCurrentRenderingInstance(prev)\r\n * ```\r\n */\r\nexport function setCurrentRenderingInstance(\r\n  instance: ComponentInternalInstance | null\r\n): ComponentInternalInstance | null {\r\n  const prev = currentRenderingInstance\r\n  currentRenderingInstance = instance\r\n  currentScopeId = (instance && instance.type.__scopeId) || null\r\n  // v2 pre-compiled components uses _scopeId instead of __scopeId\r\n  if (__COMPAT__ && !currentScopeId) {\r\n    currentScopeId = (instance && (instance.type as any)._scopeId) || null\r\n  }\r\n  return prev\r\n}\r\n\r\n/**\r\n * Set scope id when creating hoisted vnodes.\r\n * @private compiler helper\r\n */\r\nexport function pushScopeId(id: string | null) {\r\n  currentScopeId = id\r\n}\r\n\r\n/**\r\n * Technically we no longer need this after 3.0.8 but we need to keep the same\r\n * API for backwards compat w/ code generated by compilers.\r\n * @private\r\n */\r\nexport function popScopeId() {\r\n  currentScopeId = null\r\n}\r\n\r\n/**\r\n * Only for backwards compat\r\n * @private\r\n */\r\nexport const withScopeId = (_id: string) => withCtx\r\n\r\nexport type ContextualRenderFn = {\r\n  (...args: any[]): any\r\n  _n: boolean /* already normalized */\r\n  _c: boolean /* compiled */\r\n  _d: boolean /* disableTracking */\r\n  _ns: boolean /* nonScoped */\r\n}\r\n\r\n/**\r\n * Wrap a slot function to memoize current rendering instance\r\n * @private compiler helper\r\n */\r\nexport function withCtx(\r\n  fn: Function,\r\n  ctx: ComponentInternalInstance | null = currentRenderingInstance,\r\n  isNonScopedSlot?: boolean // __COMPAT__ only\r\n) {\r\n  if (!ctx) return fn\r\n\r\n  // already normalized\r\n  if ((fn as ContextualRenderFn)._n) {\r\n    return fn\r\n  }\r\n\r\n  const renderFnWithContext: ContextualRenderFn = (...args: any[]) => {\r\n    // If a user calls a compiled slot inside a template expression (#1745), it\r\n    // can mess up block tracking, so by default we disable block tracking and\r\n    // force bail out when invoking a compiled slot (indicated by the ._d flag).\r\n    // This isn't necessary if rendering a compiled `<slot>`, so we flip the\r\n    // ._d flag off when invoking the wrapped fn inside `renderSlot`.\r\n    if (renderFnWithContext._d) {\r\n      setBlockTracking(-1)\r\n    }\r\n    const prevInstance = setCurrentRenderingInstance(ctx)\r\n    const res = fn(...args)\r\n    setCurrentRenderingInstance(prevInstance)\r\n    if (renderFnWithContext._d) {\r\n      setBlockTracking(1)\r\n    }\r\n\r\n    if (__DEV__ || __FEATURE_PROD_DEVTOOLS__) {\r\n      devtoolsComponentUpdated(ctx)\r\n    }\r\n\r\n    return res\r\n  }\r\n\r\n  // mark normalized to avoid duplicated wrapping\r\n  renderFnWithContext._n = true\r\n  // mark this as compiled by default\r\n  // this is used in vnode.ts -> normalizeChildren() to set the slot\r\n  // rendering flag.\r\n  renderFnWithContext._c = true\r\n  // disable block tracking by default\r\n  renderFnWithContext._d = true\r\n  // compat build only flag to distinguish scoped slots from non-scoped ones\r\n  if (__COMPAT__ && isNonScopedSlot) {\r\n    renderFnWithContext._ns = true\r\n  }\r\n  return renderFnWithContext\r\n}\r\n","import {\r\n  ComponentInternalInstance,\r\n  FunctionalComponent,\r\n  Data,\r\n  getComponentName\r\n} from './component'\r\nimport {\r\n  VNode,\r\n  normalizeVNode,\r\n  createVNode,\r\n  Comment,\r\n  cloneVNode,\r\n  VNodeArrayChildren,\r\n  isVNode,\r\n  blockStack\r\n} from './vnode'\r\nimport { handleError, ErrorCodes } from './errorHandling'\r\nimport { PatchFlags, ShapeFlags, isOn, isModelListener } from '@vue/shared'\r\nimport { warn } from './warning'\r\nimport { isHmrUpdating } from './hmr'\r\nimport { NormalizedProps } from './componentProps'\r\nimport { isEmitListener } from './componentEmits'\r\nimport { setCurrentRenderingInstance } from './componentRenderContext'\r\nimport {\r\n  DeprecationTypes,\r\n  isCompatEnabled,\r\n  warnDeprecation\r\n} from './compat/compatConfig'\r\n\r\n/**\r\n * dev only flag to track whether $attrs was used during render.\r\n * If $attrs was used during render then the warning for failed attrs\r\n * fallthrough can be suppressed.\r\n */\r\nlet accessedAttrs: boolean = false\r\n\r\nexport function markAttrsAccessed() {\r\n  accessedAttrs = true\r\n}\r\n\r\nexport function renderComponentRoot(\r\n  instance: ComponentInternalInstance\r\n): VNode {\r\n  const {\r\n    type: Component,\r\n    vnode,\r\n    proxy,\r\n    withProxy,\r\n    props,\r\n    propsOptions: [propsOptions],\r\n    slots,\r\n    attrs,\r\n    emit,\r\n    render,\r\n    renderCache,\r\n    data,\r\n    setupState,\r\n    ctx,\r\n    inheritAttrs\r\n  } = instance\r\n\r\n  let result\r\n  const prev = setCurrentRenderingInstance(instance)\r\n  if (__DEV__) {\r\n    accessedAttrs = false\r\n  }\r\n  try {\r\n    let fallthroughAttrs\r\n    if (vnode.shapeFlag & ShapeFlags.STATEFUL_COMPONENT) {\r\n      // withProxy is a proxy with a different `has` trap only for\r\n      // runtime-compiled render functions using `with` block.\r\n      const proxyToUse = withProxy || proxy\r\n      result = normalizeVNode(\r\n        render!.call(\r\n          proxyToUse,\r\n          proxyToUse!,\r\n          renderCache,\r\n          props,\r\n          setupState,\r\n          data,\r\n          ctx\r\n        )\r\n      )\r\n      fallthroughAttrs = attrs\r\n    } else {\r\n      // functional\r\n      const render = Component as FunctionalComponent\r\n      // in dev, mark attrs accessed if optional props (attrs === props)\r\n      if (__DEV__ && attrs === props) {\r\n        markAttrsAccessed()\r\n      }\r\n      result = normalizeVNode(\r\n        render.length > 1\r\n          ? render(\r\n              props,\r\n              __DEV__\r\n                ? {\r\n                    get attrs() {\r\n                      markAttrsAccessed()\r\n                      return attrs\r\n                    },\r\n                    slots,\r\n                    emit\r\n                  }\r\n                : { attrs, slots, emit }\r\n            )\r\n          : render(props, null as any /* we know it doesn't need it */)\r\n      )\r\n      fallthroughAttrs = Component.props\r\n        ? attrs\r\n        : getFunctionalFallthrough(attrs)\r\n    }\r\n\r\n    // attr merging\r\n    // in dev mode, comments are preserved, and it's possible for a template\r\n    // to have comments along side the root element which makes it a fragment\r\n    let root = result\r\n    let setRoot: ((root: VNode) => void) | undefined = undefined\r\n    if (\r\n      __DEV__ &&\r\n      result.patchFlag > 0 &&\r\n      result.patchFlag & PatchFlags.DEV_ROOT_FRAGMENT\r\n    ) {\r\n      ;[root, setRoot] = getChildRoot(result)\r\n    }\r\n\r\n    if (fallthroughAttrs && inheritAttrs !== false) {\r\n      const keys = Object.keys(fallthroughAttrs)\r\n      const { shapeFlag } = root\r\n      if (keys.length) {\r\n        if (\r\n          shapeFlag & ShapeFlags.ELEMENT ||\r\n          shapeFlag & ShapeFlags.COMPONENT\r\n        ) {\r\n          if (propsOptions && keys.some(isModelListener)) {\r\n            // If a v-model listener (onUpdate:xxx) has a corresponding declared\r\n            // prop, it indicates this component expects to handle v-model and\r\n            // it should not fallthrough.\r\n            // related: #1543, #1643, #1989\r\n            fallthroughAttrs = filterModelListeners(\r\n              fallthroughAttrs,\r\n              propsOptions\r\n            )\r\n          }\r\n          root = cloneVNode(root, fallthroughAttrs)\r\n        } else if (__DEV__ && !accessedAttrs && root.type !== Comment) {\r\n          const allAttrs = Object.keys(attrs)\r\n          const eventAttrs: string[] = []\r\n          const extraAttrs: string[] = []\r\n          for (let i = 0, l = allAttrs.length; i < l; i++) {\r\n            const key = allAttrs[i]\r\n            if (isOn(key)) {\r\n              // ignore v-model handlers when they fail to fallthrough\r\n              if (!isModelListener(key)) {\r\n                // remove `on`, lowercase first letter to reflect event casing\r\n                // accurately\r\n                eventAttrs.push(key[2].toLowerCase() + key.slice(3))\r\n              }\r\n            } else {\r\n              extraAttrs.push(key)\r\n            }\r\n          }\r\n          if (extraAttrs.length) {\r\n            warn(\r\n              `Extraneous non-props attributes (` +\r\n                `${extraAttrs.join(', ')}) ` +\r\n                `were passed to component but could not be automatically inherited ` +\r\n                `because component renders fragment or text root nodes.`\r\n            )\r\n          }\r\n          if (eventAttrs.length) {\r\n            warn(\r\n              `Extraneous non-emits event listeners (` +\r\n                `${eventAttrs.join(', ')}) ` +\r\n                `were passed to component but could not be automatically inherited ` +\r\n                `because component renders fragment or text root nodes. ` +\r\n                `If the listener is intended to be a component custom event listener only, ` +\r\n                `declare it using the \"emits\" option.`\r\n            )\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    if (\r\n      __COMPAT__ &&\r\n      isCompatEnabled(DeprecationTypes.INSTANCE_ATTRS_CLASS_STYLE, instance) &&\r\n      vnode.shapeFlag & ShapeFlags.STATEFUL_COMPONENT &&\r\n      (root.shapeFlag & ShapeFlags.ELEMENT ||\r\n        root.shapeFlag & ShapeFlags.COMPONENT)\r\n    ) {\r\n      const { class: cls, style } = vnode.props || {}\r\n      if (cls || style) {\r\n        if (__DEV__ && inheritAttrs === false) {\r\n          warnDeprecation(\r\n            DeprecationTypes.INSTANCE_ATTRS_CLASS_STYLE,\r\n            instance,\r\n            getComponentName(instance.type)\r\n          )\r\n        }\r\n        root = cloneVNode(root, {\r\n          class: cls,\r\n          style: style\r\n        })\r\n      }\r\n    }\r\n\r\n    // inherit directives\r\n    if (vnode.dirs) {\r\n      if (__DEV__ && !isElementRoot(root)) {\r\n        warn(\r\n          `Runtime directive used on component with non-element root node. ` +\r\n            `The directives will not function as intended.`\r\n        )\r\n      }\r\n      root.dirs = root.dirs ? root.dirs.concat(vnode.dirs) : vnode.dirs\r\n    }\r\n    // inherit transition data\r\n    if (vnode.transition) {\r\n      if (__DEV__ && !isElementRoot(root)) {\r\n        warn(\r\n          `Component inside <Transition> renders non-element root node ` +\r\n            `that cannot be animated.`\r\n        )\r\n      }\r\n      root.transition = vnode.transition\r\n    }\r\n\r\n    if (__DEV__ && setRoot) {\r\n      setRoot(root)\r\n    } else {\r\n      result = root\r\n    }\r\n  } catch (err) {\r\n    blockStack.length = 0\r\n    handleError(err, instance, ErrorCodes.RENDER_FUNCTION)\r\n    result = createVNode(Comment)\r\n  }\r\n\r\n  setCurrentRenderingInstance(prev)\r\n  return result\r\n}\r\n\r\n/**\r\n * dev only\r\n * In dev mode, template root level comments are rendered, which turns the\r\n * template into a fragment root, but we need to locate the single element\r\n * root for attrs and scope id processing.\r\n */\r\nconst getChildRoot = (\r\n  vnode: VNode\r\n): [VNode, ((root: VNode) => void) | undefined] => {\r\n  const rawChildren = vnode.children as VNodeArrayChildren\r\n  const dynamicChildren = vnode.dynamicChildren\r\n  const childRoot = filterSingleRoot(rawChildren)\r\n  if (!childRoot) {\r\n    return [vnode, undefined]\r\n  }\r\n  const index = rawChildren.indexOf(childRoot)\r\n  const dynamicIndex = dynamicChildren ? dynamicChildren.indexOf(childRoot) : -1\r\n  const setRoot = (updatedRoot: VNode) => {\r\n    rawChildren[index] = updatedRoot\r\n    if (dynamicChildren) {\r\n      if (dynamicIndex > -1) {\r\n        dynamicChildren[dynamicIndex] = updatedRoot\r\n      } else if (updatedRoot.patchFlag > 0) {\r\n        vnode.dynamicChildren = [...dynamicChildren, updatedRoot]\r\n      }\r\n    }\r\n  }\r\n  return [normalizeVNode(childRoot), setRoot]\r\n}\r\n\r\nexport function filterSingleRoot(\r\n  children: VNodeArrayChildren\r\n): VNode | undefined {\r\n  let singleRoot\r\n  for (let i = 0; i < children.length; i++) {\r\n    const child = children[i]\r\n    if (isVNode(child)) {\r\n      // ignore user comment\r\n      if (child.type !== Comment || child.children === 'v-if') {\r\n        if (singleRoot) {\r\n          // has more than 1 non-comment child, return now\r\n          return\r\n        } else {\r\n          singleRoot = child\r\n        }\r\n      }\r\n    } else {\r\n      return\r\n    }\r\n  }\r\n  return singleRoot\r\n}\r\n\r\nconst getFunctionalFallthrough = (attrs: Data): Data | undefined => {\r\n  let res: Data | undefined\r\n  for (const key in attrs) {\r\n    if (key === 'class' || key === 'style' || isOn(key)) {\r\n      ;(res || (res = {}))[key] = attrs[key]\r\n    }\r\n  }\r\n  return res\r\n}\r\n\r\nconst filterModelListeners = (attrs: Data, props: NormalizedProps): Data => {\r\n  const res: Data = {}\r\n  for (const key in attrs) {\r\n    if (!isModelListener(key) || !(key.slice(9) in props)) {\r\n      res[key] = attrs[key]\r\n    }\r\n  }\r\n  return res\r\n}\r\n\r\nconst isElementRoot = (vnode: VNode) => {\r\n  return (\r\n    vnode.shapeFlag & ShapeFlags.COMPONENT ||\r\n    vnode.shapeFlag & ShapeFlags.ELEMENT ||\r\n    vnode.type === Comment // potential v-if branch switch\r\n  )\r\n}\r\n\r\nexport function shouldUpdateComponent(\r\n  prevVNode: VNode,\r\n  nextVNode: VNode,\r\n  optimized?: boolean\r\n): boolean {\r\n  const { props: prevProps, children: prevChildren, component } = prevVNode\r\n  const { props: nextProps, children: nextChildren, patchFlag } = nextVNode\r\n  const emits = component!.emitsOptions\r\n\r\n  // Parent component's render function was hot-updated. Since this may have\r\n  // caused the child component's slots content to have changed, we need to\r\n  // force the child to update as well.\r\n  if (__DEV__ && (prevChildren || nextChildren) && isHmrUpdating) {\r\n    return true\r\n  }\r\n\r\n  // force child update for runtime directive or transition on component vnode.\r\n  if (nextVNode.dirs || nextVNode.transition) {\r\n    return true\r\n  }\r\n\r\n  if (optimized && patchFlag >= 0) {\r\n    if (patchFlag & PatchFlags.DYNAMIC_SLOTS) {\r\n      // slot content that references values that might have changed,\r\n      // e.g. in a v-for\r\n      return true\r\n    }\r\n    if (patchFlag & PatchFlags.FULL_PROPS) {\r\n      if (!prevProps) {\r\n        return !!nextProps\r\n      }\r\n      // presence of this flag indicates props are always non-null\r\n      return hasPropsChanged(prevProps, nextProps!, emits)\r\n    } else if (patchFlag & PatchFlags.PROPS) {\r\n      const dynamicProps = nextVNode.dynamicProps!\r\n      for (let i = 0; i < dynamicProps.length; i++) {\r\n        const key = dynamicProps[i]\r\n        if (\r\n          nextProps![key] !== prevProps![key] &&\r\n          !isEmitListener(emits, key)\r\n        ) {\r\n          return true\r\n        }\r\n      }\r\n    }\r\n  } else {\r\n    // this path is only taken by manually written render functions\r\n    // so presence of any children leads to a forced update\r\n    if (prevChildren || nextChildren) {\r\n      if (!nextChildren || !(nextChildren as any).$stable) {\r\n        return true\r\n      }\r\n    }\r\n    if (prevProps === nextProps) {\r\n      return false\r\n    }\r\n    if (!prevProps) {\r\n      return !!nextProps\r\n    }\r\n    if (!nextProps) {\r\n      return true\r\n    }\r\n    return hasPropsChanged(prevProps, nextProps, emits)\r\n  }\r\n\r\n  return false\r\n}\r\n\r\nfunction hasPropsChanged(\r\n  prevProps: Data,\r\n  nextProps: Data,\r\n  emitsOptions: ComponentInternalInstance['emitsOptions']\r\n): boolean {\r\n  const nextKeys = Object.keys(nextProps)\r\n  if (nextKeys.length !== Object.keys(prevProps).length) {\r\n    return true\r\n  }\r\n  for (let i = 0; i < nextKeys.length; i++) {\r\n    const key = nextKeys[i]\r\n    if (\r\n      nextProps[key] !== prevProps[key] &&\r\n      !isEmitListener(emitsOptions, key)\r\n    ) {\r\n      return true\r\n    }\r\n  }\r\n  return false\r\n}\r\n\r\nexport function updateHOCHostEl(\r\n  { vnode, parent }: ComponentInternalInstance,\r\n  el: typeof vnode.el // HostNode\r\n) {\r\n  while (parent && parent.subTree === vnode) {\r\n    ;(vnode = parent.vnode).el = el\r\n    parent = parent.parent\r\n  }\r\n}\r\n","import {\r\n  VNode,\r\n  normalizeVNode,\r\n  VNodeProps,\r\n  isSameVNodeType,\r\n  openBlock,\r\n  closeBlock,\r\n  currentBlock,\r\n  createVNode\r\n} from '../vnode'\r\nimport { isFunction, isArray, ShapeFlags, toNumber } from '@vue/shared'\r\nimport { ComponentInternalInstance, handleSetupResult } from '../component'\r\nimport { Slots } from '../componentSlots'\r\nimport {\r\n  RendererInternals,\r\n  MoveType,\r\n  SetupRenderEffectFn,\r\n  RendererNode,\r\n  RendererElement\r\n} from '../renderer'\r\nimport { queuePostFlushCb } from '../scheduler'\r\nimport { filterSingleRoot, updateHOCHostEl } from '../componentRenderUtils'\r\nimport { pushWarningContext, popWarningContext, warn } from '../warning'\r\nimport { handleError, ErrorCodes } from '../errorHandling'\r\n\r\nexport interface SuspenseProps {\r\n  onResolve?: () => void\r\n  onPending?: () => void\r\n  onFallback?: () => void\r\n  timeout?: string | number\r\n}\r\n\r\nexport const isSuspense = (type: any): boolean => type.__isSuspense\r\n\r\n// Suspense exposes a component-like API, and is treated like a component\r\n// in the compiler, but internally it's a special built-in type that hooks\r\n// directly into the renderer.\r\nexport const SuspenseImpl = {\r\n  name: 'Suspense',\r\n  // In order to make Suspense tree-shakable, we need to avoid importing it\r\n  // directly in the renderer. The renderer checks for the __isSuspense flag\r\n  // on a vnode's type and calls the `process` method, passing in renderer\r\n  // internals.\r\n  __isSuspense: true,\r\n  process(\r\n    n1: VNode | null,\r\n    n2: VNode,\r\n    container: RendererElement,\r\n    anchor: RendererNode | null,\r\n    parentComponent: ComponentInternalInstance | null,\r\n    parentSuspense: SuspenseBoundary | null,\r\n    isSVG: boolean,\r\n    slotScopeIds: string[] | null,\r\n    optimized: boolean,\r\n    // platform-specific impl passed from renderer\r\n    rendererInternals: RendererInternals\r\n  ) {\r\n    if (n1 == null) {\r\n      mountSuspense(\r\n        n2,\r\n        container,\r\n        anchor,\r\n        parentComponent,\r\n        parentSuspense,\r\n        isSVG,\r\n        slotScopeIds,\r\n        optimized,\r\n        rendererInternals\r\n      )\r\n    } else {\r\n      patchSuspense(\r\n        n1,\r\n        n2,\r\n        container,\r\n        anchor,\r\n        parentComponent,\r\n        isSVG,\r\n        slotScopeIds,\r\n        optimized,\r\n        rendererInternals\r\n      )\r\n    }\r\n  },\r\n  hydrate: hydrateSuspense,\r\n  create: createSuspenseBoundary,\r\n  normalize: normalizeSuspenseChildren\r\n}\r\n\r\n// Force-casted public typing for h and TSX props inference\r\nexport const Suspense = (__FEATURE_SUSPENSE__ ? SuspenseImpl : null) as any as {\r\n  __isSuspense: true\r\n  new (): { $props: VNodeProps & SuspenseProps }\r\n}\r\n\r\nfunction triggerEvent(\r\n  vnode: VNode,\r\n  name: 'onResolve' | 'onPending' | 'onFallback'\r\n) {\r\n  const eventListener = vnode.props && vnode.props[name]\r\n  if (isFunction(eventListener)) {\r\n    eventListener()\r\n  }\r\n}\r\n\r\nfunction mountSuspense(\r\n  vnode: VNode,\r\n  container: RendererElement,\r\n  anchor: RendererNode | null,\r\n  parentComponent: ComponentInternalInstance | null,\r\n  parentSuspense: SuspenseBoundary | null,\r\n  isSVG: boolean,\r\n  slotScopeIds: string[] | null,\r\n  optimized: boolean,\r\n  rendererInternals: RendererInternals\r\n) {\r\n  const {\r\n    p: patch,\r\n    o: { createElement }\r\n  } = rendererInternals\r\n  const hiddenContainer = createElement('div')\r\n  const suspense = (vnode.suspense = createSuspenseBoundary(\r\n    vnode,\r\n    parentSuspense,\r\n    parentComponent,\r\n    container,\r\n    hiddenContainer,\r\n    anchor,\r\n    isSVG,\r\n    slotScopeIds,\r\n    optimized,\r\n    rendererInternals\r\n  ))\r\n\r\n  // start mounting the content subtree in an off-dom container\r\n  patch(\r\n    null,\r\n    (suspense.pendingBranch = vnode.ssContent!),\r\n    hiddenContainer,\r\n    null,\r\n    parentComponent,\r\n    suspense,\r\n    isSVG,\r\n    slotScopeIds\r\n  )\r\n  // now check if we have encountered any async deps\r\n  if (suspense.deps > 0) {\r\n    // has async\r\n    // invoke @fallback event\r\n    triggerEvent(vnode, 'onPending')\r\n    triggerEvent(vnode, 'onFallback')\r\n\r\n    // mount the fallback tree\r\n    patch(\r\n      null,\r\n      vnode.ssFallback!,\r\n      container,\r\n      anchor,\r\n      parentComponent,\r\n      null, // fallback tree will not have suspense context\r\n      isSVG,\r\n      slotScopeIds\r\n    )\r\n    setActiveBranch(suspense, vnode.ssFallback!)\r\n  } else {\r\n    // Suspense has no async deps. Just resolve.\r\n    suspense.resolve()\r\n  }\r\n}\r\n\r\nfunction patchSuspense(\r\n  n1: VNode,\r\n  n2: VNode,\r\n  container: RendererElement,\r\n  anchor: RendererNode | null,\r\n  parentComponent: ComponentInternalInstance | null,\r\n  isSVG: boolean,\r\n  slotScopeIds: string[] | null,\r\n  optimized: boolean,\r\n  { p: patch, um: unmount, o: { createElement } }: RendererInternals\r\n) {\r\n  const suspense = (n2.suspense = n1.suspense)!\r\n  suspense.vnode = n2\r\n  n2.el = n1.el\r\n  const newBranch = n2.ssContent!\r\n  const newFallback = n2.ssFallback!\r\n\r\n  const { activeBranch, pendingBranch, isInFallback, isHydrating } = suspense\r\n  if (pendingBranch) {\r\n    suspense.pendingBranch = newBranch\r\n    if (isSameVNodeType(newBranch, pendingBranch)) {\r\n      // same root type but content may have changed.\r\n      patch(\r\n        pendingBranch,\r\n        newBranch,\r\n        suspense.hiddenContainer,\r\n        null,\r\n        parentComponent,\r\n        suspense,\r\n        isSVG,\r\n        slotScopeIds,\r\n        optimized\r\n      )\r\n      if (suspense.deps <= 0) {\r\n        suspense.resolve()\r\n      } else if (isInFallback) {\r\n        patch(\r\n          activeBranch,\r\n          newFallback,\r\n          container,\r\n          anchor,\r\n          parentComponent,\r\n          null, // fallback tree will not have suspense context\r\n          isSVG,\r\n          slotScopeIds,\r\n          optimized\r\n        )\r\n        setActiveBranch(suspense, newFallback)\r\n      }\r\n    } else {\r\n      // toggled before pending tree is resolved\r\n      suspense.pendingId++\r\n      if (isHydrating) {\r\n        // if toggled before hydration is finished, the current DOM tree is\r\n        // no longer valid. set it as the active branch so it will be unmounted\r\n        // when resolved\r\n        suspense.isHydrating = false\r\n        suspense.activeBranch = pendingBranch\r\n      } else {\r\n        unmount(pendingBranch, parentComponent, suspense)\r\n      }\r\n      // increment pending ID. this is used to invalidate async callbacks\r\n      // reset suspense state\r\n      suspense.deps = 0\r\n      // discard effects from pending branch\r\n      suspense.effects.length = 0\r\n      // discard previous container\r\n      suspense.hiddenContainer = createElement('div')\r\n\r\n      if (isInFallback) {\r\n        // already in fallback state\r\n        patch(\r\n          null,\r\n          newBranch,\r\n          suspense.hiddenContainer,\r\n          null,\r\n          parentComponent,\r\n          suspense,\r\n          isSVG,\r\n          slotScopeIds,\r\n          optimized\r\n        )\r\n        if (suspense.deps <= 0) {\r\n          suspense.resolve()\r\n        } else {\r\n          patch(\r\n            activeBranch,\r\n            newFallback,\r\n            container,\r\n            anchor,\r\n            parentComponent,\r\n            null, // fallback tree will not have suspense context\r\n            isSVG,\r\n            slotScopeIds,\r\n            optimized\r\n          )\r\n          setActiveBranch(suspense, newFallback)\r\n        }\r\n      } else if (activeBranch && isSameVNodeType(newBranch, activeBranch)) {\r\n        // toggled \"back\" to current active branch\r\n        patch(\r\n          activeBranch,\r\n          newBranch,\r\n          container,\r\n          anchor,\r\n          parentComponent,\r\n          suspense,\r\n          isSVG,\r\n          slotScopeIds,\r\n          optimized\r\n        )\r\n        // force resolve\r\n        suspense.resolve(true)\r\n      } else {\r\n        // switched to a 3rd branch\r\n        patch(\r\n          null,\r\n          newBranch,\r\n          suspense.hiddenContainer,\r\n          null,\r\n          parentComponent,\r\n          suspense,\r\n          isSVG,\r\n          slotScopeIds,\r\n          optimized\r\n        )\r\n        if (suspense.deps <= 0) {\r\n          suspense.resolve()\r\n        }\r\n      }\r\n    }\r\n  } else {\r\n    if (activeBranch && isSameVNodeType(newBranch, activeBranch)) {\r\n      // root did not change, just normal patch\r\n      patch(\r\n        activeBranch,\r\n        newBranch,\r\n        container,\r\n        anchor,\r\n        parentComponent,\r\n        suspense,\r\n        isSVG,\r\n        slotScopeIds,\r\n        optimized\r\n      )\r\n      setActiveBranch(suspense, newBranch)\r\n    } else {\r\n      // root node toggled\r\n      // invoke @pending event\r\n      triggerEvent(n2, 'onPending')\r\n      // mount pending branch in off-dom container\r\n      suspense.pendingBranch = newBranch\r\n      suspense.pendingId++\r\n      patch(\r\n        null,\r\n        newBranch,\r\n        suspense.hiddenContainer,\r\n        null,\r\n        parentComponent,\r\n        suspense,\r\n        isSVG,\r\n        slotScopeIds,\r\n        optimized\r\n      )\r\n      if (suspense.deps <= 0) {\r\n        // incoming branch has no async deps, resolve now.\r\n        suspense.resolve()\r\n      } else {\r\n        const { timeout, pendingId } = suspense\r\n        if (timeout > 0) {\r\n          setTimeout(() => {\r\n            if (suspense.pendingId === pendingId) {\r\n              suspense.fallback(newFallback)\r\n            }\r\n          }, timeout)\r\n        } else if (timeout === 0) {\r\n          suspense.fallback(newFallback)\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport interface SuspenseBoundary {\r\n  vnode: VNode<RendererNode, RendererElement, SuspenseProps>\r\n  parent: SuspenseBoundary | null\r\n  parentComponent: ComponentInternalInstance | null\r\n  isSVG: boolean\r\n  container: RendererElement\r\n  hiddenContainer: RendererElement\r\n  anchor: RendererNode | null\r\n  activeBranch: VNode | null\r\n  pendingBranch: VNode | null\r\n  deps: number\r\n  pendingId: number\r\n  timeout: number\r\n  isInFallback: boolean\r\n  isHydrating: boolean\r\n  isUnmounted: boolean\r\n  effects: Function[]\r\n  resolve(force?: boolean): void\r\n  fallback(fallbackVNode: VNode): void\r\n  move(\r\n    container: RendererElement,\r\n    anchor: RendererNode | null,\r\n    type: MoveType\r\n  ): void\r\n  next(): RendererNode | null\r\n  registerDep(\r\n    instance: ComponentInternalInstance,\r\n    setupRenderEffect: SetupRenderEffectFn\r\n  ): void\r\n  unmount(parentSuspense: SuspenseBoundary | null, doRemove?: boolean): void\r\n}\r\n\r\nlet hasWarned = false\r\n\r\nfunction createSuspenseBoundary(\r\n  vnode: VNode,\r\n  parent: SuspenseBoundary | null,\r\n  parentComponent: ComponentInternalInstance | null,\r\n  container: RendererElement,\r\n  hiddenContainer: RendererElement,\r\n  anchor: RendererNode | null,\r\n  isSVG: boolean,\r\n  slotScopeIds: string[] | null,\r\n  optimized: boolean,\r\n  rendererInternals: RendererInternals,\r\n  isHydrating = false\r\n): SuspenseBoundary {\r\n  /* istanbul ignore if */\r\n  if (__DEV__ && !__TEST__ && !hasWarned) {\r\n    hasWarned = true\r\n    // @ts-ignore `console.info` cannot be null error\r\n    console[console.info ? 'info' : 'log'](\r\n      `<Suspense> is an experimental feature and its API will likely change.`\r\n    )\r\n  }\r\n\r\n  const {\r\n    p: patch,\r\n    m: move,\r\n    um: unmount,\r\n    n: next,\r\n    o: { parentNode, remove }\r\n  } = rendererInternals\r\n\r\n  const timeout = toNumber(vnode.props && vnode.props.timeout)\r\n  const suspense: SuspenseBoundary = {\r\n    vnode,\r\n    parent,\r\n    parentComponent,\r\n    isSVG,\r\n    container,\r\n    hiddenContainer,\r\n    anchor,\r\n    deps: 0,\r\n    pendingId: 0,\r\n    timeout: typeof timeout === 'number' ? timeout : -1,\r\n    activeBranch: null,\r\n    pendingBranch: null,\r\n    isInFallback: true,\r\n    isHydrating,\r\n    isUnmounted: false,\r\n    effects: [],\r\n\r\n    resolve(resume = false) {\r\n      if (__DEV__) {\r\n        if (!resume && !suspense.pendingBranch) {\r\n          throw new Error(\r\n            `suspense.resolve() is called without a pending branch.`\r\n          )\r\n        }\r\n        if (suspense.isUnmounted) {\r\n          throw new Error(\r\n            `suspense.resolve() is called on an already unmounted suspense boundary.`\r\n          )\r\n        }\r\n      }\r\n      const {\r\n        vnode,\r\n        activeBranch,\r\n        pendingBranch,\r\n        pendingId,\r\n        effects,\r\n        parentComponent,\r\n        container\r\n      } = suspense\r\n\r\n      if (suspense.isHydrating) {\r\n        suspense.isHydrating = false\r\n      } else if (!resume) {\r\n        const delayEnter =\r\n          activeBranch &&\r\n          pendingBranch!.transition &&\r\n          pendingBranch!.transition.mode === 'out-in'\r\n        if (delayEnter) {\r\n          activeBranch!.transition!.afterLeave = () => {\r\n            if (pendingId === suspense.pendingId) {\r\n              move(pendingBranch!, container, anchor, MoveType.ENTER)\r\n            }\r\n          }\r\n        }\r\n        // this is initial anchor on mount\r\n        let { anchor } = suspense\r\n        // unmount current active tree\r\n        if (activeBranch) {\r\n          // if the fallback tree was mounted, it may have been moved\r\n          // as part of a parent suspense. get the latest anchor for insertion\r\n          anchor = next(activeBranch)\r\n          unmount(activeBranch, parentComponent, suspense, true)\r\n        }\r\n        if (!delayEnter) {\r\n          // move content from off-dom container to actual container\r\n          move(pendingBranch!, container, anchor, MoveType.ENTER)\r\n        }\r\n      }\r\n\r\n      setActiveBranch(suspense, pendingBranch!)\r\n      suspense.pendingBranch = null\r\n      suspense.isInFallback = false\r\n\r\n      // flush buffered effects\r\n      // check if there is a pending parent suspense\r\n      let parent = suspense.parent\r\n      let hasUnresolvedAncestor = false\r\n      while (parent) {\r\n        if (parent.pendingBranch) {\r\n          // found a pending parent suspense, merge buffered post jobs\r\n          // into that parent\r\n          parent.effects.push(...effects)\r\n          hasUnresolvedAncestor = true\r\n          break\r\n        }\r\n        parent = parent.parent\r\n      }\r\n      // no pending parent suspense, flush all jobs\r\n      if (!hasUnresolvedAncestor) {\r\n        queuePostFlushCb(effects)\r\n      }\r\n      suspense.effects = []\r\n\r\n      // invoke @resolve event\r\n      triggerEvent(vnode, 'onResolve')\r\n    },\r\n\r\n    fallback(fallbackVNode) {\r\n      if (!suspense.pendingBranch) {\r\n        return\r\n      }\r\n\r\n      const { vnode, activeBranch, parentComponent, container, isSVG } =\r\n        suspense\r\n\r\n      // invoke @fallback event\r\n      triggerEvent(vnode, 'onFallback')\r\n\r\n      const anchor = next(activeBranch!)\r\n      const mountFallback = () => {\r\n        if (!suspense.isInFallback) {\r\n          return\r\n        }\r\n        // mount the fallback tree\r\n        patch(\r\n          null,\r\n          fallbackVNode,\r\n          container,\r\n          anchor,\r\n          parentComponent,\r\n          null, // fallback tree will not have suspense context\r\n          isSVG,\r\n          slotScopeIds,\r\n          optimized\r\n        )\r\n        setActiveBranch(suspense, fallbackVNode)\r\n      }\r\n\r\n      const delayEnter =\r\n        fallbackVNode.transition && fallbackVNode.transition.mode === 'out-in'\r\n      if (delayEnter) {\r\n        activeBranch!.transition!.afterLeave = mountFallback\r\n      }\r\n      suspense.isInFallback = true\r\n\r\n      // unmount current active branch\r\n      unmount(\r\n        activeBranch!,\r\n        parentComponent,\r\n        null, // no suspense so unmount hooks fire now\r\n        true // shouldRemove\r\n      )\r\n\r\n      if (!delayEnter) {\r\n        mountFallback()\r\n      }\r\n    },\r\n\r\n    move(container, anchor, type) {\r\n      suspense.activeBranch &&\r\n        move(suspense.activeBranch, container, anchor, type)\r\n      suspense.container = container\r\n    },\r\n\r\n    next() {\r\n      return suspense.activeBranch && next(suspense.activeBranch)\r\n    },\r\n\r\n    registerDep(instance, setupRenderEffect) {\r\n      const isInPendingSuspense = !!suspense.pendingBranch\r\n      if (isInPendingSuspense) {\r\n        suspense.deps++\r\n      }\r\n      const hydratedEl = instance.vnode.el\r\n      instance\r\n        .asyncDep!.catch(err => {\r\n          handleError(err, instance, ErrorCodes.SETUP_FUNCTION)\r\n        })\r\n        .then(asyncSetupResult => {\r\n          // retry when the setup() promise resolves.\r\n          // component may have been unmounted before resolve.\r\n          if (\r\n            instance.isUnmounted ||\r\n            suspense.isUnmounted ||\r\n            suspense.pendingId !== instance.suspenseId\r\n          ) {\r\n            return\r\n          }\r\n          // retry from this component\r\n          instance.asyncResolved = true\r\n          const { vnode } = instance\r\n          if (__DEV__) {\r\n            pushWarningContext(vnode)\r\n          }\r\n          handleSetupResult(instance, asyncSetupResult, false)\r\n          if (hydratedEl) {\r\n            // vnode may have been replaced if an update happened before the\r\n            // async dep is resolved.\r\n            vnode.el = hydratedEl\r\n          }\r\n          const placeholder = !hydratedEl && instance.subTree.el\r\n          setupRenderEffect(\r\n            instance,\r\n            vnode,\r\n            // component may have been moved before resolve.\r\n            // if this is not a hydration, instance.subTree will be the comment\r\n            // placeholder.\r\n            parentNode(hydratedEl || instance.subTree.el!)!,\r\n            // anchor will not be used if this is hydration, so only need to\r\n            // consider the comment placeholder case.\r\n            hydratedEl ? null : next(instance.subTree),\r\n            suspense,\r\n            isSVG,\r\n            optimized\r\n          )\r\n          if (placeholder) {\r\n            remove(placeholder)\r\n          }\r\n          updateHOCHostEl(instance, vnode.el)\r\n          if (__DEV__) {\r\n            popWarningContext()\r\n          }\r\n          // only decrease deps count if suspense is not already resolved\r\n          if (isInPendingSuspense && --suspense.deps === 0) {\r\n            suspense.resolve()\r\n          }\r\n        })\r\n    },\r\n\r\n    unmount(parentSuspense, doRemove) {\r\n      suspense.isUnmounted = true\r\n      if (suspense.activeBranch) {\r\n        unmount(\r\n          suspense.activeBranch,\r\n          parentComponent,\r\n          parentSuspense,\r\n          doRemove\r\n        )\r\n      }\r\n      if (suspense.pendingBranch) {\r\n        unmount(\r\n          suspense.pendingBranch,\r\n          parentComponent,\r\n          parentSuspense,\r\n          doRemove\r\n        )\r\n      }\r\n    }\r\n  }\r\n\r\n  return suspense\r\n}\r\n\r\nfunction hydrateSuspense(\r\n  node: Node,\r\n  vnode: VNode,\r\n  parentComponent: ComponentInternalInstance | null,\r\n  parentSuspense: SuspenseBoundary | null,\r\n  isSVG: boolean,\r\n  slotScopeIds: string[] | null,\r\n  optimized: boolean,\r\n  rendererInternals: RendererInternals,\r\n  hydrateNode: (\r\n    node: Node,\r\n    vnode: VNode,\r\n    parentComponent: ComponentInternalInstance | null,\r\n    parentSuspense: SuspenseBoundary | null,\r\n    slotScopeIds: string[] | null,\r\n    optimized: boolean\r\n  ) => Node | null\r\n): Node | null {\r\n  /* eslint-disable no-restricted-globals */\r\n  const suspense = (vnode.suspense = createSuspenseBoundary(\r\n    vnode,\r\n    parentSuspense,\r\n    parentComponent,\r\n    node.parentNode!,\r\n    document.createElement('div'),\r\n    null,\r\n    isSVG,\r\n    slotScopeIds,\r\n    optimized,\r\n    rendererInternals,\r\n    true /* hydrating */\r\n  ))\r\n  // there are two possible scenarios for server-rendered suspense:\r\n  // - success: ssr content should be fully resolved\r\n  // - failure: ssr content should be the fallback branch.\r\n  // however, on the client we don't really know if it has failed or not\r\n  // attempt to hydrate the DOM assuming it has succeeded, but we still\r\n  // need to construct a suspense boundary first\r\n  const result = hydrateNode(\r\n    node,\r\n    (suspense.pendingBranch = vnode.ssContent!),\r\n    parentComponent,\r\n    suspense,\r\n    slotScopeIds,\r\n    optimized\r\n  )\r\n  if (suspense.deps === 0) {\r\n    suspense.resolve()\r\n  }\r\n  return result\r\n  /* eslint-enable no-restricted-globals */\r\n}\r\n\r\nfunction normalizeSuspenseChildren(vnode: VNode) {\r\n  const { shapeFlag, children } = vnode\r\n  const isSlotChildren = shapeFlag & ShapeFlags.SLOTS_CHILDREN\r\n  vnode.ssContent = normalizeSuspenseSlot(\r\n    isSlotChildren ? (children as Slots).default : children\r\n  )\r\n  vnode.ssFallback = isSlotChildren\r\n    ? normalizeSuspenseSlot((children as Slots).fallback)\r\n    : createVNode(Comment)\r\n}\r\n\r\nfunction normalizeSuspenseSlot(s: any) {\r\n  let block: VNode[] | null | undefined\r\n  if (isFunction(s)) {\r\n    const isCompiledSlot = s._c\r\n    if (isCompiledSlot) {\r\n      // disableTracking: false\r\n      // allow block tracking for compiled slots\r\n      // (see ./componentRenderContext.ts)\r\n      s._d = false\r\n      openBlock()\r\n    }\r\n    s = s()\r\n    if (isCompiledSlot) {\r\n      s._d = true\r\n      block = currentBlock\r\n      closeBlock()\r\n    }\r\n  }\r\n  if (isArray(s)) {\r\n    const singleChild = filterSingleRoot(s)\r\n    if (__DEV__ && !singleChild) {\r\n      warn(`<Suspense> slots expect a single root node.`)\r\n    }\r\n    s = singleChild\r\n  }\r\n  s = normalizeVNode(s)\r\n  if (block && !s.dynamicChildren) {\r\n    s.dynamicChildren = block.filter(c => c !== s)\r\n  }\r\n  return s\r\n}\r\n\r\nexport function queueEffectWithSuspense(\r\n  fn: Function | Function[],\r\n  suspense: SuspenseBoundary | null\r\n): void {\r\n  if (suspense && suspense.pendingBranch) {\r\n    if (isArray(fn)) {\r\n      suspense.effects.push(...fn)\r\n    } else {\r\n      suspense.effects.push(fn)\r\n    }\r\n  } else {\r\n    queuePostFlushCb(fn)\r\n  }\r\n}\r\n\r\nfunction setActiveBranch(suspense: SuspenseBoundary, branch: VNode) {\r\n  suspense.activeBranch = branch\r\n  const { vnode, parentComponent } = suspense\r\n  const el = (vnode.el = branch.el)\r\n  // in case suspense is the root node of a component,\r\n  // recursively update the HOC el\r\n  if (parentComponent && parentComponent.subTree === vnode) {\r\n    parentComponent.vnode.el = el\r\n    updateHOCHostEl(parentComponent, el)\r\n  }\r\n}\r\n","import { isFunction } from '@vue/shared'\r\nimport { currentInstance } from './component'\r\nimport { currentRenderingInstance } from './componentRenderContext'\r\nimport { warn } from './warning'\r\n\r\nexport interface InjectionKey<T> extends Symbol {}\r\n\r\nexport function provide<T>(key: InjectionKey<T> | string | number, value: T) {\r\n  if (!currentInstance) {\r\n    if (__DEV__) {\r\n      warn(`provide() can only be used inside setup().`)\r\n    }\r\n  } else {\r\n    let provides = currentInstance.provides\r\n    // by default an instance inherits its parent's provides object\r\n    // but when it needs to provide values of its own, it creates its\r\n    // own provides object using parent provides object as prototype.\r\n    // this way in `inject` we can simply look up injections from direct\r\n    // parent and let the prototype chain do the work.\r\n    const parentProvides =\r\n      currentInstance.parent && currentInstance.parent.provides\r\n    if (parentProvides === provides) {\r\n      provides = currentInstance.provides = Object.create(parentProvides)\r\n    }\r\n    // TS doesn't allow symbol as index type\r\n    provides[key as string] = value\r\n  }\r\n}\r\n\r\nexport function inject<T>(key: InjectionKey<T> | string): T | undefined\r\nexport function inject<T>(\r\n  key: InjectionKey<T> | string,\r\n  defaultValue: T,\r\n  treatDefaultAsFactory?: false\r\n): T\r\nexport function inject<T>(\r\n  key: InjectionKey<T> | string,\r\n  defaultValue: T | (() => T),\r\n  treatDefaultAsFactory: true\r\n): T\r\nexport function inject(\r\n  key: InjectionKey<any> | string,\r\n  defaultValue?: unknown,\r\n  treatDefaultAsFactory = false\r\n) {\r\n  // fallback to `currentRenderingInstance` so that this can be called in\r\n  // a functional component\r\n  const instance = currentInstance || currentRenderingInstance\r\n  if (instance) {\r\n    // #2400\r\n    // to support `app.use` plugins,\r\n    // fallback to appContext's `provides` if the intance is at root\r\n    const provides =\r\n      instance.parent == null\r\n        ? instance.vnode.appContext && instance.vnode.appContext.provides\r\n        : instance.parent.provides\r\n\r\n    if (provides && (key as string | symbol) in provides) {\r\n      // TS doesn't allow symbol as index type\r\n      return provides[key as string]\r\n    } else if (arguments.length > 1) {\r\n      return treatDefaultAsFactory && isFunction(defaultValue)\r\n        ? defaultValue.call(instance.proxy)\r\n        : defaultValue\r\n    } else if (__DEV__) {\r\n      warn(`injection \"${String(key)}\" not found.`)\r\n    }\r\n  } else if (__DEV__) {\r\n    warn(`inject() can only be used inside setup() or functional components.`)\r\n  }\r\n}\r\n","import {\r\n  getCurrentInstance,\r\n  SetupContext,\r\n  ComponentInternalInstance,\r\n  ComponentOptions\r\n} from '../component'\r\nimport {\r\n  cloneVNode,\r\n  Comment,\r\n  isSameVNodeType,\r\n  VNode,\r\n  VNodeArrayChildren,\r\n  Fragment\r\n} from '../vnode'\r\nimport { warn } from '../warning'\r\nimport { isKeepAlive } from './KeepAlive'\r\nimport { toRaw } from '@vue/reactivity'\r\nimport { callWithAsyncErrorHandling, ErrorCodes } from '../errorHandling'\r\nimport { ShapeFlags, PatchFlags } from '@vue/shared'\r\nimport { onBeforeUnmount, onMounted } from '../apiLifecycle'\r\nimport { RendererElement } from '../renderer'\r\n\r\nexport interface BaseTransitionProps<HostElement = RendererElement> {\r\n  mode?: 'in-out' | 'out-in' | 'default'\r\n  appear?: boolean\r\n\r\n  // If true, indicates this is a transition that doesn't actually insert/remove\r\n  // the element, but toggles the show / hidden status instead.\r\n  // The transition hooks are injected, but will be skipped by the renderer.\r\n  // Instead, a custom directive can control the transition by calling the\r\n  // injected hooks (e.g. v-show).\r\n  persisted?: boolean\r\n\r\n  // Hooks. Using camel case for easier usage in render functions & JSX.\r\n  // In templates these can be written as @before-enter=\"xxx\" as prop names\r\n  // are camelized.\r\n  onBeforeEnter?: (el: HostElement) => void\r\n  onEnter?: (el: HostElement, done: () => void) => void\r\n  onAfterEnter?: (el: HostElement) => void\r\n  onEnterCancelled?: (el: HostElement) => void\r\n  // leave\r\n  onBeforeLeave?: (el: HostElement) => void\r\n  onLeave?: (el: HostElement, done: () => void) => void\r\n  onAfterLeave?: (el: HostElement) => void\r\n  onLeaveCancelled?: (el: HostElement) => void // only fired in persisted mode\r\n  // appear\r\n  onBeforeAppear?: (el: HostElement) => void\r\n  onAppear?: (el: HostElement, done: () => void) => void\r\n  onAfterAppear?: (el: HostElement) => void\r\n  onAppearCancelled?: (el: HostElement) => void\r\n}\r\n\r\nexport interface TransitionHooks<\r\n  HostElement extends RendererElement = RendererElement\r\n> {\r\n  mode: BaseTransitionProps['mode']\r\n  persisted: boolean\r\n  beforeEnter(el: HostElement): void\r\n  enter(el: HostElement): void\r\n  leave(el: HostElement, remove: () => void): void\r\n  clone(vnode: VNode): TransitionHooks<HostElement>\r\n  // optional\r\n  afterLeave?(): void\r\n  delayLeave?(\r\n    el: HostElement,\r\n    earlyRemove: () => void,\r\n    delayedLeave: () => void\r\n  ): void\r\n  delayedLeave?(): void\r\n}\r\n\r\nexport type TransitionHookCaller = (\r\n  hook: ((el: any) => void) | Array<(el: any) => void> | undefined,\r\n  args?: any[]\r\n) => void\r\n\r\nexport type PendingCallback = (cancelled?: boolean) => void\r\n\r\nexport interface TransitionState {\r\n  isMounted: boolean\r\n  isLeaving: boolean\r\n  isUnmounting: boolean\r\n  // Track pending leave callbacks for children of the same key.\r\n  // This is used to force remove leaving a child when a new copy is entering.\r\n  leavingVNodes: Map<any, Record<string, VNode>>\r\n}\r\n\r\nexport interface TransitionElement {\r\n  // in persisted mode (e.g. v-show), the same element is toggled, so the\r\n  // pending enter/leave callbacks may need to be cancelled if the state is toggled\r\n  // before it finishes.\r\n  _enterCb?: PendingCallback\r\n  _leaveCb?: PendingCallback\r\n}\r\n\r\nexport function useTransitionState(): TransitionState {\r\n  const state: TransitionState = {\r\n    isMounted: false,\r\n    isLeaving: false,\r\n    isUnmounting: false,\r\n    leavingVNodes: new Map()\r\n  }\r\n  onMounted(() => {\r\n    state.isMounted = true\r\n  })\r\n  onBeforeUnmount(() => {\r\n    state.isUnmounting = true\r\n  })\r\n  return state\r\n}\r\n\r\nconst TransitionHookValidator = [Function, Array]\r\n\r\nconst BaseTransitionImpl: ComponentOptions = {\r\n  name: `BaseTransition`,\r\n\r\n  props: {\r\n    mode: String,\r\n    appear: Boolean,\r\n    persisted: Boolean,\r\n    // enter\r\n    onBeforeEnter: TransitionHookValidator,\r\n    onEnter: TransitionHookValidator,\r\n    onAfterEnter: TransitionHookValidator,\r\n    onEnterCancelled: TransitionHookValidator,\r\n    // leave\r\n    onBeforeLeave: TransitionHookValidator,\r\n    onLeave: TransitionHookValidator,\r\n    onAfterLeave: TransitionHookValidator,\r\n    onLeaveCancelled: TransitionHookValidator,\r\n    // appear\r\n    onBeforeAppear: TransitionHookValidator,\r\n    onAppear: TransitionHookValidator,\r\n    onAfterAppear: TransitionHookValidator,\r\n    onAppearCancelled: TransitionHookValidator\r\n  },\r\n\r\n  setup(props: BaseTransitionProps, { slots }: SetupContext) {\r\n    const instance = getCurrentInstance()!\r\n    const state = useTransitionState()\r\n\r\n    let prevTransitionKey: any\r\n\r\n    return () => {\r\n      const children =\r\n        slots.default && getTransitionRawChildren(slots.default(), true)\r\n      if (!children || !children.length) {\r\n        return\r\n      }\r\n\r\n      // warn multiple elements\r\n      if (__DEV__ && children.length > 1) {\r\n        warn(\r\n          '<transition> can only be used on a single element or component. Use ' +\r\n            '<transition-group> for lists.'\r\n        )\r\n      }\r\n\r\n      // there's no need to track reactivity for these props so use the raw\r\n      // props for a bit better perf\r\n      const rawProps = toRaw(props)\r\n      const { mode } = rawProps\r\n      // check mode\r\n      if (__DEV__ && mode && !['in-out', 'out-in', 'default'].includes(mode)) {\r\n        warn(`invalid <transition> mode: ${mode}`)\r\n      }\r\n\r\n      // at this point children has a guaranteed length of 1.\r\n      const child = children[0]\r\n      if (state.isLeaving) {\r\n        return emptyPlaceholder(child)\r\n      }\r\n\r\n      // in the case of <transition><keep-alive/></transition>, we need to\r\n      // compare the type of the kept-alive children.\r\n      const innerChild = getKeepAliveChild(child)\r\n      if (!innerChild) {\r\n        return emptyPlaceholder(child)\r\n      }\r\n\r\n      const enterHooks = resolveTransitionHooks(\r\n        innerChild,\r\n        rawProps,\r\n        state,\r\n        instance\r\n      )\r\n      setTransitionHooks(innerChild, enterHooks)\r\n\r\n      const oldChild = instance.subTree\r\n      const oldInnerChild = oldChild && getKeepAliveChild(oldChild)\r\n\r\n      let transitionKeyChanged = false\r\n      const { getTransitionKey } = innerChild.type as any\r\n      if (getTransitionKey) {\r\n        const key = getTransitionKey()\r\n        if (prevTransitionKey === undefined) {\r\n          prevTransitionKey = key\r\n        } else if (key !== prevTransitionKey) {\r\n          prevTransitionKey = key\r\n          transitionKeyChanged = true\r\n        }\r\n      }\r\n\r\n      // handle mode\r\n      if (\r\n        oldInnerChild &&\r\n        oldInnerChild.type !== Comment &&\r\n        (!isSameVNodeType(innerChild, oldInnerChild) || transitionKeyChanged)\r\n      ) {\r\n        const leavingHooks = resolveTransitionHooks(\r\n          oldInnerChild,\r\n          rawProps,\r\n          state,\r\n          instance\r\n        )\r\n        // update old tree's hooks in case of dynamic transition\r\n        setTransitionHooks(oldInnerChild, leavingHooks)\r\n        // switching between different views\r\n        if (mode === 'out-in') {\r\n          state.isLeaving = true\r\n          // return placeholder node and queue update when leave finishes\r\n          leavingHooks.afterLeave = () => {\r\n            state.isLeaving = false\r\n            instance.update()\r\n          }\r\n          return emptyPlaceholder(child)\r\n        } else if (mode === 'in-out' && innerChild.type !== Comment) {\r\n          leavingHooks.delayLeave = (\r\n            el: TransitionElement,\r\n            earlyRemove,\r\n            delayedLeave\r\n          ) => {\r\n            const leavingVNodesCache = getLeavingNodesForType(\r\n              state,\r\n              oldInnerChild\r\n            )\r\n            leavingVNodesCache[String(oldInnerChild.key)] = oldInnerChild\r\n            // early removal callback\r\n            el._leaveCb = () => {\r\n              earlyRemove()\r\n              el._leaveCb = undefined\r\n              delete enterHooks.delayedLeave\r\n            }\r\n            enterHooks.delayedLeave = delayedLeave\r\n          }\r\n        }\r\n      }\r\n\r\n      return child\r\n    }\r\n  }\r\n}\r\n\r\nif (__COMPAT__) {\r\n  BaseTransitionImpl.__isBuiltIn = true\r\n}\r\n\r\n// export the public type for h/tsx inference\r\n// also to avoid inline import() in generated d.ts files\r\nexport const BaseTransition = BaseTransitionImpl as any as {\r\n  new (): {\r\n    $props: BaseTransitionProps<any>\r\n  }\r\n}\r\n\r\nfunction getLeavingNodesForType(\r\n  state: TransitionState,\r\n  vnode: VNode\r\n): Record<string, VNode> {\r\n  const { leavingVNodes } = state\r\n  let leavingVNodesCache = leavingVNodes.get(vnode.type)!\r\n  if (!leavingVNodesCache) {\r\n    leavingVNodesCache = Object.create(null)\r\n    leavingVNodes.set(vnode.type, leavingVNodesCache)\r\n  }\r\n  return leavingVNodesCache\r\n}\r\n\r\n// The transition hooks are attached to the vnode as vnode.transition\r\n// and will be called at appropriate timing in the renderer.\r\nexport function resolveTransitionHooks(\r\n  vnode: VNode,\r\n  props: BaseTransitionProps<any>,\r\n  state: TransitionState,\r\n  instance: ComponentInternalInstance\r\n): TransitionHooks {\r\n  const {\r\n    appear,\r\n    mode,\r\n    persisted = false,\r\n    onBeforeEnter,\r\n    onEnter,\r\n    onAfterEnter,\r\n    onEnterCancelled,\r\n    onBeforeLeave,\r\n    onLeave,\r\n    onAfterLeave,\r\n    onLeaveCancelled,\r\n    onBeforeAppear,\r\n    onAppear,\r\n    onAfterAppear,\r\n    onAppearCancelled\r\n  } = props\r\n  const key = String(vnode.key)\r\n  const leavingVNodesCache = getLeavingNodesForType(state, vnode)\r\n\r\n  const callHook: TransitionHookCaller = (hook, args) => {\r\n    hook &&\r\n      callWithAsyncErrorHandling(\r\n        hook,\r\n        instance,\r\n        ErrorCodes.TRANSITION_HOOK,\r\n        args\r\n      )\r\n  }\r\n\r\n  const hooks: TransitionHooks<TransitionElement> = {\r\n    mode,\r\n    persisted,\r\n    beforeEnter(el) {\r\n      let hook = onBeforeEnter\r\n      if (!state.isMounted) {\r\n        if (appear) {\r\n          hook = onBeforeAppear || onBeforeEnter\r\n        } else {\r\n          return\r\n        }\r\n      }\r\n      // for same element (v-show)\r\n      if (el._leaveCb) {\r\n        el._leaveCb(true /* cancelled */)\r\n      }\r\n      // for toggled element with same key (v-if)\r\n      const leavingVNode = leavingVNodesCache[key]\r\n      if (\r\n        leavingVNode &&\r\n        isSameVNodeType(vnode, leavingVNode) &&\r\n        leavingVNode.el!._leaveCb\r\n      ) {\r\n        // force early removal (not cancelled)\r\n        leavingVNode.el!._leaveCb()\r\n      }\r\n      callHook(hook, [el])\r\n    },\r\n\r\n    enter(el) {\r\n      let hook = onEnter\r\n      let afterHook = onAfterEnter\r\n      let cancelHook = onEnterCancelled\r\n      if (!state.isMounted) {\r\n        if (appear) {\r\n          hook = onAppear || onEnter\r\n          afterHook = onAfterAppear || onAfterEnter\r\n          cancelHook = onAppearCancelled || onEnterCancelled\r\n        } else {\r\n          return\r\n        }\r\n      }\r\n      let called = false\r\n      const done = (el._enterCb = (cancelled?) => {\r\n        if (called) return\r\n        called = true\r\n        if (cancelled) {\r\n          callHook(cancelHook, [el])\r\n        } else {\r\n          callHook(afterHook, [el])\r\n        }\r\n        if (hooks.delayedLeave) {\r\n          hooks.delayedLeave()\r\n        }\r\n        el._enterCb = undefined\r\n      })\r\n      if (hook) {\r\n        hook(el, done)\r\n        if (hook.length <= 1) {\r\n          done()\r\n        }\r\n      } else {\r\n        done()\r\n      }\r\n    },\r\n\r\n    leave(el, remove) {\r\n      const key = String(vnode.key)\r\n      if (el._enterCb) {\r\n        el._enterCb(true /* cancelled */)\r\n      }\r\n      if (state.isUnmounting) {\r\n        return remove()\r\n      }\r\n      callHook(onBeforeLeave, [el])\r\n      let called = false\r\n      const done = (el._leaveCb = (cancelled?) => {\r\n        if (called) return\r\n        called = true\r\n        remove()\r\n        if (cancelled) {\r\n          callHook(onLeaveCancelled, [el])\r\n        } else {\r\n          callHook(onAfterLeave, [el])\r\n        }\r\n        el._leaveCb = undefined\r\n        if (leavingVNodesCache[key] === vnode) {\r\n          delete leavingVNodesCache[key]\r\n        }\r\n      })\r\n      leavingVNodesCache[key] = vnode\r\n      if (onLeave) {\r\n        onLeave(el, done)\r\n        if (onLeave.length <= 1) {\r\n          done()\r\n        }\r\n      } else {\r\n        done()\r\n      }\r\n    },\r\n\r\n    clone(vnode) {\r\n      return resolveTransitionHooks(vnode, props, state, instance)\r\n    }\r\n  }\r\n\r\n  return hooks\r\n}\r\n\r\n// the placeholder really only handles one special case: KeepAlive\r\n// in the case of a KeepAlive in a leave phase we need to return a KeepAlive\r\n// placeholder with empty content to avoid the KeepAlive instance from being\r\n// unmounted.\r\nfunction emptyPlaceholder(vnode: VNode): VNode | undefined {\r\n  if (isKeepAlive(vnode)) {\r\n    vnode = cloneVNode(vnode)\r\n    vnode.children = null\r\n    return vnode\r\n  }\r\n}\r\n\r\nfunction getKeepAliveChild(vnode: VNode): VNode | undefined {\r\n  return isKeepAlive(vnode)\r\n    ? vnode.children\r\n      ? ((vnode.children as VNodeArrayChildren)[0] as VNode)\r\n      : undefined\r\n    : vnode\r\n}\r\n\r\nexport function setTransitionHooks(vnode: VNode, hooks: TransitionHooks) {\r\n  if (vnode.shapeFlag & ShapeFlags.COMPONENT && vnode.component) {\r\n    setTransitionHooks(vnode.component.subTree, hooks)\r\n  } else if (__FEATURE_SUSPENSE__ && vnode.shapeFlag & ShapeFlags.SUSPENSE) {\r\n    vnode.ssContent!.transition = hooks.clone(vnode.ssContent!)\r\n    vnode.ssFallback!.transition = hooks.clone(vnode.ssFallback!)\r\n  } else {\r\n    vnode.transition = hooks\r\n  }\r\n}\r\n\r\nexport function getTransitionRawChildren(\r\n  children: VNode[],\r\n  keepComment: boolean = false\r\n): VNode[] {\r\n  let ret: VNode[] = []\r\n  let keyedFragmentCount = 0\r\n  for (let i = 0; i < children.length; i++) {\r\n    const child = children[i]\r\n    // handle fragment children case, e.g. v-for\r\n    if (child.type === Fragment) {\r\n      if (child.patchFlag & PatchFlags.KEYED_FRAGMENT) keyedFragmentCount++\r\n      ret = ret.concat(\r\n        getTransitionRawChildren(child.children as VNode[], keepComment)\r\n      )\r\n    }\r\n    // comment placeholders should be skipped, e.g. v-if\r\n    else if (keepComment || child.type !== Comment) {\r\n      ret.push(child)\r\n    }\r\n  }\r\n  // #1126 if a transition children list contains multiple sub fragments, these\r\n  // fragments will be merged into a flat children array. Since each v-for\r\n  // fragment may contain different static bindings inside, we need to de-op\r\n  // these children to force full diffs to ensure correct behavior.\r\n  if (keyedFragmentCount > 1) {\r\n    for (let i = 0; i < ret.length; i++) {\r\n      ret[i].patchFlag = PatchFlags.BAIL\r\n    }\r\n  }\r\n  return ret\r\n}\r\n","import {\r\n  ComputedOptions,\r\n  MethodOptions,\r\n  ComponentOptionsWithoutProps,\r\n  ComponentOptionsWithArrayProps,\r\n  ComponentOptionsWithObjectProps,\r\n  ComponentOptionsMixin,\r\n  RenderFunction,\r\n  ComponentOptionsBase\r\n} from './componentOptions'\r\nimport {\r\n  SetupContext,\r\n  AllowedComponentProps,\r\n  ComponentCustomProps\r\n} from './component'\r\nimport {\r\n  ExtractPropTypes,\r\n  ComponentPropsOptions,\r\n  ExtractDefaultPropTypes\r\n} from './componentProps'\r\nimport { EmitsOptions, EmitsToProps } from './componentEmits'\r\nimport { isFunction } from '@vue/shared'\r\nimport { VNodeProps } from './vnode'\r\nimport {\r\n  CreateComponentPublicInstance,\r\n  ComponentPublicInstanceConstructor\r\n} from './componentPublicInstance'\r\n\r\nexport type PublicProps = VNodeProps &\r\n  AllowedComponentProps &\r\n  ComponentCustomProps\r\n\r\nexport type DefineComponent<\r\n  PropsOrPropOptions = {},\r\n  RawBindings = {},\r\n  D = {},\r\n  C extends ComputedOptions = ComputedOptions,\r\n  M extends MethodOptions = MethodOptions,\r\n  Mixin extends ComponentOptionsMixin = ComponentOptionsMixin,\r\n  Extends extends ComponentOptionsMixin = ComponentOptionsMixin,\r\n  E extends EmitsOptions = Record<string, any>,\r\n  EE extends string = string,\r\n  PP = PublicProps,\r\n  Props = Readonly<ExtractPropTypes<PropsOrPropOptions>> & EmitsToProps<E>,\r\n  Defaults = ExtractDefaultPropTypes<PropsOrPropOptions>\r\n> = ComponentPublicInstanceConstructor<\r\n  CreateComponentPublicInstance<\r\n    Props,\r\n    RawBindings,\r\n    D,\r\n    C,\r\n    M,\r\n    Mixin,\r\n    Extends,\r\n    E,\r\n    PP & Props,\r\n    Defaults,\r\n    true\r\n  > &\r\n    Props\r\n> &\r\n  ComponentOptionsBase<\r\n    Props,\r\n    RawBindings,\r\n    D,\r\n    C,\r\n    M,\r\n    Mixin,\r\n    Extends,\r\n    E,\r\n    EE,\r\n    Defaults\r\n  > &\r\n  PP\r\n\r\n// defineComponent is a utility that is primarily used for type inference\r\n// when declaring components. Type inference is provided in the component\r\n// options (provided as the argument). The returned value has artificial types\r\n// for TSX / manual render function / IDE support.\r\n\r\n// overload 1: direct setup function\r\n// (uses user defined props interface)\r\nexport function defineComponent<Props, RawBindings = object>(\r\n  setup: (\r\n    props: Readonly<Props>,\r\n    ctx: SetupContext\r\n  ) => RawBindings | RenderFunction\r\n): DefineComponent<Props, RawBindings>\r\n\r\n// overload 2: object format with no props\r\n// (uses user defined props interface)\r\n// return type is for Vetur and TSX support\r\nexport function defineComponent<\r\n  Props = {},\r\n  RawBindings = {},\r\n  D = {},\r\n  C extends ComputedOptions = {},\r\n  M extends MethodOptions = {},\r\n  Mixin extends ComponentOptionsMixin = ComponentOptionsMixin,\r\n  Extends extends ComponentOptionsMixin = ComponentOptionsMixin,\r\n  E extends EmitsOptions = EmitsOptions,\r\n  EE extends string = string\r\n>(\r\n  options: ComponentOptionsWithoutProps<\r\n    Props,\r\n    RawBindings,\r\n    D,\r\n    C,\r\n    M,\r\n    Mixin,\r\n    Extends,\r\n    E,\r\n    EE\r\n  >\r\n): DefineComponent<Props, RawBindings, D, C, M, Mixin, Extends, E, EE>\r\n\r\n// overload 3: object format with array props declaration\r\n// props inferred as { [key in PropNames]?: any }\r\n// return type is for Vetur and TSX support\r\nexport function defineComponent<\r\n  PropNames extends string,\r\n  RawBindings,\r\n  D,\r\n  C extends ComputedOptions = {},\r\n  M extends MethodOptions = {},\r\n  Mixin extends ComponentOptionsMixin = ComponentOptionsMixin,\r\n  Extends extends ComponentOptionsMixin = ComponentOptionsMixin,\r\n  E extends EmitsOptions = Record<string, any>,\r\n  EE extends string = string\r\n>(\r\n  options: ComponentOptionsWithArrayProps<\r\n    PropNames,\r\n    RawBindings,\r\n    D,\r\n    C,\r\n    M,\r\n    Mixin,\r\n    Extends,\r\n    E,\r\n    EE\r\n  >\r\n): DefineComponent<\r\n  Readonly<{ [key in PropNames]?: any }>,\r\n  RawBindings,\r\n  D,\r\n  C,\r\n  M,\r\n  Mixin,\r\n  Extends,\r\n  E,\r\n  EE\r\n>\r\n\r\n// overload 4: object format with object props declaration\r\n// see `ExtractPropTypes` in ./componentProps.ts\r\nexport function defineComponent<\r\n  // the Readonly constraint allows TS to treat the type of { required: true }\r\n  // as constant instead of boolean.\r\n  PropsOptions extends Readonly<ComponentPropsOptions>,\r\n  RawBindings,\r\n  D,\r\n  C extends ComputedOptions = {},\r\n  M extends MethodOptions = {},\r\n  Mixin extends ComponentOptionsMixin = ComponentOptionsMixin,\r\n  Extends extends ComponentOptionsMixin = ComponentOptionsMixin,\r\n  E extends EmitsOptions = Record<string, any>,\r\n  EE extends string = string\r\n>(\r\n  options: ComponentOptionsWithObjectProps<\r\n    PropsOptions,\r\n    RawBindings,\r\n    D,\r\n    C,\r\n    M,\r\n    Mixin,\r\n    Extends,\r\n    E,\r\n    EE\r\n  >\r\n): DefineComponent<PropsOptions, RawBindings, D, C, M, Mixin, Extends, E, EE>\r\n\r\n// implementation, close to no-op\r\nexport function defineComponent(options: unknown) {\r\n  return isFunction(options) ? { setup: options, name: options.name } : options\r\n}\r\n","import {\r\n  Component,\r\n  ConcreteComponent,\r\n  currentInstance,\r\n  ComponentInternalInstance,\r\n  isInSSRComponentSetup,\r\n  ComponentOptions\r\n} from './component'\r\nimport { isFunction, isObject } from '@vue/shared'\r\nimport { ComponentPublicInstance } from './componentPublicInstance'\r\nimport { createVNode, VNode } from './vnode'\r\nimport { defineComponent } from './apiDefineComponent'\r\nimport { warn } from './warning'\r\nimport { ref } from '@vue/reactivity'\r\nimport { handleError, ErrorCodes } from './errorHandling'\r\nimport { isKeepAlive } from './components/KeepAlive'\r\nimport { queueJob } from './scheduler'\r\n\r\nexport type AsyncComponentResolveResult<T = Component> = T | { default: T } // es modules\r\n\r\nexport type AsyncComponentLoader<T = any> = () => Promise<\r\n  AsyncComponentResolveResult<T>\r\n>\r\n\r\nexport interface AsyncComponentOptions<T = any> {\r\n  loader: AsyncComponentLoader<T>\r\n  loadingComponent?: Component\r\n  errorComponent?: Component\r\n  delay?: number\r\n  timeout?: number\r\n  suspensible?: boolean\r\n  onError?: (\r\n    error: Error,\r\n    retry: () => void,\r\n    fail: () => void,\r\n    attempts: number\r\n  ) => any\r\n}\r\n\r\nexport const isAsyncWrapper = (i: ComponentInternalInstance | VNode): boolean =>\r\n  !!(i.type as ComponentOptions).__asyncLoader\r\n\r\nexport function defineAsyncComponent<\r\n  T extends Component = { new (): ComponentPublicInstance }\r\n>(source: AsyncComponentLoader<T> | AsyncComponentOptions<T>): T {\r\n  if (isFunction(source)) {\r\n    source = { loader: source }\r\n  }\r\n\r\n  const {\r\n    loader,\r\n    loadingComponent,\r\n    errorComponent,\r\n    delay = 200,\r\n    timeout, // undefined = never times out\r\n    suspensible = true,\r\n    onError: userOnError\r\n  } = source\r\n\r\n  let pendingRequest: Promise<ConcreteComponent> | null = null\r\n  let resolvedComp: ConcreteComponent | undefined\r\n\r\n  let retries = 0\r\n  const retry = () => {\r\n    retries++\r\n    pendingRequest = null\r\n    return load()\r\n  }\r\n\r\n  const load = (): Promise<ConcreteComponent> => {\r\n    let thisRequest: Promise<ConcreteComponent>\r\n    return (\r\n      pendingRequest ||\r\n      (thisRequest = pendingRequest =\r\n        loader()\r\n          .catch(err => {\r\n            err = err instanceof Error ? err : new Error(String(err))\r\n            if (userOnError) {\r\n              return new Promise((resolve, reject) => {\r\n                const userRetry = () => resolve(retry())\r\n                const userFail = () => reject(err)\r\n                userOnError(err, userRetry, userFail, retries + 1)\r\n              })\r\n            } else {\r\n              throw err\r\n            }\r\n          })\r\n          .then((comp: any) => {\r\n            if (thisRequest !== pendingRequest && pendingRequest) {\r\n              return pendingRequest\r\n            }\r\n            if (__DEV__ && !comp) {\r\n              warn(\r\n                `Async component loader resolved to undefined. ` +\r\n                  `If you are using retry(), make sure to return its return value.`\r\n              )\r\n            }\r\n            // interop module default\r\n            if (\r\n              comp &&\r\n              (comp.__esModule || comp[Symbol.toStringTag] === 'Module')\r\n            ) {\r\n              comp = comp.default\r\n            }\r\n            if (__DEV__ && comp && !isObject(comp) && !isFunction(comp)) {\r\n              throw new Error(`Invalid async component load result: ${comp}`)\r\n            }\r\n            resolvedComp = comp\r\n            return comp\r\n          }))\r\n    )\r\n  }\r\n\r\n  return defineComponent({\r\n    name: 'AsyncComponentWrapper',\r\n\r\n    __asyncLoader: load,\r\n\r\n    get __asyncResolved() {\r\n      return resolvedComp\r\n    },\r\n\r\n    setup() {\r\n      const instance = currentInstance!\r\n\r\n      // already resolved\r\n      if (resolvedComp) {\r\n        return () => createInnerComp(resolvedComp!, instance)\r\n      }\r\n\r\n      const onError = (err: Error) => {\r\n        pendingRequest = null\r\n        handleError(\r\n          err,\r\n          instance,\r\n          ErrorCodes.ASYNC_COMPONENT_LOADER,\r\n          !errorComponent /* do not throw in dev if user provided error component */\r\n        )\r\n      }\r\n\r\n      // suspense-controlled or SSR.\r\n      if (\r\n        (__FEATURE_SUSPENSE__ && suspensible && instance.suspense) ||\r\n        (__NODE_JS__ && isInSSRComponentSetup)\r\n      ) {\r\n        return load()\r\n          .then(comp => {\r\n            return () => createInnerComp(comp, instance)\r\n          })\r\n          .catch(err => {\r\n            onError(err)\r\n            return () =>\r\n              errorComponent\r\n                ? createVNode(errorComponent as ConcreteComponent, {\r\n                    error: err\r\n                  })\r\n                : null\r\n          })\r\n      }\r\n\r\n      const loaded = ref(false)\r\n      const error = ref()\r\n      const delayed = ref(!!delay)\r\n\r\n      if (delay) {\r\n        setTimeout(() => {\r\n          delayed.value = false\r\n        }, delay)\r\n      }\r\n\r\n      if (timeout != null) {\r\n        setTimeout(() => {\r\n          if (!loaded.value && !error.value) {\r\n            const err = new Error(\r\n              `Async component timed out after ${timeout}ms.`\r\n            )\r\n            onError(err)\r\n            error.value = err\r\n          }\r\n        }, timeout)\r\n      }\r\n\r\n      load()\r\n        .then(() => {\r\n          loaded.value = true\r\n          if (instance.parent && isKeepAlive(instance.parent.vnode)) {\r\n            // parent is keep-alive, force update so the loaded component's\r\n            // name is taken into account\r\n            queueJob(instance.parent.update)\r\n          }\r\n        })\r\n        .catch(err => {\r\n          onError(err)\r\n          error.value = err\r\n        })\r\n\r\n      return () => {\r\n        if (loaded.value && resolvedComp) {\r\n          return createInnerComp(resolvedComp, instance)\r\n        } else if (error.value && errorComponent) {\r\n          return createVNode(errorComponent as ConcreteComponent, {\r\n            error: error.value\r\n          })\r\n        } else if (loadingComponent && !delayed.value) {\r\n          return createVNode(loadingComponent as ConcreteComponent)\r\n        }\r\n      }\r\n    }\r\n  }) as any\r\n}\r\n\r\nfunction createInnerComp(\r\n  comp: ConcreteComponent,\r\n  { vnode: { ref, props, children } }: ComponentInternalInstance\r\n) {\r\n  const vnode = createVNode(comp, props, children)\r\n  // ensure inner component inherits the async wrapper's ref owner\r\n  vnode.ref = ref\r\n  return vnode\r\n}\r\n","import {\r\n  ConcreteComponent,\r\n  getCurrentInstance,\r\n  SetupContext,\r\n  ComponentInternalInstance,\r\n  LifecycleHooks,\r\n  currentInstance,\r\n  getComponentName,\r\n  ComponentOptions\r\n} from '../component'\r\nimport { VNode, cloneVNode, isVNode, VNodeProps } from '../vnode'\r\nimport { warn } from '../warning'\r\nimport {\r\n  onBeforeUnmount,\r\n  injectHook,\r\n  onUnmounted,\r\n  onMounted,\r\n  onUpdated\r\n} from '../apiLifecycle'\r\nimport {\r\n  isString,\r\n  isArray,\r\n  ShapeFlags,\r\n  remove,\r\n  invokeArrayFns\r\n} from '@vue/shared'\r\nimport { watch } from '../apiWatch'\r\nimport {\r\n  RendererInternals,\r\n  queuePostRenderEffect,\r\n  MoveType,\r\n  RendererElement,\r\n  RendererNode,\r\n  invokeVNodeHook\r\n} from '../renderer'\r\nimport { setTransitionHooks } from './BaseTransition'\r\nimport { ComponentRenderContext } from '../componentPublicInstance'\r\nimport { devtoolsComponentAdded } from '../devtools'\r\nimport { isAsyncWrapper } from '../apiAsyncComponent'\r\n\r\ntype MatchPattern = string | RegExp | string[] | RegExp[]\r\n\r\nexport interface KeepAliveProps {\r\n  include?: MatchPattern\r\n  exclude?: MatchPattern\r\n  max?: number | string\r\n}\r\n\r\ntype CacheKey = string | number | symbol | ConcreteComponent\r\ntype Cache = Map<CacheKey, VNode>\r\ntype Keys = Set<CacheKey>\r\n\r\nexport interface KeepAliveContext extends ComponentRenderContext {\r\n  renderer: RendererInternals\r\n  activate: (\r\n    vnode: VNode,\r\n    container: RendererElement,\r\n    anchor: RendererNode | null,\r\n    isSVG: boolean,\r\n    optimized: boolean\r\n  ) => void\r\n  deactivate: (vnode: VNode) => void\r\n}\r\n\r\nexport const isKeepAlive = (vnode: VNode): boolean =>\r\n  (vnode.type as any).__isKeepAlive\r\n\r\nconst KeepAliveImpl: ComponentOptions = {\r\n  name: `KeepAlive`,\r\n\r\n  // Marker for special handling inside the renderer. We are not using a ===\r\n  // check directly on KeepAlive in the renderer, because importing it directly\r\n  // would prevent it from being tree-shaken.\r\n  __isKeepAlive: true,\r\n\r\n  props: {\r\n    include: [String, RegExp, Array],\r\n    exclude: [String, RegExp, Array],\r\n    max: [String, Number]\r\n  },\r\n\r\n  setup(props: KeepAliveProps, { slots }: SetupContext) {\r\n    const instance = getCurrentInstance()!\r\n    // KeepAlive communicates with the instantiated renderer via the\r\n    // ctx where the renderer passes in its internals,\r\n    // and the KeepAlive instance exposes activate/deactivate implementations.\r\n    // The whole point of this is to avoid importing KeepAlive directly in the\r\n    // renderer to facilitate tree-shaking.\r\n    const sharedContext = instance.ctx as KeepAliveContext\r\n\r\n    // if the internal renderer is not registered, it indicates that this is server-side rendering,\r\n    // for KeepAlive, we just need to render its children\r\n    if (!sharedContext.renderer) {\r\n      return slots.default\r\n    }\r\n\r\n    const cache: Cache = new Map()\r\n    const keys: Keys = new Set()\r\n    let current: VNode | null = null\r\n\r\n    if (__DEV__ || __FEATURE_PROD_DEVTOOLS__) {\r\n      ;(instance as any).__v_cache = cache\r\n    }\r\n\r\n    const parentSuspense = instance.suspense\r\n\r\n    const {\r\n      renderer: {\r\n        p: patch,\r\n        m: move,\r\n        um: _unmount,\r\n        o: { createElement }\r\n      }\r\n    } = sharedContext\r\n    const storageContainer = createElement('div')\r\n\r\n    sharedContext.activate = (vnode, container, anchor, isSVG, optimized) => {\r\n      const instance = vnode.component!\r\n      move(vnode, container, anchor, MoveType.ENTER, parentSuspense)\r\n      // in case props have changed\r\n      patch(\r\n        instance.vnode,\r\n        vnode,\r\n        container,\r\n        anchor,\r\n        instance,\r\n        parentSuspense,\r\n        isSVG,\r\n        vnode.slotScopeIds,\r\n        optimized\r\n      )\r\n      queuePostRenderEffect(() => {\r\n        instance.isDeactivated = false\r\n        if (instance.a) {\r\n          invokeArrayFns(instance.a)\r\n        }\r\n        const vnodeHook = vnode.props && vnode.props.onVnodeMounted\r\n        if (vnodeHook) {\r\n          invokeVNodeHook(vnodeHook, instance.parent, vnode)\r\n        }\r\n      }, parentSuspense)\r\n\r\n      if (__DEV__ || __FEATURE_PROD_DEVTOOLS__) {\r\n        // Update components tree\r\n        devtoolsComponentAdded(instance)\r\n      }\r\n    }\r\n\r\n    sharedContext.deactivate = (vnode: VNode) => {\r\n      const instance = vnode.component!\r\n      move(vnode, storageContainer, null, MoveType.LEAVE, parentSuspense)\r\n      queuePostRenderEffect(() => {\r\n        if (instance.da) {\r\n          invokeArrayFns(instance.da)\r\n        }\r\n        const vnodeHook = vnode.props && vnode.props.onVnodeUnmounted\r\n        if (vnodeHook) {\r\n          invokeVNodeHook(vnodeHook, instance.parent, vnode)\r\n        }\r\n        instance.isDeactivated = true\r\n      }, parentSuspense)\r\n\r\n      if (__DEV__ || __FEATURE_PROD_DEVTOOLS__) {\r\n        // Update components tree\r\n        devtoolsComponentAdded(instance)\r\n      }\r\n    }\r\n\r\n    function unmount(vnode: VNode) {\r\n      // reset the shapeFlag so it can be properly unmounted\r\n      resetShapeFlag(vnode)\r\n      _unmount(vnode, instance, parentSuspense)\r\n    }\r\n\r\n    function pruneCache(filter?: (name: string) => boolean) {\r\n      cache.forEach((vnode, key) => {\r\n        const name = getComponentName(vnode.type as ConcreteComponent)\r\n        if (name && (!filter || !filter(name))) {\r\n          pruneCacheEntry(key)\r\n        }\r\n      })\r\n    }\r\n\r\n    function pruneCacheEntry(key: CacheKey) {\r\n      const cached = cache.get(key) as VNode\r\n      if (!current || cached.type !== current.type) {\r\n        unmount(cached)\r\n      } else if (current) {\r\n        // current active instance should no longer be kept-alive.\r\n        // we can't unmount it now but it might be later, so reset its flag now.\r\n        resetShapeFlag(current)\r\n      }\r\n      cache.delete(key)\r\n      keys.delete(key)\r\n    }\r\n\r\n    // prune cache on include/exclude prop change\r\n    watch(\r\n      () => [props.include, props.exclude],\r\n      ([include, exclude]) => {\r\n        include && pruneCache(name => matches(include, name))\r\n        exclude && pruneCache(name => !matches(exclude, name))\r\n      },\r\n      // prune post-render after `current` has been updated\r\n      { flush: 'post', deep: true }\r\n    )\r\n\r\n    // cache sub tree after render\r\n    let pendingCacheKey: CacheKey | null = null\r\n    const cacheSubtree = () => {\r\n      // fix #1621, the pendingCacheKey could be 0\r\n      if (pendingCacheKey != null) {\r\n        cache.set(pendingCacheKey, getInnerChild(instance.subTree))\r\n      }\r\n    }\r\n    onMounted(cacheSubtree)\r\n    onUpdated(cacheSubtree)\r\n\r\n    onBeforeUnmount(() => {\r\n      cache.forEach(cached => {\r\n        const { subTree, suspense } = instance\r\n        const vnode = getInnerChild(subTree)\r\n        if (cached.type === vnode.type) {\r\n          // current instance will be unmounted as part of keep-alive's unmount\r\n          resetShapeFlag(vnode)\r\n          // but invoke its deactivated hook here\r\n          const da = vnode.component!.da\r\n          da && queuePostRenderEffect(da, suspense)\r\n          return\r\n        }\r\n        unmount(cached)\r\n      })\r\n    })\r\n\r\n    return () => {\r\n      pendingCacheKey = null\r\n\r\n      if (!slots.default) {\r\n        return null\r\n      }\r\n\r\n      const children = slots.default()\r\n      const rawVNode = children[0]\r\n      if (children.length > 1) {\r\n        if (__DEV__) {\r\n          warn(`KeepAlive should contain exactly one component child.`)\r\n        }\r\n        current = null\r\n        return children\r\n      } else if (\r\n        !isVNode(rawVNode) ||\r\n        (!(rawVNode.shapeFlag & ShapeFlags.STATEFUL_COMPONENT) &&\r\n          !(rawVNode.shapeFlag & ShapeFlags.SUSPENSE))\r\n      ) {\r\n        current = null\r\n        return rawVNode\r\n      }\r\n\r\n      let vnode = getInnerChild(rawVNode)\r\n      const comp = vnode.type as ConcreteComponent\r\n\r\n      // for async components, name check should be based in its loaded\r\n      // inner component if available\r\n      const name = getComponentName(\r\n        isAsyncWrapper(vnode)\r\n          ? (vnode.type as ComponentOptions).__asyncResolved || {}\r\n          : comp\r\n      )\r\n\r\n      const { include, exclude, max } = props\r\n\r\n      if (\r\n        (include && (!name || !matches(include, name))) ||\r\n        (exclude && name && matches(exclude, name))\r\n      ) {\r\n        current = vnode\r\n        return rawVNode\r\n      }\r\n\r\n      const key = vnode.key == null ? comp : vnode.key\r\n      const cachedVNode = cache.get(key)\r\n\r\n      // clone vnode if it's reused because we are going to mutate it\r\n      if (vnode.el) {\r\n        vnode = cloneVNode(vnode)\r\n        if (rawVNode.shapeFlag & ShapeFlags.SUSPENSE) {\r\n          rawVNode.ssContent = vnode\r\n        }\r\n      }\r\n      // #1513 it's possible for the returned vnode to be cloned due to attr\r\n      // fallthrough or scopeId, so the vnode here may not be the final vnode\r\n      // that is mounted. Instead of caching it directly, we store the pending\r\n      // key and cache `instance.subTree` (the normalized vnode) in\r\n      // beforeMount/beforeUpdate hooks.\r\n      pendingCacheKey = key\r\n\r\n      if (cachedVNode) {\r\n        // copy over mounted state\r\n        vnode.el = cachedVNode.el\r\n        vnode.component = cachedVNode.component\r\n        if (vnode.transition) {\r\n          // recursively update transition hooks on subTree\r\n          setTransitionHooks(vnode, vnode.transition!)\r\n        }\r\n        // avoid vnode being mounted as fresh\r\n        vnode.shapeFlag |= ShapeFlags.COMPONENT_KEPT_ALIVE\r\n        // make this key the freshest\r\n        keys.delete(key)\r\n        keys.add(key)\r\n      } else {\r\n        keys.add(key)\r\n        // prune oldest entry\r\n        if (max && keys.size > parseInt(max as string, 10)) {\r\n          pruneCacheEntry(keys.values().next().value)\r\n        }\r\n      }\r\n      // avoid vnode being unmounted\r\n      vnode.shapeFlag |= ShapeFlags.COMPONENT_SHOULD_KEEP_ALIVE\r\n\r\n      current = vnode\r\n      return rawVNode\r\n    }\r\n  }\r\n}\r\n\r\nif (__COMPAT__) {\r\n  KeepAliveImpl.__isBuildIn = true\r\n}\r\n\r\n// export the public type for h/tsx inference\r\n// also to avoid inline import() in generated d.ts files\r\nexport const KeepAlive = KeepAliveImpl as any as {\r\n  __isKeepAlive: true\r\n  new (): {\r\n    $props: VNodeProps & KeepAliveProps\r\n  }\r\n}\r\n\r\nfunction matches(pattern: MatchPattern, name: string): boolean {\r\n  if (isArray(pattern)) {\r\n    return pattern.some((p: string | RegExp) => matches(p, name))\r\n  } else if (isString(pattern)) {\r\n    return pattern.split(',').indexOf(name) > -1\r\n  } else if (pattern.test) {\r\n    return pattern.test(name)\r\n  }\r\n  /* istanbul ignore next */\r\n  return false\r\n}\r\n\r\nexport function onActivated(\r\n  hook: Function,\r\n  target?: ComponentInternalInstance | null\r\n) {\r\n  registerKeepAliveHook(hook, LifecycleHooks.ACTIVATED, target)\r\n}\r\n\r\nexport function onDeactivated(\r\n  hook: Function,\r\n  target?: ComponentInternalInstance | null\r\n) {\r\n  registerKeepAliveHook(hook, LifecycleHooks.DEACTIVATED, target)\r\n}\r\n\r\nfunction registerKeepAliveHook(\r\n  hook: Function & { __wdc?: Function },\r\n  type: LifecycleHooks,\r\n  target: ComponentInternalInstance | null = currentInstance\r\n) {\r\n  // cache the deactivate branch check wrapper for injected hooks so the same\r\n  // hook can be properly deduped by the scheduler. \"__wdc\" stands for \"with\r\n  // deactivation check\".\r\n  const wrappedHook =\r\n    hook.__wdc ||\r\n    (hook.__wdc = () => {\r\n      // only fire the hook if the target instance is NOT in a deactivated branch.\r\n      let current: ComponentInternalInstance | null = target\r\n      while (current) {\r\n        if (current.isDeactivated) {\r\n          return\r\n        }\r\n        current = current.parent\r\n      }\r\n      hook()\r\n    })\r\n  injectHook(type, wrappedHook, target)\r\n  // In addition to registering it on the target instance, we walk up the parent\r\n  // chain and register it on all ancestor instances that are keep-alive roots.\r\n  // This avoids the need to walk the entire component tree when invoking these\r\n  // hooks, and more importantly, avoids the need to track child components in\r\n  // arrays.\r\n  if (target) {\r\n    let current = target.parent\r\n    while (current && current.parent) {\r\n      if (isKeepAlive(current.parent.vnode)) {\r\n        injectToKeepAliveRoot(wrappedHook, type, target, current)\r\n      }\r\n      current = current.parent\r\n    }\r\n  }\r\n}\r\n\r\nfunction injectToKeepAliveRoot(\r\n  hook: Function & { __weh?: Function },\r\n  type: LifecycleHooks,\r\n  target: ComponentInternalInstance,\r\n  keepAliveRoot: ComponentInternalInstance\r\n) {\r\n  // injectHook wraps the original for error handling, so make sure to remove\r\n  // the wrapped version.\r\n  const injected = injectHook(type, hook, keepAliveRoot, true /* prepend */)\r\n  onUnmounted(() => {\r\n    remove(keepAliveRoot[type]!, injected)\r\n  }, target)\r\n}\r\n\r\nfunction resetShapeFlag(vnode: VNode) {\r\n  let shapeFlag = vnode.shapeFlag\r\n  if (shapeFlag & ShapeFlags.COMPONENT_SHOULD_KEEP_ALIVE) {\r\n    shapeFlag -= ShapeFlags.COMPONENT_SHOULD_KEEP_ALIVE\r\n  }\r\n  if (shapeFlag & ShapeFlags.COMPONENT_KEPT_ALIVE) {\r\n    shapeFlag -= ShapeFlags.COMPONENT_KEPT_ALIVE\r\n  }\r\n  vnode.shapeFlag = shapeFlag\r\n}\r\n\r\nfunction getInnerChild(vnode: VNode) {\r\n  return vnode.shapeFlag & ShapeFlags.SUSPENSE ? vnode.ssContent! : vnode\r\n}\r\n","import {\r\n  ComponentInternalInstance,\r\n  currentInstance,\r\n  isInSSRComponentSetup,\r\n  LifecycleHooks,\r\n  setCurrentInstance,\r\n  unsetCurrentInstance\r\n} from './component'\r\nimport { ComponentPublicInstance } from './componentPublicInstance'\r\nimport { callWithAsyncErrorHandling, ErrorTypeStrings } from './errorHandling'\r\nimport { warn } from './warning'\r\nimport { toHandlerKey } from '@vue/shared'\r\nimport { DebuggerEvent, pauseTracking, resetTracking } from '@vue/reactivity'\r\n\r\nexport { onActivated, onDeactivated } from './components/KeepAlive'\r\n\r\nexport function injectHook(\r\n  type: LifecycleHooks,\r\n  hook: Function & { __weh?: Function },\r\n  target: ComponentInternalInstance | null = currentInstance,\r\n  prepend: boolean = false\r\n): Function | undefined {\r\n  if (target) {\r\n    const hooks = target[type] || (target[type] = [])\r\n    // cache the error handling wrapper for injected hooks so the same hook\r\n    // can be properly deduped by the scheduler. \"__weh\" stands for \"with error\r\n    // handling\".\r\n    const wrappedHook =\r\n      hook.__weh ||\r\n      (hook.__weh = (...args: unknown[]) => {\r\n        if (target.isUnmounted) {\r\n          return\r\n        }\r\n        // disable tracking inside all lifecycle hooks\r\n        // since they can potentially be called inside effects.\r\n        pauseTracking()\r\n        // Set currentInstance during hook invocation.\r\n        // This assumes the hook does not synchronously trigger other hooks, which\r\n        // can only be false when the user does something really funky.\r\n        setCurrentInstance(target)\r\n        const res = callWithAsyncErrorHandling(hook, target, type, args)\r\n        unsetCurrentInstance()\r\n        resetTracking()\r\n        return res\r\n      })\r\n    if (prepend) {\r\n      hooks.unshift(wrappedHook)\r\n    } else {\r\n      hooks.push(wrappedHook)\r\n    }\r\n    return wrappedHook\r\n  } else if (__DEV__) {\r\n    const apiName = toHandlerKey(ErrorTypeStrings[type].replace(/ hook$/, ''))\r\n    warn(\r\n      `${apiName} is called when there is no active component instance to be ` +\r\n        `associated with. ` +\r\n        `Lifecycle injection APIs can only be used during execution of setup().` +\r\n        (__FEATURE_SUSPENSE__\r\n          ? ` If you are using async setup(), make sure to register lifecycle ` +\r\n            `hooks before the first await statement.`\r\n          : ``)\r\n    )\r\n  }\r\n}\r\n\r\nexport const createHook =\r\n  <T extends Function = () => any>(lifecycle: LifecycleHooks) =>\r\n  (hook: T, target: ComponentInternalInstance | null = currentInstance) =>\r\n    // post-create lifecycle registrations are noops during SSR (except for serverPrefetch)\r\n    (!isInSSRComponentSetup || lifecycle === LifecycleHooks.SERVER_PREFETCH) &&\r\n    injectHook(lifecycle, hook, target)\r\n\r\nexport const onBeforeMount = createHook(LifecycleHooks.BEFORE_MOUNT)\r\nexport const onMounted = createHook(LifecycleHooks.MOUNTED)\r\nexport const onBeforeUpdate = createHook(LifecycleHooks.BEFORE_UPDATE)\r\nexport const onUpdated = createHook(LifecycleHooks.UPDATED)\r\nexport const onBeforeUnmount = createHook(LifecycleHooks.BEFORE_UNMOUNT)\r\nexport const onUnmounted = createHook(LifecycleHooks.UNMOUNTED)\r\nexport const onServerPrefetch = createHook(LifecycleHooks.SERVER_PREFETCH)\r\n\r\nexport type DebuggerHook = (e: DebuggerEvent) => void\r\nexport const onRenderTriggered = createHook<DebuggerHook>(\r\n  LifecycleHooks.RENDER_TRIGGERED\r\n)\r\nexport const onRenderTracked = createHook<DebuggerHook>(\r\n  LifecycleHooks.RENDER_TRACKED\r\n)\r\n\r\nexport type ErrorCapturedHook<TError = unknown> = (\r\n  err: TError,\r\n  instance: ComponentPublicInstance | null,\r\n  info: string\r\n) => boolean | void\r\n\r\nexport function onErrorCaptured<TError = Error>(\r\n  hook: ErrorCapturedHook<TError>,\r\n  target: ComponentInternalInstance | null = currentInstance\r\n) {\r\n  injectHook(LifecycleHooks.ERROR_CAPTURED, hook, target)\r\n}\r\n","import {\r\n  ComponentInternalInstance,\r\n  Data,\r\n  SetupContext,\r\n  ComponentInternalOptions,\r\n  Component,\r\n  ConcreteComponent,\r\n  InternalRenderFunction,\r\n  LifecycleHooks\r\n} from './component'\r\nimport {\r\n  isFunction,\r\n  extend,\r\n  isString,\r\n  isObject,\r\n  isArray,\r\n  NOOP,\r\n  isPromise\r\n} from '@vue/shared'\r\nimport { computed, isRef, Ref } from '@vue/reactivity'\r\nimport {\r\n  watch,\r\n  WatchOptions,\r\n  WatchCallback,\r\n  createPathGetter\r\n} from './apiWatch'\r\nimport { provide, inject } from './apiInject'\r\nimport {\r\n  onBeforeMount,\r\n  onMounted,\r\n  onBeforeUpdate,\r\n  onUpdated,\r\n  onErrorCaptured,\r\n  onRenderTracked,\r\n  onBeforeUnmount,\r\n  onUnmounted,\r\n  onActivated,\r\n  onDeactivated,\r\n  onRenderTriggered,\r\n  DebuggerHook,\r\n  ErrorCapturedHook,\r\n  onServerPrefetch\r\n} from './apiLifecycle'\r\nimport {\r\n  reactive,\r\n  ComputedGetter,\r\n  WritableComputedOptions\r\n} from '@vue/reactivity'\r\nimport {\r\n  ComponentObjectPropsOptions,\r\n  ExtractPropTypes,\r\n  ExtractDefaultPropTypes\r\n} from './componentProps'\r\nimport { EmitsOptions, EmitsToProps } from './componentEmits'\r\nimport { Directive } from './directives'\r\nimport {\r\n  CreateComponentPublicInstance,\r\n  ComponentPublicInstance\r\n} from './componentPublicInstance'\r\nimport { warn } from './warning'\r\nimport { VNodeChild } from './vnode'\r\nimport { callWithAsyncErrorHandling } from './errorHandling'\r\nimport { LooseRequired, UnionToIntersection } from './helpers/typeUtils'\r\nimport { deepMergeData } from './compat/data'\r\nimport { DeprecationTypes } from './compat/compatConfig'\r\nimport {\r\n  CompatConfig,\r\n  isCompatEnabled,\r\n  softAssertCompatEnabled\r\n} from './compat/compatConfig'\r\nimport { OptionMergeFunction } from './apiCreateApp'\r\n\r\n/**\r\n * Interface for declaring custom options.\r\n *\r\n * @example\r\n * ```ts\r\n * declare module '@vue/runtime-core' {\r\n *   interface ComponentCustomOptions {\r\n *     beforeRouteUpdate?(\r\n *       to: Route,\r\n *       from: Route,\r\n *       next: () => void\r\n *     ): void\r\n *   }\r\n * }\r\n * ```\r\n */\r\nexport interface ComponentCustomOptions {}\r\n\r\nexport type RenderFunction = () => VNodeChild\r\n\r\ntype ExtractOptionProp<T> = T extends ComponentOptionsBase<\r\n  infer P, // Props\r\n  any, // RawBindings\r\n  any, // D\r\n  any, // C\r\n  any, // M\r\n  any, // Mixin\r\n  any, // Extends\r\n  any // EmitsOptions\r\n>\r\n  ? unknown extends P\r\n    ? {}\r\n    : P\r\n  : {}\r\n\r\nexport interface ComponentOptionsBase<\r\n  Props,\r\n  RawBindings,\r\n  D,\r\n  C extends ComputedOptions,\r\n  M extends MethodOptions,\r\n  Mixin extends ComponentOptionsMixin,\r\n  Extends extends ComponentOptionsMixin,\r\n  E extends EmitsOptions,\r\n  EE extends string = string,\r\n  Defaults = {}\r\n> extends LegacyOptions<Props, D, C, M, Mixin, Extends>,\r\n    ComponentInternalOptions,\r\n    ComponentCustomOptions {\r\n  setup?: (\r\n    this: void,\r\n    props: Readonly<\r\n      LooseRequired<\r\n        Props &\r\n          UnionToIntersection<ExtractOptionProp<Mixin>> &\r\n          UnionToIntersection<ExtractOptionProp<Extends>>\r\n      >\r\n    >,\r\n    ctx: SetupContext<E>\r\n  ) => Promise<RawBindings> | RawBindings | RenderFunction | void\r\n  name?: string\r\n  template?: string | object // can be a direct DOM node\r\n  // Note: we are intentionally using the signature-less `Function` type here\r\n  // since any type with signature will cause the whole inference to fail when\r\n  // the return expression contains reference to `this`.\r\n  // Luckily `render()` doesn't need any arguments nor does it care about return\r\n  // type.\r\n  render?: Function\r\n  components?: Record<string, Component>\r\n  directives?: Record<string, Directive>\r\n  inheritAttrs?: boolean\r\n  emits?: (E | EE[]) & ThisType<void>\r\n  // TODO infer public instance type based on exposed keys\r\n  expose?: string[]\r\n  serverPrefetch?(): Promise<any>\r\n\r\n  // Runtime compiler only -----------------------------------------------------\r\n  compilerOptions?: RuntimeCompilerOptions\r\n\r\n  // Internal ------------------------------------------------------------------\r\n\r\n  /**\r\n   * SSR only. This is produced by compiler-ssr and attached in compiler-sfc\r\n   * not user facing, so the typing is lax and for test only.\r\n   * @internal\r\n   */\r\n  ssrRender?: (\r\n    ctx: any,\r\n    push: (item: any) => void,\r\n    parentInstance: ComponentInternalInstance,\r\n    attrs: Data | undefined,\r\n    // for compiler-optimized bindings\r\n    $props: ComponentInternalInstance['props'],\r\n    $setup: ComponentInternalInstance['setupState'],\r\n    $data: ComponentInternalInstance['data'],\r\n    $options: ComponentInternalInstance['ctx']\r\n  ) => void\r\n\r\n  /**\r\n   * Only generated by compiler-sfc to mark a ssr render function inlined and\r\n   * returned from setup()\r\n   * @internal\r\n   */\r\n  __ssrInlineRender?: boolean\r\n\r\n  /**\r\n   * marker for AsyncComponentWrapper\r\n   * @internal\r\n   */\r\n  __asyncLoader?: () => Promise<ConcreteComponent>\r\n  /**\r\n   * the inner component resolved by the AsyncComponentWrapper\r\n   * @internal\r\n   */\r\n  __asyncResolved?: ConcreteComponent\r\n\r\n  // Type differentiators ------------------------------------------------------\r\n\r\n  // Note these are internal but need to be exposed in d.ts for type inference\r\n  // to work!\r\n\r\n  // type-only differentiator to separate OptionWithoutProps from a constructor\r\n  // type returned by defineComponent() or FunctionalComponent\r\n  call?: (this: unknown, ...args: unknown[]) => never\r\n  // type-only differentiators for built-in Vnode types\r\n  __isFragment?: never\r\n  __isTeleport?: never\r\n  __isSuspense?: never\r\n\r\n  __defaults?: Defaults\r\n}\r\n\r\n/**\r\n * Subset of compiler options that makes sense for the runtime.\r\n */\r\nexport interface RuntimeCompilerOptions {\r\n  isCustomElement?: (tag: string) => boolean\r\n  whitespace?: 'preserve' | 'condense'\r\n  comments?: boolean\r\n  delimiters?: [string, string]\r\n}\r\n\r\nexport type ComponentOptionsWithoutProps<\r\n  Props = {},\r\n  RawBindings = {},\r\n  D = {},\r\n  C extends ComputedOptions = {},\r\n  M extends MethodOptions = {},\r\n  Mixin extends ComponentOptionsMixin = ComponentOptionsMixin,\r\n  Extends extends ComponentOptionsMixin = ComponentOptionsMixin,\r\n  E extends EmitsOptions = EmitsOptions,\r\n  EE extends string = string,\r\n  PE = Props & EmitsToProps<E>\r\n> = ComponentOptionsBase<\r\n  PE,\r\n  RawBindings,\r\n  D,\r\n  C,\r\n  M,\r\n  Mixin,\r\n  Extends,\r\n  E,\r\n  EE,\r\n  {}\r\n> & {\r\n  props?: undefined\r\n} & ThisType<\r\n    CreateComponentPublicInstance<PE, RawBindings, D, C, M, Mixin, Extends, E>\r\n  >\r\n\r\nexport type ComponentOptionsWithArrayProps<\r\n  PropNames extends string = string,\r\n  RawBindings = {},\r\n  D = {},\r\n  C extends ComputedOptions = {},\r\n  M extends MethodOptions = {},\r\n  Mixin extends ComponentOptionsMixin = ComponentOptionsMixin,\r\n  Extends extends ComponentOptionsMixin = ComponentOptionsMixin,\r\n  E extends EmitsOptions = EmitsOptions,\r\n  EE extends string = string,\r\n  Props = Readonly<{ [key in PropNames]?: any }> & EmitsToProps<E>\r\n> = ComponentOptionsBase<\r\n  Props,\r\n  RawBindings,\r\n  D,\r\n  C,\r\n  M,\r\n  Mixin,\r\n  Extends,\r\n  E,\r\n  EE,\r\n  {}\r\n> & {\r\n  props: PropNames[]\r\n} & ThisType<\r\n    CreateComponentPublicInstance<\r\n      Props,\r\n      RawBindings,\r\n      D,\r\n      C,\r\n      M,\r\n      Mixin,\r\n      Extends,\r\n      E\r\n    >\r\n  >\r\n\r\nexport type ComponentOptionsWithObjectProps<\r\n  PropsOptions = ComponentObjectPropsOptions,\r\n  RawBindings = {},\r\n  D = {},\r\n  C extends ComputedOptions = {},\r\n  M extends MethodOptions = {},\r\n  Mixin extends ComponentOptionsMixin = ComponentOptionsMixin,\r\n  Extends extends ComponentOptionsMixin = ComponentOptionsMixin,\r\n  E extends EmitsOptions = EmitsOptions,\r\n  EE extends string = string,\r\n  Props = Readonly<ExtractPropTypes<PropsOptions>> & EmitsToProps<E>,\r\n  Defaults = ExtractDefaultPropTypes<PropsOptions>\r\n> = ComponentOptionsBase<\r\n  Props,\r\n  RawBindings,\r\n  D,\r\n  C,\r\n  M,\r\n  Mixin,\r\n  Extends,\r\n  E,\r\n  EE,\r\n  Defaults\r\n> & {\r\n  props: PropsOptions & ThisType<void>\r\n} & ThisType<\r\n    CreateComponentPublicInstance<\r\n      Props,\r\n      RawBindings,\r\n      D,\r\n      C,\r\n      M,\r\n      Mixin,\r\n      Extends,\r\n      E,\r\n      Props,\r\n      Defaults,\r\n      false\r\n    >\r\n  >\r\n\r\nexport type ComponentOptions<\r\n  Props = {},\r\n  RawBindings = any,\r\n  D = any,\r\n  C extends ComputedOptions = any,\r\n  M extends MethodOptions = any,\r\n  Mixin extends ComponentOptionsMixin = any,\r\n  Extends extends ComponentOptionsMixin = any,\r\n  E extends EmitsOptions = any\r\n> = ComponentOptionsBase<Props, RawBindings, D, C, M, Mixin, Extends, E> &\r\n  ThisType<\r\n    CreateComponentPublicInstance<\r\n      {},\r\n      RawBindings,\r\n      D,\r\n      C,\r\n      M,\r\n      Mixin,\r\n      Extends,\r\n      E,\r\n      Readonly<Props>\r\n    >\r\n  >\r\n\r\nexport type ComponentOptionsMixin = ComponentOptionsBase<\r\n  any,\r\n  any,\r\n  any,\r\n  any,\r\n  any,\r\n  any,\r\n  any,\r\n  any,\r\n  any,\r\n  any\r\n>\r\n\r\nexport type ComputedOptions = Record<\r\n  string,\r\n  ComputedGetter<any> | WritableComputedOptions<any>\r\n>\r\n\r\nexport interface MethodOptions {\r\n  [key: string]: Function\r\n}\r\n\r\nexport type ExtractComputedReturns<T extends any> = {\r\n  [key in keyof T]: T[key] extends { get: (...args: any[]) => infer TReturn }\r\n    ? TReturn\r\n    : T[key] extends (...args: any[]) => infer TReturn\r\n    ? TReturn\r\n    : never\r\n}\r\n\r\nexport type ObjectWatchOptionItem = {\r\n  handler: WatchCallback | string\r\n} & WatchOptions\r\n\r\ntype WatchOptionItem = string | WatchCallback | ObjectWatchOptionItem\r\n\r\ntype ComponentWatchOptionItem = WatchOptionItem | WatchOptionItem[]\r\n\r\ntype ComponentWatchOptions = Record<string, ComponentWatchOptionItem>\r\n\r\ntype ComponentInjectOptions = string[] | ObjectInjectOptions\r\n\r\ntype ObjectInjectOptions = Record<\r\n  string | symbol,\r\n  string | symbol | { from?: string | symbol; default?: unknown }\r\n>\r\n\r\ninterface LegacyOptions<\r\n  Props,\r\n  D,\r\n  C extends ComputedOptions,\r\n  M extends MethodOptions,\r\n  Mixin extends ComponentOptionsMixin,\r\n  Extends extends ComponentOptionsMixin\r\n> {\r\n  compatConfig?: CompatConfig\r\n\r\n  // allow any custom options\r\n  [key: string]: any\r\n\r\n  // state\r\n  // Limitation: we cannot expose RawBindings on the `this` context for data\r\n  // since that leads to some sort of circular inference and breaks ThisType\r\n  // for the entire component.\r\n  data?: (\r\n    this: CreateComponentPublicInstance<\r\n      Props,\r\n      {},\r\n      {},\r\n      {},\r\n      MethodOptions,\r\n      Mixin,\r\n      Extends\r\n    >,\r\n    vm: CreateComponentPublicInstance<\r\n      Props,\r\n      {},\r\n      {},\r\n      {},\r\n      MethodOptions,\r\n      Mixin,\r\n      Extends\r\n    >\r\n  ) => D\r\n  computed?: C\r\n  methods?: M\r\n  watch?: ComponentWatchOptions\r\n  provide?: Data | Function\r\n  inject?: ComponentInjectOptions\r\n\r\n  // assets\r\n  filters?: Record<string, Function>\r\n\r\n  // composition\r\n  mixins?: Mixin[]\r\n  extends?: Extends\r\n\r\n  // lifecycle\r\n  beforeCreate?(): void\r\n  created?(): void\r\n  beforeMount?(): void\r\n  mounted?(): void\r\n  beforeUpdate?(): void\r\n  updated?(): void\r\n  activated?(): void\r\n  deactivated?(): void\r\n  /** @deprecated use `beforeUnmount` instead */\r\n  beforeDestroy?(): void\r\n  beforeUnmount?(): void\r\n  /** @deprecated use `unmounted` instead */\r\n  destroyed?(): void\r\n  unmounted?(): void\r\n  renderTracked?: DebuggerHook\r\n  renderTriggered?: DebuggerHook\r\n  errorCaptured?: ErrorCapturedHook\r\n\r\n  /**\r\n   * runtime compile only\r\n   * @deprecated use `compilerOptions.delimiters` instead.\r\n   */\r\n  delimiters?: [string, string]\r\n\r\n  /**\r\n   * #3468\r\n   *\r\n   * type-only, used to assist Mixin's type inference,\r\n   * typescript will try to simplify the inferred `Mixin` type,\r\n   * with the `__differenciator`, typescript won't be able to combine different mixins,\r\n   * because the `__differenciator` will be different\r\n   */\r\n  __differentiator?: keyof D | keyof C | keyof M\r\n}\r\n\r\ntype MergedHook<T = () => void> = T | T[]\r\n\r\nexport type MergedComponentOptions = ComponentOptions &\r\n  MergedComponentOptionsOverride\r\n\r\nexport type MergedComponentOptionsOverride = {\r\n  beforeCreate?: MergedHook\r\n  created?: MergedHook\r\n  beforeMount?: MergedHook\r\n  mounted?: MergedHook\r\n  beforeUpdate?: MergedHook\r\n  updated?: MergedHook\r\n  activated?: MergedHook\r\n  deactivated?: MergedHook\r\n  /** @deprecated use `beforeUnmount` instead */\r\n  beforeDestroy?: MergedHook\r\n  beforeUnmount?: MergedHook\r\n  /** @deprecated use `unmounted` instead */\r\n  destroyed?: MergedHook\r\n  unmounted?: MergedHook\r\n  renderTracked?: MergedHook<DebuggerHook>\r\n  renderTriggered?: MergedHook<DebuggerHook>\r\n  errorCaptured?: MergedHook<ErrorCapturedHook>\r\n}\r\n\r\nexport type OptionTypesKeys = 'P' | 'B' | 'D' | 'C' | 'M' | 'Defaults'\r\n\r\nexport type OptionTypesType<\r\n  P = {},\r\n  B = {},\r\n  D = {},\r\n  C extends ComputedOptions = {},\r\n  M extends MethodOptions = {},\r\n  Defaults = {}\r\n> = {\r\n  P: P\r\n  B: B\r\n  D: D\r\n  C: C\r\n  M: M\r\n  Defaults: Defaults\r\n}\r\n\r\nconst enum OptionTypes {\r\n  PROPS = 'Props',\r\n  DATA = 'Data',\r\n  COMPUTED = 'Computed',\r\n  METHODS = 'Methods',\r\n  INJECT = 'Inject'\r\n}\r\n\r\nfunction createDuplicateChecker() {\r\n  const cache = Object.create(null)\r\n  return (type: OptionTypes, key: string) => {\r\n    if (cache[key]) {\r\n      warn(`${type} property \"${key}\" is already defined in ${cache[key]}.`)\r\n    } else {\r\n      cache[key] = type\r\n    }\r\n  }\r\n}\r\n\r\nexport let shouldCacheAccess = true\r\n\r\nexport function applyOptions(instance: ComponentInternalInstance) {\r\n  const options = resolveMergedOptions(instance)\r\n  const publicThis = instance.proxy! as any\r\n  const ctx = instance.ctx\r\n\r\n  // do not cache property access on public proxy during state initialization\r\n  shouldCacheAccess = false\r\n\r\n  // call beforeCreate first before accessing other options since\r\n  // the hook may mutate resolved options (#2791)\r\n  if (options.beforeCreate) {\r\n    callHook(options.beforeCreate, instance, LifecycleHooks.BEFORE_CREATE)\r\n  }\r\n\r\n  const {\r\n    // state\r\n    data: dataOptions,\r\n    computed: computedOptions,\r\n    methods,\r\n    watch: watchOptions,\r\n    provide: provideOptions,\r\n    inject: injectOptions,\r\n    // lifecycle\r\n    created,\r\n    beforeMount,\r\n    mounted,\r\n    beforeUpdate,\r\n    updated,\r\n    activated,\r\n    deactivated,\r\n    beforeDestroy,\r\n    beforeUnmount,\r\n    destroyed,\r\n    unmounted,\r\n    render,\r\n    renderTracked,\r\n    renderTriggered,\r\n    errorCaptured,\r\n    serverPrefetch,\r\n    // public API\r\n    expose,\r\n    inheritAttrs,\r\n    // assets\r\n    components,\r\n    directives,\r\n    filters\r\n  } = options\r\n\r\n  const checkDuplicateProperties = __DEV__ ? createDuplicateChecker() : null\r\n\r\n  if (__DEV__) {\r\n    const [propsOptions] = instance.propsOptions\r\n    if (propsOptions) {\r\n      for (const key in propsOptions) {\r\n        checkDuplicateProperties!(OptionTypes.PROPS, key)\r\n      }\r\n    }\r\n  }\r\n\r\n  // options initialization order (to be consistent with Vue 2):\r\n  // - props (already done outside of this function)\r\n  // - inject\r\n  // - methods\r\n  // - data (deferred since it relies on `this` access)\r\n  // - computed\r\n  // - watch (deferred since it relies on `this` access)\r\n\r\n  if (injectOptions) {\r\n    resolveInjections(\r\n      injectOptions,\r\n      ctx,\r\n      checkDuplicateProperties,\r\n      instance.appContext.config.unwrapInjectedRef\r\n    )\r\n  }\r\n\r\n  if (methods) {\r\n    for (const key in methods) {\r\n      const methodHandler = (methods as MethodOptions)[key]\r\n      if (isFunction(methodHandler)) {\r\n        // In dev mode, we use the `createRenderContext` function to define\r\n        // methods to the proxy target, and those are read-only but\r\n        // reconfigurable, so it needs to be redefined here\r\n        if (__DEV__) {\r\n          Object.defineProperty(ctx, key, {\r\n            value: methodHandler.bind(publicThis),\r\n            configurable: true,\r\n            enumerable: true,\r\n            writable: true\r\n          })\r\n        } else {\r\n          ctx[key] = methodHandler.bind(publicThis)\r\n        }\r\n        if (__DEV__) {\r\n          checkDuplicateProperties!(OptionTypes.METHODS, key)\r\n        }\r\n      } else if (__DEV__) {\r\n        warn(\r\n          `Method \"${key}\" has type \"${typeof methodHandler}\" in the component definition. ` +\r\n            `Did you reference the function correctly?`\r\n        )\r\n      }\r\n    }\r\n  }\r\n\r\n  if (dataOptions) {\r\n    if (__DEV__ && !isFunction(dataOptions)) {\r\n      warn(\r\n        `The data option must be a function. ` +\r\n          `Plain object usage is no longer supported.`\r\n      )\r\n    }\r\n    const data = (dataOptions as any).call(publicThis, publicThis)\r\n    if (__DEV__ && isPromise(data)) {\r\n      warn(\r\n        `data() returned a Promise - note data() cannot be async; If you ` +\r\n          `intend to perform data fetching before component renders, use ` +\r\n          `async setup() + <Suspense>.`\r\n      )\r\n    }\r\n    if (!isObject(data)) {\r\n      __DEV__ && warn(`data() should return an object.`)\r\n    } else {\r\n      instance.data = reactive(data)\r\n      if (__DEV__) {\r\n        for (const key in data) {\r\n          checkDuplicateProperties!(OptionTypes.DATA, key)\r\n          // expose data on ctx during dev\r\n          if (key[0] !== '$' && key[0] !== '_') {\r\n            Object.defineProperty(ctx, key, {\r\n              configurable: true,\r\n              enumerable: true,\r\n              get: () => data[key],\r\n              set: NOOP\r\n            })\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  // state initialization complete at this point - start caching access\r\n  shouldCacheAccess = true\r\n\r\n  if (computedOptions) {\r\n    for (const key in computedOptions) {\r\n      const opt = (computedOptions as ComputedOptions)[key]\r\n      const get = isFunction(opt)\r\n        ? opt.bind(publicThis, publicThis)\r\n        : isFunction(opt.get)\r\n        ? opt.get.bind(publicThis, publicThis)\r\n        : NOOP\r\n      if (__DEV__ && get === NOOP) {\r\n        warn(`Computed property \"${key}\" has no getter.`)\r\n      }\r\n      const set =\r\n        !isFunction(opt) && isFunction(opt.set)\r\n          ? opt.set.bind(publicThis)\r\n          : __DEV__\r\n          ? () => {\r\n              warn(\r\n                `Write operation failed: computed property \"${key}\" is readonly.`\r\n              )\r\n            }\r\n          : NOOP\r\n      const c = computed({\r\n        get,\r\n        set\r\n      })\r\n      Object.defineProperty(ctx, key, {\r\n        enumerable: true,\r\n        configurable: true,\r\n        get: () => c.value,\r\n        set: v => (c.value = v)\r\n      })\r\n      if (__DEV__) {\r\n        checkDuplicateProperties!(OptionTypes.COMPUTED, key)\r\n      }\r\n    }\r\n  }\r\n\r\n  if (watchOptions) {\r\n    for (const key in watchOptions) {\r\n      createWatcher(watchOptions[key], ctx, publicThis, key)\r\n    }\r\n  }\r\n\r\n  if (provideOptions) {\r\n    const provides = isFunction(provideOptions)\r\n      ? provideOptions.call(publicThis)\r\n      : provideOptions\r\n    Reflect.ownKeys(provides).forEach(key => {\r\n      provide(key, provides[key])\r\n    })\r\n  }\r\n\r\n  if (created) {\r\n    callHook(created, instance, LifecycleHooks.CREATED)\r\n  }\r\n\r\n  function registerLifecycleHook(\r\n    register: Function,\r\n    hook?: Function | Function[]\r\n  ) {\r\n    if (isArray(hook)) {\r\n      hook.forEach(_hook => register(_hook.bind(publicThis)))\r\n    } else if (hook) {\r\n      register((hook as Function).bind(publicThis))\r\n    }\r\n  }\r\n\r\n  registerLifecycleHook(onBeforeMount, beforeMount)\r\n  registerLifecycleHook(onMounted, mounted)\r\n  registerLifecycleHook(onBeforeUpdate, beforeUpdate)\r\n  registerLifecycleHook(onUpdated, updated)\r\n  registerLifecycleHook(onActivated, activated)\r\n  registerLifecycleHook(onDeactivated, deactivated)\r\n  registerLifecycleHook(onErrorCaptured, errorCaptured)\r\n  registerLifecycleHook(onRenderTracked, renderTracked)\r\n  registerLifecycleHook(onRenderTriggered, renderTriggered)\r\n  registerLifecycleHook(onBeforeUnmount, beforeUnmount)\r\n  registerLifecycleHook(onUnmounted, unmounted)\r\n  registerLifecycleHook(onServerPrefetch, serverPrefetch)\r\n\r\n  if (__COMPAT__) {\r\n    if (\r\n      beforeDestroy &&\r\n      softAssertCompatEnabled(DeprecationTypes.OPTIONS_BEFORE_DESTROY, instance)\r\n    ) {\r\n      registerLifecycleHook(onBeforeUnmount, beforeDestroy)\r\n    }\r\n    if (\r\n      destroyed &&\r\n      softAssertCompatEnabled(DeprecationTypes.OPTIONS_DESTROYED, instance)\r\n    ) {\r\n      registerLifecycleHook(onUnmounted, destroyed)\r\n    }\r\n  }\r\n\r\n  if (isArray(expose)) {\r\n    if (expose.length) {\r\n      const exposed = instance.exposed || (instance.exposed = {})\r\n      expose.forEach(key => {\r\n        Object.defineProperty(exposed, key, {\r\n          get: () => publicThis[key],\r\n          set: val => (publicThis[key] = val)\r\n        })\r\n      })\r\n    } else if (!instance.exposed) {\r\n      instance.exposed = {}\r\n    }\r\n  }\r\n\r\n  // options that are handled when creating the instance but also need to be\r\n  // applied from mixins\r\n  if (render && instance.render === NOOP) {\r\n    instance.render = render as InternalRenderFunction\r\n  }\r\n  if (inheritAttrs != null) {\r\n    instance.inheritAttrs = inheritAttrs\r\n  }\r\n\r\n  // asset options.\r\n  if (components) instance.components = components as any\r\n  if (directives) instance.directives = directives\r\n  if (\r\n    __COMPAT__ &&\r\n    filters &&\r\n    isCompatEnabled(DeprecationTypes.FILTERS, instance)\r\n  ) {\r\n    instance.filters = filters\r\n  }\r\n}\r\n\r\nexport function resolveInjections(\r\n  injectOptions: ComponentInjectOptions,\r\n  ctx: any,\r\n  checkDuplicateProperties = NOOP as any,\r\n  unwrapRef = false\r\n) {\r\n  if (isArray(injectOptions)) {\r\n    injectOptions = normalizeInject(injectOptions)!\r\n  }\r\n  for (const key in injectOptions) {\r\n    const opt = (injectOptions as ObjectInjectOptions)[key]\r\n    let injected: unknown\r\n    if (isObject(opt)) {\r\n      if ('default' in opt) {\r\n        injected = inject(\r\n          opt.from || key,\r\n          opt.default,\r\n          true /* treat default function as factory */\r\n        )\r\n      } else {\r\n        injected = inject(opt.from || key)\r\n      }\r\n    } else {\r\n      injected = inject(opt)\r\n    }\r\n    if (isRef(injected)) {\r\n      // TODO remove the check in 3.3\r\n      if (unwrapRef) {\r\n        Object.defineProperty(ctx, key, {\r\n          enumerable: true,\r\n          configurable: true,\r\n          get: () => (injected as Ref).value,\r\n          set: v => ((injected as Ref).value = v)\r\n        })\r\n      } else {\r\n        if (__DEV__) {\r\n          warn(\r\n            `injected property \"${key}\" is a ref and will be auto-unwrapped ` +\r\n              `and no longer needs \\`.value\\` in the next minor release. ` +\r\n              `To opt-in to the new behavior now, ` +\r\n              `set \\`app.config.unwrapInjectedRef = true\\` (this config is ` +\r\n              `temporary and will not be needed in the future.)`\r\n          )\r\n        }\r\n        ctx[key] = injected\r\n      }\r\n    } else {\r\n      ctx[key] = injected\r\n    }\r\n    if (__DEV__) {\r\n      checkDuplicateProperties!(OptionTypes.INJECT, key)\r\n    }\r\n  }\r\n}\r\n\r\nfunction callHook(\r\n  hook: Function,\r\n  instance: ComponentInternalInstance,\r\n  type: LifecycleHooks\r\n) {\r\n  callWithAsyncErrorHandling(\r\n    isArray(hook)\r\n      ? hook.map(h => h.bind(instance.proxy!))\r\n      : hook.bind(instance.proxy!),\r\n    instance,\r\n    type\r\n  )\r\n}\r\n\r\nexport function createWatcher(\r\n  raw: ComponentWatchOptionItem,\r\n  ctx: Data,\r\n  publicThis: ComponentPublicInstance,\r\n  key: string\r\n) {\r\n  const getter = key.includes('.')\r\n    ? createPathGetter(publicThis, key)\r\n    : () => (publicThis as any)[key]\r\n  if (isString(raw)) {\r\n    const handler = ctx[raw]\r\n    if (isFunction(handler)) {\r\n      watch(getter, handler as WatchCallback)\r\n    } else if (__DEV__) {\r\n      warn(`Invalid watch handler specified by key \"${raw}\"`, handler)\r\n    }\r\n  } else if (isFunction(raw)) {\r\n    watch(getter, raw.bind(publicThis))\r\n  } else if (isObject(raw)) {\r\n    if (isArray(raw)) {\r\n      raw.forEach(r => createWatcher(r, ctx, publicThis, key))\r\n    } else {\r\n      const handler = isFunction(raw.handler)\r\n        ? raw.handler.bind(publicThis)\r\n        : (ctx[raw.handler] as WatchCallback)\r\n      if (isFunction(handler)) {\r\n        watch(getter, handler, raw)\r\n      } else if (__DEV__) {\r\n        warn(`Invalid watch handler specified by key \"${raw.handler}\"`, handler)\r\n      }\r\n    }\r\n  } else if (__DEV__) {\r\n    warn(`Invalid watch option: \"${key}\"`, raw)\r\n  }\r\n}\r\n\r\n/**\r\n * Resolve merged options and cache it on the component.\r\n * This is done only once per-component since the merging does not involve\r\n * instances.\r\n */\r\nexport function resolveMergedOptions(\r\n  instance: ComponentInternalInstance\r\n): MergedComponentOptions {\r\n  const base = instance.type as ComponentOptions\r\n  const { mixins, extends: extendsOptions } = base\r\n  const {\r\n    mixins: globalMixins,\r\n    optionsCache: cache,\r\n    config: { optionMergeStrategies }\r\n  } = instance.appContext\r\n  const cached = cache.get(base)\r\n\r\n  let resolved: MergedComponentOptions\r\n\r\n  if (cached) {\r\n    resolved = cached\r\n  } else if (!globalMixins.length && !mixins && !extendsOptions) {\r\n    if (\r\n      __COMPAT__ &&\r\n      isCompatEnabled(DeprecationTypes.PRIVATE_APIS, instance)\r\n    ) {\r\n      resolved = extend({}, base) as MergedComponentOptions\r\n      resolved.parent = instance.parent && instance.parent.proxy\r\n      resolved.propsData = instance.vnode.props\r\n    } else {\r\n      resolved = base as MergedComponentOptions\r\n    }\r\n  } else {\r\n    resolved = {}\r\n    if (globalMixins.length) {\r\n      globalMixins.forEach(m =>\r\n        mergeOptions(resolved, m, optionMergeStrategies, true)\r\n      )\r\n    }\r\n    mergeOptions(resolved, base, optionMergeStrategies)\r\n  }\r\n\r\n  cache.set(base, resolved)\r\n  return resolved\r\n}\r\n\r\nexport function mergeOptions(\r\n  to: any,\r\n  from: any,\r\n  strats: Record<string, OptionMergeFunction>,\r\n  asMixin = false\r\n) {\r\n  if (__COMPAT__ && isFunction(from)) {\r\n    from = from.options\r\n  }\r\n\r\n  const { mixins, extends: extendsOptions } = from\r\n\r\n  if (extendsOptions) {\r\n    mergeOptions(to, extendsOptions, strats, true)\r\n  }\r\n  if (mixins) {\r\n    mixins.forEach((m: ComponentOptionsMixin) =>\r\n      mergeOptions(to, m, strats, true)\r\n    )\r\n  }\r\n\r\n  for (const key in from) {\r\n    if (asMixin && key === 'expose') {\r\n      __DEV__ &&\r\n        warn(\r\n          `\"expose\" option is ignored when declared in mixins or extends. ` +\r\n            `It should only be declared in the base component itself.`\r\n        )\r\n    } else {\r\n      const strat = internalOptionMergeStrats[key] || (strats && strats[key])\r\n      to[key] = strat ? strat(to[key], from[key]) : from[key]\r\n    }\r\n  }\r\n  return to\r\n}\r\n\r\nexport const internalOptionMergeStrats: Record<string, Function> = {\r\n  data: mergeDataFn,\r\n  props: mergeObjectOptions, // TODO\r\n  emits: mergeObjectOptions, // TODO\r\n  // objects\r\n  methods: mergeObjectOptions,\r\n  computed: mergeObjectOptions,\r\n  // lifecycle\r\n  beforeCreate: mergeAsArray,\r\n  created: mergeAsArray,\r\n  beforeMount: mergeAsArray,\r\n  mounted: mergeAsArray,\r\n  beforeUpdate: mergeAsArray,\r\n  updated: mergeAsArray,\r\n  beforeDestroy: mergeAsArray,\r\n  destroyed: mergeAsArray,\r\n  activated: mergeAsArray,\r\n  deactivated: mergeAsArray,\r\n  errorCaptured: mergeAsArray,\r\n  serverPrefetch: mergeAsArray,\r\n  // assets\r\n  components: mergeObjectOptions,\r\n  directives: mergeObjectOptions,\r\n  // watch\r\n  watch: mergeWatchOptions,\r\n  // provide / inject\r\n  provide: mergeDataFn,\r\n  inject: mergeInject\r\n}\r\n\r\nif (__COMPAT__) {\r\n  internalOptionMergeStrats.filters = mergeObjectOptions\r\n}\r\n\r\nfunction mergeDataFn(to: any, from: any) {\r\n  if (!from) {\r\n    return to\r\n  }\r\n  if (!to) {\r\n    return from\r\n  }\r\n  return function mergedDataFn(this: ComponentPublicInstance) {\r\n    return (\r\n      __COMPAT__ && isCompatEnabled(DeprecationTypes.OPTIONS_DATA_MERGE, null)\r\n        ? deepMergeData\r\n        : extend\r\n    )(\r\n      isFunction(to) ? to.call(this, this) : to,\r\n      isFunction(from) ? from.call(this, this) : from\r\n    )\r\n  }\r\n}\r\n\r\nfunction mergeInject(\r\n  to: ComponentInjectOptions | undefined,\r\n  from: ComponentInjectOptions\r\n) {\r\n  return mergeObjectOptions(normalizeInject(to), normalizeInject(from))\r\n}\r\n\r\nfunction normalizeInject(\r\n  raw: ComponentInjectOptions | undefined\r\n): ObjectInjectOptions | undefined {\r\n  if (isArray(raw)) {\r\n    const res: ObjectInjectOptions = {}\r\n    for (let i = 0; i < raw.length; i++) {\r\n      res[raw[i]] = raw[i]\r\n    }\r\n    return res\r\n  }\r\n  return raw\r\n}\r\n\r\nfunction mergeAsArray<T = Function>(to: T[] | T | undefined, from: T | T[]) {\r\n  return to ? [...new Set([].concat(to as any, from as any))] : from\r\n}\r\n\r\nfunction mergeObjectOptions(to: Object | undefined, from: Object | undefined) {\r\n  return to ? extend(extend(Object.create(null), to), from) : from\r\n}\r\n\r\nfunction mergeWatchOptions(\r\n  to: ComponentWatchOptions | undefined,\r\n  from: ComponentWatchOptions | undefined\r\n) {\r\n  if (!to) return from\r\n  if (!from) return to\r\n  const merged = extend(Object.create(null), to)\r\n  for (const key in from) {\r\n    merged[key] = mergeAsArray(to[key], from[key])\r\n  }\r\n  return merged\r\n}\r\n","import {\r\n  toRaw,\r\n  shallowReactive,\r\n  trigger,\r\n  TriggerOpTypes\r\n} from '@vue/reactivity'\r\nimport {\r\n  EMPTY_OBJ,\r\n  camelize,\r\n  hyphenate,\r\n  capitalize,\r\n  isString,\r\n  isFunction,\r\n  isArray,\r\n  isObject,\r\n  hasOwn,\r\n  toRawType,\r\n  PatchFlags,\r\n  makeMap,\r\n  isReservedProp,\r\n  EMPTY_ARR,\r\n  def,\r\n  extend,\r\n  isOn\r\n} from '@vue/shared'\r\nimport { warn } from './warning'\r\nimport {\r\n  Data,\r\n  ComponentInternalInstance,\r\n  ComponentOptions,\r\n  ConcreteComponent,\r\n  setCurrentInstance,\r\n  unsetCurrentInstance\r\n} from './component'\r\nimport { isEmitListener } from './componentEmits'\r\nimport { InternalObjectKey } from './vnode'\r\nimport { AppContext } from './apiCreateApp'\r\nimport { createPropsDefaultThis } from './compat/props'\r\nimport { isCompatEnabled, softAssertCompatEnabled } from './compat/compatConfig'\r\nimport { DeprecationTypes } from './compat/compatConfig'\r\nimport { shouldSkipAttr } from './compat/attrsFallthrough'\r\n\r\nexport type ComponentPropsOptions<P = Data> =\r\n  | ComponentObjectPropsOptions<P>\r\n  | string[]\r\n\r\nexport type ComponentObjectPropsOptions<P = Data> = {\r\n  [K in keyof P]: Prop<P[K]> | null\r\n}\r\n\r\nexport type Prop<T, D = T> = PropOptions<T, D> | PropType<T>\r\n\r\ntype DefaultFactory<T> = (props: Data) => T | null | undefined\r\n\r\nexport interface PropOptions<T = any, D = T> {\r\n  type?: PropType<T> | true | null\r\n  required?: boolean\r\n  default?: D | DefaultFactory<D> | null | undefined | object\r\n  validator?(value: unknown): boolean\r\n}\r\n\r\nexport type PropType<T> = PropConstructor<T> | PropConstructor<T>[]\r\n\r\ntype PropConstructor<T = any> =\r\n  | { new (...args: any[]): T & {} }\r\n  | { (): T }\r\n  | PropMethod<T>\r\n\r\ntype PropMethod<T, TConstructor = any> = [T] extends [(...args: any) => any] // if is function with args\r\n  ? { new (): TConstructor; (): T; readonly prototype: TConstructor } // Create Function like constructor\r\n  : never\r\n\r\ntype RequiredKeys<T> = {\r\n  [K in keyof T]: T[K] extends\r\n    | { required: true }\r\n    | { default: any }\r\n    // don't mark Boolean props as undefined\r\n    | BooleanConstructor\r\n    | { type: BooleanConstructor }\r\n    ? T[K] extends { default: undefined | (() => undefined) }\r\n      ? never\r\n      : K\r\n    : never\r\n}[keyof T]\r\n\r\ntype OptionalKeys<T> = Exclude<keyof T, RequiredKeys<T>>\r\n\r\ntype DefaultKeys<T> = {\r\n  [K in keyof T]: T[K] extends\r\n    | { default: any }\r\n    // Boolean implicitly defaults to false\r\n    | BooleanConstructor\r\n    | { type: BooleanConstructor }\r\n    ? T[K] extends { type: BooleanConstructor; required: true } // not default if Boolean is marked as required\r\n      ? never\r\n      : K\r\n    : never\r\n}[keyof T]\r\n\r\ntype InferPropType<T> = [T] extends [null]\r\n  ? any // null & true would fail to infer\r\n  : [T] extends [{ type: null | true }]\r\n  ? any // As TS issue https://github.com/Microsoft/TypeScript/issues/14829 // somehow `ObjectConstructor` when inferred from { (): T } becomes `any` // `BooleanConstructor` when inferred from PropConstructor(with PropMethod) becomes `Boolean`\r\n  : [T] extends [ObjectConstructor | { type: ObjectConstructor }]\r\n  ? Record<string, any>\r\n  : [T] extends [BooleanConstructor | { type: BooleanConstructor }]\r\n  ? boolean\r\n  : [T] extends [DateConstructor | { type: DateConstructor }]\r\n  ? Date\r\n  : [T] extends [Prop<infer V, infer D>]\r\n  ? unknown extends V\r\n    ? D\r\n    : V\r\n  : T\r\n\r\nexport type ExtractPropTypes<O> = O extends object\r\n  ? { [K in keyof O]?: unknown } & // This is needed to keep the relation between the option prop and the props, allowing to use ctrl+click to navigate to the prop options. see: #3656\r\n      { [K in RequiredKeys<O>]: InferPropType<O[K]> } &\r\n      { [K in OptionalKeys<O>]?: InferPropType<O[K]> }\r\n  : { [K in string]: any }\r\n\r\nconst enum BooleanFlags {\r\n  shouldCast,\r\n  shouldCastTrue\r\n}\r\n\r\n// extract props which defined with default from prop options\r\nexport type ExtractDefaultPropTypes<O> = O extends object\r\n  ? { [K in DefaultKeys<O>]: InferPropType<O[K]> }\r\n  : {}\r\n\r\ntype NormalizedProp =\r\n  | null\r\n  | (PropOptions & {\r\n      [BooleanFlags.shouldCast]?: boolean\r\n      [BooleanFlags.shouldCastTrue]?: boolean\r\n    })\r\n\r\n// normalized value is a tuple of the actual normalized options\r\n// and an array of prop keys that need value casting (booleans and defaults)\r\nexport type NormalizedProps = Record<string, NormalizedProp>\r\nexport type NormalizedPropsOptions = [NormalizedProps, string[]] | []\r\n\r\nexport function initProps(\r\n  instance: ComponentInternalInstance,\r\n  rawProps: Data | null,\r\n  isStateful: number, // result of bitwise flag comparison\r\n  isSSR = false\r\n) {\r\n  const props: Data = {}\r\n  const attrs: Data = {}\r\n  def(attrs, InternalObjectKey, 1)\r\n\r\n  instance.propsDefaults = Object.create(null)\r\n\r\n  setFullProps(instance, rawProps, props, attrs)\r\n\r\n  // ensure all declared prop keys are present\r\n  for (const key in instance.propsOptions[0]) {\r\n    if (!(key in props)) {\r\n      props[key] = undefined\r\n    }\r\n  }\r\n\r\n  // validation\r\n  if (__DEV__) {\r\n    validateProps(rawProps || {}, props, instance)\r\n  }\r\n\r\n  if (isStateful) {\r\n    // stateful\r\n    instance.props = isSSR ? props : shallowReactive(props)\r\n  } else {\r\n    if (!instance.type.props) {\r\n      // functional w/ optional props, props === attrs\r\n      instance.props = attrs\r\n    } else {\r\n      // functional w/ declared props\r\n      instance.props = props\r\n    }\r\n  }\r\n  instance.attrs = attrs\r\n}\r\n\r\nexport function updateProps(\r\n  instance: ComponentInternalInstance,\r\n  rawProps: Data | null,\r\n  rawPrevProps: Data | null,\r\n  optimized: boolean\r\n) {\r\n  const {\r\n    props,\r\n    attrs,\r\n    vnode: { patchFlag }\r\n  } = instance\r\n  const rawCurrentProps = toRaw(props)\r\n  const [options] = instance.propsOptions\r\n  let hasAttrsChanged = false\r\n\r\n  if (\r\n    // always force full diff in dev\r\n    // - #1942 if hmr is enabled with sfc component\r\n    // - vite#872 non-sfc component used by sfc component\r\n    !(\r\n      __DEV__ &&\r\n      (instance.type.__hmrId ||\r\n        (instance.parent && instance.parent.type.__hmrId))\r\n    ) &&\r\n    (optimized || patchFlag > 0) &&\r\n    !(patchFlag & PatchFlags.FULL_PROPS)\r\n  ) {\r\n    if (patchFlag & PatchFlags.PROPS) {\r\n      // Compiler-generated props & no keys change, just set the updated\r\n      // the props.\r\n      const propsToUpdate = instance.vnode.dynamicProps!\r\n      for (let i = 0; i < propsToUpdate.length; i++) {\r\n        let key = propsToUpdate[i]\r\n        // PROPS flag guarantees rawProps to be non-null\r\n        const value = rawProps![key]\r\n        if (options) {\r\n          // attr / props separation was done on init and will be consistent\r\n          // in this code path, so just check if attrs have it.\r\n          if (hasOwn(attrs, key)) {\r\n            if (value !== attrs[key]) {\r\n              attrs[key] = value\r\n              hasAttrsChanged = true\r\n            }\r\n          } else {\r\n            const camelizedKey = camelize(key)\r\n            props[camelizedKey] = resolvePropValue(\r\n              options,\r\n              rawCurrentProps,\r\n              camelizedKey,\r\n              value,\r\n              instance,\r\n              false /* isAbsent */\r\n            )\r\n          }\r\n        } else {\r\n          if (__COMPAT__) {\r\n            if (isOn(key) && key.endsWith('Native')) {\r\n              key = key.slice(0, -6) // remove Native postfix\r\n            } else if (shouldSkipAttr(key, instance)) {\r\n              continue\r\n            }\r\n          }\r\n          if (value !== attrs[key]) {\r\n            attrs[key] = value\r\n            hasAttrsChanged = true\r\n          }\r\n        }\r\n      }\r\n    }\r\n  } else {\r\n    // full props update.\r\n    if (setFullProps(instance, rawProps, props, attrs)) {\r\n      hasAttrsChanged = true\r\n    }\r\n    // in case of dynamic props, check if we need to delete keys from\r\n    // the props object\r\n    let kebabKey: string\r\n    for (const key in rawCurrentProps) {\r\n      if (\r\n        !rawProps ||\r\n        // for camelCase\r\n        (!hasOwn(rawProps, key) &&\r\n          // it's possible the original props was passed in as kebab-case\r\n          // and converted to camelCase (#955)\r\n          ((kebabKey = hyphenate(key)) === key || !hasOwn(rawProps, kebabKey)))\r\n      ) {\r\n        if (options) {\r\n          if (\r\n            rawPrevProps &&\r\n            // for camelCase\r\n            (rawPrevProps[key] !== undefined ||\r\n              // for kebab-case\r\n              rawPrevProps[kebabKey!] !== undefined)\r\n          ) {\r\n            props[key] = resolvePropValue(\r\n              options,\r\n              rawCurrentProps,\r\n              key,\r\n              undefined,\r\n              instance,\r\n              true /* isAbsent */\r\n            )\r\n          }\r\n        } else {\r\n          delete props[key]\r\n        }\r\n      }\r\n    }\r\n    // in the case of functional component w/o props declaration, props and\r\n    // attrs point to the same object so it should already have been updated.\r\n    if (attrs !== rawCurrentProps) {\r\n      for (const key in attrs) {\r\n        if (!rawProps || !hasOwn(rawProps, key)) {\r\n          delete attrs[key]\r\n          hasAttrsChanged = true\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  // trigger updates for $attrs in case it's used in component slots\r\n  if (hasAttrsChanged) {\r\n    trigger(instance, TriggerOpTypes.SET, '$attrs')\r\n  }\r\n\r\n  if (__DEV__) {\r\n    validateProps(rawProps || {}, props, instance)\r\n  }\r\n}\r\n\r\nfunction setFullProps(\r\n  instance: ComponentInternalInstance,\r\n  rawProps: Data | null,\r\n  props: Data,\r\n  attrs: Data\r\n) {\r\n  const [options, needCastKeys] = instance.propsOptions\r\n  let hasAttrsChanged = false\r\n  let rawCastValues: Data | undefined\r\n  if (rawProps) {\r\n    for (let key in rawProps) {\r\n      // key, ref are reserved and never passed down\r\n      if (isReservedProp(key)) {\r\n        continue\r\n      }\r\n\r\n      if (__COMPAT__) {\r\n        if (key.startsWith('onHook:')) {\r\n          softAssertCompatEnabled(\r\n            DeprecationTypes.INSTANCE_EVENT_HOOKS,\r\n            instance,\r\n            key.slice(2).toLowerCase()\r\n          )\r\n        }\r\n        if (key === 'inline-template') {\r\n          continue\r\n        }\r\n      }\r\n\r\n      const value = rawProps[key]\r\n      // prop option names are camelized during normalization, so to support\r\n      // kebab -> camel conversion here we need to camelize the key.\r\n      let camelKey\r\n      if (options && hasOwn(options, (camelKey = camelize(key)))) {\r\n        if (!needCastKeys || !needCastKeys.includes(camelKey)) {\r\n          props[camelKey] = value\r\n        } else {\r\n          ;(rawCastValues || (rawCastValues = {}))[camelKey] = value\r\n        }\r\n      } else if (!isEmitListener(instance.emitsOptions, key)) {\r\n        // Any non-declared (either as a prop or an emitted event) props are put\r\n        // into a separate `attrs` object for spreading. Make sure to preserve\r\n        // original key casing\r\n        if (__COMPAT__) {\r\n          if (isOn(key) && key.endsWith('Native')) {\r\n            key = key.slice(0, -6) // remove Native postfix\r\n          } else if (shouldSkipAttr(key, instance)) {\r\n            continue\r\n          }\r\n        }\r\n        if (value !== attrs[key]) {\r\n          attrs[key] = value\r\n          hasAttrsChanged = true\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  if (needCastKeys) {\r\n    const rawCurrentProps = toRaw(props)\r\n    const castValues = rawCastValues || EMPTY_OBJ\r\n    for (let i = 0; i < needCastKeys.length; i++) {\r\n      const key = needCastKeys[i]\r\n      props[key] = resolvePropValue(\r\n        options!,\r\n        rawCurrentProps,\r\n        key,\r\n        castValues[key],\r\n        instance,\r\n        !hasOwn(castValues, key)\r\n      )\r\n    }\r\n  }\r\n\r\n  return hasAttrsChanged\r\n}\r\n\r\nfunction resolvePropValue(\r\n  options: NormalizedProps,\r\n  props: Data,\r\n  key: string,\r\n  value: unknown,\r\n  instance: ComponentInternalInstance,\r\n  isAbsent: boolean\r\n) {\r\n  const opt = options[key]\r\n  if (opt != null) {\r\n    const hasDefault = hasOwn(opt, 'default')\r\n    // default values\r\n    if (hasDefault && value === undefined) {\r\n      const defaultValue = opt.default\r\n      if (opt.type !== Function && isFunction(defaultValue)) {\r\n        const { propsDefaults } = instance\r\n        if (key in propsDefaults) {\r\n          value = propsDefaults[key]\r\n        } else {\r\n          setCurrentInstance(instance)\r\n          value = propsDefaults[key] = defaultValue.call(\r\n            __COMPAT__ &&\r\n              isCompatEnabled(DeprecationTypes.PROPS_DEFAULT_THIS, instance)\r\n              ? createPropsDefaultThis(instance, props, key)\r\n              : null,\r\n            props\r\n          )\r\n          unsetCurrentInstance()\r\n        }\r\n      } else {\r\n        value = defaultValue\r\n      }\r\n    }\r\n    // boolean casting\r\n    if (opt[BooleanFlags.shouldCast]) {\r\n      if (isAbsent && !hasDefault) {\r\n        value = false\r\n      } else if (\r\n        opt[BooleanFlags.shouldCastTrue] &&\r\n        (value === '' || value === hyphenate(key))\r\n      ) {\r\n        value = true\r\n      }\r\n    }\r\n  }\r\n  return value\r\n}\r\n\r\nexport function normalizePropsOptions(\r\n  comp: ConcreteComponent,\r\n  appContext: AppContext,\r\n  asMixin = false\r\n): NormalizedPropsOptions {\r\n  const cache = appContext.propsCache\r\n  const cached = cache.get(comp)\r\n  if (cached) {\r\n    return cached\r\n  }\r\n\r\n  const raw = comp.props\r\n  const normalized: NormalizedPropsOptions[0] = {}\r\n  const needCastKeys: NormalizedPropsOptions[1] = []\r\n\r\n  // apply mixin/extends props\r\n  let hasExtends = false\r\n  if (__FEATURE_OPTIONS_API__ && !isFunction(comp)) {\r\n    const extendProps = (raw: ComponentOptions) => {\r\n      if (__COMPAT__ && isFunction(raw)) {\r\n        raw = raw.options\r\n      }\r\n      hasExtends = true\r\n      const [props, keys] = normalizePropsOptions(raw, appContext, true)\r\n      extend(normalized, props)\r\n      if (keys) needCastKeys.push(...keys)\r\n    }\r\n    if (!asMixin && appContext.mixins.length) {\r\n      appContext.mixins.forEach(extendProps)\r\n    }\r\n    if (comp.extends) {\r\n      extendProps(comp.extends)\r\n    }\r\n    if (comp.mixins) {\r\n      comp.mixins.forEach(extendProps)\r\n    }\r\n  }\r\n\r\n  if (!raw && !hasExtends) {\r\n    cache.set(comp, EMPTY_ARR as any)\r\n    return EMPTY_ARR as any\r\n  }\r\n\r\n  if (isArray(raw)) {\r\n    for (let i = 0; i < raw.length; i++) {\r\n      if (__DEV__ && !isString(raw[i])) {\r\n        warn(`props must be strings when using array syntax.`, raw[i])\r\n      }\r\n      const normalizedKey = camelize(raw[i])\r\n      if (validatePropName(normalizedKey)) {\r\n        normalized[normalizedKey] = EMPTY_OBJ\r\n      }\r\n    }\r\n  } else if (raw) {\r\n    if (__DEV__ && !isObject(raw)) {\r\n      warn(`invalid props options`, raw)\r\n    }\r\n    for (const key in raw) {\r\n      const normalizedKey = camelize(key)\r\n      if (validatePropName(normalizedKey)) {\r\n        const opt = raw[key]\r\n        const prop: NormalizedProp = (normalized[normalizedKey] =\r\n          isArray(opt) || isFunction(opt) ? { type: opt } : opt)\r\n        if (prop) {\r\n          const booleanIndex = getTypeIndex(Boolean, prop.type)\r\n          const stringIndex = getTypeIndex(String, prop.type)\r\n          prop[BooleanFlags.shouldCast] = booleanIndex > -1\r\n          prop[BooleanFlags.shouldCastTrue] =\r\n            stringIndex < 0 || booleanIndex < stringIndex\r\n          // if the prop needs boolean casting or default value\r\n          if (booleanIndex > -1 || hasOwn(prop, 'default')) {\r\n            needCastKeys.push(normalizedKey)\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  const res: NormalizedPropsOptions = [normalized, needCastKeys]\r\n  cache.set(comp, res)\r\n  return res\r\n}\r\n\r\nfunction validatePropName(key: string) {\r\n  if (key[0] !== '$') {\r\n    return true\r\n  } else if (__DEV__) {\r\n    warn(`Invalid prop name: \"${key}\" is a reserved property.`)\r\n  }\r\n  return false\r\n}\r\n\r\n// use function string name to check type constructors\r\n// so that it works across vms / iframes.\r\nfunction getType(ctor: Prop<any>): string {\r\n  const match = ctor && ctor.toString().match(/^\\s*function (\\w+)/)\r\n  return match ? match[1] : ctor === null ? 'null' : ''\r\n}\r\n\r\nfunction isSameType(a: Prop<any>, b: Prop<any>): boolean {\r\n  return getType(a) === getType(b)\r\n}\r\n\r\nfunction getTypeIndex(\r\n  type: Prop<any>,\r\n  expectedTypes: PropType<any> | void | null | true\r\n): number {\r\n  if (isArray(expectedTypes)) {\r\n    return expectedTypes.findIndex(t => isSameType(t, type))\r\n  } else if (isFunction(expectedTypes)) {\r\n    return isSameType(expectedTypes, type) ? 0 : -1\r\n  }\r\n  return -1\r\n}\r\n\r\n/**\r\n * dev only\r\n */\r\nfunction validateProps(\r\n  rawProps: Data,\r\n  props: Data,\r\n  instance: ComponentInternalInstance\r\n) {\r\n  const resolvedValues = toRaw(props)\r\n  const options = instance.propsOptions[0]\r\n  for (const key in options) {\r\n    let opt = options[key]\r\n    if (opt == null) continue\r\n    validateProp(\r\n      key,\r\n      resolvedValues[key],\r\n      opt,\r\n      !hasOwn(rawProps, key) && !hasOwn(rawProps, hyphenate(key))\r\n    )\r\n  }\r\n}\r\n\r\n/**\r\n * dev only\r\n */\r\nfunction validateProp(\r\n  name: string,\r\n  value: unknown,\r\n  prop: PropOptions,\r\n  isAbsent: boolean\r\n) {\r\n  const { type, required, validator } = prop\r\n  // required!\r\n  if (required && isAbsent) {\r\n    warn('Missing required prop: \"' + name + '\"')\r\n    return\r\n  }\r\n  // missing but optional\r\n  if (value == null && !prop.required) {\r\n    return\r\n  }\r\n  // type check\r\n  if (type != null && type !== true) {\r\n    let isValid = false\r\n    const types = isArray(type) ? type : [type]\r\n    const expectedTypes = []\r\n    // value is valid as long as one of the specified types match\r\n    for (let i = 0; i < types.length && !isValid; i++) {\r\n      const { valid, expectedType } = assertType(value, types[i])\r\n      expectedTypes.push(expectedType || '')\r\n      isValid = valid\r\n    }\r\n    if (!isValid) {\r\n      warn(getInvalidTypeMessage(name, value, expectedTypes))\r\n      return\r\n    }\r\n  }\r\n  // custom validator\r\n  if (validator && !validator(value)) {\r\n    warn('Invalid prop: custom validator check failed for prop \"' + name + '\".')\r\n  }\r\n}\r\n\r\nconst isSimpleType = /*#__PURE__*/ makeMap(\r\n  'String,Number,Boolean,Function,Symbol,BigInt'\r\n)\r\n\r\ntype AssertionResult = {\r\n  valid: boolean\r\n  expectedType: string\r\n}\r\n\r\n/**\r\n * dev only\r\n */\r\nfunction assertType(value: unknown, type: PropConstructor): AssertionResult {\r\n  let valid\r\n  const expectedType = getType(type)\r\n  if (isSimpleType(expectedType)) {\r\n    const t = typeof value\r\n    valid = t === expectedType.toLowerCase()\r\n    // for primitive wrapper objects\r\n    if (!valid && t === 'object') {\r\n      valid = value instanceof type\r\n    }\r\n  } else if (expectedType === 'Object') {\r\n    valid = isObject(value)\r\n  } else if (expectedType === 'Array') {\r\n    valid = isArray(value)\r\n  } else if (expectedType === 'null') {\r\n    valid = value === null\r\n  } else {\r\n    valid = value instanceof type\r\n  }\r\n  return {\r\n    valid,\r\n    expectedType\r\n  }\r\n}\r\n\r\n/**\r\n * dev only\r\n */\r\nfunction getInvalidTypeMessage(\r\n  name: string,\r\n  value: unknown,\r\n  expectedTypes: string[]\r\n): string {\r\n  let message =\r\n    `Invalid prop: type check failed for prop \"${name}\".` +\r\n    ` Expected ${expectedTypes.map(capitalize).join(' | ')}`\r\n  const expectedType = expectedTypes[0]\r\n  const receivedType = toRawType(value)\r\n  const expectedValue = styleValue(value, expectedType)\r\n  const receivedValue = styleValue(value, receivedType)\r\n  // check if we need to specify expected value\r\n  if (\r\n    expectedTypes.length === 1 &&\r\n    isExplicable(expectedType) &&\r\n    !isBoolean(expectedType, receivedType)\r\n  ) {\r\n    message += ` with value ${expectedValue}`\r\n  }\r\n  message += `, got ${receivedType} `\r\n  // check if we need to specify received value\r\n  if (isExplicable(receivedType)) {\r\n    message += `with value ${receivedValue}.`\r\n  }\r\n  return message\r\n}\r\n\r\n/**\r\n * dev only\r\n */\r\nfunction styleValue(value: unknown, type: string): string {\r\n  if (type === 'String') {\r\n    return `\"${value}\"`\r\n  } else if (type === 'Number') {\r\n    return `${Number(value)}`\r\n  } else {\r\n    return `${value}`\r\n  }\r\n}\r\n\r\n/**\r\n * dev only\r\n */\r\nfunction isExplicable(type: string): boolean {\r\n  const explicitTypes = ['string', 'number', 'boolean']\r\n  return explicitTypes.some(elem => type.toLowerCase() === elem)\r\n}\r\n\r\n/**\r\n * dev only\r\n */\r\nfunction isBoolean(...args: string[]): boolean {\r\n  return args.some(elem => elem.toLowerCase() === 'boolean')\r\n}\r\n","import { ComponentInternalInstance, currentInstance } from './component'\r\nimport {\r\n  VNode,\r\n  VNodeNormalizedChildren,\r\n  normalizeVNode,\r\n  VNodeChild,\r\n  InternalObjectKey\r\n} from './vnode'\r\nimport {\r\n  isArray,\r\n  isFunction,\r\n  EMPTY_OBJ,\r\n  ShapeFlags,\r\n  extend,\r\n  def,\r\n  SlotFlags\r\n} from '@vue/shared'\r\nimport { warn } from './warning'\r\nimport { isKeepAlive } from './components/KeepAlive'\r\nimport { ContextualRenderFn, withCtx } from './componentRenderContext'\r\nimport { isHmrUpdating } from './hmr'\r\nimport { DeprecationTypes, isCompatEnabled } from './compat/compatConfig'\r\nimport { toRaw } from '@vue/reactivity'\r\n\r\nexport type Slot = (...args: any[]) => VNode[]\r\n\r\nexport type InternalSlots = {\r\n  [name: string]: Slot | undefined\r\n}\r\n\r\nexport type Slots = Readonly<InternalSlots>\r\n\r\nexport type RawSlots = {\r\n  [name: string]: unknown\r\n  // manual render fn hint to skip forced children updates\r\n  $stable?: boolean\r\n  /**\r\n   * for tracking slot owner instance. This is attached during\r\n   * normalizeChildren when the component vnode is created.\r\n   * @internal\r\n   */\r\n  _ctx?: ComponentInternalInstance | null\r\n  /**\r\n   * indicates compiler generated slots\r\n   * we use a reserved property instead of a vnode patchFlag because the slots\r\n   * object may be directly passed down to a child component in a manual\r\n   * render function, and the optimization hint need to be on the slot object\r\n   * itself to be preserved.\r\n   * @internal\r\n   */\r\n  _?: SlotFlags\r\n}\r\n\r\nconst isInternalKey = (key: string) => key[0] === '_' || key === '$stable'\r\n\r\nconst normalizeSlotValue = (value: unknown): VNode[] =>\r\n  isArray(value)\r\n    ? value.map(normalizeVNode)\r\n    : [normalizeVNode(value as VNodeChild)]\r\n\r\nconst normalizeSlot = (\r\n  key: string,\r\n  rawSlot: Function,\r\n  ctx: ComponentInternalInstance | null | undefined\r\n): Slot => {\r\n  const normalized = withCtx((props: any) => {\r\n    if (__DEV__ && currentInstance) {\r\n      warn(\r\n        `Slot \"${key}\" invoked outside of the render function: ` +\r\n          `this will not track dependencies used in the slot. ` +\r\n          `Invoke the slot function inside the render function instead.`\r\n      )\r\n    }\r\n    return normalizeSlotValue(rawSlot(props))\r\n  }, ctx) as Slot\r\n  // NOT a compiled slot\r\n  ;(normalized as ContextualRenderFn)._c = false\r\n  return normalized\r\n}\r\n\r\nconst normalizeObjectSlots = (\r\n  rawSlots: RawSlots,\r\n  slots: InternalSlots,\r\n  instance: ComponentInternalInstance\r\n) => {\r\n  const ctx = rawSlots._ctx\r\n  for (const key in rawSlots) {\r\n    if (isInternalKey(key)) continue\r\n    const value = rawSlots[key]\r\n    if (isFunction(value)) {\r\n      slots[key] = normalizeSlot(key, value, ctx)\r\n    } else if (value != null) {\r\n      if (\r\n        __DEV__ &&\r\n        !(\r\n          __COMPAT__ &&\r\n          isCompatEnabled(DeprecationTypes.RENDER_FUNCTION, instance)\r\n        )\r\n      ) {\r\n        warn(\r\n          `Non-function value encountered for slot \"${key}\". ` +\r\n            `Prefer function slots for better performance.`\r\n        )\r\n      }\r\n      const normalized = normalizeSlotValue(value)\r\n      slots[key] = () => normalized\r\n    }\r\n  }\r\n}\r\n\r\nconst normalizeVNodeSlots = (\r\n  instance: ComponentInternalInstance,\r\n  children: VNodeNormalizedChildren\r\n) => {\r\n  if (\r\n    __DEV__ &&\r\n    !isKeepAlive(instance.vnode) &&\r\n    !(__COMPAT__ && isCompatEnabled(DeprecationTypes.RENDER_FUNCTION, instance))\r\n  ) {\r\n    warn(\r\n      `Non-function value encountered for default slot. ` +\r\n        `Prefer function slots for better performance.`\r\n    )\r\n  }\r\n  const normalized = normalizeSlotValue(children)\r\n  instance.slots.default = () => normalized\r\n}\r\n\r\nexport const initSlots = (\r\n  instance: ComponentInternalInstance,\r\n  children: VNodeNormalizedChildren\r\n) => {\r\n  if (instance.vnode.shapeFlag & ShapeFlags.SLOTS_CHILDREN) {\r\n    const type = (children as RawSlots)._\r\n    if (type) {\r\n      // users can get the shallow readonly version of the slots object through `this.$slots`,\r\n      // we should avoid the proxy object polluting the slots of the internal instance\r\n      instance.slots = toRaw(children as InternalSlots)\r\n      // make compiler marker non-enumerable\r\n      def(children as InternalSlots, '_', type)\r\n    } else {\r\n      normalizeObjectSlots(\r\n        children as RawSlots,\r\n        (instance.slots = {}),\r\n        instance\r\n      )\r\n    }\r\n  } else {\r\n    instance.slots = {}\r\n    if (children) {\r\n      normalizeVNodeSlots(instance, children)\r\n    }\r\n  }\r\n  def(instance.slots, InternalObjectKey, 1)\r\n}\r\n\r\nexport const updateSlots = (\r\n  instance: ComponentInternalInstance,\r\n  children: VNodeNormalizedChildren,\r\n  optimized: boolean\r\n) => {\r\n  const { vnode, slots } = instance\r\n  let needDeletionCheck = true\r\n  let deletionComparisonTarget = EMPTY_OBJ\r\n  if (vnode.shapeFlag & ShapeFlags.SLOTS_CHILDREN) {\r\n    const type = (children as RawSlots)._\r\n    if (type) {\r\n      // compiled slots.\r\n      if (__DEV__ && isHmrUpdating) {\r\n        // Parent was HMR updated so slot content may have changed.\r\n        // force update slots and mark instance for hmr as well\r\n        extend(slots, children as Slots)\r\n      } else if (optimized && type === SlotFlags.STABLE) {\r\n        // compiled AND stable.\r\n        // no need to update, and skip stale slots removal.\r\n        needDeletionCheck = false\r\n      } else {\r\n        // compiled but dynamic (v-if/v-for on slots) - update slots, but skip\r\n        // normalization.\r\n        extend(slots, children as Slots)\r\n        // #2893\r\n        // when rendering the optimized slots by manually written render function,\r\n        // we need to delete the `slots._` flag if necessary to make subsequent updates reliable,\r\n        // i.e. let the `renderSlot` create the bailed Fragment\r\n        if (!optimized && type === SlotFlags.STABLE) {\r\n          delete slots._\r\n        }\r\n      }\r\n    } else {\r\n      needDeletionCheck = !(children as RawSlots).$stable\r\n      normalizeObjectSlots(children as RawSlots, slots, instance)\r\n    }\r\n    deletionComparisonTarget = children as RawSlots\r\n  } else if (children) {\r\n    // non slot object children (direct value) passed to a component\r\n    normalizeVNodeSlots(instance, children)\r\n    deletionComparisonTarget = { default: 1 }\r\n  }\r\n\r\n  // delete stale slots\r\n  if (needDeletionCheck) {\r\n    for (const key in slots) {\r\n      if (!isInternalKey(key) && !(key in deletionComparisonTarget)) {\r\n        delete slots[key]\r\n      }\r\n    }\r\n  }\r\n}\r\n","/**\r\nRuntime helper for applying directives to a vnode. Example usage:\r\n\r\nconst comp = resolveComponent('comp')\r\nconst foo = resolveDirective('foo')\r\nconst bar = resolveDirective('bar')\r\n\r\nreturn withDirectives(h(comp), [\r\n  [foo, this.x],\r\n  [bar, this.y]\r\n])\r\n*/\r\n\r\nimport { VNode } from './vnode'\r\nimport { isFunction, EMPTY_OBJ, makeMap } from '@vue/shared'\r\nimport { warn } from './warning'\r\nimport { ComponentInternalInstance, Data } from './component'\r\nimport { currentRenderingInstance } from './componentRenderContext'\r\nimport { callWithAsyncErrorHandling, ErrorCodes } from './errorHandling'\r\nimport { ComponentPublicInstance } from './componentPublicInstance'\r\nimport { mapCompatDirectiveHook } from './compat/customDirective'\r\nimport { pauseTracking, resetTracking } from '@vue/reactivity'\r\nimport { traverse } from './apiWatch'\r\n\r\nexport interface DirectiveBinding<V = any> {\r\n  instance: ComponentPublicInstance | null\r\n  value: V\r\n  oldValue: V | null\r\n  arg?: string\r\n  modifiers: DirectiveModifiers\r\n  dir: ObjectDirective<any, V>\r\n}\r\n\r\nexport type DirectiveHook<T = any, Prev = VNode<any, T> | null, V = any> = (\r\n  el: T,\r\n  binding: DirectiveBinding<V>,\r\n  vnode: VNode<any, T>,\r\n  prevVNode: Prev\r\n) => void\r\n\r\nexport type SSRDirectiveHook = (\r\n  binding: DirectiveBinding,\r\n  vnode: VNode\r\n) => Data | undefined\r\n\r\nexport interface ObjectDirective<T = any, V = any> {\r\n  created?: DirectiveHook<T, null, V>\r\n  beforeMount?: DirectiveHook<T, null, V>\r\n  mounted?: DirectiveHook<T, null, V>\r\n  beforeUpdate?: DirectiveHook<T, VNode<any, T>, V>\r\n  updated?: DirectiveHook<T, VNode<any, T>, V>\r\n  beforeUnmount?: DirectiveHook<T, null, V>\r\n  unmounted?: DirectiveHook<T, null, V>\r\n  getSSRProps?: SSRDirectiveHook\r\n  deep?: boolean\r\n}\r\n\r\nexport type FunctionDirective<T = any, V = any> = DirectiveHook<T, any, V>\r\n\r\nexport type Directive<T = any, V = any> =\r\n  | ObjectDirective<T, V>\r\n  | FunctionDirective<T, V>\r\n\r\nexport type DirectiveModifiers = Record<string, boolean>\r\n\r\nconst isBuiltInDirective = /*#__PURE__*/ makeMap(\r\n  'bind,cloak,else-if,else,for,html,if,model,on,once,pre,show,slot,text'\r\n)\r\n\r\nexport function validateDirectiveName(name: string) {\r\n  if (isBuiltInDirective(name)) {\r\n    warn('Do not use built-in directive ids as custom directive id: ' + name)\r\n  }\r\n}\r\n\r\n// Directive, value, argument, modifiers\r\nexport type DirectiveArguments = Array<\r\n  | [Directive]\r\n  | [Directive, any]\r\n  | [Directive, any, string]\r\n  | [Directive, any, string, DirectiveModifiers]\r\n>\r\n\r\n/**\r\n * Adds directives to a VNode.\r\n */\r\nexport function withDirectives<T extends VNode>(\r\n  vnode: T,\r\n  directives: DirectiveArguments\r\n): T {\r\n  const internalInstance = currentRenderingInstance\r\n  if (internalInstance === null) {\r\n    __DEV__ && warn(`withDirectives can only be used inside render functions.`)\r\n    return vnode\r\n  }\r\n  const instance = internalInstance.proxy\r\n  const bindings: DirectiveBinding[] = vnode.dirs || (vnode.dirs = [])\r\n  for (let i = 0; i < directives.length; i++) {\r\n    let [dir, value, arg, modifiers = EMPTY_OBJ] = directives[i]\r\n    if (isFunction(dir)) {\r\n      dir = {\r\n        mounted: dir,\r\n        updated: dir\r\n      } as ObjectDirective\r\n    }\r\n    if (dir.deep) {\r\n      traverse(value)\r\n    }\r\n    bindings.push({\r\n      dir,\r\n      instance,\r\n      value,\r\n      oldValue: void 0,\r\n      arg,\r\n      modifiers\r\n    })\r\n  }\r\n  return vnode\r\n}\r\n\r\nexport function invokeDirectiveHook(\r\n  vnode: VNode,\r\n  prevVNode: VNode | null,\r\n  instance: ComponentInternalInstance | null,\r\n  name: keyof ObjectDirective\r\n) {\r\n  const bindings = vnode.dirs!\r\n  const oldBindings = prevVNode && prevVNode.dirs!\r\n  for (let i = 0; i < bindings.length; i++) {\r\n    const binding = bindings[i]\r\n    if (oldBindings) {\r\n      binding.oldValue = oldBindings[i].value\r\n    }\r\n    let hook = binding.dir[name] as DirectiveHook | DirectiveHook[] | undefined\r\n    if (__COMPAT__ && !hook) {\r\n      hook = mapCompatDirectiveHook(name, binding.dir, instance)\r\n    }\r\n    if (hook) {\r\n      // disable tracking inside all lifecycle hooks\r\n      // since they can potentially be called inside effects.\r\n      pauseTracking()\r\n      callWithAsyncErrorHandling(hook, instance, ErrorCodes.DIRECTIVE_HOOK, [\r\n        vnode.el,\r\n        binding,\r\n        vnode,\r\n        prevVNode\r\n      ])\r\n      resetTracking()\r\n    }\r\n  }\r\n}\r\n","import {\r\n  ConcreteComponent,\r\n  Data,\r\n  validateComponentName,\r\n  Component,\r\n  ComponentInternalInstance\r\n} from './component'\r\nimport {\r\n  ComponentOptions,\r\n  MergedComponentOptions,\r\n  RuntimeCompilerOptions\r\n} from './componentOptions'\r\nimport { ComponentPublicInstance } from './componentPublicInstance'\r\nimport { Directive, validateDirectiveName } from './directives'\r\nimport { RootRenderFunction } from './renderer'\r\nimport { InjectionKey } from './apiInject'\r\nimport { warn } from './warning'\r\nimport { createVNode, cloneVNode, VNode } from './vnode'\r\nimport { RootHydrateFunction } from './hydration'\r\nimport { devtoolsInitApp, devtoolsUnmountApp } from './devtools'\r\nimport { isFunction, NO, isObject } from '@vue/shared'\r\nimport { version } from '.'\r\nimport { installAppCompatProperties } from './compat/global'\r\nimport { NormalizedPropsOptions } from './componentProps'\r\nimport { ObjectEmitsOptions } from './componentEmits'\r\n\r\nexport interface App<HostElement = any> {\r\n  version: string\r\n  config: AppConfig\r\n  use(plugin: Plugin, ...options: any[]): this\r\n  mixin(mixin: ComponentOptions): this\r\n  component(name: string): Component | undefined\r\n  component(name: string, component: Component): this\r\n  directive(name: string): Directive | undefined\r\n  directive(name: string, directive: Directive): this\r\n  mount(\r\n    rootContainer: HostElement | string,\r\n    isHydrate?: boolean,\r\n    isSVG?: boolean\r\n  ): ComponentPublicInstance\r\n  unmount(): void\r\n  provide<T>(key: InjectionKey<T> | string, value: T): this\r\n\r\n  // internal, but we need to expose these for the server-renderer and devtools\r\n  _uid: number\r\n  _component: ConcreteComponent\r\n  _props: Data | null\r\n  _container: HostElement | null\r\n  _context: AppContext\r\n  _instance: ComponentInternalInstance | null\r\n\r\n  /**\r\n   * v2 compat only\r\n   */\r\n  filter?(name: string): Function | undefined\r\n  filter?(name: string, filter: Function): this\r\n\r\n  /**\r\n   * @internal v3 compat only\r\n   */\r\n  _createRoot?(options: ComponentOptions): ComponentPublicInstance\r\n}\r\n\r\nexport type OptionMergeFunction = (to: unknown, from: unknown) => any\r\n\r\nexport interface AppConfig {\r\n  // @private\r\n  readonly isNativeTag?: (tag: string) => boolean\r\n\r\n  performance: boolean\r\n  optionMergeStrategies: Record<string, OptionMergeFunction>\r\n  globalProperties: Record<string, any>\r\n  errorHandler?: (\r\n    err: unknown,\r\n    instance: ComponentPublicInstance | null,\r\n    info: string\r\n  ) => void\r\n  warnHandler?: (\r\n    msg: string,\r\n    instance: ComponentPublicInstance | null,\r\n    trace: string\r\n  ) => void\r\n\r\n  /**\r\n   * Options to pass to @vue/compiler-dom.\r\n   * Only supported in runtime compiler build.\r\n   */\r\n  compilerOptions: RuntimeCompilerOptions\r\n\r\n  /**\r\n   * @deprecated use config.compilerOptions.isCustomElement\r\n   */\r\n  isCustomElement?: (tag: string) => boolean\r\n\r\n  /**\r\n   * Temporary config for opt-in to unwrap injected refs.\r\n   * TODO deprecate in 3.3\r\n   */\r\n  unwrapInjectedRef?: boolean\r\n}\r\n\r\nexport interface AppContext {\r\n  app: App // for devtools\r\n  config: AppConfig\r\n  mixins: ComponentOptions[]\r\n  components: Record<string, Component>\r\n  directives: Record<string, Directive>\r\n  provides: Record<string | symbol, any>\r\n\r\n  /**\r\n   * Cache for merged/normalized component options\r\n   * Each app instance has its own cache because app-level global mixins and\r\n   * optionMergeStrategies can affect merge behavior.\r\n   * @internal\r\n   */\r\n  optionsCache: WeakMap<ComponentOptions, MergedComponentOptions>\r\n  /**\r\n   * Cache for normalized props options\r\n   * @internal\r\n   */\r\n  propsCache: WeakMap<ConcreteComponent, NormalizedPropsOptions>\r\n  /**\r\n   * Cache for normalized emits options\r\n   * @internal\r\n   */\r\n  emitsCache: WeakMap<ConcreteComponent, ObjectEmitsOptions | null>\r\n  /**\r\n   * HMR only\r\n   * @internal\r\n   */\r\n  reload?: () => void\r\n  /**\r\n   * v2 compat only\r\n   * @internal\r\n   */\r\n  filters?: Record<string, Function>\r\n}\r\n\r\ntype PluginInstallFunction = (app: App, ...options: any[]) => any\r\n\r\nexport type Plugin =\r\n  | (PluginInstallFunction & { install?: PluginInstallFunction })\r\n  | {\r\n      install: PluginInstallFunction\r\n    }\r\n\r\nexport function createAppContext(): AppContext {\r\n  return {\r\n    app: null as any,\r\n    config: {\r\n      isNativeTag: NO,\r\n      performance: false,\r\n      globalProperties: {},\r\n      optionMergeStrategies: {},\r\n      errorHandler: undefined,\r\n      warnHandler: undefined,\r\n      compilerOptions: {}\r\n    },\r\n    mixins: [],\r\n    components: {},\r\n    directives: {},\r\n    provides: Object.create(null),\r\n    optionsCache: new WeakMap(),\r\n    propsCache: new WeakMap(),\r\n    emitsCache: new WeakMap()\r\n  }\r\n}\r\n\r\nexport type CreateAppFunction<HostElement> = (\r\n  rootComponent: Component,\r\n  rootProps?: Data | null\r\n) => App<HostElement>\r\n\r\nlet uid = 0\r\n\r\nexport function createAppAPI<HostElement>(\r\n  render: RootRenderFunction,\r\n  hydrate?: RootHydrateFunction\r\n): CreateAppFunction<HostElement> {\r\n  return function createApp(rootComponent, rootProps = null) {\r\n    if (rootProps != null && !isObject(rootProps)) {\r\n      __DEV__ && warn(`root props passed to app.mount() must be an object.`)\r\n      rootProps = null\r\n    }\r\n\r\n    const context = createAppContext()\r\n    const installedPlugins = new Set()\r\n\r\n    let isMounted = false\r\n\r\n    const app: App = (context.app = {\r\n      _uid: uid++,\r\n      _component: rootComponent as ConcreteComponent,\r\n      _props: rootProps,\r\n      _container: null,\r\n      _context: context,\r\n      _instance: null,\r\n\r\n      version,\r\n\r\n      get config() {\r\n        return context.config\r\n      },\r\n\r\n      set config(v) {\r\n        if (__DEV__) {\r\n          warn(\r\n            `app.config cannot be replaced. Modify individual options instead.`\r\n          )\r\n        }\r\n      },\r\n\r\n      use(plugin: Plugin, ...options: any[]) {\r\n        if (installedPlugins.has(plugin)) {\r\n          __DEV__ && warn(`Plugin has already been applied to target app.`)\r\n        } else if (plugin && isFunction(plugin.install)) {\r\n          installedPlugins.add(plugin)\r\n          plugin.install(app, ...options)\r\n        } else if (isFunction(plugin)) {\r\n          installedPlugins.add(plugin)\r\n          plugin(app, ...options)\r\n        } else if (__DEV__) {\r\n          warn(\r\n            `A plugin must either be a function or an object with an \"install\" ` +\r\n              `function.`\r\n          )\r\n        }\r\n        return app\r\n      },\r\n\r\n      mixin(mixin: ComponentOptions) {\r\n        if (__FEATURE_OPTIONS_API__) {\r\n          if (!context.mixins.includes(mixin)) {\r\n            context.mixins.push(mixin)\r\n          } else if (__DEV__) {\r\n            warn(\r\n              'Mixin has already been applied to target app' +\r\n                (mixin.name ? `: ${mixin.name}` : '')\r\n            )\r\n          }\r\n        } else if (__DEV__) {\r\n          warn('Mixins are only available in builds supporting Options API')\r\n        }\r\n        return app\r\n      },\r\n\r\n      component(name: string, component?: Component): any {\r\n        if (__DEV__) {\r\n          validateComponentName(name, context.config)\r\n        }\r\n        if (!component) {\r\n          return context.components[name]\r\n        }\r\n        if (__DEV__ && context.components[name]) {\r\n          warn(`Component \"${name}\" has already been registered in target app.`)\r\n        }\r\n        context.components[name] = component\r\n        return app\r\n      },\r\n\r\n      directive(name: string, directive?: Directive) {\r\n        if (__DEV__) {\r\n          validateDirectiveName(name)\r\n        }\r\n\r\n        if (!directive) {\r\n          return context.directives[name] as any\r\n        }\r\n        if (__DEV__ && context.directives[name]) {\r\n          warn(`Directive \"${name}\" has already been registered in target app.`)\r\n        }\r\n        context.directives[name] = directive\r\n        return app\r\n      },\r\n\r\n      mount(\r\n        rootContainer: HostElement,\r\n        isHydrate?: boolean,\r\n        isSVG?: boolean\r\n      ): any {\r\n        if (!isMounted) {\r\n          const vnode = createVNode(\r\n            rootComponent as ConcreteComponent,\r\n            rootProps\r\n          )\r\n          // store app context on the root VNode.\r\n          // this will be set on the root instance on initial mount.\r\n          vnode.appContext = context\r\n\r\n          // HMR root reload\r\n          if (__DEV__) {\r\n            context.reload = () => {\r\n              render(cloneVNode(vnode), rootContainer, isSVG)\r\n            }\r\n          }\r\n\r\n          if (isHydrate && hydrate) {\r\n            hydrate(vnode as VNode<Node, Element>, rootContainer as any)\r\n          } else {\r\n            render(vnode, rootContainer, isSVG)\r\n          }\r\n          isMounted = true\r\n          app._container = rootContainer\r\n          // for devtools and telemetry\r\n          ;(rootContainer as any).__vue_app__ = app\r\n\r\n          if (__DEV__ || __FEATURE_PROD_DEVTOOLS__) {\r\n            app._instance = vnode.component\r\n            devtoolsInitApp(app, version)\r\n          }\r\n\r\n          return vnode.component!.proxy\r\n        } else if (__DEV__) {\r\n          warn(\r\n            `App has already been mounted.\\n` +\r\n              `If you want to remount the same app, move your app creation logic ` +\r\n              `into a factory function and create fresh app instances for each ` +\r\n              `mount - e.g. \\`const createMyApp = () => createApp(App)\\``\r\n          )\r\n        }\r\n      },\r\n\r\n      unmount() {\r\n        if (isMounted) {\r\n          render(null, app._container)\r\n          if (__DEV__ || __FEATURE_PROD_DEVTOOLS__) {\r\n            app._instance = null\r\n            devtoolsUnmountApp(app)\r\n          }\r\n          delete app._container.__vue_app__\r\n        } else if (__DEV__) {\r\n          warn(`Cannot unmount an app that is not mounted.`)\r\n        }\r\n      },\r\n\r\n      provide(key, value) {\r\n        if (__DEV__ && (key as string | symbol) in context.provides) {\r\n          warn(\r\n            `App already provides property with key \"${String(key)}\". ` +\r\n              `It will be overwritten with the new value.`\r\n          )\r\n        }\r\n        // TypeScript doesn't allow symbols as index type\r\n        // https://github.com/Microsoft/TypeScript/issues/24587\r\n        context.provides[key as string] = value\r\n\r\n        return app\r\n      }\r\n    })\r\n\r\n    if (__COMPAT__) {\r\n      installAppCompatProperties(app, context, render)\r\n    }\r\n\r\n    return app\r\n  }\r\n}\r\n","import {\r\n  VNode,\r\n  normalizeVNode,\r\n  Text,\r\n  Comment,\r\n  Static,\r\n  Fragment,\r\n  VNodeHook,\r\n  createVNode,\r\n  createTextVNode\r\n} from './vnode'\r\nimport { flushPostFlushCbs } from './scheduler'\r\nimport { ComponentInternalInstance } from './component'\r\nimport { invokeDirectiveHook } from './directives'\r\nimport { warn } from './warning'\r\nimport { PatchFlags, ShapeFlags, isReservedProp, isOn } from '@vue/shared'\r\nimport { RendererInternals, invokeVNodeHook, setRef } from './renderer'\r\nimport {\r\n  SuspenseImpl,\r\n  SuspenseBoundary,\r\n  queueEffectWithSuspense\r\n} from './components/Suspense'\r\nimport { TeleportImpl, TeleportVNode } from './components/Teleport'\r\nimport { isAsyncWrapper } from './apiAsyncComponent'\r\n\r\nexport type RootHydrateFunction = (\r\n  vnode: VNode<Node, Element>,\r\n  container: Element | ShadowRoot\r\n) => void\r\n\r\nconst enum DOMNodeTypes {\r\n  ELEMENT = 1,\r\n  TEXT = 3,\r\n  COMMENT = 8\r\n}\r\n\r\nlet hasMismatch = false\r\n\r\nconst isSVGContainer = (container: Element) =>\r\n  /svg/.test(container.namespaceURI!) && container.tagName !== 'foreignObject'\r\n\r\nconst isComment = (node: Node): node is Comment =>\r\n  node.nodeType === DOMNodeTypes.COMMENT\r\n\r\n// Note: hydration is DOM-specific\r\n// But we have to place it in core due to tight coupling with core - splitting\r\n// it out creates a ton of unnecessary complexity.\r\n// Hydration also depends on some renderer internal logic which needs to be\r\n// passed in via arguments.\r\nexport function createHydrationFunctions(\r\n  rendererInternals: RendererInternals<Node, Element>\r\n) {\r\n  const {\r\n    mt: mountComponent,\r\n    p: patch,\r\n    o: { patchProp, nextSibling, parentNode, remove, insert, createComment }\r\n  } = rendererInternals\r\n\r\n  const hydrate: RootHydrateFunction = (vnode, container) => {\r\n    if (!container.hasChildNodes()) {\r\n      __DEV__ &&\r\n        warn(\r\n          `Attempting to hydrate existing markup but container is empty. ` +\r\n            `Performing full mount instead.`\r\n        )\r\n      patch(null, vnode, container)\r\n      flushPostFlushCbs()\r\n      return\r\n    }\r\n    hasMismatch = false\r\n    hydrateNode(container.firstChild!, vnode, null, null, null)\r\n    flushPostFlushCbs()\r\n    if (hasMismatch && !__TEST__) {\r\n      // this error should show up in production\r\n      console.error(`Hydration completed but contains mismatches.`)\r\n    }\r\n  }\r\n\r\n  const hydrateNode = (\r\n    node: Node,\r\n    vnode: VNode,\r\n    parentComponent: ComponentInternalInstance | null,\r\n    parentSuspense: SuspenseBoundary | null,\r\n    slotScopeIds: string[] | null,\r\n    optimized = false\r\n  ): Node | null => {\r\n    const isFragmentStart = isComment(node) && node.data === '['\r\n    const onMismatch = () =>\r\n      handleMismatch(\r\n        node,\r\n        vnode,\r\n        parentComponent,\r\n        parentSuspense,\r\n        slotScopeIds,\r\n        isFragmentStart\r\n      )\r\n\r\n    const { type, ref, shapeFlag } = vnode\r\n    const domType = node.nodeType\r\n    vnode.el = node\r\n\r\n    let nextNode: Node | null = null\r\n    switch (type) {\r\n      case Text:\r\n        if (domType !== DOMNodeTypes.TEXT) {\r\n          nextNode = onMismatch()\r\n        } else {\r\n          if ((node as Text).data !== vnode.children) {\r\n            hasMismatch = true\r\n            __DEV__ &&\r\n              warn(\r\n                `Hydration text mismatch:` +\r\n                  `\\n- Client: ${JSON.stringify((node as Text).data)}` +\r\n                  `\\n- Server: ${JSON.stringify(vnode.children)}`\r\n              )\r\n            ;(node as Text).data = vnode.children as string\r\n          }\r\n          nextNode = nextSibling(node)\r\n        }\r\n        break\r\n      case Comment:\r\n        if (domType !== DOMNodeTypes.COMMENT || isFragmentStart) {\r\n          nextNode = onMismatch()\r\n        } else {\r\n          nextNode = nextSibling(node)\r\n        }\r\n        break\r\n      case Static:\r\n        if (domType !== DOMNodeTypes.ELEMENT) {\r\n          nextNode = onMismatch()\r\n        } else {\r\n          // determine anchor, adopt content\r\n          nextNode = node\r\n          // if the static vnode has its content stripped during build,\r\n          // adopt it from the server-rendered HTML.\r\n          const needToAdoptContent = !(vnode.children as string).length\r\n          for (let i = 0; i < vnode.staticCount!; i++) {\r\n            if (needToAdoptContent)\r\n              vnode.children += (nextNode as Element).outerHTML\r\n            if (i === vnode.staticCount! - 1) {\r\n              vnode.anchor = nextNode\r\n            }\r\n            nextNode = nextSibling(nextNode)!\r\n          }\r\n          return nextNode\r\n        }\r\n        break\r\n      case Fragment:\r\n        if (!isFragmentStart) {\r\n          nextNode = onMismatch()\r\n        } else {\r\n          nextNode = hydrateFragment(\r\n            node as Comment,\r\n            vnode,\r\n            parentComponent,\r\n            parentSuspense,\r\n            slotScopeIds,\r\n            optimized\r\n          )\r\n        }\r\n        break\r\n      default:\r\n        if (shapeFlag & ShapeFlags.ELEMENT) {\r\n          if (\r\n            domType !== DOMNodeTypes.ELEMENT ||\r\n            (vnode.type as string).toLowerCase() !==\r\n              (node as Element).tagName.toLowerCase()\r\n          ) {\r\n            nextNode = onMismatch()\r\n          } else {\r\n            nextNode = hydrateElement(\r\n              node as Element,\r\n              vnode,\r\n              parentComponent,\r\n              parentSuspense,\r\n              slotScopeIds,\r\n              optimized\r\n            )\r\n          }\r\n        } else if (shapeFlag & ShapeFlags.COMPONENT) {\r\n          // when setting up the render effect, if the initial vnode already\r\n          // has .el set, the component will perform hydration instead of mount\r\n          // on its sub-tree.\r\n          vnode.slotScopeIds = slotScopeIds\r\n          const container = parentNode(node)!\r\n          mountComponent(\r\n            vnode,\r\n            container,\r\n            null,\r\n            parentComponent,\r\n            parentSuspense,\r\n            isSVGContainer(container),\r\n            optimized\r\n          )\r\n\r\n          // component may be async, so in the case of fragments we cannot rely\r\n          // on component's rendered output to determine the end of the fragment\r\n          // instead, we do a lookahead to find the end anchor node.\r\n          nextNode = isFragmentStart\r\n            ? locateClosingAsyncAnchor(node)\r\n            : nextSibling(node)\r\n\r\n          // #3787\r\n          // if component is async, it may get moved / unmounted before its\r\n          // inner component is loaded, so we need to give it a placeholder\r\n          // vnode that matches its adopted DOM.\r\n          if (isAsyncWrapper(vnode)) {\r\n            let subTree\r\n            if (isFragmentStart) {\r\n              subTree = createVNode(Fragment)\r\n              subTree.anchor = nextNode\r\n                ? nextNode.previousSibling\r\n                : container.lastChild\r\n            } else {\r\n              subTree =\r\n                node.nodeType === 3 ? createTextVNode('') : createVNode('div')\r\n            }\r\n            subTree.el = node\r\n            vnode.component!.subTree = subTree\r\n          }\r\n        } else if (shapeFlag & ShapeFlags.TELEPORT) {\r\n          if (domType !== DOMNodeTypes.COMMENT) {\r\n            nextNode = onMismatch()\r\n          } else {\r\n            nextNode = (vnode.type as typeof TeleportImpl).hydrate(\r\n              node,\r\n              vnode as TeleportVNode,\r\n              parentComponent,\r\n              parentSuspense,\r\n              slotScopeIds,\r\n              optimized,\r\n              rendererInternals,\r\n              hydrateChildren\r\n            )\r\n          }\r\n        } else if (__FEATURE_SUSPENSE__ && shapeFlag & ShapeFlags.SUSPENSE) {\r\n          nextNode = (vnode.type as typeof SuspenseImpl).hydrate(\r\n            node,\r\n            vnode,\r\n            parentComponent,\r\n            parentSuspense,\r\n            isSVGContainer(parentNode(node)!),\r\n            slotScopeIds,\r\n            optimized,\r\n            rendererInternals,\r\n            hydrateNode\r\n          )\r\n        } else if (__DEV__) {\r\n          warn('Invalid HostVNode type:', type, `(${typeof type})`)\r\n        }\r\n    }\r\n\r\n    if (ref != null) {\r\n      setRef(ref, null, parentSuspense, vnode)\r\n    }\r\n\r\n    return nextNode\r\n  }\r\n\r\n  const hydrateElement = (\r\n    el: Element,\r\n    vnode: VNode,\r\n    parentComponent: ComponentInternalInstance | null,\r\n    parentSuspense: SuspenseBoundary | null,\r\n    slotScopeIds: string[] | null,\r\n    optimized: boolean\r\n  ) => {\r\n    optimized = optimized || !!vnode.dynamicChildren\r\n    const { type, props, patchFlag, shapeFlag, dirs } = vnode\r\n    // #4006 for form elements with non-string v-model value bindings\r\n    // e.g. <option :value=\"obj\">, <input type=\"checkbox\" :true-value=\"1\">\r\n    const forcePatchValue = (type === 'input' && dirs) || type === 'option'\r\n    // skip props & children if this is hoisted static nodes\r\n    if (forcePatchValue || patchFlag !== PatchFlags.HOISTED) {\r\n      if (dirs) {\r\n        invokeDirectiveHook(vnode, null, parentComponent, 'created')\r\n      }\r\n      // props\r\n      if (props) {\r\n        if (\r\n          forcePatchValue ||\r\n          !optimized ||\r\n          patchFlag & PatchFlags.FULL_PROPS ||\r\n          patchFlag & PatchFlags.HYDRATE_EVENTS\r\n        ) {\r\n          for (const key in props) {\r\n            if (\r\n              (forcePatchValue && key.endsWith('value')) ||\r\n              (isOn(key) && !isReservedProp(key))\r\n            ) {\r\n              patchProp(el, key, null, props[key])\r\n            }\r\n          }\r\n        } else if (props.onClick) {\r\n          // Fast path for click listeners (which is most often) to avoid\r\n          // iterating through props.\r\n          patchProp(el, 'onClick', null, props.onClick)\r\n        }\r\n      }\r\n      // vnode / directive hooks\r\n      let vnodeHooks: VNodeHook | null | undefined\r\n      if ((vnodeHooks = props && props.onVnodeBeforeMount)) {\r\n        invokeVNodeHook(vnodeHooks, parentComponent, vnode)\r\n      }\r\n      if (dirs) {\r\n        invokeDirectiveHook(vnode, null, parentComponent, 'beforeMount')\r\n      }\r\n      if ((vnodeHooks = props && props.onVnodeMounted) || dirs) {\r\n        queueEffectWithSuspense(() => {\r\n          vnodeHooks && invokeVNodeHook(vnodeHooks, parentComponent, vnode)\r\n          dirs && invokeDirectiveHook(vnode, null, parentComponent, 'mounted')\r\n        }, parentSuspense)\r\n      }\r\n      // children\r\n      if (\r\n        shapeFlag & ShapeFlags.ARRAY_CHILDREN &&\r\n        // skip if element has innerHTML / textContent\r\n        !(props && (props.innerHTML || props.textContent))\r\n      ) {\r\n        let next = hydrateChildren(\r\n          el.firstChild,\r\n          vnode,\r\n          el,\r\n          parentComponent,\r\n          parentSuspense,\r\n          slotScopeIds,\r\n          optimized\r\n        )\r\n        let hasWarned = false\r\n        while (next) {\r\n          hasMismatch = true\r\n          if (__DEV__ && !hasWarned) {\r\n            warn(\r\n              `Hydration children mismatch in <${vnode.type as string}>: ` +\r\n                `server rendered element contains more child nodes than client vdom.`\r\n            )\r\n            hasWarned = true\r\n          }\r\n          // The SSRed DOM contains more nodes than it should. Remove them.\r\n          const cur = next\r\n          next = next.nextSibling\r\n          remove(cur)\r\n        }\r\n      } else if (shapeFlag & ShapeFlags.TEXT_CHILDREN) {\r\n        if (el.textContent !== vnode.children) {\r\n          hasMismatch = true\r\n          __DEV__ &&\r\n            warn(\r\n              `Hydration text content mismatch in <${\r\n                vnode.type as string\r\n              }>:\\n` +\r\n                `- Client: ${el.textContent}\\n` +\r\n                `- Server: ${vnode.children as string}`\r\n            )\r\n          el.textContent = vnode.children as string\r\n        }\r\n      }\r\n    }\r\n    return el.nextSibling\r\n  }\r\n\r\n  const hydrateChildren = (\r\n    node: Node | null,\r\n    parentVNode: VNode,\r\n    container: Element,\r\n    parentComponent: ComponentInternalInstance | null,\r\n    parentSuspense: SuspenseBoundary | null,\r\n    slotScopeIds: string[] | null,\r\n    optimized: boolean\r\n  ): Node | null => {\r\n    optimized = optimized || !!parentVNode.dynamicChildren\r\n    const children = parentVNode.children as VNode[]\r\n    const l = children.length\r\n    let hasWarned = false\r\n    for (let i = 0; i < l; i++) {\r\n      const vnode = optimized\r\n        ? children[i]\r\n        : (children[i] = normalizeVNode(children[i]))\r\n      if (node) {\r\n        node = hydrateNode(\r\n          node,\r\n          vnode,\r\n          parentComponent,\r\n          parentSuspense,\r\n          slotScopeIds,\r\n          optimized\r\n        )\r\n      } else if (vnode.type === Text && !vnode.children) {\r\n        continue\r\n      } else {\r\n        hasMismatch = true\r\n        if (__DEV__ && !hasWarned) {\r\n          warn(\r\n            `Hydration children mismatch in <${container.tagName.toLowerCase()}>: ` +\r\n              `server rendered element contains fewer child nodes than client vdom.`\r\n          )\r\n          hasWarned = true\r\n        }\r\n        // the SSRed DOM didn't contain enough nodes. Mount the missing ones.\r\n        patch(\r\n          null,\r\n          vnode,\r\n          container,\r\n          null,\r\n          parentComponent,\r\n          parentSuspense,\r\n          isSVGContainer(container),\r\n          slotScopeIds\r\n        )\r\n      }\r\n    }\r\n    return node\r\n  }\r\n\r\n  const hydrateFragment = (\r\n    node: Comment,\r\n    vnode: VNode,\r\n    parentComponent: ComponentInternalInstance | null,\r\n    parentSuspense: SuspenseBoundary | null,\r\n    slotScopeIds: string[] | null,\r\n    optimized: boolean\r\n  ) => {\r\n    const { slotScopeIds: fragmentSlotScopeIds } = vnode\r\n    if (fragmentSlotScopeIds) {\r\n      slotScopeIds = slotScopeIds\r\n        ? slotScopeIds.concat(fragmentSlotScopeIds)\r\n        : fragmentSlotScopeIds\r\n    }\r\n\r\n    const container = parentNode(node)!\r\n    const next = hydrateChildren(\r\n      nextSibling(node)!,\r\n      vnode,\r\n      container,\r\n      parentComponent,\r\n      parentSuspense,\r\n      slotScopeIds,\r\n      optimized\r\n    )\r\n    if (next && isComment(next) && next.data === ']') {\r\n      return nextSibling((vnode.anchor = next))\r\n    } else {\r\n      // fragment didn't hydrate successfully, since we didn't get a end anchor\r\n      // back. This should have led to node/children mismatch warnings.\r\n      hasMismatch = true\r\n      // since the anchor is missing, we need to create one and insert it\r\n      insert((vnode.anchor = createComment(`]`)), container, next)\r\n      return next\r\n    }\r\n  }\r\n\r\n  const handleMismatch = (\r\n    node: Node,\r\n    vnode: VNode,\r\n    parentComponent: ComponentInternalInstance | null,\r\n    parentSuspense: SuspenseBoundary | null,\r\n    slotScopeIds: string[] | null,\r\n    isFragment: boolean\r\n  ): Node | null => {\r\n    hasMismatch = true\r\n    __DEV__ &&\r\n      warn(\r\n        `Hydration node mismatch:\\n- Client vnode:`,\r\n        vnode.type,\r\n        `\\n- Server rendered DOM:`,\r\n        node,\r\n        node.nodeType === DOMNodeTypes.TEXT\r\n          ? `(text)`\r\n          : isComment(node) && node.data === '['\r\n          ? `(start of fragment)`\r\n          : ``\r\n      )\r\n    vnode.el = null\r\n\r\n    if (isFragment) {\r\n      // remove excessive fragment nodes\r\n      const end = locateClosingAsyncAnchor(node)\r\n      while (true) {\r\n        const next = nextSibling(node)\r\n        if (next && next !== end) {\r\n          remove(next)\r\n        } else {\r\n          break\r\n        }\r\n      }\r\n    }\r\n\r\n    const next = nextSibling(node)\r\n    const container = parentNode(node)!\r\n    remove(node)\r\n\r\n    patch(\r\n      null,\r\n      vnode,\r\n      container,\r\n      next,\r\n      parentComponent,\r\n      parentSuspense,\r\n      isSVGContainer(container),\r\n      slotScopeIds\r\n    )\r\n    return next\r\n  }\r\n\r\n  const locateClosingAsyncAnchor = (node: Node | null): Node | null => {\r\n    let match = 0\r\n    while (node) {\r\n      node = nextSibling(node)\r\n      if (node && isComment(node)) {\r\n        if (node.data === '[') match++\r\n        if (node.data === ']') {\r\n          if (match === 0) {\r\n            return nextSibling(node)\r\n          } else {\r\n            match--\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return node\r\n  }\r\n\r\n  return [hydrate, hydrateNode] as const\r\n}\r\n","import {\r\n  Text,\r\n  Fragment,\r\n  Comment,\r\n  cloneIfMounted,\r\n  normalizeVNode,\r\n  VNode,\r\n  VNodeArrayChildren,\r\n  createVNode,\r\n  isSameVNodeType,\r\n  Static,\r\n  VNodeNormalizedRef,\r\n  VNodeHook,\r\n  VNodeNormalizedRefAtom,\r\n  VNodeProps\r\n} from './vnode'\r\nimport {\r\n  ComponentInternalInstance,\r\n  ComponentOptions,\r\n  createComponentInstance,\r\n  Data,\r\n  getExposeProxy,\r\n  setupComponent\r\n} from './component'\r\nimport {\r\n  filterSingleRoot,\r\n  renderComponentRoot,\r\n  shouldUpdateComponent,\r\n  updateHOCHostEl\r\n} from './componentRenderUtils'\r\nimport {\r\n  isString,\r\n  EMPTY_OBJ,\r\n  EMPTY_ARR,\r\n  isReservedProp,\r\n  isFunction,\r\n  PatchFlags,\r\n  ShapeFlags,\r\n  NOOP,\r\n  hasOwn,\r\n  invokeArrayFns,\r\n  isArray,\r\n  getGlobalThis\r\n} from '@vue/shared'\r\nimport {\r\n  queueJob,\r\n  queuePostFlushCb,\r\n  flushPostFlushCbs,\r\n  invalidateJob,\r\n  flushPreFlushCbs,\r\n  SchedulerJob\r\n} from './scheduler'\r\nimport {\r\n  isRef,\r\n  pauseTracking,\r\n  resetTracking,\r\n  ReactiveEffect\r\n} from '@vue/reactivity'\r\nimport { updateProps } from './componentProps'\r\nimport { updateSlots } from './componentSlots'\r\nimport { pushWarningContext, popWarningContext, warn } from './warning'\r\nimport { createAppAPI, CreateAppFunction } from './apiCreateApp'\r\nimport {\r\n  SuspenseBoundary,\r\n  queueEffectWithSuspense,\r\n  SuspenseImpl\r\n} from './components/Suspense'\r\nimport { TeleportImpl, TeleportVNode } from './components/Teleport'\r\nimport { isKeepAlive, KeepAliveContext } from './components/KeepAlive'\r\nimport { registerHMR, unregisterHMR, isHmrUpdating } from './hmr'\r\nimport {\r\n  ErrorCodes,\r\n  callWithErrorHandling,\r\n  callWithAsyncErrorHandling\r\n} from './errorHandling'\r\nimport { createHydrationFunctions, RootHydrateFunction } from './hydration'\r\nimport { invokeDirectiveHook } from './directives'\r\nimport { startMeasure, endMeasure } from './profiling'\r\nimport {\r\n  devtoolsComponentAdded,\r\n  devtoolsComponentRemoved,\r\n  devtoolsComponentUpdated,\r\n  setDevtoolsHook\r\n} from './devtools'\r\nimport { initFeatureFlags } from './featureFlags'\r\nimport { isAsyncWrapper } from './apiAsyncComponent'\r\nimport { isCompatEnabled } from './compat/compatConfig'\r\nimport { DeprecationTypes } from './compat/compatConfig'\r\nimport { registerLegacyRef } from './compat/ref'\r\n\r\nexport interface Renderer<HostElement = RendererElement> {\r\n  render: RootRenderFunction<HostElement>\r\n  createApp: CreateAppFunction<HostElement>\r\n}\r\n\r\nexport interface HydrationRenderer extends Renderer<Element | ShadowRoot> {\r\n  hydrate: RootHydrateFunction\r\n}\r\n\r\nexport type RootRenderFunction<HostElement = RendererElement> = (\r\n  vnode: VNode | null,\r\n  container: HostElement,\r\n  isSVG?: boolean\r\n) => void\r\n\r\nexport interface RendererOptions<\r\n  HostNode = RendererNode,\r\n  HostElement = RendererElement\r\n> {\r\n  patchProp(\r\n    el: HostElement,\r\n    key: string,\r\n    prevValue: any,\r\n    nextValue: any,\r\n    isSVG?: boolean,\r\n    prevChildren?: VNode<HostNode, HostElement>[],\r\n    parentComponent?: ComponentInternalInstance | null,\r\n    parentSuspense?: SuspenseBoundary | null,\r\n    unmountChildren?: UnmountChildrenFn\r\n  ): void\r\n  insert(el: HostNode, parent: HostElement, anchor?: HostNode | null): void\r\n  remove(el: HostNode): void\r\n  createElement(\r\n    type: string,\r\n    isSVG?: boolean,\r\n    isCustomizedBuiltIn?: string,\r\n    vnodeProps?: (VNodeProps & { [key: string]: any }) | null\r\n  ): HostElement\r\n  createText(text: string): HostNode\r\n  createComment(text: string): HostNode\r\n  setText(node: HostNode, text: string): void\r\n  setElementText(node: HostElement, text: string): void\r\n  parentNode(node: HostNode): HostElement | null\r\n  nextSibling(node: HostNode): HostNode | null\r\n  querySelector?(selector: string): HostElement | null\r\n  setScopeId?(el: HostElement, id: string): void\r\n  cloneNode?(node: HostNode): HostNode\r\n  insertStaticContent?(\r\n    content: string,\r\n    parent: HostElement,\r\n    anchor: HostNode | null,\r\n    isSVG: boolean\r\n  ): [HostNode, HostNode]\r\n}\r\n\r\n// Renderer Node can technically be any object in the context of core renderer\r\n// logic - they are never directly operated on and always passed to the node op\r\n// functions provided via options, so the internal constraint is really just\r\n// a generic object.\r\nexport interface RendererNode {\r\n  [key: string]: any\r\n}\r\n\r\nexport interface RendererElement extends RendererNode {}\r\n\r\n// An object exposing the internals of a renderer, passed to tree-shakeable\r\n// features so that they can be decoupled from this file. Keys are shortened\r\n// to optimize bundle size.\r\nexport interface RendererInternals<\r\n  HostNode = RendererNode,\r\n  HostElement = RendererElement\r\n> {\r\n  p: PatchFn\r\n  um: UnmountFn\r\n  r: RemoveFn\r\n  m: MoveFn\r\n  mt: MountComponentFn\r\n  mc: MountChildrenFn\r\n  pc: PatchChildrenFn\r\n  pbc: PatchBlockChildrenFn\r\n  n: NextFn\r\n  o: RendererOptions<HostNode, HostElement>\r\n}\r\n\r\n// These functions are created inside a closure and therefore their types cannot\r\n// be directly exported. In order to avoid maintaining function signatures in\r\n// two places, we declare them once here and use them inside the closure.\r\ntype PatchFn = (\r\n  n1: VNode | null, // null means this is a mount\r\n  n2: VNode,\r\n  container: RendererElement,\r\n  anchor?: RendererNode | null,\r\n  parentComponent?: ComponentInternalInstance | null,\r\n  parentSuspense?: SuspenseBoundary | null,\r\n  isSVG?: boolean,\r\n  slotScopeIds?: string[] | null,\r\n  optimized?: boolean\r\n) => void\r\n\r\ntype MountChildrenFn = (\r\n  children: VNodeArrayChildren,\r\n  container: RendererElement,\r\n  anchor: RendererNode | null,\r\n  parentComponent: ComponentInternalInstance | null,\r\n  parentSuspense: SuspenseBoundary | null,\r\n  isSVG: boolean,\r\n  slotScopeIds: string[] | null,\r\n  optimized: boolean,\r\n  start?: number\r\n) => void\r\n\r\ntype PatchChildrenFn = (\r\n  n1: VNode | null,\r\n  n2: VNode,\r\n  container: RendererElement,\r\n  anchor: RendererNode | null,\r\n  parentComponent: ComponentInternalInstance | null,\r\n  parentSuspense: SuspenseBoundary | null,\r\n  isSVG: boolean,\r\n  slotScopeIds: string[] | null,\r\n  optimized: boolean\r\n) => void\r\n\r\ntype PatchBlockChildrenFn = (\r\n  oldChildren: VNode[],\r\n  newChildren: VNode[],\r\n  fallbackContainer: RendererElement,\r\n  parentComponent: ComponentInternalInstance | null,\r\n  parentSuspense: SuspenseBoundary | null,\r\n  isSVG: boolean,\r\n  slotScopeIds: string[] | null\r\n) => void\r\n\r\ntype MoveFn = (\r\n  vnode: VNode,\r\n  container: RendererElement,\r\n  anchor: RendererNode | null,\r\n  type: MoveType,\r\n  parentSuspense?: SuspenseBoundary | null\r\n) => void\r\n\r\ntype NextFn = (vnode: VNode) => RendererNode | null\r\n\r\ntype UnmountFn = (\r\n  vnode: VNode,\r\n  parentComponent: ComponentInternalInstance | null,\r\n  parentSuspense: SuspenseBoundary | null,\r\n  doRemove?: boolean,\r\n  optimized?: boolean\r\n) => void\r\n\r\ntype RemoveFn = (vnode: VNode) => void\r\n\r\ntype UnmountChildrenFn = (\r\n  children: VNode[],\r\n  parentComponent: ComponentInternalInstance | null,\r\n  parentSuspense: SuspenseBoundary | null,\r\n  doRemove?: boolean,\r\n  optimized?: boolean,\r\n  start?: number\r\n) => void\r\n\r\nexport type MountComponentFn = (\r\n  initialVNode: VNode,\r\n  container: RendererElement,\r\n  anchor: RendererNode | null,\r\n  parentComponent: ComponentInternalInstance | null,\r\n  parentSuspense: SuspenseBoundary | null,\r\n  isSVG: boolean,\r\n  optimized: boolean\r\n) => void\r\n\r\ntype ProcessTextOrCommentFn = (\r\n  n1: VNode | null,\r\n  n2: VNode,\r\n  container: RendererElement,\r\n  anchor: RendererNode | null\r\n) => void\r\n\r\nexport type SetupRenderEffectFn = (\r\n  instance: ComponentInternalInstance,\r\n  initialVNode: VNode,\r\n  container: RendererElement,\r\n  anchor: RendererNode | null,\r\n  parentSuspense: SuspenseBoundary | null,\r\n  isSVG: boolean,\r\n  optimized: boolean\r\n) => void\r\n\r\nexport const enum MoveType {\r\n  ENTER,\r\n  LEAVE,\r\n  REORDER\r\n}\r\n\r\nexport const queuePostRenderEffect = __FEATURE_SUSPENSE__\r\n  ? queueEffectWithSuspense\r\n  : queuePostFlushCb\r\n\r\n/**\r\n * The createRenderer function accepts two generic arguments:\r\n * HostNode and HostElement, corresponding to Node and Element types in the\r\n * host environment. For example, for runtime-dom, HostNode would be the DOM\r\n * `Node` interface and HostElement would be the DOM `Element` interface.\r\n *\r\n * Custom renderers can pass in the platform specific types like this:\r\n *\r\n * ``` js\r\n * const { render, createApp } = createRenderer<Node, Element>({\r\n *   patchProp,\r\n *   ...nodeOps\r\n * })\r\n * ```\r\n */\r\nexport function createRenderer<\r\n  HostNode = RendererNode,\r\n  HostElement = RendererElement\r\n>(options: RendererOptions<HostNode, HostElement>) {\r\n  return baseCreateRenderer<HostNode, HostElement>(options)\r\n}\r\n\r\n// Separate API for creating hydration-enabled renderer.\r\n// Hydration logic is only used when calling this function, making it\r\n// tree-shakable.\r\nexport function createHydrationRenderer(\r\n  options: RendererOptions<Node, Element>\r\n) {\r\n  return baseCreateRenderer(options, createHydrationFunctions)\r\n}\r\n\r\n// overload 1: no hydration\r\nfunction baseCreateRenderer<\r\n  HostNode = RendererNode,\r\n  HostElement = RendererElement\r\n>(options: RendererOptions<HostNode, HostElement>): Renderer<HostElement>\r\n\r\n// overload 2: with hydration\r\nfunction baseCreateRenderer(\r\n  options: RendererOptions<Node, Element>,\r\n  createHydrationFns: typeof createHydrationFunctions\r\n): HydrationRenderer\r\n\r\n// implementation\r\nfunction baseCreateRenderer(\r\n  options: RendererOptions,\r\n  createHydrationFns?: typeof createHydrationFunctions\r\n): any {\r\n  // compile-time feature flags check\r\n  if (__ESM_BUNDLER__ && !__TEST__) {\r\n    initFeatureFlags()\r\n  }\r\n\r\n  if (__DEV__ || __FEATURE_PROD_DEVTOOLS__) {\r\n    const target = getGlobalThis()\r\n    target.__VUE__ = true\r\n    setDevtoolsHook(target.__VUE_DEVTOOLS_GLOBAL_HOOK__)\r\n  }\r\n\r\n  const {\r\n    insert: hostInsert,\r\n    remove: hostRemove,\r\n    patchProp: hostPatchProp,\r\n    createElement: hostCreateElement,\r\n    createText: hostCreateText,\r\n    createComment: hostCreateComment,\r\n    setText: hostSetText,\r\n    setElementText: hostSetElementText,\r\n    parentNode: hostParentNode,\r\n    nextSibling: hostNextSibling,\r\n    setScopeId: hostSetScopeId = NOOP,\r\n    cloneNode: hostCloneNode,\r\n    insertStaticContent: hostInsertStaticContent\r\n  } = options\r\n\r\n  // Note: functions inside this closure should use `const xxx = () => {}`\r\n  // style in order to prevent being inlined by minifiers.\r\n  const patch: PatchFn = (\r\n    n1,\r\n    n2,\r\n    container,\r\n    anchor = null,\r\n    parentComponent = null,\r\n    parentSuspense = null,\r\n    isSVG = false,\r\n    slotScopeIds = null,\r\n    optimized = __DEV__ && isHmrUpdating ? false : !!n2.dynamicChildren\r\n  ) => {\r\n    if (n1 === n2) {\r\n      return\r\n    }\r\n\r\n    // patching & not same type, unmount old tree\r\n    if (n1 && !isSameVNodeType(n1, n2)) {\r\n      anchor = getNextHostNode(n1)\r\n      unmount(n1, parentComponent, parentSuspense, true)\r\n      n1 = null\r\n    }\r\n\r\n    if (n2.patchFlag === PatchFlags.BAIL) {\r\n      optimized = false\r\n      n2.dynamicChildren = null\r\n    }\r\n\r\n    const { type, ref, shapeFlag } = n2\r\n    switch (type) {\r\n      case Text:\r\n        processText(n1, n2, container, anchor)\r\n        break\r\n      case Comment:\r\n        processCommentNode(n1, n2, container, anchor)\r\n        break\r\n      case Static:\r\n        if (n1 == null) {\r\n          mountStaticNode(n2, container, anchor, isSVG)\r\n        } else if (__DEV__) {\r\n          patchStaticNode(n1, n2, container, isSVG)\r\n        }\r\n        break\r\n      case Fragment:\r\n        processFragment(\r\n          n1,\r\n          n2,\r\n          container,\r\n          anchor,\r\n          parentComponent,\r\n          parentSuspense,\r\n          isSVG,\r\n          slotScopeIds,\r\n          optimized\r\n        )\r\n        break\r\n      default:\r\n        if (shapeFlag & ShapeFlags.ELEMENT) {\r\n          processElement(\r\n            n1,\r\n            n2,\r\n            container,\r\n            anchor,\r\n            parentComponent,\r\n            parentSuspense,\r\n            isSVG,\r\n            slotScopeIds,\r\n            optimized\r\n          )\r\n        } else if (shapeFlag & ShapeFlags.COMPONENT) {\r\n          processComponent(\r\n            n1,\r\n            n2,\r\n            container,\r\n            anchor,\r\n            parentComponent,\r\n            parentSuspense,\r\n            isSVG,\r\n            slotScopeIds,\r\n            optimized\r\n          )\r\n        } else if (shapeFlag & ShapeFlags.TELEPORT) {\r\n          ;(type as typeof TeleportImpl).process(\r\n            n1 as TeleportVNode,\r\n            n2 as TeleportVNode,\r\n            container,\r\n            anchor,\r\n            parentComponent,\r\n            parentSuspense,\r\n            isSVG,\r\n            slotScopeIds,\r\n            optimized,\r\n            internals\r\n          )\r\n        } else if (__FEATURE_SUSPENSE__ && shapeFlag & ShapeFlags.SUSPENSE) {\r\n          ;(type as typeof SuspenseImpl).process(\r\n            n1,\r\n            n2,\r\n            container,\r\n            anchor,\r\n            parentComponent,\r\n            parentSuspense,\r\n            isSVG,\r\n            slotScopeIds,\r\n            optimized,\r\n            internals\r\n          )\r\n        } else if (__DEV__) {\r\n          warn('Invalid VNode type:', type, `(${typeof type})`)\r\n        }\r\n    }\r\n\r\n    // set ref\r\n    if (ref != null && parentComponent) {\r\n      setRef(ref, n1 && n1.ref, parentSuspense, n2 || n1, !n2)\r\n    }\r\n  }\r\n\r\n  const processText: ProcessTextOrCommentFn = (n1, n2, container, anchor) => {\r\n    if (n1 == null) {\r\n      hostInsert(\r\n        (n2.el = hostCreateText(n2.children as string)),\r\n        container,\r\n        anchor\r\n      )\r\n    } else {\r\n      const el = (n2.el = n1.el!)\r\n      if (n2.children !== n1.children) {\r\n        hostSetText(el, n2.children as string)\r\n      }\r\n    }\r\n  }\r\n\r\n  const processCommentNode: ProcessTextOrCommentFn = (\r\n    n1,\r\n    n2,\r\n    container,\r\n    anchor\r\n  ) => {\r\n    if (n1 == null) {\r\n      hostInsert(\r\n        (n2.el = hostCreateComment((n2.children as string) || '')),\r\n        container,\r\n        anchor\r\n      )\r\n    } else {\r\n      // there's no support for dynamic comments\r\n      n2.el = n1.el\r\n    }\r\n  }\r\n\r\n  const mountStaticNode = (\r\n    n2: VNode,\r\n    container: RendererElement,\r\n    anchor: RendererNode | null,\r\n    isSVG: boolean\r\n  ) => {\r\n    // static nodes are only present when used with compiler-dom/runtime-dom\r\n    // which guarantees presence of hostInsertStaticContent.\r\n    ;[n2.el, n2.anchor] = hostInsertStaticContent!(\r\n      n2.children as string,\r\n      container,\r\n      anchor,\r\n      isSVG\r\n    )\r\n  }\r\n\r\n  /**\r\n   * Dev / HMR only\r\n   */\r\n  const patchStaticNode = (\r\n    n1: VNode,\r\n    n2: VNode,\r\n    container: RendererElement,\r\n    isSVG: boolean\r\n  ) => {\r\n    // static nodes are only patched during dev for HMR\r\n    if (n2.children !== n1.children) {\r\n      const anchor = hostNextSibling(n1.anchor!)\r\n      // remove existing\r\n      removeStaticNode(n1)\r\n      // insert new\r\n      ;[n2.el, n2.anchor] = hostInsertStaticContent!(\r\n        n2.children as string,\r\n        container,\r\n        anchor,\r\n        isSVG\r\n      )\r\n    } else {\r\n      n2.el = n1.el\r\n      n2.anchor = n1.anchor\r\n    }\r\n  }\r\n\r\n  const moveStaticNode = (\r\n    { el, anchor }: VNode,\r\n    container: RendererElement,\r\n    nextSibling: RendererNode | null\r\n  ) => {\r\n    let next\r\n    while (el && el !== anchor) {\r\n      next = hostNextSibling(el)\r\n      hostInsert(el, container, nextSibling)\r\n      el = next\r\n    }\r\n    hostInsert(anchor!, container, nextSibling)\r\n  }\r\n\r\n  const removeStaticNode = ({ el, anchor }: VNode) => {\r\n    let next\r\n    while (el && el !== anchor) {\r\n      next = hostNextSibling(el)\r\n      hostRemove(el)\r\n      el = next\r\n    }\r\n    hostRemove(anchor!)\r\n  }\r\n\r\n  const processElement = (\r\n    n1: VNode | null,\r\n    n2: VNode,\r\n    container: RendererElement,\r\n    anchor: RendererNode | null,\r\n    parentComponent: ComponentInternalInstance | null,\r\n    parentSuspense: SuspenseBoundary | null,\r\n    isSVG: boolean,\r\n    slotScopeIds: string[] | null,\r\n    optimized: boolean\r\n  ) => {\r\n    isSVG = isSVG || (n2.type as string) === 'svg'\r\n    if (n1 == null) {\r\n      mountElement(\r\n        n2,\r\n        container,\r\n        anchor,\r\n        parentComponent,\r\n        parentSuspense,\r\n        isSVG,\r\n        slotScopeIds,\r\n        optimized\r\n      )\r\n    } else {\r\n      patchElement(\r\n        n1,\r\n        n2,\r\n        parentComponent,\r\n        parentSuspense,\r\n        isSVG,\r\n        slotScopeIds,\r\n        optimized\r\n      )\r\n    }\r\n  }\r\n\r\n  const mountElement = (\r\n    vnode: VNode,\r\n    container: RendererElement,\r\n    anchor: RendererNode | null,\r\n    parentComponent: ComponentInternalInstance | null,\r\n    parentSuspense: SuspenseBoundary | null,\r\n    isSVG: boolean,\r\n    slotScopeIds: string[] | null,\r\n    optimized: boolean\r\n  ) => {\r\n    let el: RendererElement\r\n    let vnodeHook: VNodeHook | undefined | null\r\n    const { type, props, shapeFlag, transition, patchFlag, dirs } = vnode\r\n    if (\r\n      !__DEV__ &&\r\n      vnode.el &&\r\n      hostCloneNode !== undefined &&\r\n      patchFlag === PatchFlags.HOISTED\r\n    ) {\r\n      // If a vnode has non-null el, it means it's being reused.\r\n      // Only static vnodes can be reused, so its mounted DOM nodes should be\r\n      // exactly the same, and we can simply do a clone here.\r\n      // only do this in production since cloned trees cannot be HMR updated.\r\n      el = vnode.el = hostCloneNode(vnode.el)\r\n    } else {\r\n      el = vnode.el = hostCreateElement(\r\n        vnode.type as string,\r\n        isSVG,\r\n        props && props.is,\r\n        props\r\n      )\r\n\r\n      // mount children first, since some props may rely on child content\r\n      // being already rendered, e.g. `<select value>`\r\n      if (shapeFlag & ShapeFlags.TEXT_CHILDREN) {\r\n        hostSetElementText(el, vnode.children as string)\r\n      } else if (shapeFlag & ShapeFlags.ARRAY_CHILDREN) {\r\n        mountChildren(\r\n          vnode.children as VNodeArrayChildren,\r\n          el,\r\n          null,\r\n          parentComponent,\r\n          parentSuspense,\r\n          isSVG && type !== 'foreignObject',\r\n          slotScopeIds,\r\n          optimized\r\n        )\r\n      }\r\n\r\n      if (dirs) {\r\n        invokeDirectiveHook(vnode, null, parentComponent, 'created')\r\n      }\r\n      // props\r\n      if (props) {\r\n        for (const key in props) {\r\n          if (key !== 'value' && !isReservedProp(key)) {\r\n            hostPatchProp(\r\n              el,\r\n              key,\r\n              null,\r\n              props[key],\r\n              isSVG,\r\n              vnode.children as VNode[],\r\n              parentComponent,\r\n              parentSuspense,\r\n              unmountChildren\r\n            )\r\n          }\r\n        }\r\n        /**\r\n         * Special case for setting value on DOM elements:\r\n         * - it can be order-sensitive (e.g. should be set *after* min/max, #2325, #4024)\r\n         * - it needs to be forced (#1471)\r\n         * #2353 proposes adding another renderer option to configure this, but\r\n         * the properties affects are so finite it is worth special casing it\r\n         * here to reduce the complexity. (Special casing it also should not\r\n         * affect non-DOM renderers)\r\n         */\r\n        if ('value' in props) {\r\n          hostPatchProp(el, 'value', null, props.value)\r\n        }\r\n        if ((vnodeHook = props.onVnodeBeforeMount)) {\r\n          invokeVNodeHook(vnodeHook, parentComponent, vnode)\r\n        }\r\n      }\r\n      // scopeId\r\n      setScopeId(el, vnode, vnode.scopeId, slotScopeIds, parentComponent)\r\n    }\r\n    if (__DEV__ || __FEATURE_PROD_DEVTOOLS__) {\r\n      Object.defineProperty(el, '__vnode', {\r\n        value: vnode,\r\n        enumerable: false\r\n      })\r\n      Object.defineProperty(el, '__vueParentComponent', {\r\n        value: parentComponent,\r\n        enumerable: false\r\n      })\r\n    }\r\n    if (dirs) {\r\n      invokeDirectiveHook(vnode, null, parentComponent, 'beforeMount')\r\n    }\r\n    // #1583 For inside suspense + suspense not resolved case, enter hook should call when suspense resolved\r\n    // #1689 For inside suspense + suspense resolved case, just call it\r\n    const needCallTransitionHooks =\r\n      (!parentSuspense || (parentSuspense && !parentSuspense.pendingBranch)) &&\r\n      transition &&\r\n      !transition.persisted\r\n    if (needCallTransitionHooks) {\r\n      transition!.beforeEnter(el)\r\n    }\r\n    hostInsert(el, container, anchor)\r\n    if (\r\n      (vnodeHook = props && props.onVnodeMounted) ||\r\n      needCallTransitionHooks ||\r\n      dirs\r\n    ) {\r\n      queuePostRenderEffect(() => {\r\n        vnodeHook && invokeVNodeHook(vnodeHook, parentComponent, vnode)\r\n        needCallTransitionHooks && transition!.enter(el)\r\n        dirs && invokeDirectiveHook(vnode, null, parentComponent, 'mounted')\r\n      }, parentSuspense)\r\n    }\r\n  }\r\n\r\n  const setScopeId = (\r\n    el: RendererElement,\r\n    vnode: VNode,\r\n    scopeId: string | null,\r\n    slotScopeIds: string[] | null,\r\n    parentComponent: ComponentInternalInstance | null\r\n  ) => {\r\n    if (scopeId) {\r\n      hostSetScopeId(el, scopeId)\r\n    }\r\n    if (slotScopeIds) {\r\n      for (let i = 0; i < slotScopeIds.length; i++) {\r\n        hostSetScopeId(el, slotScopeIds[i])\r\n      }\r\n    }\r\n    if (parentComponent) {\r\n      let subTree = parentComponent.subTree\r\n      if (\r\n        __DEV__ &&\r\n        subTree.patchFlag > 0 &&\r\n        subTree.patchFlag & PatchFlags.DEV_ROOT_FRAGMENT\r\n      ) {\r\n        subTree =\r\n          filterSingleRoot(subTree.children as VNodeArrayChildren) || subTree\r\n      }\r\n      if (vnode === subTree) {\r\n        const parentVNode = parentComponent.vnode\r\n        setScopeId(\r\n          el,\r\n          parentVNode,\r\n          parentVNode.scopeId,\r\n          parentVNode.slotScopeIds,\r\n          parentComponent.parent\r\n        )\r\n      }\r\n    }\r\n  }\r\n\r\n  const mountChildren: MountChildrenFn = (\r\n    children,\r\n    container,\r\n    anchor,\r\n    parentComponent,\r\n    parentSuspense,\r\n    isSVG,\r\n    slotScopeIds,\r\n    optimized,\r\n    start = 0\r\n  ) => {\r\n    for (let i = start; i < children.length; i++) {\r\n      const child = (children[i] = optimized\r\n        ? cloneIfMounted(children[i] as VNode)\r\n        : normalizeVNode(children[i]))\r\n      patch(\r\n        null,\r\n        child,\r\n        container,\r\n        anchor,\r\n        parentComponent,\r\n        parentSuspense,\r\n        isSVG,\r\n        slotScopeIds,\r\n        optimized\r\n      )\r\n    }\r\n  }\r\n\r\n  const patchElement = (\r\n    n1: VNode,\r\n    n2: VNode,\r\n    parentComponent: ComponentInternalInstance | null,\r\n    parentSuspense: SuspenseBoundary | null,\r\n    isSVG: boolean,\r\n    slotScopeIds: string[] | null,\r\n    optimized: boolean\r\n  ) => {\r\n    const el = (n2.el = n1.el!)\r\n    let { patchFlag, dynamicChildren, dirs } = n2\r\n    // #1426 take the old vnode's patch flag into account since user may clone a\r\n    // compiler-generated vnode, which de-opts to FULL_PROPS\r\n    patchFlag |= n1.patchFlag & PatchFlags.FULL_PROPS\r\n    const oldProps = n1.props || EMPTY_OBJ\r\n    const newProps = n2.props || EMPTY_OBJ\r\n    let vnodeHook: VNodeHook | undefined | null\r\n\r\n    if ((vnodeHook = newProps.onVnodeBeforeUpdate)) {\r\n      invokeVNodeHook(vnodeHook, parentComponent, n2, n1)\r\n    }\r\n    if (dirs) {\r\n      invokeDirectiveHook(n2, n1, parentComponent, 'beforeUpdate')\r\n    }\r\n\r\n    if (__DEV__ && isHmrUpdating) {\r\n      // HMR updated, force full diff\r\n      patchFlag = 0\r\n      optimized = false\r\n      dynamicChildren = null\r\n    }\r\n\r\n    if (patchFlag > 0) {\r\n      // the presence of a patchFlag means this element's render code was\r\n      // generated by the compiler and can take the fast path.\r\n      // in this path old node and new node are guaranteed to have the same shape\r\n      // (i.e. at the exact same position in the source template)\r\n      if (patchFlag & PatchFlags.FULL_PROPS) {\r\n        // element props contain dynamic keys, full diff needed\r\n        patchProps(\r\n          el,\r\n          n2,\r\n          oldProps,\r\n          newProps,\r\n          parentComponent,\r\n          parentSuspense,\r\n          isSVG\r\n        )\r\n      } else {\r\n        // class\r\n        // this flag is matched when the element has dynamic class bindings.\r\n        if (patchFlag & PatchFlags.CLASS) {\r\n          if (oldProps.class !== newProps.class) {\r\n            hostPatchProp(el, 'class', null, newProps.class, isSVG)\r\n          }\r\n        }\r\n\r\n        // style\r\n        // this flag is matched when the element has dynamic style bindings\r\n        if (patchFlag & PatchFlags.STYLE) {\r\n          hostPatchProp(el, 'style', oldProps.style, newProps.style, isSVG)\r\n        }\r\n\r\n        // props\r\n        // This flag is matched when the element has dynamic prop/attr bindings\r\n        // other than class and style. The keys of dynamic prop/attrs are saved for\r\n        // faster iteration.\r\n        // Note dynamic keys like :[foo]=\"bar\" will cause this optimization to\r\n        // bail out and go through a full diff because we need to unset the old key\r\n        if (patchFlag & PatchFlags.PROPS) {\r\n          // if the flag is present then dynamicProps must be non-null\r\n          const propsToUpdate = n2.dynamicProps!\r\n          for (let i = 0; i < propsToUpdate.length; i++) {\r\n            const key = propsToUpdate[i]\r\n            const prev = oldProps[key]\r\n            const next = newProps[key]\r\n            // #1471 force patch value\r\n            if (next !== prev || key === 'value') {\r\n              hostPatchProp(\r\n                el,\r\n                key,\r\n                prev,\r\n                next,\r\n                isSVG,\r\n                n1.children as VNode[],\r\n                parentComponent,\r\n                parentSuspense,\r\n                unmountChildren\r\n              )\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      // text\r\n      // This flag is matched when the element has only dynamic text children.\r\n      if (patchFlag & PatchFlags.TEXT) {\r\n        if (n1.children !== n2.children) {\r\n          hostSetElementText(el, n2.children as string)\r\n        }\r\n      }\r\n    } else if (!optimized && dynamicChildren == null) {\r\n      // unoptimized, full diff\r\n      patchProps(\r\n        el,\r\n        n2,\r\n        oldProps,\r\n        newProps,\r\n        parentComponent,\r\n        parentSuspense,\r\n        isSVG\r\n      )\r\n    }\r\n\r\n    const areChildrenSVG = isSVG && n2.type !== 'foreignObject'\r\n    if (dynamicChildren) {\r\n      patchBlockChildren(\r\n        n1.dynamicChildren!,\r\n        dynamicChildren,\r\n        el,\r\n        parentComponent,\r\n        parentSuspense,\r\n        areChildrenSVG,\r\n        slotScopeIds\r\n      )\r\n      if (__DEV__ && parentComponent && parentComponent.type.__hmrId) {\r\n        traverseStaticChildren(n1, n2)\r\n      }\r\n    } else if (!optimized) {\r\n      // full diff\r\n      patchChildren(\r\n        n1,\r\n        n2,\r\n        el,\r\n        null,\r\n        parentComponent,\r\n        parentSuspense,\r\n        areChildrenSVG,\r\n        slotScopeIds,\r\n        false\r\n      )\r\n    }\r\n\r\n    if ((vnodeHook = newProps.onVnodeUpdated) || dirs) {\r\n      queuePostRenderEffect(() => {\r\n        vnodeHook && invokeVNodeHook(vnodeHook, parentComponent, n2, n1)\r\n        dirs && invokeDirectiveHook(n2, n1, parentComponent, 'updated')\r\n      }, parentSuspense)\r\n    }\r\n  }\r\n\r\n  // The fast path for blocks.\r\n  const patchBlockChildren: PatchBlockChildrenFn = (\r\n    oldChildren,\r\n    newChildren,\r\n    fallbackContainer,\r\n    parentComponent,\r\n    parentSuspense,\r\n    isSVG,\r\n    slotScopeIds\r\n  ) => {\r\n    for (let i = 0; i < newChildren.length; i++) {\r\n      const oldVNode = oldChildren[i]\r\n      const newVNode = newChildren[i]\r\n      // Determine the container (parent element) for the patch.\r\n      const container =\r\n        // oldVNode may be an errored async setup() component inside Suspense\r\n        // which will not have a mounted element\r\n        oldVNode.el &&\r\n        // - In the case of a Fragment, we need to provide the actual parent\r\n        // of the Fragment itself so it can move its children.\r\n        (oldVNode.type === Fragment ||\r\n          // - In the case of different nodes, there is going to be a replacement\r\n          // which also requires the correct parent container\r\n          !isSameVNodeType(oldVNode, newVNode) ||\r\n          // - In the case of a component, it could contain anything.\r\n          oldVNode.shapeFlag & ShapeFlags.COMPONENT ||\r\n          oldVNode.shapeFlag & ShapeFlags.TELEPORT)\r\n          ? hostParentNode(oldVNode.el)!\r\n          : // In other cases, the parent container is not actually used so we\r\n            // just pass the block element here to avoid a DOM parentNode call.\r\n            fallbackContainer\r\n      patch(\r\n        oldVNode,\r\n        newVNode,\r\n        container,\r\n        null,\r\n        parentComponent,\r\n        parentSuspense,\r\n        isSVG,\r\n        slotScopeIds,\r\n        true\r\n      )\r\n    }\r\n  }\r\n\r\n  const patchProps = (\r\n    el: RendererElement,\r\n    vnode: VNode,\r\n    oldProps: Data,\r\n    newProps: Data,\r\n    parentComponent: ComponentInternalInstance | null,\r\n    parentSuspense: SuspenseBoundary | null,\r\n    isSVG: boolean\r\n  ) => {\r\n    if (oldProps !== newProps) {\r\n      for (const key in newProps) {\r\n        // empty string is not valid prop\r\n        if (isReservedProp(key)) continue\r\n        const next = newProps[key]\r\n        const prev = oldProps[key]\r\n        // defer patching value\r\n        if (next !== prev && key !== 'value') {\r\n          hostPatchProp(\r\n            el,\r\n            key,\r\n            prev,\r\n            next,\r\n            isSVG,\r\n            vnode.children as VNode[],\r\n            parentComponent,\r\n            parentSuspense,\r\n            unmountChildren\r\n          )\r\n        }\r\n      }\r\n      if (oldProps !== EMPTY_OBJ) {\r\n        for (const key in oldProps) {\r\n          if (!isReservedProp(key) && !(key in newProps)) {\r\n            hostPatchProp(\r\n              el,\r\n              key,\r\n              oldProps[key],\r\n              null,\r\n              isSVG,\r\n              vnode.children as VNode[],\r\n              parentComponent,\r\n              parentSuspense,\r\n              unmountChildren\r\n            )\r\n          }\r\n        }\r\n      }\r\n      if ('value' in newProps) {\r\n        hostPatchProp(el, 'value', oldProps.value, newProps.value)\r\n      }\r\n    }\r\n  }\r\n\r\n  const processFragment = (\r\n    n1: VNode | null,\r\n    n2: VNode,\r\n    container: RendererElement,\r\n    anchor: RendererNode | null,\r\n    parentComponent: ComponentInternalInstance | null,\r\n    parentSuspense: SuspenseBoundary | null,\r\n    isSVG: boolean,\r\n    slotScopeIds: string[] | null,\r\n    optimized: boolean\r\n  ) => {\r\n    const fragmentStartAnchor = (n2.el = n1 ? n1.el : hostCreateText(''))!\r\n    const fragmentEndAnchor = (n2.anchor = n1 ? n1.anchor : hostCreateText(''))!\r\n\r\n    let { patchFlag, dynamicChildren, slotScopeIds: fragmentSlotScopeIds } = n2\r\n\r\n    if (__DEV__ && isHmrUpdating) {\r\n      // HMR updated, force full diff\r\n      patchFlag = 0\r\n      optimized = false\r\n      dynamicChildren = null\r\n    }\r\n\r\n    // check if this is a slot fragment with :slotted scope ids\r\n    if (fragmentSlotScopeIds) {\r\n      slotScopeIds = slotScopeIds\r\n        ? slotScopeIds.concat(fragmentSlotScopeIds)\r\n        : fragmentSlotScopeIds\r\n    }\r\n\r\n    if (n1 == null) {\r\n      hostInsert(fragmentStartAnchor, container, anchor)\r\n      hostInsert(fragmentEndAnchor, container, anchor)\r\n      // a fragment can only have array children\r\n      // since they are either generated by the compiler, or implicitly created\r\n      // from arrays.\r\n      mountChildren(\r\n        n2.children as VNodeArrayChildren,\r\n        container,\r\n        fragmentEndAnchor,\r\n        parentComponent,\r\n        parentSuspense,\r\n        isSVG,\r\n        slotScopeIds,\r\n        optimized\r\n      )\r\n    } else {\r\n      if (\r\n        patchFlag > 0 &&\r\n        patchFlag & PatchFlags.STABLE_FRAGMENT &&\r\n        dynamicChildren &&\r\n        // #2715 the previous fragment could've been a BAILed one as a result\r\n        // of renderSlot() with no valid children\r\n        n1.dynamicChildren\r\n      ) {\r\n        // a stable fragment (template root or <template v-for>) doesn't need to\r\n        // patch children order, but it may contain dynamicChildren.\r\n        patchBlockChildren(\r\n          n1.dynamicChildren,\r\n          dynamicChildren,\r\n          container,\r\n          parentComponent,\r\n          parentSuspense,\r\n          isSVG,\r\n          slotScopeIds\r\n        )\r\n        if (__DEV__ && parentComponent && parentComponent.type.__hmrId) {\r\n          traverseStaticChildren(n1, n2)\r\n        } else if (\r\n          // #2080 if the stable fragment has a key, it's a <template v-for> that may\r\n          //  get moved around. Make sure all root level vnodes inherit el.\r\n          // #2134 or if it's a component root, it may also get moved around\r\n          // as the component is being moved.\r\n          n2.key != null ||\r\n          (parentComponent && n2 === parentComponent.subTree)\r\n        ) {\r\n          traverseStaticChildren(n1, n2, true /* shallow */)\r\n        }\r\n      } else {\r\n        // keyed / unkeyed, or manual fragments.\r\n        // for keyed & unkeyed, since they are compiler generated from v-for,\r\n        // each child is guaranteed to be a block so the fragment will never\r\n        // have dynamicChildren.\r\n        patchChildren(\r\n          n1,\r\n          n2,\r\n          container,\r\n          fragmentEndAnchor,\r\n          parentComponent,\r\n          parentSuspense,\r\n          isSVG,\r\n          slotScopeIds,\r\n          optimized\r\n        )\r\n      }\r\n    }\r\n  }\r\n\r\n  const processComponent = (\r\n    n1: VNode | null,\r\n    n2: VNode,\r\n    container: RendererElement,\r\n    anchor: RendererNode | null,\r\n    parentComponent: ComponentInternalInstance | null,\r\n    parentSuspense: SuspenseBoundary | null,\r\n    isSVG: boolean,\r\n    slotScopeIds: string[] | null,\r\n    optimized: boolean\r\n  ) => {\r\n    n2.slotScopeIds = slotScopeIds\r\n    if (n1 == null) {\r\n      if (n2.shapeFlag & ShapeFlags.COMPONENT_KEPT_ALIVE) {\r\n        ;(parentComponent!.ctx as KeepAliveContext).activate(\r\n          n2,\r\n          container,\r\n          anchor,\r\n          isSVG,\r\n          optimized\r\n        )\r\n      } else {\r\n        mountComponent(\r\n          n2,\r\n          container,\r\n          anchor,\r\n          parentComponent,\r\n          parentSuspense,\r\n          isSVG,\r\n          optimized\r\n        )\r\n      }\r\n    } else {\r\n      updateComponent(n1, n2, optimized)\r\n    }\r\n  }\r\n\r\n  const mountComponent: MountComponentFn = (\r\n    initialVNode,\r\n    container,\r\n    anchor,\r\n    parentComponent,\r\n    parentSuspense,\r\n    isSVG,\r\n    optimized\r\n  ) => {\r\n    // 2.x compat may pre-creaate the component instance before actually\r\n    // mounting\r\n    const compatMountInstance =\r\n      __COMPAT__ && initialVNode.isCompatRoot && initialVNode.component\r\n    const instance: ComponentInternalInstance =\r\n      compatMountInstance ||\r\n      (initialVNode.component = createComponentInstance(\r\n        initialVNode,\r\n        parentComponent,\r\n        parentSuspense\r\n      ))\r\n\r\n    if (__DEV__ && instance.type.__hmrId) {\r\n      registerHMR(instance)\r\n    }\r\n\r\n    if (__DEV__) {\r\n      pushWarningContext(initialVNode)\r\n      startMeasure(instance, `mount`)\r\n    }\r\n\r\n    // inject renderer internals for keepAlive\r\n    if (isKeepAlive(initialVNode)) {\r\n      ;(instance.ctx as KeepAliveContext).renderer = internals\r\n    }\r\n\r\n    // resolve props and slots for setup context\r\n    if (!(__COMPAT__ && compatMountInstance)) {\r\n      if (__DEV__) {\r\n        startMeasure(instance, `init`)\r\n      }\r\n      setupComponent(instance)\r\n      if (__DEV__) {\r\n        endMeasure(instance, `init`)\r\n      }\r\n    }\r\n\r\n    // setup() is async. This component relies on async logic to be resolved\r\n    // before proceeding\r\n    if (__FEATURE_SUSPENSE__ && instance.asyncDep) {\r\n      parentSuspense && parentSuspense.registerDep(instance, setupRenderEffect)\r\n\r\n      // Give it a placeholder if this is not hydration\r\n      // TODO handle self-defined fallback\r\n      if (!initialVNode.el) {\r\n        const placeholder = (instance.subTree = createVNode(Comment))\r\n        processCommentNode(null, placeholder, container!, anchor)\r\n      }\r\n      return\r\n    }\r\n\r\n    setupRenderEffect(\r\n      instance,\r\n      initialVNode,\r\n      container,\r\n      anchor,\r\n      parentSuspense,\r\n      isSVG,\r\n      optimized\r\n    )\r\n\r\n    if (__DEV__) {\r\n      popWarningContext()\r\n      endMeasure(instance, `mount`)\r\n    }\r\n  }\r\n\r\n  const updateComponent = (n1: VNode, n2: VNode, optimized: boolean) => {\r\n    const instance = (n2.component = n1.component)!\r\n    if (shouldUpdateComponent(n1, n2, optimized)) {\r\n      if (\r\n        __FEATURE_SUSPENSE__ &&\r\n        instance.asyncDep &&\r\n        !instance.asyncResolved\r\n      ) {\r\n        // async & still pending - just update props and slots\r\n        // since the component's reactive effect for render isn't set-up yet\r\n        if (__DEV__) {\r\n          pushWarningContext(n2)\r\n        }\r\n        updateComponentPreRender(instance, n2, optimized)\r\n        if (__DEV__) {\r\n          popWarningContext()\r\n        }\r\n        return\r\n      } else {\r\n        // normal update\r\n        instance.next = n2\r\n        // in case the child component is also queued, remove it to avoid\r\n        // double updating the same child component in the same flush.\r\n        invalidateJob(instance.update)\r\n        // instance.update is the reactive effect.\r\n        instance.update()\r\n      }\r\n    } else {\r\n      // no update needed. just copy over properties\r\n      n2.component = n1.component\r\n      n2.el = n1.el\r\n      instance.vnode = n2\r\n    }\r\n  }\r\n\r\n  const setupRenderEffect: SetupRenderEffectFn = (\r\n    instance,\r\n    initialVNode,\r\n    container,\r\n    anchor,\r\n    parentSuspense,\r\n    isSVG,\r\n    optimized\r\n  ) => {\r\n    const componentUpdateFn = () => {\r\n      if (!instance.isMounted) {\r\n        let vnodeHook: VNodeHook | null | undefined\r\n        const { el, props } = initialVNode\r\n        const { bm, m, parent } = instance\r\n\r\n        effect.allowRecurse = false\r\n        // beforeMount hook\r\n        if (bm) {\r\n          invokeArrayFns(bm)\r\n        }\r\n        // onVnodeBeforeMount\r\n        if ((vnodeHook = props && props.onVnodeBeforeMount)) {\r\n          invokeVNodeHook(vnodeHook, parent, initialVNode)\r\n        }\r\n        if (\r\n          __COMPAT__ &&\r\n          isCompatEnabled(DeprecationTypes.INSTANCE_EVENT_HOOKS, instance)\r\n        ) {\r\n          instance.emit('hook:beforeMount')\r\n        }\r\n        effect.allowRecurse = true\r\n\r\n        if (el && hydrateNode) {\r\n          // vnode has adopted host node - perform hydration instead of mount.\r\n          const hydrateSubTree = () => {\r\n            if (__DEV__) {\r\n              startMeasure(instance, `render`)\r\n            }\r\n            instance.subTree = renderComponentRoot(instance)\r\n            if (__DEV__) {\r\n              endMeasure(instance, `render`)\r\n            }\r\n            if (__DEV__) {\r\n              startMeasure(instance, `hydrate`)\r\n            }\r\n            hydrateNode!(\r\n              el as Node,\r\n              instance.subTree,\r\n              instance,\r\n              parentSuspense,\r\n              null\r\n            )\r\n            if (__DEV__) {\r\n              endMeasure(instance, `hydrate`)\r\n            }\r\n          }\r\n\r\n          if (isAsyncWrapper(initialVNode)) {\r\n            ;(initialVNode.type as ComponentOptions).__asyncLoader!().then(\r\n              // note: we are moving the render call into an async callback,\r\n              // which means it won't track dependencies - but it's ok because\r\n              // a server-rendered async wrapper is already in resolved state\r\n              // and it will never need to change.\r\n              () => !instance.isUnmounted && hydrateSubTree()\r\n            )\r\n          } else {\r\n            hydrateSubTree()\r\n          }\r\n        } else {\r\n          if (__DEV__) {\r\n            startMeasure(instance, `render`)\r\n          }\r\n          const subTree = (instance.subTree = renderComponentRoot(instance))\r\n          if (__DEV__) {\r\n            endMeasure(instance, `render`)\r\n          }\r\n          if (__DEV__) {\r\n            startMeasure(instance, `patch`)\r\n          }\r\n          patch(\r\n            null,\r\n            subTree,\r\n            container,\r\n            anchor,\r\n            instance,\r\n            parentSuspense,\r\n            isSVG\r\n          )\r\n          if (__DEV__) {\r\n            endMeasure(instance, `patch`)\r\n          }\r\n          initialVNode.el = subTree.el\r\n        }\r\n        // mounted hook\r\n        if (m) {\r\n          queuePostRenderEffect(m, parentSuspense)\r\n        }\r\n        // onVnodeMounted\r\n        if ((vnodeHook = props && props.onVnodeMounted)) {\r\n          const scopedInitialVNode = initialVNode\r\n          queuePostRenderEffect(\r\n            () => invokeVNodeHook(vnodeHook!, parent, scopedInitialVNode),\r\n            parentSuspense\r\n          )\r\n        }\r\n        if (\r\n          __COMPAT__ &&\r\n          isCompatEnabled(DeprecationTypes.INSTANCE_EVENT_HOOKS, instance)\r\n        ) {\r\n          queuePostRenderEffect(\r\n            () => instance.emit('hook:mounted'),\r\n            parentSuspense\r\n          )\r\n        }\r\n\r\n        // activated hook for keep-alive roots.\r\n        // #1742 activated hook must be accessed after first render\r\n        // since the hook may be injected by a child keep-alive\r\n        if (initialVNode.shapeFlag & ShapeFlags.COMPONENT_SHOULD_KEEP_ALIVE) {\r\n          instance.a && queuePostRenderEffect(instance.a, parentSuspense)\r\n          if (\r\n            __COMPAT__ &&\r\n            isCompatEnabled(DeprecationTypes.INSTANCE_EVENT_HOOKS, instance)\r\n          ) {\r\n            queuePostRenderEffect(\r\n              () => instance.emit('hook:activated'),\r\n              parentSuspense\r\n            )\r\n          }\r\n        }\r\n        instance.isMounted = true\r\n\r\n        if (__DEV__ || __FEATURE_PROD_DEVTOOLS__) {\r\n          devtoolsComponentAdded(instance)\r\n        }\r\n\r\n        // #2458: deference mount-only object parameters to prevent memleaks\r\n        initialVNode = container = anchor = null as any\r\n      } else {\r\n        // updateComponent\r\n        // This is triggered by mutation of component's own state (next: null)\r\n        // OR parent calling processComponent (next: VNode)\r\n        let { next, bu, u, parent, vnode } = instance\r\n        let originNext = next\r\n        let vnodeHook: VNodeHook | null | undefined\r\n        if (__DEV__) {\r\n          pushWarningContext(next || instance.vnode)\r\n        }\r\n\r\n        if (next) {\r\n          next.el = vnode.el\r\n          updateComponentPreRender(instance, next, optimized)\r\n        } else {\r\n          next = vnode\r\n        }\r\n\r\n        // Disallow component effect recursion during pre-lifecycle hooks.\r\n        effect.allowRecurse = false\r\n        // beforeUpdate hook\r\n        if (bu) {\r\n          invokeArrayFns(bu)\r\n        }\r\n        // onVnodeBeforeUpdate\r\n        if ((vnodeHook = next.props && next.props.onVnodeBeforeUpdate)) {\r\n          invokeVNodeHook(vnodeHook, parent, next, vnode)\r\n        }\r\n        if (\r\n          __COMPAT__ &&\r\n          isCompatEnabled(DeprecationTypes.INSTANCE_EVENT_HOOKS, instance)\r\n        ) {\r\n          instance.emit('hook:beforeUpdate')\r\n        }\r\n        effect.allowRecurse = true\r\n\r\n        // render\r\n        if (__DEV__) {\r\n          startMeasure(instance, `render`)\r\n        }\r\n        const nextTree = renderComponentRoot(instance)\r\n        if (__DEV__) {\r\n          endMeasure(instance, `render`)\r\n        }\r\n        const prevTree = instance.subTree\r\n        instance.subTree = nextTree\r\n\r\n        if (__DEV__) {\r\n          startMeasure(instance, `patch`)\r\n        }\r\n        patch(\r\n          prevTree,\r\n          nextTree,\r\n          // parent may have changed if it's in a teleport\r\n          hostParentNode(prevTree.el!)!,\r\n          // anchor may have changed if it's in a fragment\r\n          getNextHostNode(prevTree),\r\n          instance,\r\n          parentSuspense,\r\n          isSVG\r\n        )\r\n        if (__DEV__) {\r\n          endMeasure(instance, `patch`)\r\n        }\r\n        next.el = nextTree.el\r\n        if (originNext === null) {\r\n          // self-triggered update. In case of HOC, update parent component\r\n          // vnode el. HOC is indicated by parent instance's subTree pointing\r\n          // to child component's vnode\r\n          updateHOCHostEl(instance, nextTree.el)\r\n        }\r\n        // updated hook\r\n        if (u) {\r\n          queuePostRenderEffect(u, parentSuspense)\r\n        }\r\n        // onVnodeUpdated\r\n        if ((vnodeHook = next.props && next.props.onVnodeUpdated)) {\r\n          queuePostRenderEffect(\r\n            () => invokeVNodeHook(vnodeHook!, parent, next!, vnode),\r\n            parentSuspense\r\n          )\r\n        }\r\n        if (\r\n          __COMPAT__ &&\r\n          isCompatEnabled(DeprecationTypes.INSTANCE_EVENT_HOOKS, instance)\r\n        ) {\r\n          queuePostRenderEffect(\r\n            () => instance.emit('hook:updated'),\r\n            parentSuspense\r\n          )\r\n        }\r\n\r\n        if (__DEV__ || __FEATURE_PROD_DEVTOOLS__) {\r\n          devtoolsComponentUpdated(instance)\r\n        }\r\n\r\n        if (__DEV__) {\r\n          popWarningContext()\r\n        }\r\n      }\r\n    }\r\n\r\n    // create reactive effect for rendering\r\n    const effect = new ReactiveEffect(\r\n      componentUpdateFn,\r\n      () => queueJob(instance.update),\r\n      instance.scope // track it in component's effect scope\r\n    )\r\n\r\n    const update = (instance.update = effect.run.bind(effect) as SchedulerJob)\r\n    update.id = instance.uid\r\n    // allowRecurse\r\n    // #1801, #2043 component render effects should allow recursive updates\r\n    effect.allowRecurse = update.allowRecurse = true\r\n\r\n    if (__DEV__) {\r\n      effect.onTrack = instance.rtc\r\n        ? e => invokeArrayFns(instance.rtc!, e)\r\n        : void 0\r\n      effect.onTrigger = instance.rtg\r\n        ? e => invokeArrayFns(instance.rtg!, e)\r\n        : void 0\r\n      // @ts-ignore (for scheduler)\r\n      update.ownerInstance = instance\r\n    }\r\n\r\n    update()\r\n  }\r\n\r\n  const updateComponentPreRender = (\r\n    instance: ComponentInternalInstance,\r\n    nextVNode: VNode,\r\n    optimized: boolean\r\n  ) => {\r\n    nextVNode.component = instance\r\n    const prevProps = instance.vnode.props\r\n    instance.vnode = nextVNode\r\n    instance.next = null\r\n    updateProps(instance, nextVNode.props, prevProps, optimized)\r\n    updateSlots(instance, nextVNode.children, optimized)\r\n\r\n    pauseTracking()\r\n    // props update may have triggered pre-flush watchers.\r\n    // flush them before the render update.\r\n    flushPreFlushCbs(undefined, instance.update)\r\n    resetTracking()\r\n  }\r\n\r\n  const patchChildren: PatchChildrenFn = (\r\n    n1,\r\n    n2,\r\n    container,\r\n    anchor,\r\n    parentComponent,\r\n    parentSuspense,\r\n    isSVG,\r\n    slotScopeIds,\r\n    optimized = false\r\n  ) => {\r\n    const c1 = n1 && n1.children\r\n    const prevShapeFlag = n1 ? n1.shapeFlag : 0\r\n    const c2 = n2.children\r\n\r\n    const { patchFlag, shapeFlag } = n2\r\n    // fast path\r\n    if (patchFlag > 0) {\r\n      if (patchFlag & PatchFlags.KEYED_FRAGMENT) {\r\n        // this could be either fully-keyed or mixed (some keyed some not)\r\n        // presence of patchFlag means children are guaranteed to be arrays\r\n        patchKeyedChildren(\r\n          c1 as VNode[],\r\n          c2 as VNodeArrayChildren,\r\n          container,\r\n          anchor,\r\n          parentComponent,\r\n          parentSuspense,\r\n          isSVG,\r\n          slotScopeIds,\r\n          optimized\r\n        )\r\n        return\r\n      } else if (patchFlag & PatchFlags.UNKEYED_FRAGMENT) {\r\n        // unkeyed\r\n        patchUnkeyedChildren(\r\n          c1 as VNode[],\r\n          c2 as VNodeArrayChildren,\r\n          container,\r\n          anchor,\r\n          parentComponent,\r\n          parentSuspense,\r\n          isSVG,\r\n          slotScopeIds,\r\n          optimized\r\n        )\r\n        return\r\n      }\r\n    }\r\n\r\n    // children has 3 possibilities: text, array or no children.\r\n    if (shapeFlag & ShapeFlags.TEXT_CHILDREN) {\r\n      // text children fast path\r\n      if (prevShapeFlag & ShapeFlags.ARRAY_CHILDREN) {\r\n        unmountChildren(c1 as VNode[], parentComponent, parentSuspense)\r\n      }\r\n      if (c2 !== c1) {\r\n        hostSetElementText(container, c2 as string)\r\n      }\r\n    } else {\r\n      if (prevShapeFlag & ShapeFlags.ARRAY_CHILDREN) {\r\n        // prev children was array\r\n        if (shapeFlag & ShapeFlags.ARRAY_CHILDREN) {\r\n          // two arrays, cannot assume anything, do full diff\r\n          patchKeyedChildren(\r\n            c1 as VNode[],\r\n            c2 as VNodeArrayChildren,\r\n            container,\r\n            anchor,\r\n            parentComponent,\r\n            parentSuspense,\r\n            isSVG,\r\n            slotScopeIds,\r\n            optimized\r\n          )\r\n        } else {\r\n          // no new children, just unmount old\r\n          unmountChildren(c1 as VNode[], parentComponent, parentSuspense, true)\r\n        }\r\n      } else {\r\n        // prev children was text OR null\r\n        // new children is array OR null\r\n        if (prevShapeFlag & ShapeFlags.TEXT_CHILDREN) {\r\n          hostSetElementText(container, '')\r\n        }\r\n        // mount new if array\r\n        if (shapeFlag & ShapeFlags.ARRAY_CHILDREN) {\r\n          mountChildren(\r\n            c2 as VNodeArrayChildren,\r\n            container,\r\n            anchor,\r\n            parentComponent,\r\n            parentSuspense,\r\n            isSVG,\r\n            slotScopeIds,\r\n            optimized\r\n          )\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  const patchUnkeyedChildren = (\r\n    c1: VNode[],\r\n    c2: VNodeArrayChildren,\r\n    container: RendererElement,\r\n    anchor: RendererNode | null,\r\n    parentComponent: ComponentInternalInstance | null,\r\n    parentSuspense: SuspenseBoundary | null,\r\n    isSVG: boolean,\r\n    slotScopeIds: string[] | null,\r\n    optimized: boolean\r\n  ) => {\r\n    c1 = c1 || EMPTY_ARR\r\n    c2 = c2 || EMPTY_ARR\r\n    const oldLength = c1.length\r\n    const newLength = c2.length\r\n    const commonLength = Math.min(oldLength, newLength)\r\n    let i\r\n    for (i = 0; i < commonLength; i++) {\r\n      const nextChild = (c2[i] = optimized\r\n        ? cloneIfMounted(c2[i] as VNode)\r\n        : normalizeVNode(c2[i]))\r\n      patch(\r\n        c1[i],\r\n        nextChild,\r\n        container,\r\n        null,\r\n        parentComponent,\r\n        parentSuspense,\r\n        isSVG,\r\n        slotScopeIds,\r\n        optimized\r\n      )\r\n    }\r\n    if (oldLength > newLength) {\r\n      // remove old\r\n      unmountChildren(\r\n        c1,\r\n        parentComponent,\r\n        parentSuspense,\r\n        true,\r\n        false,\r\n        commonLength\r\n      )\r\n    } else {\r\n      // mount new\r\n      mountChildren(\r\n        c2,\r\n        container,\r\n        anchor,\r\n        parentComponent,\r\n        parentSuspense,\r\n        isSVG,\r\n        slotScopeIds,\r\n        optimized,\r\n        commonLength\r\n      )\r\n    }\r\n  }\r\n\r\n  // can be all-keyed or mixed\r\n  const patchKeyedChildren = (\r\n    c1: VNode[],\r\n    c2: VNodeArrayChildren,\r\n    container: RendererElement,\r\n    parentAnchor: RendererNode | null,\r\n    parentComponent: ComponentInternalInstance | null,\r\n    parentSuspense: SuspenseBoundary | null,\r\n    isSVG: boolean,\r\n    slotScopeIds: string[] | null,\r\n    optimized: boolean\r\n  ) => {\r\n    let i = 0\r\n    const l2 = c2.length\r\n    let e1 = c1.length - 1 // prev ending index\r\n    let e2 = l2 - 1 // next ending index\r\n\r\n    // 1. sync from start\r\n    // (a b) c\r\n    // (a b) d e\r\n    while (i <= e1 && i <= e2) {\r\n      const n1 = c1[i]\r\n      const n2 = (c2[i] = optimized\r\n        ? cloneIfMounted(c2[i] as VNode)\r\n        : normalizeVNode(c2[i]))\r\n      if (isSameVNodeType(n1, n2)) {\r\n        patch(\r\n          n1,\r\n          n2,\r\n          container,\r\n          null,\r\n          parentComponent,\r\n          parentSuspense,\r\n          isSVG,\r\n          slotScopeIds,\r\n          optimized\r\n        )\r\n      } else {\r\n        break\r\n      }\r\n      i++\r\n    }\r\n\r\n    // 2. sync from end\r\n    // a (b c)\r\n    // d e (b c)\r\n    while (i <= e1 && i <= e2) {\r\n      const n1 = c1[e1]\r\n      const n2 = (c2[e2] = optimized\r\n        ? cloneIfMounted(c2[e2] as VNode)\r\n        : normalizeVNode(c2[e2]))\r\n      if (isSameVNodeType(n1, n2)) {\r\n        patch(\r\n          n1,\r\n          n2,\r\n          container,\r\n          null,\r\n          parentComponent,\r\n          parentSuspense,\r\n          isSVG,\r\n          slotScopeIds,\r\n          optimized\r\n        )\r\n      } else {\r\n        break\r\n      }\r\n      e1--\r\n      e2--\r\n    }\r\n\r\n    // 3. common sequence + mount\r\n    // (a b)\r\n    // (a b) c\r\n    // i = 2, e1 = 1, e2 = 2\r\n    // (a b)\r\n    // c (a b)\r\n    // i = 0, e1 = -1, e2 = 0\r\n    if (i > e1) {\r\n      if (i <= e2) {\r\n        const nextPos = e2 + 1\r\n        const anchor = nextPos < l2 ? (c2[nextPos] as VNode).el : parentAnchor\r\n        while (i <= e2) {\r\n          patch(\r\n            null,\r\n            (c2[i] = optimized\r\n              ? cloneIfMounted(c2[i] as VNode)\r\n              : normalizeVNode(c2[i])),\r\n            container,\r\n            anchor,\r\n            parentComponent,\r\n            parentSuspense,\r\n            isSVG,\r\n            slotScopeIds,\r\n            optimized\r\n          )\r\n          i++\r\n        }\r\n      }\r\n    }\r\n\r\n    // 4. common sequence + unmount\r\n    // (a b) c\r\n    // (a b)\r\n    // i = 2, e1 = 2, e2 = 1\r\n    // a (b c)\r\n    // (b c)\r\n    // i = 0, e1 = 0, e2 = -1\r\n    else if (i > e2) {\r\n      while (i <= e1) {\r\n        unmount(c1[i], parentComponent, parentSuspense, true)\r\n        i++\r\n      }\r\n    }\r\n\r\n    // 5. unknown sequence\r\n    // [i ... e1 + 1]: a b [c d e] f g\r\n    // [i ... e2 + 1]: a b [e d c h] f g\r\n    // i = 2, e1 = 4, e2 = 5\r\n    else {\r\n      const s1 = i // prev starting index\r\n      const s2 = i // next starting index\r\n\r\n      // 5.1 build key:index map for newChildren\r\n      const keyToNewIndexMap: Map<string | number | symbol, number> = new Map()\r\n      for (i = s2; i <= e2; i++) {\r\n        const nextChild = (c2[i] = optimized\r\n          ? cloneIfMounted(c2[i] as VNode)\r\n          : normalizeVNode(c2[i]))\r\n        if (nextChild.key != null) {\r\n          if (__DEV__ && keyToNewIndexMap.has(nextChild.key)) {\r\n            warn(\r\n              `Duplicate keys found during update:`,\r\n              JSON.stringify(nextChild.key),\r\n              `Make sure keys are unique.`\r\n            )\r\n          }\r\n          keyToNewIndexMap.set(nextChild.key, i)\r\n        }\r\n      }\r\n\r\n      // 5.2 loop through old children left to be patched and try to patch\r\n      // matching nodes & remove nodes that are no longer present\r\n      let j\r\n      let patched = 0\r\n      const toBePatched = e2 - s2 + 1\r\n      let moved = false\r\n      // used to track whether any node has moved\r\n      let maxNewIndexSoFar = 0\r\n      // works as Map<newIndex, oldIndex>\r\n      // Note that oldIndex is offset by +1\r\n      // and oldIndex = 0 is a special value indicating the new node has\r\n      // no corresponding old node.\r\n      // used for determining longest stable subsequence\r\n      const newIndexToOldIndexMap = new Array(toBePatched)\r\n      for (i = 0; i < toBePatched; i++) newIndexToOldIndexMap[i] = 0\r\n\r\n      for (i = s1; i <= e1; i++) {\r\n        const prevChild = c1[i]\r\n        if (patched >= toBePatched) {\r\n          // all new children have been patched so this can only be a removal\r\n          unmount(prevChild, parentComponent, parentSuspense, true)\r\n          continue\r\n        }\r\n        let newIndex\r\n        if (prevChild.key != null) {\r\n          newIndex = keyToNewIndexMap.get(prevChild.key)\r\n        } else {\r\n          // key-less node, try to locate a key-less node of the same type\r\n          for (j = s2; j <= e2; j++) {\r\n            if (\r\n              newIndexToOldIndexMap[j - s2] === 0 &&\r\n              isSameVNodeType(prevChild, c2[j] as VNode)\r\n            ) {\r\n              newIndex = j\r\n              break\r\n            }\r\n          }\r\n        }\r\n        if (newIndex === undefined) {\r\n          unmount(prevChild, parentComponent, parentSuspense, true)\r\n        } else {\r\n          newIndexToOldIndexMap[newIndex - s2] = i + 1\r\n          if (newIndex >= maxNewIndexSoFar) {\r\n            maxNewIndexSoFar = newIndex\r\n          } else {\r\n            moved = true\r\n          }\r\n          patch(\r\n            prevChild,\r\n            c2[newIndex] as VNode,\r\n            container,\r\n            null,\r\n            parentComponent,\r\n            parentSuspense,\r\n            isSVG,\r\n            slotScopeIds,\r\n            optimized\r\n          )\r\n          patched++\r\n        }\r\n      }\r\n\r\n      // 5.3 move and mount\r\n      // generate longest stable subsequence only when nodes have moved\r\n      const increasingNewIndexSequence = moved\r\n        ? getSequence(newIndexToOldIndexMap)\r\n        : EMPTY_ARR\r\n      j = increasingNewIndexSequence.length - 1\r\n      // looping backwards so that we can use last patched node as anchor\r\n      for (i = toBePatched - 1; i >= 0; i--) {\r\n        const nextIndex = s2 + i\r\n        const nextChild = c2[nextIndex] as VNode\r\n        const anchor =\r\n          nextIndex + 1 < l2 ? (c2[nextIndex + 1] as VNode).el : parentAnchor\r\n        if (newIndexToOldIndexMap[i] === 0) {\r\n          // mount new\r\n          patch(\r\n            null,\r\n            nextChild,\r\n            container,\r\n            anchor,\r\n            parentComponent,\r\n            parentSuspense,\r\n            isSVG,\r\n            slotScopeIds,\r\n            optimized\r\n          )\r\n        } else if (moved) {\r\n          // move if:\r\n          // There is no stable subsequence (e.g. a reverse)\r\n          // OR current node is not among the stable sequence\r\n          if (j < 0 || i !== increasingNewIndexSequence[j]) {\r\n            move(nextChild, container, anchor, MoveType.REORDER)\r\n          } else {\r\n            j--\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  const move: MoveFn = (\r\n    vnode,\r\n    container,\r\n    anchor,\r\n    moveType,\r\n    parentSuspense = null\r\n  ) => {\r\n    const { el, type, transition, children, shapeFlag } = vnode\r\n    if (shapeFlag & ShapeFlags.COMPONENT) {\r\n      move(vnode.component!.subTree, container, anchor, moveType)\r\n      return\r\n    }\r\n\r\n    if (__FEATURE_SUSPENSE__ && shapeFlag & ShapeFlags.SUSPENSE) {\r\n      vnode.suspense!.move(container, anchor, moveType)\r\n      return\r\n    }\r\n\r\n    if (shapeFlag & ShapeFlags.TELEPORT) {\r\n      ;(type as typeof TeleportImpl).move(vnode, container, anchor, internals)\r\n      return\r\n    }\r\n\r\n    if (type === Fragment) {\r\n      hostInsert(el!, container, anchor)\r\n      for (let i = 0; i < (children as VNode[]).length; i++) {\r\n        move((children as VNode[])[i], container, anchor, moveType)\r\n      }\r\n      hostInsert(vnode.anchor!, container, anchor)\r\n      return\r\n    }\r\n\r\n    if (type === Static) {\r\n      moveStaticNode(vnode, container, anchor)\r\n      return\r\n    }\r\n\r\n    // single nodes\r\n    const needTransition =\r\n      moveType !== MoveType.REORDER &&\r\n      shapeFlag & ShapeFlags.ELEMENT &&\r\n      transition\r\n    if (needTransition) {\r\n      if (moveType === MoveType.ENTER) {\r\n        transition!.beforeEnter(el!)\r\n        hostInsert(el!, container, anchor)\r\n        queuePostRenderEffect(() => transition!.enter(el!), parentSuspense)\r\n      } else {\r\n        const { leave, delayLeave, afterLeave } = transition!\r\n        const remove = () => hostInsert(el!, container, anchor)\r\n        const performLeave = () => {\r\n          leave(el!, () => {\r\n            remove()\r\n            afterLeave && afterLeave()\r\n          })\r\n        }\r\n        if (delayLeave) {\r\n          delayLeave(el!, remove, performLeave)\r\n        } else {\r\n          performLeave()\r\n        }\r\n      }\r\n    } else {\r\n      hostInsert(el!, container, anchor)\r\n    }\r\n  }\r\n\r\n  const unmount: UnmountFn = (\r\n    vnode,\r\n    parentComponent,\r\n    parentSuspense,\r\n    doRemove = false,\r\n    optimized = false\r\n  ) => {\r\n    const {\r\n      type,\r\n      props,\r\n      ref,\r\n      children,\r\n      dynamicChildren,\r\n      shapeFlag,\r\n      patchFlag,\r\n      dirs\r\n    } = vnode\r\n    // unset ref\r\n    if (ref != null) {\r\n      setRef(ref, null, parentSuspense, vnode, true)\r\n    }\r\n\r\n    if (shapeFlag & ShapeFlags.COMPONENT_SHOULD_KEEP_ALIVE) {\r\n      ;(parentComponent!.ctx as KeepAliveContext).deactivate(vnode)\r\n      return\r\n    }\r\n\r\n    const shouldInvokeDirs = shapeFlag & ShapeFlags.ELEMENT && dirs\r\n\r\n    let vnodeHook: VNodeHook | undefined | null\r\n    if ((vnodeHook = props && props.onVnodeBeforeUnmount)) {\r\n      invokeVNodeHook(vnodeHook, parentComponent, vnode)\r\n    }\r\n\r\n    if (shapeFlag & ShapeFlags.COMPONENT) {\r\n      unmountComponent(vnode.component!, parentSuspense, doRemove)\r\n    } else {\r\n      if (__FEATURE_SUSPENSE__ && shapeFlag & ShapeFlags.SUSPENSE) {\r\n        vnode.suspense!.unmount(parentSuspense, doRemove)\r\n        return\r\n      }\r\n\r\n      if (shouldInvokeDirs) {\r\n        invokeDirectiveHook(vnode, null, parentComponent, 'beforeUnmount')\r\n      }\r\n\r\n      if (shapeFlag & ShapeFlags.TELEPORT) {\r\n        ;(vnode.type as typeof TeleportImpl).remove(\r\n          vnode,\r\n          parentComponent,\r\n          parentSuspense,\r\n          optimized,\r\n          internals,\r\n          doRemove\r\n        )\r\n      } else if (\r\n        dynamicChildren &&\r\n        // #1153: fast path should not be taken for non-stable (v-for) fragments\r\n        (type !== Fragment ||\r\n          (patchFlag > 0 && patchFlag & PatchFlags.STABLE_FRAGMENT))\r\n      ) {\r\n        // fast path for block nodes: only need to unmount dynamic children.\r\n        unmountChildren(\r\n          dynamicChildren,\r\n          parentComponent,\r\n          parentSuspense,\r\n          false,\r\n          true\r\n        )\r\n      } else if (\r\n        (type === Fragment &&\r\n          (patchFlag & PatchFlags.KEYED_FRAGMENT ||\r\n            patchFlag & PatchFlags.UNKEYED_FRAGMENT)) ||\r\n        (!optimized && shapeFlag & ShapeFlags.ARRAY_CHILDREN)\r\n      ) {\r\n        unmountChildren(children as VNode[], parentComponent, parentSuspense)\r\n      }\r\n\r\n      if (doRemove) {\r\n        remove(vnode)\r\n      }\r\n    }\r\n\r\n    if ((vnodeHook = props && props.onVnodeUnmounted) || shouldInvokeDirs) {\r\n      queuePostRenderEffect(() => {\r\n        vnodeHook && invokeVNodeHook(vnodeHook, parentComponent, vnode)\r\n        shouldInvokeDirs &&\r\n          invokeDirectiveHook(vnode, null, parentComponent, 'unmounted')\r\n      }, parentSuspense)\r\n    }\r\n  }\r\n\r\n  const remove: RemoveFn = vnode => {\r\n    const { type, el, anchor, transition } = vnode\r\n    if (type === Fragment) {\r\n      removeFragment(el!, anchor!)\r\n      return\r\n    }\r\n\r\n    if (type === Static) {\r\n      removeStaticNode(vnode)\r\n      return\r\n    }\r\n\r\n    const performRemove = () => {\r\n      hostRemove(el!)\r\n      if (transition && !transition.persisted && transition.afterLeave) {\r\n        transition.afterLeave()\r\n      }\r\n    }\r\n\r\n    if (\r\n      vnode.shapeFlag & ShapeFlags.ELEMENT &&\r\n      transition &&\r\n      !transition.persisted\r\n    ) {\r\n      const { leave, delayLeave } = transition\r\n      const performLeave = () => leave(el!, performRemove)\r\n      if (delayLeave) {\r\n        delayLeave(vnode.el!, performRemove, performLeave)\r\n      } else {\r\n        performLeave()\r\n      }\r\n    } else {\r\n      performRemove()\r\n    }\r\n  }\r\n\r\n  const removeFragment = (cur: RendererNode, end: RendererNode) => {\r\n    // For fragments, directly remove all contained DOM nodes.\r\n    // (fragment child nodes cannot have transition)\r\n    let next\r\n    while (cur !== end) {\r\n      next = hostNextSibling(cur)!\r\n      hostRemove(cur)\r\n      cur = next\r\n    }\r\n    hostRemove(end)\r\n  }\r\n\r\n  const unmountComponent = (\r\n    instance: ComponentInternalInstance,\r\n    parentSuspense: SuspenseBoundary | null,\r\n    doRemove?: boolean\r\n  ) => {\r\n    if (__DEV__ && instance.type.__hmrId) {\r\n      unregisterHMR(instance)\r\n    }\r\n\r\n    const { bum, scope, update, subTree, um } = instance\r\n\r\n    // beforeUnmount hook\r\n    if (bum) {\r\n      invokeArrayFns(bum)\r\n    }\r\n\r\n    if (\r\n      __COMPAT__ &&\r\n      isCompatEnabled(DeprecationTypes.INSTANCE_EVENT_HOOKS, instance)\r\n    ) {\r\n      instance.emit('hook:beforeDestroy')\r\n    }\r\n\r\n    // stop effects in component scope\r\n    scope.stop()\r\n\r\n    // update may be null if a component is unmounted before its async\r\n    // setup has resolved.\r\n    if (update) {\r\n      // so that scheduler will no longer invoke it\r\n      update.active = false\r\n      unmount(subTree, instance, parentSuspense, doRemove)\r\n    }\r\n    // unmounted hook\r\n    if (um) {\r\n      queuePostRenderEffect(um, parentSuspense)\r\n    }\r\n    if (\r\n      __COMPAT__ &&\r\n      isCompatEnabled(DeprecationTypes.INSTANCE_EVENT_HOOKS, instance)\r\n    ) {\r\n      queuePostRenderEffect(\r\n        () => instance.emit('hook:destroyed'),\r\n        parentSuspense\r\n      )\r\n    }\r\n    queuePostRenderEffect(() => {\r\n      instance.isUnmounted = true\r\n    }, parentSuspense)\r\n\r\n    // A component with async dep inside a pending suspense is unmounted before\r\n    // its async dep resolves. This should remove the dep from the suspense, and\r\n    // cause the suspense to resolve immediately if that was the last dep.\r\n    if (\r\n      __FEATURE_SUSPENSE__ &&\r\n      parentSuspense &&\r\n      parentSuspense.pendingBranch &&\r\n      !parentSuspense.isUnmounted &&\r\n      instance.asyncDep &&\r\n      !instance.asyncResolved &&\r\n      instance.suspenseId === parentSuspense.pendingId\r\n    ) {\r\n      parentSuspense.deps--\r\n      if (parentSuspense.deps === 0) {\r\n        parentSuspense.resolve()\r\n      }\r\n    }\r\n\r\n    if (__DEV__ || __FEATURE_PROD_DEVTOOLS__) {\r\n      devtoolsComponentRemoved(instance)\r\n    }\r\n  }\r\n\r\n  const unmountChildren: UnmountChildrenFn = (\r\n    children,\r\n    parentComponent,\r\n    parentSuspense,\r\n    doRemove = false,\r\n    optimized = false,\r\n    start = 0\r\n  ) => {\r\n    for (let i = start; i < children.length; i++) {\r\n      unmount(children[i], parentComponent, parentSuspense, doRemove, optimized)\r\n    }\r\n  }\r\n\r\n  const getNextHostNode: NextFn = vnode => {\r\n    if (vnode.shapeFlag & ShapeFlags.COMPONENT) {\r\n      return getNextHostNode(vnode.component!.subTree)\r\n    }\r\n    if (__FEATURE_SUSPENSE__ && vnode.shapeFlag & ShapeFlags.SUSPENSE) {\r\n      return vnode.suspense!.next()\r\n    }\r\n    return hostNextSibling((vnode.anchor || vnode.el)!)\r\n  }\r\n\r\n  const render: RootRenderFunction = (vnode, container, isSVG) => {\r\n    if (vnode == null) {\r\n      if (container._vnode) {\r\n        unmount(container._vnode, null, null, true)\r\n      }\r\n    } else {\r\n      patch(container._vnode || null, vnode, container, null, null, null, isSVG)\r\n    }\r\n    flushPostFlushCbs()\r\n    container._vnode = vnode\r\n  }\r\n\r\n  const internals: RendererInternals = {\r\n    p: patch,\r\n    um: unmount,\r\n    m: move,\r\n    r: remove,\r\n    mt: mountComponent,\r\n    mc: mountChildren,\r\n    pc: patchChildren,\r\n    pbc: patchBlockChildren,\r\n    n: getNextHostNode,\r\n    o: options\r\n  }\r\n\r\n  let hydrate: ReturnType<typeof createHydrationFunctions>[0] | undefined\r\n  let hydrateNode: ReturnType<typeof createHydrationFunctions>[1] | undefined\r\n  if (createHydrationFns) {\r\n    ;[hydrate, hydrateNode] = createHydrationFns(\r\n      internals as RendererInternals<Node, Element>\r\n    )\r\n  }\r\n\r\n  return {\r\n    render,\r\n    hydrate,\r\n    createApp: createAppAPI(render, hydrate)\r\n  }\r\n}\r\n\r\nexport function setRef(\r\n  rawRef: VNodeNormalizedRef,\r\n  oldRawRef: VNodeNormalizedRef | null,\r\n  parentSuspense: SuspenseBoundary | null,\r\n  vnode: VNode,\r\n  isUnmount = false\r\n) {\r\n  if (isArray(rawRef)) {\r\n    rawRef.forEach((r, i) =>\r\n      setRef(\r\n        r,\r\n        oldRawRef && (isArray(oldRawRef) ? oldRawRef[i] : oldRawRef),\r\n        parentSuspense,\r\n        vnode,\r\n        isUnmount\r\n      )\r\n    )\r\n    return\r\n  }\r\n\r\n  if (isAsyncWrapper(vnode) && !isUnmount) {\r\n    // when mounting async components, nothing needs to be done,\r\n    // because the template ref is forwarded to inner component\r\n    return\r\n  }\r\n\r\n  const refValue =\r\n    vnode.shapeFlag & ShapeFlags.STATEFUL_COMPONENT\r\n      ? getExposeProxy(vnode.component!) || vnode.component!.proxy\r\n      : vnode.el\r\n  const value = isUnmount ? null : refValue\r\n\r\n  const { i: owner, r: ref } = rawRef\r\n  if (__DEV__ && !owner) {\r\n    warn(\r\n      `Missing ref owner context. ref cannot be used on hoisted vnodes. ` +\r\n        `A vnode with ref must be created inside the render function.`\r\n    )\r\n    return\r\n  }\r\n  const oldRef = oldRawRef && (oldRawRef as VNodeNormalizedRefAtom).r\r\n  const refs = owner.refs === EMPTY_OBJ ? (owner.refs = {}) : owner.refs\r\n  const setupState = owner.setupState\r\n\r\n  // dynamic ref changed. unset old ref\r\n  if (oldRef != null && oldRef !== ref) {\r\n    if (isString(oldRef)) {\r\n      refs[oldRef] = null\r\n      if (hasOwn(setupState, oldRef)) {\r\n        setupState[oldRef] = null\r\n      }\r\n    } else if (isRef(oldRef)) {\r\n      oldRef.value = null\r\n    }\r\n  }\r\n\r\n  if (isString(ref)) {\r\n    const doSet = () => {\r\n      if (__COMPAT__ && isCompatEnabled(DeprecationTypes.V_FOR_REF, owner)) {\r\n        registerLegacyRef(refs, ref, refValue, owner, rawRef.f, isUnmount)\r\n      } else {\r\n        refs[ref] = value\r\n      }\r\n      if (hasOwn(setupState, ref)) {\r\n        setupState[ref] = value\r\n      }\r\n    }\r\n    // #1789: for non-null values, set them after render\r\n    // null values means this is unmount and it should not overwrite another\r\n    // ref with the same key\r\n    if (value) {\r\n      ;(doSet as SchedulerJob).id = -1\r\n      queuePostRenderEffect(doSet, parentSuspense)\r\n    } else {\r\n      doSet()\r\n    }\r\n  } else if (isRef(ref)) {\r\n    const doSet = () => {\r\n      ref.value = value\r\n    }\r\n    if (value) {\r\n      ;(doSet as SchedulerJob).id = -1\r\n      queuePostRenderEffect(doSet, parentSuspense)\r\n    } else {\r\n      doSet()\r\n    }\r\n  } else if (isFunction(ref)) {\r\n    callWithErrorHandling(ref, owner, ErrorCodes.FUNCTION_REF, [value, refs])\r\n  } else if (__DEV__) {\r\n    warn('Invalid template ref type:', value, `(${typeof value})`)\r\n  }\r\n}\r\n\r\nexport function invokeVNodeHook(\r\n  hook: VNodeHook,\r\n  instance: ComponentInternalInstance | null,\r\n  vnode: VNode,\r\n  prevVNode: VNode | null = null\r\n) {\r\n  callWithAsyncErrorHandling(hook, instance, ErrorCodes.VNODE_HOOK, [\r\n    vnode,\r\n    prevVNode\r\n  ])\r\n}\r\n\r\n/**\r\n * #1156\r\n * When a component is HMR-enabled, we need to make sure that all static nodes\r\n * inside a block also inherit the DOM element from the previous tree so that\r\n * HMR updates (which are full updates) can retrieve the element for patching.\r\n *\r\n * #2080\r\n * Inside keyed `template` fragment static children, if a fragment is moved,\r\n * the children will always moved so that need inherit el form previous nodes\r\n * to ensure correct moved position.\r\n */\r\nexport function traverseStaticChildren(n1: VNode, n2: VNode, shallow = false) {\r\n  const ch1 = n1.children\r\n  const ch2 = n2.children\r\n  if (isArray(ch1) && isArray(ch2)) {\r\n    for (let i = 0; i < ch1.length; i++) {\r\n      // this is only called in the optimized path so array children are\r\n      // guaranteed to be vnodes\r\n      const c1 = ch1[i] as VNode\r\n      let c2 = ch2[i] as VNode\r\n      if (c2.shapeFlag & ShapeFlags.ELEMENT && !c2.dynamicChildren) {\r\n        if (c2.patchFlag <= 0 || c2.patchFlag === PatchFlags.HYDRATE_EVENTS) {\r\n          c2 = ch2[i] = cloneIfMounted(ch2[i] as VNode)\r\n          c2.el = c1.el\r\n        }\r\n        if (!shallow) traverseStaticChildren(c1, c2)\r\n      }\r\n      // also inherit for comment nodes, but not placeholders (e.g. v-if which\r\n      // would have received .el during block patch)\r\n      if (__DEV__ && c2.type === Comment && !c2.el) {\r\n        c2.el = c1.el\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n// https://en.wikipedia.org/wiki/Longest_increasing_subsequence\r\nfunction getSequence(arr: number[]): number[] {\r\n  const p = arr.slice()\r\n  const result = [0]\r\n  let i, j, u, v, c\r\n  const len = arr.length\r\n  for (i = 0; i < len; i++) {\r\n    const arrI = arr[i]\r\n    if (arrI !== 0) {\r\n      j = result[result.length - 1]\r\n      if (arr[j] < arrI) {\r\n        p[i] = j\r\n        result.push(i)\r\n        continue\r\n      }\r\n      u = 0\r\n      v = result.length - 1\r\n      while (u < v) {\r\n        c = (u + v) >> 1\r\n        if (arr[result[c]] < arrI) {\r\n          u = c + 1\r\n        } else {\r\n          v = c\r\n        }\r\n      }\r\n      if (arrI < arr[result[u]]) {\r\n        if (u > 0) {\r\n          p[i] = result[u - 1]\r\n        }\r\n        result[u] = i\r\n      }\r\n    }\r\n  }\r\n  u = result.length\r\n  v = result[u - 1]\r\n  while (u-- > 0) {\r\n    result[u] = v\r\n    v = p[v]\r\n  }\r\n  return result\r\n}\r\n","import { VNode, VNodeChild, isVNode } from './vnode'\r\nimport {\r\n  pauseTracking,\r\n  resetTracking,\r\n  shallowReadonly,\r\n  proxyRefs,\r\n  EffectScope,\r\n  markRaw,\r\n  track,\r\n  TrackOpTypes\r\n} from '@vue/reactivity'\r\nimport {\r\n  ComponentPublicInstance,\r\n  PublicInstanceProxyHandlers,\r\n  createDevRenderContext,\r\n  exposePropsOnRenderContext,\r\n  exposeSetupStateOnRenderContext,\r\n  ComponentPublicInstanceConstructor,\r\n  publicPropertiesMap,\r\n  RuntimeCompiledPublicInstanceProxyHandlers\r\n} from './componentPublicInstance'\r\nimport {\r\n  ComponentPropsOptions,\r\n  NormalizedPropsOptions,\r\n  initProps,\r\n  normalizePropsOptions\r\n} from './componentProps'\r\nimport { Slots, initSlots, InternalSlots } from './componentSlots'\r\nimport { warn } from './warning'\r\nimport { ErrorCodes, callWithErrorHandling, handleError } from './errorHandling'\r\nimport { AppContext, createAppContext, AppConfig } from './apiCreateApp'\r\nimport { Directive, validateDirectiveName } from './directives'\r\nimport {\r\n  applyOptions,\r\n  ComponentOptions,\r\n  ComputedOptions,\r\n  MethodOptions\r\n} from './componentOptions'\r\nimport {\r\n  EmitsOptions,\r\n  ObjectEmitsOptions,\r\n  EmitFn,\r\n  emit,\r\n  normalizeEmitsOptions\r\n} from './componentEmits'\r\nimport {\r\n  EMPTY_OBJ,\r\n  isFunction,\r\n  NOOP,\r\n  isObject,\r\n  NO,\r\n  makeMap,\r\n  isPromise,\r\n  ShapeFlags,\r\n  extend\r\n} from '@vue/shared'\r\nimport { SuspenseBoundary } from './components/Suspense'\r\nimport { CompilerOptions } from '@vue/compiler-core'\r\nimport { markAttrsAccessed } from './componentRenderUtils'\r\nimport { currentRenderingInstance } from './componentRenderContext'\r\nimport { startMeasure, endMeasure } from './profiling'\r\nimport { convertLegacyRenderFn } from './compat/renderFn'\r\nimport { globalCompatConfig, validateCompatConfig } from './compat/compatConfig'\r\nimport { SchedulerJob } from './scheduler'\r\n\r\nexport type Data = Record<string, unknown>\r\n\r\n/**\r\n * For extending allowed non-declared props on components in TSX\r\n */\r\nexport interface ComponentCustomProps {}\r\n\r\n/**\r\n * Default allowed non-declared props on component in TSX\r\n */\r\nexport interface AllowedComponentProps {\r\n  class?: unknown\r\n  style?: unknown\r\n}\r\n\r\n// Note: can't mark this whole interface internal because some public interfaces\r\n// extend it.\r\nexport interface ComponentInternalOptions {\r\n  /**\r\n   * @internal\r\n   */\r\n  __scopeId?: string\r\n  /**\r\n   * @internal\r\n   */\r\n  __cssModules?: Data\r\n  /**\r\n   * @internal\r\n   */\r\n  __hmrId?: string\r\n  /**\r\n   * Compat build only, for bailing out of certain compatibility behavior\r\n   */\r\n  __isBuiltIn?: boolean\r\n  /**\r\n   * This one should be exposed so that devtools can make use of it\r\n   */\r\n  __file?: string\r\n}\r\n\r\nexport interface FunctionalComponent<P = {}, E extends EmitsOptions = {}>\r\n  extends ComponentInternalOptions {\r\n  // use of any here is intentional so it can be a valid JSX Element constructor\r\n  (props: P, ctx: Omit<SetupContext<E>, 'expose'>): any\r\n  props?: ComponentPropsOptions<P>\r\n  emits?: E | (keyof E)[]\r\n  inheritAttrs?: boolean\r\n  displayName?: string\r\n}\r\n\r\nexport interface ClassComponent {\r\n  new (...args: any[]): ComponentPublicInstance<any, any, any, any, any>\r\n  __vccOpts: ComponentOptions\r\n}\r\n\r\n/**\r\n * Concrete component type matches its actual value: it's either an options\r\n * object, or a function. Use this where the code expects to work with actual\r\n * values, e.g. checking if its a function or not. This is mostly for internal\r\n * implementation code.\r\n */\r\nexport type ConcreteComponent<\r\n  Props = {},\r\n  RawBindings = any,\r\n  D = any,\r\n  C extends ComputedOptions = ComputedOptions,\r\n  M extends MethodOptions = MethodOptions\r\n> =\r\n  | ComponentOptions<Props, RawBindings, D, C, M>\r\n  | FunctionalComponent<Props, any>\r\n\r\n/**\r\n * A type used in public APIs where a component type is expected.\r\n * The constructor type is an artificial type returned by defineComponent().\r\n */\r\nexport type Component<\r\n  Props = any,\r\n  RawBindings = any,\r\n  D = any,\r\n  C extends ComputedOptions = ComputedOptions,\r\n  M extends MethodOptions = MethodOptions\r\n> =\r\n  | ConcreteComponent<Props, RawBindings, D, C, M>\r\n  | ComponentPublicInstanceConstructor<Props>\r\n\r\nexport { ComponentOptions }\r\n\r\ntype LifecycleHook<TFn = Function> = TFn[] | null\r\n\r\nexport const enum LifecycleHooks {\r\n  BEFORE_CREATE = 'bc',\r\n  CREATED = 'c',\r\n  BEFORE_MOUNT = 'bm',\r\n  MOUNTED = 'm',\r\n  BEFORE_UPDATE = 'bu',\r\n  UPDATED = 'u',\r\n  BEFORE_UNMOUNT = 'bum',\r\n  UNMOUNTED = 'um',\r\n  DEACTIVATED = 'da',\r\n  ACTIVATED = 'a',\r\n  RENDER_TRIGGERED = 'rtg',\r\n  RENDER_TRACKED = 'rtc',\r\n  ERROR_CAPTURED = 'ec',\r\n  SERVER_PREFETCH = 'sp'\r\n}\r\n\r\nexport interface SetupContext<E = EmitsOptions> {\r\n  attrs: Data\r\n  slots: Slots\r\n  emit: EmitFn<E>\r\n  expose: (exposed?: Record<string, any>) => void\r\n}\r\n\r\n/**\r\n * @internal\r\n */\r\nexport type InternalRenderFunction = {\r\n  (\r\n    ctx: ComponentPublicInstance,\r\n    cache: ComponentInternalInstance['renderCache'],\r\n    // for compiler-optimized bindings\r\n    $props: ComponentInternalInstance['props'],\r\n    $setup: ComponentInternalInstance['setupState'],\r\n    $data: ComponentInternalInstance['data'],\r\n    $options: ComponentInternalInstance['ctx']\r\n  ): VNodeChild\r\n  _rc?: boolean // isRuntimeCompiled\r\n\r\n  // __COMPAT__ only\r\n  _compatChecked?: boolean // v3 and already checked for v2 compat\r\n  _compatWrapped?: boolean // is wrapped for v2 compat\r\n}\r\n\r\n/**\r\n * We expose a subset of properties on the internal instance as they are\r\n * useful for advanced external libraries and tools.\r\n */\r\nexport interface ComponentInternalInstance {\r\n  uid: number\r\n  type: ConcreteComponent\r\n  parent: ComponentInternalInstance | null\r\n  root: ComponentInternalInstance\r\n  appContext: AppContext\r\n  /**\r\n   * Vnode representing this component in its parent's vdom tree\r\n   */\r\n  vnode: VNode\r\n  /**\r\n   * The pending new vnode from parent updates\r\n   * @internal\r\n   */\r\n  next: VNode | null\r\n  /**\r\n   * Root vnode of this component's own vdom tree\r\n   */\r\n  subTree: VNode\r\n  /**\r\n   * Bound effect runner to be passed to schedulers\r\n   */\r\n  update: SchedulerJob\r\n  /**\r\n   * The render function that returns vdom tree.\r\n   * @internal\r\n   */\r\n  render: InternalRenderFunction | null\r\n  /**\r\n   * SSR render function\r\n   * @internal\r\n   */\r\n  ssrRender?: Function | null\r\n  /**\r\n   * Object containing values this component provides for its descendents\r\n   * @internal\r\n   */\r\n  provides: Data\r\n  /**\r\n   * Tracking reactive effects (e.g. watchers) associated with this component\r\n   * so that they can be automatically stopped on component unmount\r\n   * @internal\r\n   */\r\n  scope: EffectScope\r\n  /**\r\n   * cache for proxy access type to avoid hasOwnProperty calls\r\n   * @internal\r\n   */\r\n  accessCache: Data | null\r\n  /**\r\n   * cache for render function values that rely on _ctx but won't need updates\r\n   * after initialized (e.g. inline handlers)\r\n   * @internal\r\n   */\r\n  renderCache: (Function | VNode)[]\r\n\r\n  /**\r\n   * Resolved component registry, only for components with mixins or extends\r\n   * @internal\r\n   */\r\n  components: Record<string, ConcreteComponent> | null\r\n  /**\r\n   * Resolved directive registry, only for components with mixins or extends\r\n   * @internal\r\n   */\r\n  directives: Record<string, Directive> | null\r\n  /**\r\n   * Resolved filters registry, v2 compat only\r\n   * @internal\r\n   */\r\n  filters?: Record<string, Function>\r\n  /**\r\n   * resolved props options\r\n   * @internal\r\n   */\r\n  propsOptions: NormalizedPropsOptions\r\n  /**\r\n   * resolved emits options\r\n   * @internal\r\n   */\r\n  emitsOptions: ObjectEmitsOptions | null\r\n  /**\r\n   * resolved inheritAttrs options\r\n   * @internal\r\n   */\r\n  inheritAttrs?: boolean\r\n  /**\r\n   * is custom element?\r\n   */\r\n  isCE?: boolean\r\n  /**\r\n   * custom element specific HMR method\r\n   */\r\n  ceReload?: (newStyles?: string[]) => void\r\n\r\n  // the rest are only for stateful components ---------------------------------\r\n\r\n  // main proxy that serves as the public instance (`this`)\r\n  proxy: ComponentPublicInstance | null\r\n\r\n  // exposed properties via expose()\r\n  exposed: Record<string, any> | null\r\n  exposeProxy: Record<string, any> | null\r\n\r\n  /**\r\n   * alternative proxy used only for runtime-compiled render functions using\r\n   * `with` block\r\n   * @internal\r\n   */\r\n  withProxy: ComponentPublicInstance | null\r\n  /**\r\n   * This is the target for the public instance proxy. It also holds properties\r\n   * injected by user options (computed, methods etc.) and user-attached\r\n   * custom properties (via `this.x = ...`)\r\n   * @internal\r\n   */\r\n  ctx: Data\r\n\r\n  // state\r\n  data: Data\r\n  props: Data\r\n  attrs: Data\r\n  slots: InternalSlots\r\n  refs: Data\r\n  emit: EmitFn\r\n  /**\r\n   * used for keeping track of .once event handlers on components\r\n   * @internal\r\n   */\r\n  emitted: Record<string, boolean> | null\r\n  /**\r\n   * used for caching the value returned from props default factory functions to\r\n   * avoid unnecessary watcher trigger\r\n   * @internal\r\n   */\r\n  propsDefaults: Data\r\n  /**\r\n   * setup related\r\n   * @internal\r\n   */\r\n  setupState: Data\r\n  /**\r\n   * devtools access to additional info\r\n   * @internal\r\n   */\r\n  devtoolsRawSetupState?: any\r\n  /**\r\n   * @internal\r\n   */\r\n  setupContext: SetupContext | null\r\n\r\n  /**\r\n   * suspense related\r\n   * @internal\r\n   */\r\n  suspense: SuspenseBoundary | null\r\n  /**\r\n   * suspense pending batch id\r\n   * @internal\r\n   */\r\n  suspenseId: number\r\n  /**\r\n   * @internal\r\n   */\r\n  asyncDep: Promise<any> | null\r\n  /**\r\n   * @internal\r\n   */\r\n  asyncResolved: boolean\r\n\r\n  // lifecycle\r\n  isMounted: boolean\r\n  isUnmounted: boolean\r\n  isDeactivated: boolean\r\n  /**\r\n   * @internal\r\n   */\r\n  [LifecycleHooks.BEFORE_CREATE]: LifecycleHook\r\n  /**\r\n   * @internal\r\n   */\r\n  [LifecycleHooks.CREATED]: LifecycleHook\r\n  /**\r\n   * @internal\r\n   */\r\n  [LifecycleHooks.BEFORE_MOUNT]: LifecycleHook\r\n  /**\r\n   * @internal\r\n   */\r\n  [LifecycleHooks.MOUNTED]: LifecycleHook\r\n  /**\r\n   * @internal\r\n   */\r\n  [LifecycleHooks.BEFORE_UPDATE]: LifecycleHook\r\n  /**\r\n   * @internal\r\n   */\r\n  [LifecycleHooks.UPDATED]: LifecycleHook\r\n  /**\r\n   * @internal\r\n   */\r\n  [LifecycleHooks.BEFORE_UNMOUNT]: LifecycleHook\r\n  /**\r\n   * @internal\r\n   */\r\n  [LifecycleHooks.UNMOUNTED]: LifecycleHook\r\n  /**\r\n   * @internal\r\n   */\r\n  [LifecycleHooks.RENDER_TRACKED]: LifecycleHook\r\n  /**\r\n   * @internal\r\n   */\r\n  [LifecycleHooks.RENDER_TRIGGERED]: LifecycleHook\r\n  /**\r\n   * @internal\r\n   */\r\n  [LifecycleHooks.ACTIVATED]: LifecycleHook\r\n  /**\r\n   * @internal\r\n   */\r\n  [LifecycleHooks.DEACTIVATED]: LifecycleHook\r\n  /**\r\n   * @internal\r\n   */\r\n  [LifecycleHooks.ERROR_CAPTURED]: LifecycleHook\r\n  /**\r\n   * @internal\r\n   */\r\n  [LifecycleHooks.SERVER_PREFETCH]: LifecycleHook<() => Promise<unknown>>\r\n}\r\n\r\nconst emptyAppContext = createAppContext()\r\n\r\nlet uid = 0\r\n\r\nexport function createComponentInstance(\r\n  vnode: VNode,\r\n  parent: ComponentInternalInstance | null,\r\n  suspense: SuspenseBoundary | null\r\n) {\r\n  const type = vnode.type as ConcreteComponent\r\n  // inherit parent app context - or - if root, adopt from root vnode\r\n  const appContext =\r\n    (parent ? parent.appContext : vnode.appContext) || emptyAppContext\r\n\r\n  const instance: ComponentInternalInstance = {\r\n    uid: uid++,\r\n    vnode,\r\n    type,\r\n    parent,\r\n    appContext,\r\n    root: null!, // to be immediately set\r\n    next: null,\r\n    subTree: null!, // will be set synchronously right after creation\r\n    update: null!, // will be set synchronously right after creation\r\n    scope: new EffectScope(true /* detached */),\r\n    render: null,\r\n    proxy: null,\r\n    exposed: null,\r\n    exposeProxy: null,\r\n    withProxy: null,\r\n    provides: parent ? parent.provides : Object.create(appContext.provides),\r\n    accessCache: null!,\r\n    renderCache: [],\r\n\r\n    // local resovled assets\r\n    components: null,\r\n    directives: null,\r\n\r\n    // resolved props and emits options\r\n    propsOptions: normalizePropsOptions(type, appContext),\r\n    emitsOptions: normalizeEmitsOptions(type, appContext),\r\n\r\n    // emit\r\n    emit: null as any, // to be set immediately\r\n    emitted: null,\r\n\r\n    // props default value\r\n    propsDefaults: EMPTY_OBJ,\r\n\r\n    // inheritAttrs\r\n    inheritAttrs: type.inheritAttrs,\r\n\r\n    // state\r\n    ctx: EMPTY_OBJ,\r\n    data: EMPTY_OBJ,\r\n    props: EMPTY_OBJ,\r\n    attrs: EMPTY_OBJ,\r\n    slots: EMPTY_OBJ,\r\n    refs: EMPTY_OBJ,\r\n    setupState: EMPTY_OBJ,\r\n    setupContext: null,\r\n\r\n    // suspense related\r\n    suspense,\r\n    suspenseId: suspense ? suspense.pendingId : 0,\r\n    asyncDep: null,\r\n    asyncResolved: false,\r\n\r\n    // lifecycle hooks\r\n    // not using enums here because it results in computed properties\r\n    isMounted: false,\r\n    isUnmounted: false,\r\n    isDeactivated: false,\r\n    bc: null,\r\n    c: null,\r\n    bm: null,\r\n    m: null,\r\n    bu: null,\r\n    u: null,\r\n    um: null,\r\n    bum: null,\r\n    da: null,\r\n    a: null,\r\n    rtg: null,\r\n    rtc: null,\r\n    ec: null,\r\n    sp: null\r\n  }\r\n  if (__DEV__) {\r\n    instance.ctx = createDevRenderContext(instance)\r\n  } else {\r\n    instance.ctx = { _: instance }\r\n  }\r\n  instance.root = parent ? parent.root : instance\r\n  instance.emit = emit.bind(null, instance)\r\n\r\n  // apply custom element special handling\r\n  if (vnode.ce) {\r\n    vnode.ce(instance)\r\n  }\r\n\r\n  return instance\r\n}\r\n\r\nexport let currentInstance: ComponentInternalInstance | null = null\r\n\r\nexport const getCurrentInstance: () => ComponentInternalInstance | null = () =>\r\n  currentInstance || currentRenderingInstance\r\n\r\nexport const setCurrentInstance = (instance: ComponentInternalInstance) => {\r\n  currentInstance = instance\r\n  instance.scope.on()\r\n}\r\n\r\nexport const unsetCurrentInstance = () => {\r\n  currentInstance && currentInstance.scope.off()\r\n  currentInstance = null\r\n}\r\n\r\nconst isBuiltInTag = /*#__PURE__*/ makeMap('slot,component')\r\n\r\nexport function validateComponentName(name: string, config: AppConfig) {\r\n  const appIsNativeTag = config.isNativeTag || NO\r\n  if (isBuiltInTag(name) || appIsNativeTag(name)) {\r\n    warn(\r\n      'Do not use built-in or reserved HTML elements as component id: ' + name\r\n    )\r\n  }\r\n}\r\n\r\nexport function isStatefulComponent(instance: ComponentInternalInstance) {\r\n  return instance.vnode.shapeFlag & ShapeFlags.STATEFUL_COMPONENT\r\n}\r\n\r\nexport let isInSSRComponentSetup = false\r\n\r\nexport function setupComponent(\r\n  instance: ComponentInternalInstance,\r\n  isSSR = false\r\n) {\r\n  isInSSRComponentSetup = isSSR\r\n\r\n  const { props, children } = instance.vnode\r\n  const isStateful = isStatefulComponent(instance)\r\n  initProps(instance, props, isStateful, isSSR)\r\n  initSlots(instance, children)\r\n\r\n  const setupResult = isStateful\r\n    ? setupStatefulComponent(instance, isSSR)\r\n    : undefined\r\n  isInSSRComponentSetup = false\r\n  return setupResult\r\n}\r\n\r\nfunction setupStatefulComponent(\r\n  instance: ComponentInternalInstance,\r\n  isSSR: boolean\r\n) {\r\n  const Component = instance.type as ComponentOptions\r\n\r\n  if (__DEV__) {\r\n    if (Component.name) {\r\n      validateComponentName(Component.name, instance.appContext.config)\r\n    }\r\n    if (Component.components) {\r\n      const names = Object.keys(Component.components)\r\n      for (let i = 0; i < names.length; i++) {\r\n        validateComponentName(names[i], instance.appContext.config)\r\n      }\r\n    }\r\n    if (Component.directives) {\r\n      const names = Object.keys(Component.directives)\r\n      for (let i = 0; i < names.length; i++) {\r\n        validateDirectiveName(names[i])\r\n      }\r\n    }\r\n    if (Component.compilerOptions && isRuntimeOnly()) {\r\n      warn(\r\n        `\"compilerOptions\" is only supported when using a build of Vue that ` +\r\n          `includes the runtime compiler. Since you are using a runtime-only ` +\r\n          `build, the options should be passed via your build tool config instead.`\r\n      )\r\n    }\r\n  }\r\n  // 0. create render proxy property access cache\r\n  instance.accessCache = Object.create(null)\r\n  // 1. create public instance / render proxy\r\n  // also mark it raw so it's never observed\r\n  instance.proxy = markRaw(new Proxy(instance.ctx, PublicInstanceProxyHandlers))\r\n  if (__DEV__) {\r\n    exposePropsOnRenderContext(instance)\r\n  }\r\n  // 2. call setup()\r\n  const { setup } = Component\r\n  if (setup) {\r\n    const setupContext = (instance.setupContext =\r\n      setup.length > 1 ? createSetupContext(instance) : null)\r\n\r\n    setCurrentInstance(instance)\r\n    pauseTracking()\r\n    const setupResult = callWithErrorHandling(\r\n      setup,\r\n      instance,\r\n      ErrorCodes.SETUP_FUNCTION,\r\n      [__DEV__ ? shallowReadonly(instance.props) : instance.props, setupContext]\r\n    )\r\n    resetTracking()\r\n    unsetCurrentInstance()\r\n\r\n    if (isPromise(setupResult)) {\r\n      setupResult.then(unsetCurrentInstance, unsetCurrentInstance)\r\n\r\n      if (isSSR) {\r\n        // return the promise so server-renderer can wait on it\r\n        return setupResult\r\n          .then((resolvedResult: unknown) => {\r\n            handleSetupResult(instance, resolvedResult, isSSR)\r\n          })\r\n          .catch(e => {\r\n            handleError(e, instance, ErrorCodes.SETUP_FUNCTION)\r\n          })\r\n      } else if (__FEATURE_SUSPENSE__) {\r\n        // async setup returned Promise.\r\n        // bail here and wait for re-entry.\r\n        instance.asyncDep = setupResult\r\n      } else if (__DEV__) {\r\n        warn(\r\n          `setup() returned a Promise, but the version of Vue you are using ` +\r\n            `does not support it yet.`\r\n        )\r\n      }\r\n    } else {\r\n      handleSetupResult(instance, setupResult, isSSR)\r\n    }\r\n  } else {\r\n    finishComponentSetup(instance, isSSR)\r\n  }\r\n}\r\n\r\nexport function handleSetupResult(\r\n  instance: ComponentInternalInstance,\r\n  setupResult: unknown,\r\n  isSSR: boolean\r\n) {\r\n  if (isFunction(setupResult)) {\r\n    // setup returned an inline render function\r\n    if (__NODE_JS__ && (instance.type as ComponentOptions).__ssrInlineRender) {\r\n      // when the function's name is `ssrRender` (compiled by SFC inline mode),\r\n      // set it as ssrRender instead.\r\n      instance.ssrRender = setupResult\r\n    } else {\r\n      instance.render = setupResult as InternalRenderFunction\r\n    }\r\n  } else if (isObject(setupResult)) {\r\n    if (__DEV__ && isVNode(setupResult)) {\r\n      warn(\r\n        `setup() should not return VNodes directly - ` +\r\n          `return a render function instead.`\r\n      )\r\n    }\r\n    // setup returned bindings.\r\n    // assuming a render function compiled from template is present.\r\n    if (__DEV__ || __FEATURE_PROD_DEVTOOLS__) {\r\n      instance.devtoolsRawSetupState = setupResult\r\n    }\r\n    instance.setupState = proxyRefs(setupResult)\r\n    if (__DEV__) {\r\n      exposeSetupStateOnRenderContext(instance)\r\n    }\r\n  } else if (__DEV__ && setupResult !== undefined) {\r\n    warn(\r\n      `setup() should return an object. Received: ${\r\n        setupResult === null ? 'null' : typeof setupResult\r\n      }`\r\n    )\r\n  }\r\n  finishComponentSetup(instance, isSSR)\r\n}\r\n\r\ntype CompileFunction = (\r\n  template: string | object,\r\n  options?: CompilerOptions\r\n) => InternalRenderFunction\r\n\r\nlet compile: CompileFunction | undefined\r\nlet installWithProxy: (i: ComponentInternalInstance) => void\r\n\r\n/**\r\n * For runtime-dom to register the compiler.\r\n * Note the exported method uses any to avoid d.ts relying on the compiler types.\r\n */\r\nexport function registerRuntimeCompiler(_compile: any) {\r\n  compile = _compile\r\n  installWithProxy = i => {\r\n    if (i.render!._rc) {\r\n      i.withProxy = new Proxy(i.ctx, RuntimeCompiledPublicInstanceProxyHandlers)\r\n    }\r\n  }\r\n}\r\n\r\n// dev only\r\nexport const isRuntimeOnly = () => !compile\r\n\r\nexport function finishComponentSetup(\r\n  instance: ComponentInternalInstance,\r\n  isSSR: boolean,\r\n  skipOptions?: boolean\r\n) {\r\n  const Component = instance.type as ComponentOptions\r\n\r\n  if (__COMPAT__) {\r\n    convertLegacyRenderFn(instance)\r\n\r\n    if (__DEV__ && Component.compatConfig) {\r\n      validateCompatConfig(Component.compatConfig)\r\n    }\r\n  }\r\n\r\n  // template / render function normalization\r\n  if (__NODE_JS__ && isSSR) {\r\n    // 1. the render function may already exist, returned by `setup`\r\n    // 2. otherwise try to use the `Component.render`\r\n    // 3. if the component doesn't have a render function,\r\n    //    set `instance.render` to NOOP so that it can inherit the render\r\n    //    function from mixins/extend\r\n    instance.render = (instance.render ||\r\n      Component.render ||\r\n      NOOP) as InternalRenderFunction\r\n  } else if (!instance.render) {\r\n    // could be set from setup()\r\n    if (compile && !Component.render) {\r\n      const template =\r\n        (__COMPAT__ &&\r\n          instance.vnode.props &&\r\n          instance.vnode.props['inline-template']) ||\r\n        Component.template\r\n      if (template) {\r\n        if (__DEV__) {\r\n          startMeasure(instance, `compile`)\r\n        }\r\n        const { isCustomElement, compilerOptions } = instance.appContext.config\r\n        const { delimiters, compilerOptions: componentCompilerOptions } =\r\n          Component\r\n        const finalCompilerOptions: CompilerOptions = extend(\r\n          extend(\r\n            {\r\n              isCustomElement,\r\n              delimiters\r\n            },\r\n            compilerOptions\r\n          ),\r\n          componentCompilerOptions\r\n        )\r\n        if (__COMPAT__) {\r\n          // pass runtime compat config into the compiler\r\n          finalCompilerOptions.compatConfig = Object.create(globalCompatConfig)\r\n          if (Component.compatConfig) {\r\n            extend(finalCompilerOptions.compatConfig, Component.compatConfig)\r\n          }\r\n        }\r\n        Component.render = compile(template, finalCompilerOptions)\r\n        if (__DEV__) {\r\n          endMeasure(instance, `compile`)\r\n        }\r\n      }\r\n    }\r\n\r\n    instance.render = (Component.render || NOOP) as InternalRenderFunction\r\n\r\n    // for runtime-compiled render functions using `with` blocks, the render\r\n    // proxy used needs a different `has` handler which is more performant and\r\n    // also only allows a whitelist of globals to fallthrough.\r\n    if (installWithProxy) {\r\n      installWithProxy(instance)\r\n    }\r\n  }\r\n\r\n  // support for 2.x options\r\n  if (__FEATURE_OPTIONS_API__ && !(__COMPAT__ && skipOptions)) {\r\n    setCurrentInstance(instance)\r\n    pauseTracking()\r\n    applyOptions(instance)\r\n    resetTracking()\r\n    unsetCurrentInstance()\r\n  }\r\n\r\n  // warn missing template/render\r\n  // the runtime compilation of template in SSR is done by server-render\r\n  if (__DEV__ && !Component.render && instance.render === NOOP && !isSSR) {\r\n    /* istanbul ignore if */\r\n    if (!compile && Component.template) {\r\n      warn(\r\n        `Component provided template option but ` +\r\n          `runtime compilation is not supported in this build of Vue.` +\r\n          (__ESM_BUNDLER__\r\n            ? ` Configure your bundler to alias \"vue\" to \"vue/dist/vue.esm-bundler.js\".`\r\n            : __ESM_BROWSER__\r\n            ? ` Use \"vue.esm-browser.js\" instead.`\r\n            : __GLOBAL__\r\n            ? ` Use \"vue.global.js\" instead.`\r\n            : ``) /* should not happen */\r\n      )\r\n    } else {\r\n      warn(`Component is missing template or render function.`)\r\n    }\r\n  }\r\n}\r\n\r\nfunction createAttrsProxy(instance: ComponentInternalInstance): Data {\r\n  return new Proxy(\r\n    instance.attrs,\r\n    __DEV__\r\n      ? {\r\n          get(target, key: string) {\r\n            markAttrsAccessed()\r\n            track(instance, TrackOpTypes.GET, '$attrs')\r\n            return target[key]\r\n          },\r\n          set() {\r\n            warn(`setupContext.attrs is readonly.`)\r\n            return false\r\n          },\r\n          deleteProperty() {\r\n            warn(`setupContext.attrs is readonly.`)\r\n            return false\r\n          }\r\n        }\r\n      : {\r\n          get(target, key: string) {\r\n            track(instance, TrackOpTypes.GET, '$attrs')\r\n            return target[key]\r\n          }\r\n        }\r\n  )\r\n}\r\n\r\nexport function createSetupContext(\r\n  instance: ComponentInternalInstance\r\n): SetupContext {\r\n  const expose: SetupContext['expose'] = exposed => {\r\n    if (__DEV__ && instance.exposed) {\r\n      warn(`expose() should be called only once per setup().`)\r\n    }\r\n    instance.exposed = exposed || {}\r\n  }\r\n\r\n  let attrs: Data\r\n  if (__DEV__) {\r\n    // We use getters in dev in case libs like test-utils overwrite instance\r\n    // properties (overwrites should not be done in prod)\r\n    return Object.freeze({\r\n      get attrs() {\r\n        return attrs || (attrs = createAttrsProxy(instance))\r\n      },\r\n      get slots() {\r\n        return shallowReadonly(instance.slots)\r\n      },\r\n      get emit() {\r\n        return (event: string, ...args: any[]) => instance.emit(event, ...args)\r\n      },\r\n      expose\r\n    })\r\n  } else {\r\n    return {\r\n      get attrs() {\r\n        return attrs || (attrs = createAttrsProxy(instance))\r\n      },\r\n      slots: instance.slots,\r\n      emit: instance.emit,\r\n      expose\r\n    }\r\n  }\r\n}\r\n\r\nexport function getExposeProxy(instance: ComponentInternalInstance) {\r\n  if (instance.exposed) {\r\n    return (\r\n      instance.exposeProxy ||\r\n      (instance.exposeProxy = new Proxy(proxyRefs(markRaw(instance.exposed)), {\r\n        get(target, key: string) {\r\n          if (key in target) {\r\n            return target[key]\r\n          } else if (key in publicPropertiesMap) {\r\n            return publicPropertiesMap[key](instance)\r\n          }\r\n        }\r\n      }))\r\n    )\r\n  }\r\n}\r\n\r\nconst classifyRE = /(?:^|[-_])(\\w)/g\r\nconst classify = (str: string): string =>\r\n  str.replace(classifyRE, c => c.toUpperCase()).replace(/[-_]/g, '')\r\n\r\nexport function getComponentName(\r\n  Component: ConcreteComponent\r\n): string | undefined {\r\n  return isFunction(Component)\r\n    ? Component.displayName || Component.name\r\n    : Component.name\r\n}\r\n\r\n/* istanbul ignore next */\r\nexport function formatComponentName(\r\n  instance: ComponentInternalInstance | null,\r\n  Component: ConcreteComponent,\r\n  isRoot = false\r\n): string {\r\n  let name = getComponentName(Component)\r\n  if (!name && Component.__file) {\r\n    const match = Component.__file.match(/([^/\\\\]+)\\.\\w+$/)\r\n    if (match) {\r\n      name = match[1]\r\n    }\r\n  }\r\n\r\n  if (!name && instance && instance.parent) {\r\n    // try to infer the name based on reverse resolution\r\n    const inferFromRegistry = (registry: Record<string, any> | undefined) => {\r\n      for (const key in registry) {\r\n        if (registry[key] === Component) {\r\n          return key\r\n        }\r\n      }\r\n    }\r\n    name =\r\n      inferFromRegistry(\r\n        instance.components ||\r\n          (instance.parent.type as ComponentOptions).components\r\n      ) || inferFromRegistry(instance.appContext.components)\r\n  }\r\n\r\n  return name ? classify(name) : isRoot ? `App` : `Anonymous`\r\n}\r\n\r\nexport function isClassComponent(value: unknown): value is ClassComponent {\r\n  return isFunction(value) && '__vccOpts' in value\r\n}\r\n","import { ErrorCodes, callWithErrorHandling } from './errorHandling'\r\nimport { isArray } from '@vue/shared'\r\nimport { ComponentInternalInstance, getComponentName } from './component'\r\nimport { warn } from './warning'\r\n\r\nexport interface SchedulerJob extends Function {\r\n  id?: number\r\n  active?: boolean\r\n  computed?: boolean\r\n  /**\r\n   * Indicates whether the effect is allowed to recursively trigger itself\r\n   * when managed by the scheduler.\r\n   *\r\n   * By default, a job cannot trigger itself because some built-in method calls,\r\n   * e.g. Array.prototype.push actually performs reads as well (#1740) which\r\n   * can lead to confusing infinite loops.\r\n   * The allowed cases are component update functions and watch callbacks.\r\n   * Component update functions may update child component props, which in turn\r\n   * trigger flush: \"pre\" watch callbacks that mutates state that the parent\r\n   * relies on (#1801). Watch callbacks doesn't track its dependencies so if it\r\n   * triggers itself again, it's likely intentional and it is the user's\r\n   * responsibility to perform recursive state mutation that eventually\r\n   * stabilizes (#1727).\r\n   */\r\n  allowRecurse?: boolean\r\n  /**\r\n   * Attached by renderer.ts when setting up a component's render effect\r\n   * Used to obtain component information when reporting max recursive updates.\r\n   * dev only.\r\n   */\r\n  ownerInstance?: ComponentInternalInstance\r\n}\r\n\r\nexport type SchedulerJobs = SchedulerJob | SchedulerJob[]\r\n\r\nlet isFlushing = false\r\nlet isFlushPending = false\r\n\r\nconst queue: SchedulerJob[] = []\r\nlet flushIndex = 0\r\n\r\nconst pendingPreFlushCbs: SchedulerJob[] = []\r\nlet activePreFlushCbs: SchedulerJob[] | null = null\r\nlet preFlushIndex = 0\r\n\r\nconst pendingPostFlushCbs: SchedulerJob[] = []\r\nlet activePostFlushCbs: SchedulerJob[] | null = null\r\nlet postFlushIndex = 0\r\n\r\nconst resolvedPromise: Promise<any> = Promise.resolve()\r\nlet currentFlushPromise: Promise<void> | null = null\r\n\r\nlet currentPreFlushParentJob: SchedulerJob | null = null\r\n\r\nconst RECURSION_LIMIT = 100\r\ntype CountMap = Map<SchedulerJob, number>\r\n\r\nexport function nextTick<T = void>(\r\n  this: T,\r\n  fn?: (this: T) => void\r\n): Promise<void> {\r\n  const p = currentFlushPromise || resolvedPromise\r\n  return fn ? p.then(this ? fn.bind(this) : fn) : p\r\n}\r\n\r\n// #2768\r\n// Use binary-search to find a suitable position in the queue,\r\n// so that the queue maintains the increasing order of job's id,\r\n// which can prevent the job from being skipped and also can avoid repeated patching.\r\nfunction findInsertionIndex(id: number) {\r\n  // the start index should be `flushIndex + 1`\r\n  let start = flushIndex + 1\r\n  let end = queue.length\r\n\r\n  while (start < end) {\r\n    const middle = (start + end) >>> 1\r\n    const middleJobId = getId(queue[middle])\r\n    middleJobId < id ? (start = middle + 1) : (end = middle)\r\n  }\r\n\r\n  return start\r\n}\r\n\r\nexport function queueJob(job: SchedulerJob) {\r\n  // the dedupe search uses the startIndex argument of Array.includes()\r\n  // by default the search index includes the current job that is being run\r\n  // so it cannot recursively trigger itself again.\r\n  // if the job is a watch() callback, the search will start with a +1 index to\r\n  // allow it recursively trigger itself - it is the user's responsibility to\r\n  // ensure it doesn't end up in an infinite loop.\r\n  if (\r\n    (!queue.length ||\r\n      !queue.includes(\r\n        job,\r\n        isFlushing && job.allowRecurse ? flushIndex + 1 : flushIndex\r\n      )) &&\r\n    job !== currentPreFlushParentJob\r\n  ) {\r\n    if (job.id == null) {\r\n      queue.push(job)\r\n    } else {\r\n      queue.splice(findInsertionIndex(job.id), 0, job)\r\n    }\r\n    queueFlush()\r\n  }\r\n}\r\n\r\nfunction queueFlush() {\r\n  if (!isFlushing && !isFlushPending) {\r\n    isFlushPending = true\r\n    currentFlushPromise = resolvedPromise.then(flushJobs)\r\n  }\r\n}\r\n\r\nexport function invalidateJob(job: SchedulerJob) {\r\n  const i = queue.indexOf(job)\r\n  if (i > flushIndex) {\r\n    queue.splice(i, 1)\r\n  }\r\n}\r\n\r\nfunction queueCb(\r\n  cb: SchedulerJobs,\r\n  activeQueue: SchedulerJob[] | null,\r\n  pendingQueue: SchedulerJob[],\r\n  index: number\r\n) {\r\n  if (!isArray(cb)) {\r\n    if (\r\n      !activeQueue ||\r\n      !activeQueue.includes(\r\n        cb,\r\n        cb.allowRecurse ? index + 1 : index\r\n      )\r\n    ) {\r\n      pendingQueue.push(cb)\r\n    }\r\n  } else {\r\n    // if cb is an array, it is a component lifecycle hook which can only be\r\n    // triggered by a job, which is already deduped in the main queue, so\r\n    // we can skip duplicate check here to improve perf\r\n    pendingQueue.push(...cb)\r\n  }\r\n  queueFlush()\r\n}\r\n\r\nexport function queuePreFlushCb(cb: SchedulerJob) {\r\n  queueCb(cb, activePreFlushCbs, pendingPreFlushCbs, preFlushIndex)\r\n}\r\n\r\nexport function queuePostFlushCb(cb: SchedulerJobs) {\r\n  queueCb(cb, activePostFlushCbs, pendingPostFlushCbs, postFlushIndex)\r\n}\r\n\r\nexport function flushPreFlushCbs(\r\n  seen?: CountMap,\r\n  parentJob: SchedulerJob | null = null\r\n) {\r\n  if (pendingPreFlushCbs.length) {\r\n    currentPreFlushParentJob = parentJob\r\n    activePreFlushCbs = [...new Set(pendingPreFlushCbs)]\r\n    pendingPreFlushCbs.length = 0\r\n    if (__DEV__) {\r\n      seen = seen || new Map()\r\n    }\r\n    for (\r\n      preFlushIndex = 0;\r\n      preFlushIndex < activePreFlushCbs.length;\r\n      preFlushIndex++\r\n    ) {\r\n      if (\r\n        __DEV__ &&\r\n        checkRecursiveUpdates(seen!, activePreFlushCbs[preFlushIndex])\r\n      ) {\r\n        continue\r\n      }\r\n      activePreFlushCbs[preFlushIndex]()\r\n    }\r\n    activePreFlushCbs = null\r\n    preFlushIndex = 0\r\n    currentPreFlushParentJob = null\r\n    // recursively flush until it drains\r\n    flushPreFlushCbs(seen, parentJob)\r\n  }\r\n}\r\n\r\nexport function flushPostFlushCbs(seen?: CountMap) {\r\n  if (pendingPostFlushCbs.length) {\r\n    const deduped = [...new Set(pendingPostFlushCbs)]\r\n    pendingPostFlushCbs.length = 0\r\n\r\n    // #1947 already has active queue, nested flushPostFlushCbs call\r\n    if (activePostFlushCbs) {\r\n      activePostFlushCbs.push(...deduped)\r\n      return\r\n    }\r\n\r\n    activePostFlushCbs = deduped\r\n    if (__DEV__) {\r\n      seen = seen || new Map()\r\n    }\r\n\r\n    activePostFlushCbs.sort((a, b) => getId(a) - getId(b))\r\n\r\n    for (\r\n      postFlushIndex = 0;\r\n      postFlushIndex < activePostFlushCbs.length;\r\n      postFlushIndex++\r\n    ) {\r\n      if (\r\n        __DEV__ &&\r\n        checkRecursiveUpdates(seen!, activePostFlushCbs[postFlushIndex])\r\n      ) {\r\n        continue\r\n      }\r\n      activePostFlushCbs[postFlushIndex]()\r\n    }\r\n    activePostFlushCbs = null\r\n    postFlushIndex = 0\r\n  }\r\n}\r\n\r\nconst getId = (job: SchedulerJob): number =>\r\n  job.id == null ? Infinity : job.id\r\n\r\nfunction flushJobs(seen?: CountMap) {\r\n  isFlushPending = false\r\n  isFlushing = true\r\n  if (__DEV__) {\r\n    seen = seen || new Map()\r\n  }\r\n\r\n  flushPreFlushCbs(seen)\r\n\r\n  // Sort queue before flush.\r\n  // This ensures that:\r\n  // 1. Components are updated from parent to child. (because parent is always\r\n  //    created before the child so its render effect will have smaller\r\n  //    priority number)\r\n  // 2. If a component is unmounted during a parent component's update,\r\n  //    its update can be skipped.\r\n  queue.sort((a, b) => getId(a) - getId(b))\r\n\r\n  try {\r\n    for (flushIndex = 0; flushIndex < queue.length; flushIndex++) {\r\n      const job = queue[flushIndex]\r\n      if (job && job.active !== false) {\r\n        if (__DEV__ && checkRecursiveUpdates(seen!, job)) {\r\n          continue\r\n        }\r\n        // console.log(`running:`, job.id)\r\n        callWithErrorHandling(job, null, ErrorCodes.SCHEDULER)\r\n      }\r\n    }\r\n  } finally {\r\n    flushIndex = 0\r\n    queue.length = 0\r\n\r\n    flushPostFlushCbs(seen)\r\n\r\n    isFlushing = false\r\n    currentFlushPromise = null\r\n    // some postFlushCb queued jobs!\r\n    // keep flushing until it drains.\r\n    if (\r\n      queue.length ||\r\n      pendingPreFlushCbs.length ||\r\n      pendingPostFlushCbs.length\r\n    ) {\r\n      flushJobs(seen)\r\n    }\r\n  }\r\n}\r\n\r\nfunction checkRecursiveUpdates(seen: CountMap, fn: SchedulerJob) {\r\n  if (!seen.has(fn)) {\r\n    seen.set(fn, 1)\r\n  } else {\r\n    const count = seen.get(fn)!\r\n    if (count > RECURSION_LIMIT) {\r\n      const instance = fn.ownerInstance\r\n      const componentName = instance && getComponentName(instance.type)\r\n      warn(\r\n        `Maximum recursive updates exceeded${\r\n          componentName ? ` in component <${componentName}>` : ``\r\n        }. ` +\r\n          `This means you have a reactive effect that is mutating its own ` +\r\n          `dependencies and thus recursively triggering itself. Possible sources ` +\r\n          `include component template, render function, updated hook or ` +\r\n          `watcher source function.`\r\n      )\r\n      return true\r\n    } else {\r\n      seen.set(fn, count + 1)\r\n    }\r\n  }\r\n}\r\n","import { ComponentInternalInstance } from '../component'\r\nimport { SuspenseBoundary } from './Suspense'\r\nimport {\r\n  RendererInternals,\r\n  MoveType,\r\n  RendererElement,\r\n  RendererNode,\r\n  RendererOptions,\r\n  traverseStaticChildren\r\n} from '../renderer'\r\nimport { VNode, VNodeArrayChildren, VNodeProps } from '../vnode'\r\nimport { isString, ShapeFlags } from '@vue/shared'\r\nimport { warn } from '../warning'\r\nimport { isHmrUpdating } from '../hmr'\r\n\r\nexport type TeleportVNode = VNode<RendererNode, RendererElement, TeleportProps>\r\n\r\nexport interface TeleportProps {\r\n  to: string | RendererElement | null | undefined\r\n  disabled?: boolean\r\n}\r\n\r\nexport const isTeleport = (type: any): boolean => type.__isTeleport\r\n\r\nconst isTeleportDisabled = (props: VNode['props']): boolean =>\r\n  props && (props.disabled || props.disabled === '')\r\n\r\nconst isTargetSVG = (target: RendererElement): boolean =>\r\n  typeof SVGElement !== 'undefined' && target instanceof SVGElement\r\n\r\nconst resolveTarget = <T = RendererElement>(\r\n  props: TeleportProps | null,\r\n  select: RendererOptions['querySelector']\r\n): T | null => {\r\n  const targetSelector = props && props.to\r\n  if (isString(targetSelector)) {\r\n    if (!select) {\r\n      __DEV__ &&\r\n        warn(\r\n          `Current renderer does not support string target for Teleports. ` +\r\n            `(missing querySelector renderer option)`\r\n        )\r\n      return null\r\n    } else {\r\n      const target = select(targetSelector)\r\n      if (!target) {\r\n        __DEV__ &&\r\n          warn(\r\n            `Failed to locate Teleport target with selector \"${targetSelector}\". ` +\r\n              `Note the target element must exist before the component is mounted - ` +\r\n              `i.e. the target cannot be rendered by the component itself, and ` +\r\n              `ideally should be outside of the entire Vue component tree.`\r\n          )\r\n      }\r\n      return target as any\r\n    }\r\n  } else {\r\n    if (__DEV__ && !targetSelector && !isTeleportDisabled(props)) {\r\n      warn(`Invalid Teleport target: ${targetSelector}`)\r\n    }\r\n    return targetSelector as any\r\n  }\r\n}\r\n\r\nexport const TeleportImpl = {\r\n  __isTeleport: true,\r\n  process(\r\n    n1: TeleportVNode | null,\r\n    n2: TeleportVNode,\r\n    container: RendererElement,\r\n    anchor: RendererNode | null,\r\n    parentComponent: ComponentInternalInstance | null,\r\n    parentSuspense: SuspenseBoundary | null,\r\n    isSVG: boolean,\r\n    slotScopeIds: string[] | null,\r\n    optimized: boolean,\r\n    internals: RendererInternals\r\n  ) {\r\n    const {\r\n      mc: mountChildren,\r\n      pc: patchChildren,\r\n      pbc: patchBlockChildren,\r\n      o: { insert, querySelector, createText, createComment }\r\n    } = internals\r\n\r\n    const disabled = isTeleportDisabled(n2.props)\r\n    let { shapeFlag, children, dynamicChildren } = n2\r\n\r\n    // #3302\r\n    // HMR updated, force full diff\r\n    if (__DEV__ && isHmrUpdating) {\r\n      optimized = false\r\n      dynamicChildren = null\r\n    }\r\n\r\n    if (n1 == null) {\r\n      // insert anchors in the main view\r\n      const placeholder = (n2.el = __DEV__\r\n        ? createComment('teleport start')\r\n        : createText(''))\r\n      const mainAnchor = (n2.anchor = __DEV__\r\n        ? createComment('teleport end')\r\n        : createText(''))\r\n      insert(placeholder, container, anchor)\r\n      insert(mainAnchor, container, anchor)\r\n      const target = (n2.target = resolveTarget(n2.props, querySelector))\r\n      const targetAnchor = (n2.targetAnchor = createText(''))\r\n      if (target) {\r\n        insert(targetAnchor, target)\r\n        // #2652 we could be teleporting from a non-SVG tree into an SVG tree\r\n        isSVG = isSVG || isTargetSVG(target)\r\n      } else if (__DEV__ && !disabled) {\r\n        warn('Invalid Teleport target on mount:', target, `(${typeof target})`)\r\n      }\r\n\r\n      const mount = (container: RendererElement, anchor: RendererNode) => {\r\n        // Teleport *always* has Array children. This is enforced in both the\r\n        // compiler and vnode children normalization.\r\n        if (shapeFlag & ShapeFlags.ARRAY_CHILDREN) {\r\n          mountChildren(\r\n            children as VNodeArrayChildren,\r\n            container,\r\n            anchor,\r\n            parentComponent,\r\n            parentSuspense,\r\n            isSVG,\r\n            slotScopeIds,\r\n            optimized\r\n          )\r\n        }\r\n      }\r\n\r\n      if (disabled) {\r\n        mount(container, mainAnchor)\r\n      } else if (target) {\r\n        mount(target, targetAnchor)\r\n      }\r\n    } else {\r\n      // update content\r\n      n2.el = n1.el\r\n      const mainAnchor = (n2.anchor = n1.anchor)!\r\n      const target = (n2.target = n1.target)!\r\n      const targetAnchor = (n2.targetAnchor = n1.targetAnchor)!\r\n      const wasDisabled = isTeleportDisabled(n1.props)\r\n      const currentContainer = wasDisabled ? container : target\r\n      const currentAnchor = wasDisabled ? mainAnchor : targetAnchor\r\n      isSVG = isSVG || isTargetSVG(target)\r\n\r\n      if (dynamicChildren) {\r\n        // fast path when the teleport happens to be a block root\r\n        patchBlockChildren(\r\n          n1.dynamicChildren!,\r\n          dynamicChildren,\r\n          currentContainer,\r\n          parentComponent,\r\n          parentSuspense,\r\n          isSVG,\r\n          slotScopeIds\r\n        )\r\n        // even in block tree mode we need to make sure all root-level nodes\r\n        // in the teleport inherit previous DOM references so that they can\r\n        // be moved in future patches.\r\n        traverseStaticChildren(n1, n2, true)\r\n      } else if (!optimized) {\r\n        patchChildren(\r\n          n1,\r\n          n2,\r\n          currentContainer,\r\n          currentAnchor,\r\n          parentComponent,\r\n          parentSuspense,\r\n          isSVG,\r\n          slotScopeIds,\r\n          false\r\n        )\r\n      }\r\n\r\n      if (disabled) {\r\n        if (!wasDisabled) {\r\n          // enabled -> disabled\r\n          // move into main container\r\n          moveTeleport(\r\n            n2,\r\n            container,\r\n            mainAnchor,\r\n            internals,\r\n            TeleportMoveTypes.TOGGLE\r\n          )\r\n        }\r\n      } else {\r\n        // target changed\r\n        if ((n2.props && n2.props.to) !== (n1.props && n1.props.to)) {\r\n          const nextTarget = (n2.target = resolveTarget(\r\n            n2.props,\r\n            querySelector\r\n          ))\r\n          if (nextTarget) {\r\n            moveTeleport(\r\n              n2,\r\n              nextTarget,\r\n              null,\r\n              internals,\r\n              TeleportMoveTypes.TARGET_CHANGE\r\n            )\r\n          } else if (__DEV__) {\r\n            warn(\r\n              'Invalid Teleport target on update:',\r\n              target,\r\n              `(${typeof target})`\r\n            )\r\n          }\r\n        } else if (wasDisabled) {\r\n          // disabled -> enabled\r\n          // move into teleport target\r\n          moveTeleport(\r\n            n2,\r\n            target,\r\n            targetAnchor,\r\n            internals,\r\n            TeleportMoveTypes.TOGGLE\r\n          )\r\n        }\r\n      }\r\n    }\r\n  },\r\n\r\n  remove(\r\n    vnode: VNode,\r\n    parentComponent: ComponentInternalInstance | null,\r\n    parentSuspense: SuspenseBoundary | null,\r\n    optimized: boolean,\r\n    { um: unmount, o: { remove: hostRemove } }: RendererInternals,\r\n    doRemove: Boolean\r\n  ) {\r\n    const { shapeFlag, children, anchor, targetAnchor, target, props } = vnode\r\n\r\n    if (target) {\r\n      hostRemove(targetAnchor!)\r\n    }\r\n\r\n    // an unmounted teleport should always remove its children if not disabled\r\n    if (doRemove || !isTeleportDisabled(props)) {\r\n      hostRemove(anchor!)\r\n      if (shapeFlag & ShapeFlags.ARRAY_CHILDREN) {\r\n        for (let i = 0; i < (children as VNode[]).length; i++) {\r\n          const child = (children as VNode[])[i]\r\n          unmount(\r\n            child,\r\n            parentComponent,\r\n            parentSuspense,\r\n            true,\r\n            !!child.dynamicChildren\r\n          )\r\n        }\r\n      }\r\n    }\r\n  },\r\n\r\n  move: moveTeleport,\r\n  hydrate: hydrateTeleport\r\n}\r\n\r\nexport const enum TeleportMoveTypes {\r\n  TARGET_CHANGE,\r\n  TOGGLE, // enable / disable\r\n  REORDER // moved in the main view\r\n}\r\n\r\nfunction moveTeleport(\r\n  vnode: VNode,\r\n  container: RendererElement,\r\n  parentAnchor: RendererNode | null,\r\n  { o: { insert }, m: move }: RendererInternals,\r\n  moveType: TeleportMoveTypes = TeleportMoveTypes.REORDER\r\n) {\r\n  // move target anchor if this is a target change.\r\n  if (moveType === TeleportMoveTypes.TARGET_CHANGE) {\r\n    insert(vnode.targetAnchor!, container, parentAnchor)\r\n  }\r\n  const { el, anchor, shapeFlag, children, props } = vnode\r\n  const isReorder = moveType === TeleportMoveTypes.REORDER\r\n  // move main view anchor if this is a re-order.\r\n  if (isReorder) {\r\n    insert(el!, container, parentAnchor)\r\n  }\r\n  // if this is a re-order and teleport is enabled (content is in target)\r\n  // do not move children. So the opposite is: only move children if this\r\n  // is not a reorder, or the teleport is disabled\r\n  if (!isReorder || isTeleportDisabled(props)) {\r\n    // Teleport has either Array children or no children.\r\n    if (shapeFlag & ShapeFlags.ARRAY_CHILDREN) {\r\n      for (let i = 0; i < (children as VNode[]).length; i++) {\r\n        move(\r\n          (children as VNode[])[i],\r\n          container,\r\n          parentAnchor,\r\n          MoveType.REORDER\r\n        )\r\n      }\r\n    }\r\n  }\r\n  // move main view anchor if this is a re-order.\r\n  if (isReorder) {\r\n    insert(anchor!, container, parentAnchor)\r\n  }\r\n}\r\n\r\ninterface TeleportTargetElement extends Element {\r\n  // last teleport target\r\n  _lpa?: Node | null\r\n}\r\n\r\nfunction hydrateTeleport(\r\n  node: Node,\r\n  vnode: TeleportVNode,\r\n  parentComponent: ComponentInternalInstance | null,\r\n  parentSuspense: SuspenseBoundary | null,\r\n  slotScopeIds: string[] | null,\r\n  optimized: boolean,\r\n  {\r\n    o: { nextSibling, parentNode, querySelector }\r\n  }: RendererInternals<Node, Element>,\r\n  hydrateChildren: (\r\n    node: Node | null,\r\n    vnode: VNode,\r\n    container: Element,\r\n    parentComponent: ComponentInternalInstance | null,\r\n    parentSuspense: SuspenseBoundary | null,\r\n    slotScopeIds: string[] | null,\r\n    optimized: boolean\r\n  ) => Node | null\r\n): Node | null {\r\n  const target = (vnode.target = resolveTarget<Element>(\r\n    vnode.props,\r\n    querySelector\r\n  ))\r\n  if (target) {\r\n    // if multiple teleports rendered to the same target element, we need to\r\n    // pick up from where the last teleport finished instead of the first node\r\n    const targetNode =\r\n      (target as TeleportTargetElement)._lpa || target.firstChild\r\n    if (vnode.shapeFlag & ShapeFlags.ARRAY_CHILDREN) {\r\n      if (isTeleportDisabled(vnode.props)) {\r\n        vnode.anchor = hydrateChildren(\r\n          nextSibling(node),\r\n          vnode,\r\n          parentNode(node)!,\r\n          parentComponent,\r\n          parentSuspense,\r\n          slotScopeIds,\r\n          optimized\r\n        )\r\n        vnode.targetAnchor = targetNode\r\n      } else {\r\n        vnode.anchor = nextSibling(node)\r\n        vnode.targetAnchor = hydrateChildren(\r\n          targetNode,\r\n          vnode,\r\n          target,\r\n          parentComponent,\r\n          parentSuspense,\r\n          slotScopeIds,\r\n          optimized\r\n        )\r\n      }\r\n      ;(target as TeleportTargetElement)._lpa =\r\n        vnode.targetAnchor && nextSibling(vnode.targetAnchor as Node)\r\n    }\r\n  }\r\n  return vnode.anchor && nextSibling(vnode.anchor as Node)\r\n}\r\n\r\n// Force-casted public typing for h and TSX props inference\r\nexport const Teleport = TeleportImpl as any as {\r\n  __isTeleport: true\r\n  new (): { $props: VNodeProps & TeleportProps }\r\n}\r\n","import {\r\n  currentInstance,\r\n  ConcreteComponent,\r\n  ComponentOptions,\r\n  getComponentName\r\n} from '../component'\r\nimport { currentRenderingInstance } from '../componentRenderContext'\r\nimport { Directive } from '../directives'\r\nimport { camelize, capitalize, isString } from '@vue/shared'\r\nimport { warn } from '../warning'\r\nimport { VNodeTypes } from '../vnode'\r\n\r\nexport const COMPONENTS = 'components'\r\nexport const DIRECTIVES = 'directives'\r\nexport const FILTERS = 'filters'\r\n\r\nexport type AssetTypes = typeof COMPONENTS | typeof DIRECTIVES | typeof FILTERS\r\n\r\n/**\r\n * @private\r\n */\r\nexport function resolveComponent(\r\n  name: string,\r\n  maybeSelfReference?: boolean\r\n): ConcreteComponent | string {\r\n  return resolveAsset(COMPONENTS, name, true, maybeSelfReference) || name\r\n}\r\n\r\nexport const NULL_DYNAMIC_COMPONENT = Symbol()\r\n\r\n/**\r\n * @private\r\n */\r\nexport function resolveDynamicComponent(component: unknown): VNodeTypes {\r\n  if (isString(component)) {\r\n    return resolveAsset(COMPONENTS, component, false) || component\r\n  } else {\r\n    // invalid types will fallthrough to createVNode and raise warning\r\n    return (component || NULL_DYNAMIC_COMPONENT) as any\r\n  }\r\n}\r\n\r\n/**\r\n * @private\r\n */\r\nexport function resolveDirective(name: string): Directive | undefined {\r\n  return resolveAsset(DIRECTIVES, name)\r\n}\r\n\r\n/**\r\n * v2 compat only\r\n * @internal\r\n */\r\nexport function resolveFilter(name: string): Function | undefined {\r\n  return resolveAsset(FILTERS, name)\r\n}\r\n\r\n/**\r\n * @private\r\n * overload 1: components\r\n */\r\nfunction resolveAsset(\r\n  type: typeof COMPONENTS,\r\n  name: string,\r\n  warnMissing?: boolean,\r\n  maybeSelfReference?: boolean\r\n): ConcreteComponent | undefined\r\n// overload 2: directives\r\nfunction resolveAsset(\r\n  type: typeof DIRECTIVES,\r\n  name: string\r\n): Directive | undefined\r\n// implementation\r\n// overload 3: filters (compat only)\r\nfunction resolveAsset(type: typeof FILTERS, name: string): Function | undefined\r\n// implementation\r\nfunction resolveAsset(\r\n  type: AssetTypes,\r\n  name: string,\r\n  warnMissing = true,\r\n  maybeSelfReference = false\r\n) {\r\n  const instance = currentRenderingInstance || currentInstance\r\n  if (instance) {\r\n    const Component = instance.type\r\n\r\n    // explicit self name has highest priority\r\n    if (type === COMPONENTS) {\r\n      const selfName = getComponentName(Component)\r\n      if (\r\n        selfName &&\r\n        (selfName === name ||\r\n          selfName === camelize(name) ||\r\n          selfName === capitalize(camelize(name)))\r\n      ) {\r\n        return Component\r\n      }\r\n    }\r\n\r\n    const res =\r\n      // local registration\r\n      // check instance[type] first which is resolved for options API\r\n      resolve(instance[type] || (Component as ComponentOptions)[type], name) ||\r\n      // global registration\r\n      resolve(instance.appContext[type], name)\r\n\r\n    if (!res && maybeSelfReference) {\r\n      // fallback to implicit self-reference\r\n      return Component\r\n    }\r\n\r\n    if (__DEV__ && warnMissing && !res) {\r\n      warn(`Failed to resolve ${type.slice(0, -1)}: ${name}`)\r\n    }\r\n\r\n    return res\r\n  } else if (__DEV__) {\r\n    warn(\r\n      `resolve${capitalize(type.slice(0, -1))} ` +\r\n        `can only be used in render() or setup().`\r\n    )\r\n  }\r\n}\r\n\r\nfunction resolve(registry: Record<string, any> | undefined, name: string) {\r\n  return (\r\n    registry &&\r\n    (registry[name] ||\r\n      registry[camelize(name)] ||\r\n      registry[capitalize(camelize(name))])\r\n  )\r\n}\r\n","import {\r\n  isArray,\r\n  isFunction,\r\n  isString,\r\n  isObject,\r\n  EMPTY_ARR,\r\n  extend,\r\n  normalizeClass,\r\n  normalizeStyle,\r\n  PatchFlags,\r\n  ShapeFlags,\r\n  SlotFlags,\r\n  isOn\r\n} from '@vue/shared'\r\nimport {\r\n  ComponentInternalInstance,\r\n  Data,\r\n  ConcreteComponent,\r\n  ClassComponent,\r\n  Component,\r\n  isClassComponent\r\n} from './component'\r\nimport { RawSlots } from './componentSlots'\r\nimport { isProxy, Ref, toRaw, ReactiveFlags, isRef } from '@vue/reactivity'\r\nimport { AppContext } from './apiCreateApp'\r\nimport {\r\n  SuspenseImpl,\r\n  isSuspense,\r\n  SuspenseBoundary\r\n} from './components/Suspense'\r\nimport { DirectiveBinding } from './directives'\r\nimport { TransitionHooks } from './components/BaseTransition'\r\nimport { warn } from './warning'\r\nimport { TeleportImpl, isTeleport } from './components/Teleport'\r\nimport {\r\n  currentRenderingInstance,\r\n  currentScopeId\r\n} from './componentRenderContext'\r\nimport { RendererNode, RendererElement } from './renderer'\r\nimport { NULL_DYNAMIC_COMPONENT } from './helpers/resolveAssets'\r\nimport { hmrDirtyComponents } from './hmr'\r\nimport { convertLegacyComponent } from './compat/component'\r\nimport { convertLegacyVModelProps } from './compat/componentVModel'\r\nimport { defineLegacyVNodeProperties } from './compat/renderFn'\r\nimport { convertLegacyRefInFor } from './compat/ref'\r\n\r\nexport const Fragment = Symbol(__DEV__ ? 'Fragment' : undefined) as any as {\r\n  __isFragment: true\r\n  new (): {\r\n    $props: VNodeProps\r\n  }\r\n}\r\nexport const Text = Symbol(__DEV__ ? 'Text' : undefined)\r\nexport const Comment = Symbol(__DEV__ ? 'Comment' : undefined)\r\nexport const Static = Symbol(__DEV__ ? 'Static' : undefined)\r\n\r\nexport type VNodeTypes =\r\n  | string\r\n  | VNode\r\n  | Component\r\n  | typeof Text\r\n  | typeof Static\r\n  | typeof Comment\r\n  | typeof Fragment\r\n  | typeof TeleportImpl\r\n  | typeof SuspenseImpl\r\n\r\nexport type VNodeRef =\r\n  | string\r\n  | Ref\r\n  | ((ref: object | null, refs: Record<string, any>) => void)\r\n\r\nexport type VNodeNormalizedRefAtom = {\r\n  i: ComponentInternalInstance\r\n  r: VNodeRef\r\n  f?: boolean // v2 compat only, refInFor marker\r\n}\r\n\r\nexport type VNodeNormalizedRef =\r\n  | VNodeNormalizedRefAtom\r\n  | VNodeNormalizedRefAtom[]\r\n\r\ntype VNodeMountHook = (vnode: VNode) => void\r\ntype VNodeUpdateHook = (vnode: VNode, oldVNode: VNode) => void\r\nexport type VNodeHook =\r\n  | VNodeMountHook\r\n  | VNodeUpdateHook\r\n  | VNodeMountHook[]\r\n  | VNodeUpdateHook[]\r\n\r\n// https://github.com/microsoft/TypeScript/issues/33099\r\nexport type VNodeProps = {\r\n  key?: string | number | symbol\r\n  ref?: VNodeRef\r\n\r\n  // vnode hooks\r\n  onVnodeBeforeMount?: VNodeMountHook | VNodeMountHook[]\r\n  onVnodeMounted?: VNodeMountHook | VNodeMountHook[]\r\n  onVnodeBeforeUpdate?: VNodeUpdateHook | VNodeUpdateHook[]\r\n  onVnodeUpdated?: VNodeUpdateHook | VNodeUpdateHook[]\r\n  onVnodeBeforeUnmount?: VNodeMountHook | VNodeMountHook[]\r\n  onVnodeUnmounted?: VNodeMountHook | VNodeMountHook[]\r\n}\r\n\r\ntype VNodeChildAtom =\r\n  | VNode\r\n  | string\r\n  | number\r\n  | boolean\r\n  | null\r\n  | undefined\r\n  | void\r\n\r\nexport type VNodeArrayChildren = Array<VNodeArrayChildren | VNodeChildAtom>\r\n\r\nexport type VNodeChild = VNodeChildAtom | VNodeArrayChildren\r\n\r\nexport type VNodeNormalizedChildren =\r\n  | string\r\n  | VNodeArrayChildren\r\n  | RawSlots\r\n  | null\r\n\r\nexport interface VNode<\r\n  HostNode = RendererNode,\r\n  HostElement = RendererElement,\r\n  ExtraProps = { [key: string]: any }\r\n> {\r\n  /**\r\n   * @internal\r\n   */\r\n  __v_isVNode: true\r\n\r\n  /**\r\n   * @internal\r\n   */\r\n  [ReactiveFlags.SKIP]: true\r\n\r\n  type: VNodeTypes\r\n  props: (VNodeProps & ExtraProps) | null\r\n  key: string | number | symbol | null\r\n  ref: VNodeNormalizedRef | null\r\n  /**\r\n   * SFC only. This is assigned on vnode creation using currentScopeId\r\n   * which is set alongside currentRenderingInstance.\r\n   */\r\n  scopeId: string | null\r\n  /**\r\n   * SFC only. This is assigned to:\r\n   * - Slot fragment vnodes with :slotted SFC styles.\r\n   * - Component vnodes (during patch/hydration) so that its root node can\r\n   *   inherit the component's slotScopeIds\r\n   * @internal\r\n   */\r\n  slotScopeIds: string[] | null\r\n  children: VNodeNormalizedChildren\r\n  component: ComponentInternalInstance | null\r\n  dirs: DirectiveBinding[] | null\r\n  transition: TransitionHooks<HostElement> | null\r\n\r\n  // DOM\r\n  el: HostNode | null\r\n  anchor: HostNode | null // fragment anchor\r\n  target: HostElement | null // teleport target\r\n  targetAnchor: HostNode | null // teleport target anchor\r\n  /**\r\n   * number of elements contained in a static vnode\r\n   * @internal\r\n   */\r\n  staticCount: number\r\n\r\n  // suspense\r\n  suspense: SuspenseBoundary | null\r\n  /**\r\n   * @internal\r\n   */\r\n  ssContent: VNode | null\r\n  /**\r\n   * @internal\r\n   */\r\n  ssFallback: VNode | null\r\n\r\n  // optimization only\r\n  shapeFlag: number\r\n  patchFlag: number\r\n  /**\r\n   * @internal\r\n   */\r\n  dynamicProps: string[] | null\r\n  /**\r\n   * @internal\r\n   */\r\n  dynamicChildren: VNode[] | null\r\n\r\n  // application root node only\r\n  appContext: AppContext | null\r\n\r\n  /**\r\n   * @internal attached by v-memo\r\n   */\r\n  memo?: any[]\r\n  /**\r\n   * @internal __COMPAT__ only\r\n   */\r\n  isCompatRoot?: true\r\n  /**\r\n   * @internal custom element interception hook\r\n   */\r\n  ce?: (instance: ComponentInternalInstance) => void\r\n}\r\n\r\n// Since v-if and v-for are the two possible ways node structure can dynamically\r\n// change, once we consider v-if branches and each v-for fragment a block, we\r\n// can divide a template into nested blocks, and within each block the node\r\n// structure would be stable. This allows us to skip most children diffing\r\n// and only worry about the dynamic nodes (indicated by patch flags).\r\nexport const blockStack: (VNode[] | null)[] = []\r\nexport let currentBlock: VNode[] | null = null\r\n\r\n/**\r\n * Open a block.\r\n * This must be called before `createBlock`. It cannot be part of `createBlock`\r\n * because the children of the block are evaluated before `createBlock` itself\r\n * is called. The generated code typically looks like this:\r\n *\r\n * ```js\r\n * function render() {\r\n *   return (openBlock(),createBlock('div', null, [...]))\r\n * }\r\n * ```\r\n * disableTracking is true when creating a v-for fragment block, since a v-for\r\n * fragment always diffs its children.\r\n *\r\n * @private\r\n */\r\nexport function openBlock(disableTracking = false) {\r\n  blockStack.push((currentBlock = disableTracking ? null : []))\r\n}\r\n\r\nexport function closeBlock() {\r\n  blockStack.pop()\r\n  currentBlock = blockStack[blockStack.length - 1] || null\r\n}\r\n\r\n// Whether we should be tracking dynamic child nodes inside a block.\r\n// Only tracks when this value is > 0\r\n// We are not using a simple boolean because this value may need to be\r\n// incremented/decremented by nested usage of v-once (see below)\r\nexport let isBlockTreeEnabled = 1\r\n\r\n/**\r\n * Block tracking sometimes needs to be disabled, for example during the\r\n * creation of a tree that needs to be cached by v-once. The compiler generates\r\n * code like this:\r\n *\r\n * ``` js\r\n * _cache[1] || (\r\n *   setBlockTracking(-1),\r\n *   _cache[1] = createVNode(...),\r\n *   setBlockTracking(1),\r\n *   _cache[1]\r\n * )\r\n * ```\r\n *\r\n * @private\r\n */\r\nexport function setBlockTracking(value: number) {\r\n  isBlockTreeEnabled += value\r\n}\r\n\r\nfunction setupBlock(vnode: VNode) {\r\n  // save current block children on the block vnode\r\n  vnode.dynamicChildren =\r\n    isBlockTreeEnabled > 0 ? currentBlock || (EMPTY_ARR as any) : null\r\n  // close block\r\n  closeBlock()\r\n  // a block is always going to be patched, so track it as a child of its\r\n  // parent block\r\n  if (isBlockTreeEnabled > 0 && currentBlock) {\r\n    currentBlock.push(vnode)\r\n  }\r\n  return vnode\r\n}\r\n\r\n/**\r\n * @private\r\n */\r\nexport function createElementBlock(\r\n  type: string,\r\n  props?: Record<string, any> | null,\r\n  children?: any,\r\n  patchFlag?: number,\r\n  dynamicProps?: string[],\r\n  shapeFlag?: number\r\n) {\r\n  return setupBlock(\r\n    createBaseVNode(\r\n      type,\r\n      props,\r\n      children,\r\n      patchFlag,\r\n      dynamicProps,\r\n      shapeFlag,\r\n      true /* isBlock */\r\n    )\r\n  )\r\n}\r\n\r\n/**\r\n * Create a block root vnode. Takes the same exact arguments as `createVNode`.\r\n * A block root keeps track of dynamic nodes within the block in the\r\n * `dynamicChildren` array.\r\n *\r\n * @private\r\n */\r\nexport function createBlock(\r\n  type: VNodeTypes | ClassComponent,\r\n  props?: Record<string, any> | null,\r\n  children?: any,\r\n  patchFlag?: number,\r\n  dynamicProps?: string[]\r\n): VNode {\r\n  return setupBlock(\r\n    createVNode(\r\n      type,\r\n      props,\r\n      children,\r\n      patchFlag,\r\n      dynamicProps,\r\n      true /* isBlock: prevent a block from tracking itself */\r\n    )\r\n  )\r\n}\r\n\r\nexport function isVNode(value: any): value is VNode {\r\n  return value ? value.__v_isVNode === true : false\r\n}\r\n\r\nexport function isSameVNodeType(n1: VNode, n2: VNode): boolean {\r\n  if (\r\n    __DEV__ &&\r\n    n2.shapeFlag & ShapeFlags.COMPONENT &&\r\n    hmrDirtyComponents.has(n2.type as ConcreteComponent)\r\n  ) {\r\n    // HMR only: if the component has been hot-updated, force a reload.\r\n    return false\r\n  }\r\n  return n1.type === n2.type && n1.key === n2.key\r\n}\r\n\r\nlet vnodeArgsTransformer:\r\n  | ((\r\n      args: Parameters<typeof _createVNode>,\r\n      instance: ComponentInternalInstance | null\r\n    ) => Parameters<typeof _createVNode>)\r\n  | undefined\r\n\r\n/**\r\n * Internal API for registering an arguments transform for createVNode\r\n * used for creating stubs in the test-utils\r\n * It is *internal* but needs to be exposed for test-utils to pick up proper\r\n * typings\r\n */\r\nexport function transformVNodeArgs(transformer?: typeof vnodeArgsTransformer) {\r\n  vnodeArgsTransformer = transformer\r\n}\r\n\r\nconst createVNodeWithArgsTransform = (\r\n  ...args: Parameters<typeof _createVNode>\r\n): VNode => {\r\n  return _createVNode(\r\n    ...(vnodeArgsTransformer\r\n      ? vnodeArgsTransformer(args, currentRenderingInstance)\r\n      : args)\r\n  )\r\n}\r\n\r\nexport const InternalObjectKey = `__vInternal`\r\n\r\nconst normalizeKey = ({ key }: VNodeProps): VNode['key'] =>\r\n  key != null ? key : null\r\n\r\nconst normalizeRef = ({ ref }: VNodeProps): VNodeNormalizedRefAtom | null => {\r\n  return (\r\n    ref != null\r\n      ? isString(ref) || isRef(ref) || isFunction(ref)\r\n        ? { i: currentRenderingInstance, r: ref }\r\n        : ref\r\n      : null\r\n  ) as any\r\n}\r\n\r\nfunction createBaseVNode(\r\n  type: VNodeTypes | ClassComponent | typeof NULL_DYNAMIC_COMPONENT,\r\n  props: (Data & VNodeProps) | null = null,\r\n  children: unknown = null,\r\n  patchFlag = 0,\r\n  dynamicProps: string[] | null = null,\r\n  shapeFlag = type === Fragment ? 0 : ShapeFlags.ELEMENT,\r\n  isBlockNode = false,\r\n  needFullChildrenNormalization = false\r\n) {\r\n  const vnode = {\r\n    __v_isVNode: true,\r\n    __v_skip: true,\r\n    type,\r\n    props,\r\n    key: props && normalizeKey(props),\r\n    ref: props && normalizeRef(props),\r\n    scopeId: currentScopeId,\r\n    slotScopeIds: null,\r\n    children,\r\n    component: null,\r\n    suspense: null,\r\n    ssContent: null,\r\n    ssFallback: null,\r\n    dirs: null,\r\n    transition: null,\r\n    el: null,\r\n    anchor: null,\r\n    target: null,\r\n    targetAnchor: null,\r\n    staticCount: 0,\r\n    shapeFlag,\r\n    patchFlag,\r\n    dynamicProps,\r\n    dynamicChildren: null,\r\n    appContext: null\r\n  } as VNode\r\n\r\n  if (needFullChildrenNormalization) {\r\n    normalizeChildren(vnode, children)\r\n    // normalize suspense children\r\n    if (__FEATURE_SUSPENSE__ && shapeFlag & ShapeFlags.SUSPENSE) {\r\n      ;(type as typeof SuspenseImpl).normalize(vnode)\r\n    }\r\n  } else if (children) {\r\n    // compiled element vnode - if children is passed, only possible types are\r\n    // string or Array.\r\n    vnode.shapeFlag |= isString(children)\r\n      ? ShapeFlags.TEXT_CHILDREN\r\n      : ShapeFlags.ARRAY_CHILDREN\r\n  }\r\n\r\n  // validate key\r\n  if (__DEV__ && vnode.key !== vnode.key) {\r\n    warn(`VNode created with invalid key (NaN). VNode type:`, vnode.type)\r\n  }\r\n\r\n  // track vnode for block tree\r\n  if (\r\n    isBlockTreeEnabled > 0 &&\r\n    // avoid a block node from tracking itself\r\n    !isBlockNode &&\r\n    // has current parent block\r\n    currentBlock &&\r\n    // presence of a patch flag indicates this node needs patching on updates.\r\n    // component nodes also should always be patched, because even if the\r\n    // component doesn't need to update, it needs to persist the instance on to\r\n    // the next vnode so that it can be properly unmounted later.\r\n    (vnode.patchFlag > 0 || shapeFlag & ShapeFlags.COMPONENT) &&\r\n    // the EVENTS flag is only for hydration and if it is the only flag, the\r\n    // vnode should not be considered dynamic due to handler caching.\r\n    vnode.patchFlag !== PatchFlags.HYDRATE_EVENTS\r\n  ) {\r\n    currentBlock.push(vnode)\r\n  }\r\n\r\n  if (__COMPAT__) {\r\n    convertLegacyVModelProps(vnode)\r\n    convertLegacyRefInFor(vnode)\r\n    defineLegacyVNodeProperties(vnode)\r\n  }\r\n\r\n  return vnode\r\n}\r\n\r\nexport { createBaseVNode as createElementVNode }\r\n\r\nexport const createVNode = (\r\n  __DEV__ ? createVNodeWithArgsTransform : _createVNode\r\n) as typeof _createVNode\r\n\r\nfunction _createVNode(\r\n  type: VNodeTypes | ClassComponent | typeof NULL_DYNAMIC_COMPONENT,\r\n  props: (Data & VNodeProps) | null = null,\r\n  children: unknown = null,\r\n  patchFlag: number = 0,\r\n  dynamicProps: string[] | null = null,\r\n  isBlockNode = false\r\n): VNode {\r\n  if (!type || type === NULL_DYNAMIC_COMPONENT) {\r\n    if (__DEV__ && !type) {\r\n      warn(`Invalid vnode type when creating vnode: ${type}.`)\r\n    }\r\n    type = Comment\r\n  }\r\n\r\n  if (isVNode(type)) {\r\n    // createVNode receiving an existing vnode. This happens in cases like\r\n    // <component :is=\"vnode\"/>\r\n    // #2078 make sure to merge refs during the clone instead of overwriting it\r\n    const cloned = cloneVNode(type, props, true /* mergeRef: true */)\r\n    if (children) {\r\n      normalizeChildren(cloned, children)\r\n    }\r\n    return cloned\r\n  }\r\n\r\n  // class component normalization.\r\n  if (isClassComponent(type)) {\r\n    type = type.__vccOpts\r\n  }\r\n\r\n  // 2.x async/functional component compat\r\n  if (__COMPAT__) {\r\n    type = convertLegacyComponent(type, currentRenderingInstance)\r\n  }\r\n\r\n  // class & style normalization.\r\n  if (props) {\r\n    // for reactive or proxy objects, we need to clone it to enable mutation.\r\n    props = guardReactiveProps(props)!\r\n    let { class: klass, style } = props\r\n    if (klass && !isString(klass)) {\r\n      props.class = normalizeClass(klass)\r\n    }\r\n    if (isObject(style)) {\r\n      // reactive state objects need to be cloned since they are likely to be\r\n      // mutated\r\n      if (isProxy(style) && !isArray(style)) {\r\n        style = extend({}, style)\r\n      }\r\n      props.style = normalizeStyle(style)\r\n    }\r\n  }\r\n\r\n  // encode the vnode type information into a bitmap\r\n  const shapeFlag = isString(type)\r\n    ? ShapeFlags.ELEMENT\r\n    : __FEATURE_SUSPENSE__ && isSuspense(type)\r\n    ? ShapeFlags.SUSPENSE\r\n    : isTeleport(type)\r\n    ? ShapeFlags.TELEPORT\r\n    : isObject(type)\r\n    ? ShapeFlags.STATEFUL_COMPONENT\r\n    : isFunction(type)\r\n    ? ShapeFlags.FUNCTIONAL_COMPONENT\r\n    : 0\r\n\r\n  if (__DEV__ && shapeFlag & ShapeFlags.STATEFUL_COMPONENT && isProxy(type)) {\r\n    type = toRaw(type)\r\n    warn(\r\n      `Vue received a Component which was made a reactive object. This can ` +\r\n        `lead to unnecessary performance overhead, and should be avoided by ` +\r\n        `marking the component with \\`markRaw\\` or using \\`shallowRef\\` ` +\r\n        `instead of \\`ref\\`.`,\r\n      `\\nComponent that was made reactive: `,\r\n      type\r\n    )\r\n  }\r\n\r\n  return createBaseVNode(\r\n    type,\r\n    props,\r\n    children,\r\n    patchFlag,\r\n    dynamicProps,\r\n    shapeFlag,\r\n    isBlockNode,\r\n    true\r\n  )\r\n}\r\n\r\nexport function guardReactiveProps(props: (Data & VNodeProps) | null) {\r\n  if (!props) return null\r\n  return isProxy(props) || InternalObjectKey in props\r\n    ? extend({}, props)\r\n    : props\r\n}\r\n\r\nexport function cloneVNode<T, U>(\r\n  vnode: VNode<T, U>,\r\n  extraProps?: (Data & VNodeProps) | null,\r\n  mergeRef = false\r\n): VNode<T, U> {\r\n  // This is intentionally NOT using spread or extend to avoid the runtime\r\n  // key enumeration cost.\r\n  const { props, ref, patchFlag, children } = vnode\r\n  const mergedProps = extraProps ? mergeProps(props || {}, extraProps) : props\r\n  const cloned: VNode = {\r\n    __v_isVNode: true,\r\n    __v_skip: true,\r\n    type: vnode.type,\r\n    props: mergedProps,\r\n    key: mergedProps && normalizeKey(mergedProps),\r\n    ref:\r\n      extraProps && extraProps.ref\r\n        ? // #2078 in the case of <component :is=\"vnode\" ref=\"extra\"/>\r\n          // if the vnode itself already has a ref, cloneVNode will need to merge\r\n          // the refs so the single vnode can be set on multiple refs\r\n          mergeRef && ref\r\n          ? isArray(ref)\r\n            ? ref.concat(normalizeRef(extraProps)!)\r\n            : [ref, normalizeRef(extraProps)!]\r\n          : normalizeRef(extraProps)\r\n        : ref,\r\n    scopeId: vnode.scopeId,\r\n    slotScopeIds: vnode.slotScopeIds,\r\n    children:\r\n      __DEV__ && patchFlag === PatchFlags.HOISTED && isArray(children)\r\n        ? (children as VNode[]).map(deepCloneVNode)\r\n        : children,\r\n    target: vnode.target,\r\n    targetAnchor: vnode.targetAnchor,\r\n    staticCount: vnode.staticCount,\r\n    shapeFlag: vnode.shapeFlag,\r\n    // if the vnode is cloned with extra props, we can no longer assume its\r\n    // existing patch flag to be reliable and need to add the FULL_PROPS flag.\r\n    // note: perserve flag for fragments since they use the flag for children\r\n    // fast paths only.\r\n    patchFlag:\r\n      extraProps && vnode.type !== Fragment\r\n        ? patchFlag === -1 // hoisted node\r\n          ? PatchFlags.FULL_PROPS\r\n          : patchFlag | PatchFlags.FULL_PROPS\r\n        : patchFlag,\r\n    dynamicProps: vnode.dynamicProps,\r\n    dynamicChildren: vnode.dynamicChildren,\r\n    appContext: vnode.appContext,\r\n    dirs: vnode.dirs,\r\n    transition: vnode.transition,\r\n\r\n    // These should technically only be non-null on mounted VNodes. However,\r\n    // they *should* be copied for kept-alive vnodes. So we just always copy\r\n    // them since them being non-null during a mount doesn't affect the logic as\r\n    // they will simply be overwritten.\r\n    component: vnode.component,\r\n    suspense: vnode.suspense,\r\n    ssContent: vnode.ssContent && cloneVNode(vnode.ssContent),\r\n    ssFallback: vnode.ssFallback && cloneVNode(vnode.ssFallback),\r\n    el: vnode.el,\r\n    anchor: vnode.anchor\r\n  }\r\n  if (__COMPAT__) {\r\n    defineLegacyVNodeProperties(cloned)\r\n  }\r\n  return cloned as any\r\n}\r\n\r\n/**\r\n * Dev only, for HMR of hoisted vnodes reused in v-for\r\n * https://github.com/vitejs/vite/issues/2022\r\n */\r\nfunction deepCloneVNode(vnode: VNode): VNode {\r\n  const cloned = cloneVNode(vnode)\r\n  if (isArray(vnode.children)) {\r\n    cloned.children = (vnode.children as VNode[]).map(deepCloneVNode)\r\n  }\r\n  return cloned\r\n}\r\n\r\n/**\r\n * @private\r\n */\r\nexport function createTextVNode(text: string = ' ', flag: number = 0): VNode {\r\n  return createVNode(Text, null, text, flag)\r\n}\r\n\r\n/**\r\n * @private\r\n */\r\nexport function createStaticVNode(\r\n  content: string,\r\n  numberOfNodes: number\r\n): VNode {\r\n  // A static vnode can contain multiple stringified elements, and the number\r\n  // of elements is necessary for hydration.\r\n  const vnode = createVNode(Static, null, content)\r\n  vnode.staticCount = numberOfNodes\r\n  return vnode\r\n}\r\n\r\n/**\r\n * @private\r\n */\r\nexport function createCommentVNode(\r\n  text: string = '',\r\n  // when used as the v-else branch, the comment node must be created as a\r\n  // block to ensure correct updates.\r\n  asBlock: boolean = false\r\n): VNode {\r\n  return asBlock\r\n    ? (openBlock(), createBlock(Comment, null, text))\r\n    : createVNode(Comment, null, text)\r\n}\r\n\r\nexport function normalizeVNode(child: VNodeChild): VNode {\r\n  if (child == null || typeof child === 'boolean') {\r\n    // empty placeholder\r\n    return createVNode(Comment)\r\n  } else if (isArray(child)) {\r\n    // fragment\r\n    return createVNode(\r\n      Fragment,\r\n      null,\r\n      // #3666, avoid reference pollution when reusing vnode\r\n      child.slice()\r\n    )\r\n  } else if (typeof child === 'object') {\r\n    // already vnode, this should be the most common since compiled templates\r\n    // always produce all-vnode children arrays\r\n    return cloneIfMounted(child)\r\n  } else {\r\n    // strings and numbers\r\n    return createVNode(Text, null, String(child))\r\n  }\r\n}\r\n\r\n// optimized normalization for template-compiled render fns\r\nexport function cloneIfMounted(child: VNode): VNode {\r\n  return child.el === null || child.memo ? child : cloneVNode(child)\r\n}\r\n\r\nexport function normalizeChildren(vnode: VNode, children: unknown) {\r\n  let type = 0\r\n  const { shapeFlag } = vnode\r\n  if (children == null) {\r\n    children = null\r\n  } else if (isArray(children)) {\r\n    type = ShapeFlags.ARRAY_CHILDREN\r\n  } else if (typeof children === 'object') {\r\n    if (shapeFlag & ShapeFlags.ELEMENT || shapeFlag & ShapeFlags.TELEPORT) {\r\n      // Normalize slot to plain children for plain element and Teleport\r\n      const slot = (children as any).default\r\n      if (slot) {\r\n        // _c marker is added by withCtx() indicating this is a compiled slot\r\n        slot._c && (slot._d = false)\r\n        normalizeChildren(vnode, slot())\r\n        slot._c && (slot._d = true)\r\n      }\r\n      return\r\n    } else {\r\n      type = ShapeFlags.SLOTS_CHILDREN\r\n      const slotFlag = (children as RawSlots)._\r\n      if (!slotFlag && !(InternalObjectKey in children!)) {\r\n        // if slots are not normalized, attach context instance\r\n        // (compiled / normalized slots already have context)\r\n        ;(children as RawSlots)._ctx = currentRenderingInstance\r\n      } else if (slotFlag === SlotFlags.FORWARDED && currentRenderingInstance) {\r\n        // a child component receives forwarded slots from the parent.\r\n        // its slot type is determined by its parent's slot type.\r\n        if (\r\n          (currentRenderingInstance.slots as RawSlots)._ === SlotFlags.STABLE\r\n        ) {\r\n          ;(children as RawSlots)._ = SlotFlags.STABLE\r\n        } else {\r\n          ;(children as RawSlots)._ = SlotFlags.DYNAMIC\r\n          vnode.patchFlag |= PatchFlags.DYNAMIC_SLOTS\r\n        }\r\n      }\r\n    }\r\n  } else if (isFunction(children)) {\r\n    children = { default: children, _ctx: currentRenderingInstance }\r\n    type = ShapeFlags.SLOTS_CHILDREN\r\n  } else {\r\n    children = String(children)\r\n    // force teleport children to array so it can be moved around\r\n    if (shapeFlag & ShapeFlags.TELEPORT) {\r\n      type = ShapeFlags.ARRAY_CHILDREN\r\n      children = [createTextVNode(children as string)]\r\n    } else {\r\n      type = ShapeFlags.TEXT_CHILDREN\r\n    }\r\n  }\r\n  vnode.children = children as VNodeNormalizedChildren\r\n  vnode.shapeFlag |= type\r\n}\r\n\r\nexport function mergeProps(...args: (Data & VNodeProps)[]) {\r\n  const ret: Data = {}\r\n  for (let i = 0; i < args.length; i++) {\r\n    const toMerge = args[i]\r\n    for (const key in toMerge) {\r\n      if (key === 'class') {\r\n        if (ret.class !== toMerge.class) {\r\n          ret.class = normalizeClass([ret.class, toMerge.class])\r\n        }\r\n      } else if (key === 'style') {\r\n        ret.style = normalizeStyle([ret.style, toMerge.style])\r\n      } else if (isOn(key)) {\r\n        const existing = ret[key]\r\n        const incoming = toMerge[key]\r\n        if (existing !== incoming) {\r\n          ret[key] = existing\r\n            ? [].concat(existing as any, incoming as any)\r\n            : incoming\r\n        }\r\n      } else if (key !== '') {\r\n        ret[key] = toMerge[key]\r\n      }\r\n    }\r\n  }\r\n  return ret\r\n}\r\n","import { Data } from '../component'\r\nimport { Slots, RawSlots } from '../componentSlots'\r\nimport {\r\n  ContextualRenderFn,\r\n  currentRenderingInstance\r\n} from '../componentRenderContext'\r\nimport { Comment, isVNode } from '../vnode'\r\nimport {\r\n  VNodeArrayChildren,\r\n  openBlock,\r\n  createBlock,\r\n  Fragment,\r\n  VNode\r\n} from '../vnode'\r\nimport { PatchFlags, SlotFlags } from '@vue/shared'\r\nimport { warn } from '../warning'\r\nimport { createVNode } from '@vue/runtime-core'\r\n\r\n/**\r\n * Compiler runtime helper for rendering `<slot/>`\r\n * @private\r\n */\r\nexport function renderSlot(\r\n  slots: Slots,\r\n  name: string,\r\n  props: Data = {},\r\n  // this is not a user-facing function, so the fallback is always generated by\r\n  // the compiler and guaranteed to be a function returning an array\r\n  fallback?: () => VNodeArrayChildren,\r\n  noSlotted?: boolean\r\n): VNode {\r\n  if (currentRenderingInstance!.isCE) {\r\n    return createVNode(\r\n      'slot',\r\n      name === 'default' ? null : { name },\r\n      fallback && fallback()\r\n    )\r\n  }\r\n\r\n  let slot = slots[name]\r\n\r\n  if (__DEV__ && slot && slot.length > 1) {\r\n    warn(\r\n      `SSR-optimized slot function detected in a non-SSR-optimized render ` +\r\n        `function. You need to mark this component with $dynamic-slots in the ` +\r\n        `parent template.`\r\n    )\r\n    slot = () => []\r\n  }\r\n\r\n  // a compiled slot disables block tracking by default to avoid manual\r\n  // invocation interfering with template-based block tracking, but in\r\n  // `renderSlot` we can be sure that it's template-based so we can force\r\n  // enable it.\r\n  if (slot && (slot as ContextualRenderFn)._c) {\r\n    ;(slot as ContextualRenderFn)._d = false\r\n  }\r\n  openBlock()\r\n  const validSlotContent = slot && ensureValidVNode(slot(props))\r\n  const rendered = createBlock(\r\n    Fragment,\r\n    { key: props.key || `_${name}` },\r\n    validSlotContent || (fallback ? fallback() : []),\r\n    validSlotContent && (slots as RawSlots)._ === SlotFlags.STABLE\r\n      ? PatchFlags.STABLE_FRAGMENT\r\n      : PatchFlags.BAIL\r\n  )\r\n  if (!noSlotted && rendered.scopeId) {\r\n    rendered.slotScopeIds = [rendered.scopeId + '-s']\r\n  }\r\n  if (slot && (slot as ContextualRenderFn)._c) {\r\n    ;(slot as ContextualRenderFn)._d = true\r\n  }\r\n  return rendered\r\n}\r\n\r\nfunction ensureValidVNode(vnodes: VNodeArrayChildren) {\r\n  return vnodes.some(child => {\r\n    if (!isVNode(child)) return true\r\n    if (child.type === Comment) return false\r\n    if (\r\n      child.type === Fragment &&\r\n      !ensureValidVNode(child.children as VNodeArrayChildren)\r\n    )\r\n      return false\r\n    return true\r\n  })\r\n    ? vnodes\r\n    : null\r\n}\r\n","import {\r\n  ComponentInternalInstance,\r\n  Data,\r\n  getExposeProxy,\r\n  isStatefulComponent\r\n} from './component'\r\nimport { nextTick, queueJob } from './scheduler'\r\nimport { instanceWatch, WatchOptions, WatchStopHandle } from './apiWatch'\r\nimport {\r\n  EMPTY_OBJ,\r\n  hasOwn,\r\n  isGloballyWhitelisted,\r\n  NOOP,\r\n  extend,\r\n  isString,\r\n  isFunction\r\n} from '@vue/shared'\r\nimport {\r\n  ReactiveEffect,\r\n  toRaw,\r\n  shallowReadonly,\r\n  track,\r\n  TrackOpTypes,\r\n  ShallowUnwrapRef,\r\n  UnwrapNestedRefs\r\n} from '@vue/reactivity'\r\nimport {\r\n  ExtractComputedReturns,\r\n  ComponentOptionsBase,\r\n  ComputedOptions,\r\n  MethodOptions,\r\n  ComponentOptionsMixin,\r\n  OptionTypesType,\r\n  OptionTypesKeys,\r\n  resolveMergedOptions,\r\n  shouldCacheAccess,\r\n  MergedComponentOptionsOverride\r\n} from './componentOptions'\r\nimport { EmitsOptions, EmitFn } from './componentEmits'\r\nimport { Slots } from './componentSlots'\r\nimport { markAttrsAccessed } from './componentRenderUtils'\r\nimport { currentRenderingInstance } from './componentRenderContext'\r\nimport { warn } from './warning'\r\nimport { UnionToIntersection } from './helpers/typeUtils'\r\nimport { installCompatInstanceProperties } from './compat/instance'\r\n\r\n/**\r\n * Custom properties added to component instances in any way and can be accessed through `this`\r\n *\r\n * @example\r\n * Here is an example of adding a property `$router` to every component instance:\r\n * ```ts\r\n * import { createApp } from 'vue'\r\n * import { Router, createRouter } from 'vue-router'\r\n *\r\n * declare module '@vue/runtime-core' {\r\n *   interface ComponentCustomProperties {\r\n *     $router: Router\r\n *   }\r\n * }\r\n *\r\n * // effectively adding the router to every component instance\r\n * const app = createApp({})\r\n * const router = createRouter()\r\n * app.config.globalProperties.$router = router\r\n *\r\n * const vm = app.mount('#app')\r\n * // we can access the router from the instance\r\n * vm.$router.push('/')\r\n * ```\r\n */\r\nexport interface ComponentCustomProperties {}\r\n\r\ntype IsDefaultMixinComponent<T> = T extends ComponentOptionsMixin\r\n  ? ComponentOptionsMixin extends T\r\n    ? true\r\n    : false\r\n  : false\r\n\r\ntype MixinToOptionTypes<T> = T extends ComponentOptionsBase<\r\n  infer P,\r\n  infer B,\r\n  infer D,\r\n  infer C,\r\n  infer M,\r\n  infer Mixin,\r\n  infer Extends,\r\n  any,\r\n  any,\r\n  infer Defaults\r\n>\r\n  ? OptionTypesType<P & {}, B & {}, D & {}, C & {}, M & {}, Defaults & {}> &\r\n      IntersectionMixin<Mixin> &\r\n      IntersectionMixin<Extends>\r\n  : never\r\n\r\n// ExtractMixin(map type) is used to resolve circularly references\r\ntype ExtractMixin<T> = {\r\n  Mixin: MixinToOptionTypes<T>\r\n}[T extends ComponentOptionsMixin ? 'Mixin' : never]\r\n\r\ntype IntersectionMixin<T> = IsDefaultMixinComponent<T> extends true\r\n  ? OptionTypesType<{}, {}, {}, {}, {}>\r\n  : UnionToIntersection<ExtractMixin<T>>\r\n\r\ntype UnwrapMixinsType<\r\n  T,\r\n  Type extends OptionTypesKeys\r\n> = T extends OptionTypesType ? T[Type] : never\r\n\r\ntype EnsureNonVoid<T> = T extends void ? {} : T\r\n\r\nexport type ComponentPublicInstanceConstructor<\r\n  T extends ComponentPublicInstance<\r\n    Props,\r\n    RawBindings,\r\n    D,\r\n    C,\r\n    M\r\n  > = ComponentPublicInstance<any>,\r\n  Props = any,\r\n  RawBindings = any,\r\n  D = any,\r\n  C extends ComputedOptions = ComputedOptions,\r\n  M extends MethodOptions = MethodOptions\r\n> = {\r\n  __isFragment?: never\r\n  __isTeleport?: never\r\n  __isSuspense?: never\r\n  new (...args: any[]): T\r\n}\r\n\r\nexport type CreateComponentPublicInstance<\r\n  P = {},\r\n  B = {},\r\n  D = {},\r\n  C extends ComputedOptions = {},\r\n  M extends MethodOptions = {},\r\n  Mixin extends ComponentOptionsMixin = ComponentOptionsMixin,\r\n  Extends extends ComponentOptionsMixin = ComponentOptionsMixin,\r\n  E extends EmitsOptions = {},\r\n  PublicProps = P,\r\n  Defaults = {},\r\n  MakeDefaultsOptional extends boolean = false,\r\n  PublicMixin = IntersectionMixin<Mixin> & IntersectionMixin<Extends>,\r\n  PublicP = UnwrapMixinsType<PublicMixin, 'P'> & EnsureNonVoid<P>,\r\n  PublicB = UnwrapMixinsType<PublicMixin, 'B'> & EnsureNonVoid<B>,\r\n  PublicD = UnwrapMixinsType<PublicMixin, 'D'> & EnsureNonVoid<D>,\r\n  PublicC extends ComputedOptions = UnwrapMixinsType<PublicMixin, 'C'> &\r\n    EnsureNonVoid<C>,\r\n  PublicM extends MethodOptions = UnwrapMixinsType<PublicMixin, 'M'> &\r\n    EnsureNonVoid<M>,\r\n  PublicDefaults = UnwrapMixinsType<PublicMixin, 'Defaults'> &\r\n    EnsureNonVoid<Defaults>\r\n> = ComponentPublicInstance<\r\n  PublicP,\r\n  PublicB,\r\n  PublicD,\r\n  PublicC,\r\n  PublicM,\r\n  E,\r\n  PublicProps,\r\n  PublicDefaults,\r\n  MakeDefaultsOptional,\r\n  ComponentOptionsBase<P, B, D, C, M, Mixin, Extends, E, string, Defaults>\r\n>\r\n\r\n// public properties exposed on the proxy, which is used as the render context\r\n// in templates (as `this` in the render option)\r\nexport type ComponentPublicInstance<\r\n  P = {}, // props type extracted from props option\r\n  B = {}, // raw bindings returned from setup()\r\n  D = {}, // return from data()\r\n  C extends ComputedOptions = {},\r\n  M extends MethodOptions = {},\r\n  E extends EmitsOptions = {},\r\n  PublicProps = P,\r\n  Defaults = {},\r\n  MakeDefaultsOptional extends boolean = false,\r\n  Options = ComponentOptionsBase<any, any, any, any, any, any, any, any, any>\r\n> = {\r\n  $: ComponentInternalInstance\r\n  $data: D\r\n  $props: MakeDefaultsOptional extends true\r\n    ? Partial<Defaults> & Omit<P & PublicProps, keyof Defaults>\r\n    : P & PublicProps\r\n  $attrs: Data\r\n  $refs: Data\r\n  $slots: Slots\r\n  $root: ComponentPublicInstance | null\r\n  $parent: ComponentPublicInstance | null\r\n  $emit: EmitFn<E>\r\n  $el: any\r\n  $options: Options & MergedComponentOptionsOverride\r\n  $forceUpdate: ReactiveEffect\r\n  $nextTick: typeof nextTick\r\n  $watch(\r\n    source: string | Function,\r\n    cb: Function,\r\n    options?: WatchOptions\r\n  ): WatchStopHandle\r\n} & P &\r\n  ShallowUnwrapRef<B> &\r\n  UnwrapNestedRefs<D> &\r\n  ExtractComputedReturns<C> &\r\n  M &\r\n  ComponentCustomProperties\r\n\r\nexport type PublicPropertiesMap = Record<\r\n  string,\r\n  (i: ComponentInternalInstance) => any\r\n>\r\n\r\n/**\r\n * #2437 In Vue 3, functional components do not have a public instance proxy but\r\n * they exist in the internal parent chain. For code that relies on traversing\r\n * public $parent chains, skip functional ones and go to the parent instead.\r\n */\r\nconst getPublicInstance = (\r\n  i: ComponentInternalInstance | null\r\n): ComponentPublicInstance | ComponentInternalInstance['exposed'] | null => {\r\n  if (!i) return null\r\n  if (isStatefulComponent(i)) return getExposeProxy(i) || i.proxy\r\n  return getPublicInstance(i.parent)\r\n}\r\n\r\nexport const publicPropertiesMap: PublicPropertiesMap = /*#__PURE__*/ extend(\r\n  Object.create(null),\r\n  {\r\n    $: i => i,\r\n    $el: i => i.vnode.el,\r\n    $data: i => i.data,\r\n    $props: i => (__DEV__ ? shallowReadonly(i.props) : i.props),\r\n    $attrs: i => (__DEV__ ? shallowReadonly(i.attrs) : i.attrs),\r\n    $slots: i => (__DEV__ ? shallowReadonly(i.slots) : i.slots),\r\n    $refs: i => (__DEV__ ? shallowReadonly(i.refs) : i.refs),\r\n    $parent: i => getPublicInstance(i.parent),\r\n    $root: i => getPublicInstance(i.root),\r\n    $emit: i => i.emit,\r\n    $options: i => (__FEATURE_OPTIONS_API__ ? resolveMergedOptions(i) : i.type),\r\n    $forceUpdate: i => () => queueJob(i.update),\r\n    $nextTick: i => nextTick.bind(i.proxy!),\r\n    $watch: i => (__FEATURE_OPTIONS_API__ ? instanceWatch.bind(i) : NOOP)\r\n  } as PublicPropertiesMap\r\n)\r\n\r\nif (__COMPAT__) {\r\n  installCompatInstanceProperties(publicPropertiesMap)\r\n}\r\n\r\nconst enum AccessTypes {\r\n  SETUP,\r\n  DATA,\r\n  PROPS,\r\n  CONTEXT,\r\n  OTHER\r\n}\r\n\r\nexport interface ComponentRenderContext {\r\n  [key: string]: any\r\n  _: ComponentInternalInstance\r\n}\r\n\r\nexport const PublicInstanceProxyHandlers: ProxyHandler<any> = {\r\n  get({ _: instance }: ComponentRenderContext, key: string) {\r\n    const { ctx, setupState, data, props, accessCache, type, appContext } =\r\n      instance\r\n\r\n    // for internal formatters to know that this is a Vue instance\r\n    if (__DEV__ && key === '__isVue') {\r\n      return true\r\n    }\r\n\r\n    // prioritize <script setup> bindings during dev.\r\n    // this allows even properties that start with _ or $ to be used - so that\r\n    // it aligns with the production behavior where the render fn is inlined and\r\n    // indeed has access to all declared variables.\r\n    if (\r\n      __DEV__ &&\r\n      setupState !== EMPTY_OBJ &&\r\n      setupState.__isScriptSetup &&\r\n      hasOwn(setupState, key)\r\n    ) {\r\n      return setupState[key]\r\n    }\r\n\r\n    // data / props / ctx\r\n    // This getter gets called for every property access on the render context\r\n    // during render and is a major hotspot. The most expensive part of this\r\n    // is the multiple hasOwn() calls. It's much faster to do a simple property\r\n    // access on a plain object, so we use an accessCache object (with null\r\n    // prototype) to memoize what access type a key corresponds to.\r\n    let normalizedProps\r\n    if (key[0] !== '$') {\r\n      const n = accessCache![key]\r\n      if (n !== undefined) {\r\n        switch (n) {\r\n          case AccessTypes.SETUP:\r\n            return setupState[key]\r\n          case AccessTypes.DATA:\r\n            return data[key]\r\n          case AccessTypes.CONTEXT:\r\n            return ctx[key]\r\n          case AccessTypes.PROPS:\r\n            return props![key]\r\n          // default: just fallthrough\r\n        }\r\n      } else if (setupState !== EMPTY_OBJ && hasOwn(setupState, key)) {\r\n        accessCache![key] = AccessTypes.SETUP\r\n        return setupState[key]\r\n      } else if (data !== EMPTY_OBJ && hasOwn(data, key)) {\r\n        accessCache![key] = AccessTypes.DATA\r\n        return data[key]\r\n      } else if (\r\n        // only cache other properties when instance has declared (thus stable)\r\n        // props\r\n        (normalizedProps = instance.propsOptions[0]) &&\r\n        hasOwn(normalizedProps, key)\r\n      ) {\r\n        accessCache![key] = AccessTypes.PROPS\r\n        return props![key]\r\n      } else if (ctx !== EMPTY_OBJ && hasOwn(ctx, key)) {\r\n        accessCache![key] = AccessTypes.CONTEXT\r\n        return ctx[key]\r\n      } else if (!__FEATURE_OPTIONS_API__ || shouldCacheAccess) {\r\n        accessCache![key] = AccessTypes.OTHER\r\n      }\r\n    }\r\n\r\n    const publicGetter = publicPropertiesMap[key]\r\n    let cssModule, globalProperties\r\n    // public $xxx properties\r\n    if (publicGetter) {\r\n      if (key === '$attrs') {\r\n        track(instance, TrackOpTypes.GET, key)\r\n        __DEV__ && markAttrsAccessed()\r\n      }\r\n      return publicGetter(instance)\r\n    } else if (\r\n      // css module (injected by vue-loader)\r\n      (cssModule = type.__cssModules) &&\r\n      (cssModule = cssModule[key])\r\n    ) {\r\n      return cssModule\r\n    } else if (ctx !== EMPTY_OBJ && hasOwn(ctx, key)) {\r\n      // user may set custom properties to `this` that start with `$`\r\n      accessCache![key] = AccessTypes.CONTEXT\r\n      return ctx[key]\r\n    } else if (\r\n      // global properties\r\n      ((globalProperties = appContext.config.globalProperties),\r\n      hasOwn(globalProperties, key))\r\n    ) {\r\n      if (__COMPAT__) {\r\n        const desc = Object.getOwnPropertyDescriptor(globalProperties, key)!\r\n        if (desc.get) {\r\n          return desc.get.call(instance.proxy)\r\n        } else {\r\n          const val = globalProperties[key]\r\n          return isFunction(val) ? val.bind(instance.proxy) : val\r\n        }\r\n      } else {\r\n        return globalProperties[key]\r\n      }\r\n    } else if (\r\n      __DEV__ &&\r\n      currentRenderingInstance &&\r\n      (!isString(key) ||\r\n        // #1091 avoid internal isRef/isVNode checks on component instance leading\r\n        // to infinite warning loop\r\n        key.indexOf('__v') !== 0)\r\n    ) {\r\n      if (\r\n        data !== EMPTY_OBJ &&\r\n        (key[0] === '$' || key[0] === '_') &&\r\n        hasOwn(data, key)\r\n      ) {\r\n        warn(\r\n          `Property ${JSON.stringify(\r\n            key\r\n          )} must be accessed via $data because it starts with a reserved ` +\r\n            `character (\"$\" or \"_\") and is not proxied on the render context.`\r\n        )\r\n      } else if (instance === currentRenderingInstance) {\r\n        warn(\r\n          `Property ${JSON.stringify(key)} was accessed during render ` +\r\n            `but is not defined on instance.`\r\n        )\r\n      }\r\n    }\r\n  },\r\n\r\n  set(\r\n    { _: instance }: ComponentRenderContext,\r\n    key: string,\r\n    value: any\r\n  ): boolean {\r\n    const { data, setupState, ctx } = instance\r\n    if (setupState !== EMPTY_OBJ && hasOwn(setupState, key)) {\r\n      setupState[key] = value\r\n    } else if (data !== EMPTY_OBJ && hasOwn(data, key)) {\r\n      data[key] = value\r\n    } else if (hasOwn(instance.props, key)) {\r\n      __DEV__ &&\r\n        warn(\r\n          `Attempting to mutate prop \"${key}\". Props are readonly.`,\r\n          instance\r\n        )\r\n      return false\r\n    }\r\n    if (key[0] === '$' && key.slice(1) in instance) {\r\n      __DEV__ &&\r\n        warn(\r\n          `Attempting to mutate public property \"${key}\". ` +\r\n            `Properties starting with $ are reserved and readonly.`,\r\n          instance\r\n        )\r\n      return false\r\n    } else {\r\n      if (__DEV__ && key in instance.appContext.config.globalProperties) {\r\n        Object.defineProperty(ctx, key, {\r\n          enumerable: true,\r\n          configurable: true,\r\n          value\r\n        })\r\n      } else {\r\n        ctx[key] = value\r\n      }\r\n    }\r\n    return true\r\n  },\r\n\r\n  has(\r\n    {\r\n      _: { data, setupState, accessCache, ctx, appContext, propsOptions }\r\n    }: ComponentRenderContext,\r\n    key: string\r\n  ) {\r\n    let normalizedProps\r\n    return (\r\n      accessCache![key] !== undefined ||\r\n      (data !== EMPTY_OBJ && hasOwn(data, key)) ||\r\n      (setupState !== EMPTY_OBJ && hasOwn(setupState, key)) ||\r\n      ((normalizedProps = propsOptions[0]) && hasOwn(normalizedProps, key)) ||\r\n      hasOwn(ctx, key) ||\r\n      hasOwn(publicPropertiesMap, key) ||\r\n      hasOwn(appContext.config.globalProperties, key)\r\n    )\r\n  }\r\n}\r\n\r\nif (__DEV__ && !__TEST__) {\r\n  PublicInstanceProxyHandlers.ownKeys = (target: ComponentRenderContext) => {\r\n    warn(\r\n      `Avoid app logic that relies on enumerating keys on a component instance. ` +\r\n        `The keys will be empty in production mode to avoid performance overhead.`\r\n    )\r\n    return Reflect.ownKeys(target)\r\n  }\r\n}\r\n\r\nexport const RuntimeCompiledPublicInstanceProxyHandlers = /*#__PURE__*/ extend(\r\n  {},\r\n  PublicInstanceProxyHandlers,\r\n  {\r\n    get(target: ComponentRenderContext, key: string) {\r\n      // fast path for unscopables when using `with` block\r\n      if ((key as any) === Symbol.unscopables) {\r\n        return\r\n      }\r\n      return PublicInstanceProxyHandlers.get!(target, key, target)\r\n    },\r\n    has(_: ComponentRenderContext, key: string) {\r\n      const has = key[0] !== '_' && !isGloballyWhitelisted(key)\r\n      if (__DEV__ && !has && PublicInstanceProxyHandlers.has!(_, key)) {\r\n        warn(\r\n          `Property ${JSON.stringify(\r\n            key\r\n          )} should not start with _ which is a reserved prefix for Vue internals.`\r\n        )\r\n      }\r\n      return has\r\n    }\r\n  }\r\n)\r\n\r\n// dev only\r\n// In dev mode, the proxy target exposes the same properties as seen on `this`\r\n// for easier console inspection. In prod mode it will be an empty object so\r\n// these properties definitions can be skipped.\r\nexport function createDevRenderContext(instance: ComponentInternalInstance) {\r\n  const target: Record<string, any> = {}\r\n\r\n  // expose internal instance for proxy handlers\r\n  Object.defineProperty(target, `_`, {\r\n    configurable: true,\r\n    enumerable: false,\r\n    get: () => instance\r\n  })\r\n\r\n  // expose public properties\r\n  Object.keys(publicPropertiesMap).forEach(key => {\r\n    Object.defineProperty(target, key, {\r\n      configurable: true,\r\n      enumerable: false,\r\n      get: () => publicPropertiesMap[key](instance),\r\n      // intercepted by the proxy so no need for implementation,\r\n      // but needed to prevent set errors\r\n      set: NOOP\r\n    })\r\n  })\r\n\r\n  return target as ComponentRenderContext\r\n}\r\n\r\n// dev only\r\nexport function exposePropsOnRenderContext(\r\n  instance: ComponentInternalInstance\r\n) {\r\n  const {\r\n    ctx,\r\n    propsOptions: [propsOptions]\r\n  } = instance\r\n  if (propsOptions) {\r\n    Object.keys(propsOptions).forEach(key => {\r\n      Object.defineProperty(ctx, key, {\r\n        enumerable: true,\r\n        configurable: true,\r\n        get: () => instance.props[key],\r\n        set: NOOP\r\n      })\r\n    })\r\n  }\r\n}\r\n\r\n// dev only\r\nexport function exposeSetupStateOnRenderContext(\r\n  instance: ComponentInternalInstance\r\n) {\r\n  const { ctx, setupState } = instance\r\n  Object.keys(toRaw(setupState)).forEach(key => {\r\n    if (!setupState.__isScriptSetup && (key[0] === '$' || key[0] === '_')) {\r\n      warn(\r\n        `setup() return property ${JSON.stringify(\r\n          key\r\n        )} should not start with \"$\" or \"_\" ` +\r\n          `which are reserved prefixes for Vue internals.`\r\n      )\r\n      return\r\n    }\r\n    Object.defineProperty(ctx, key, {\r\n      enumerable: true,\r\n      configurable: true,\r\n      get: () => setupState[key],\r\n      set: NOOP\r\n    })\r\n  })\r\n}\r\n","import { VNode } from './vnode'\r\nimport {\r\n  Data,\r\n  ComponentInternalInstance,\r\n  ConcreteComponent,\r\n  formatComponentName\r\n} from './component'\r\nimport { isString, isFunction } from '@vue/shared'\r\nimport { toRaw, isRef, pauseTracking, resetTracking } from '@vue/reactivity'\r\nimport { callWithErrorHandling, ErrorCodes } from './errorHandling'\r\n\r\ntype ComponentVNode = VNode & {\r\n  type: ConcreteComponent\r\n}\r\n\r\nconst stack: VNode[] = []\r\n\r\ntype TraceEntry = {\r\n  vnode: ComponentVNode\r\n  recurseCount: number\r\n}\r\n\r\ntype ComponentTraceStack = TraceEntry[]\r\n\r\nexport function pushWarningContext(vnode: VNode) {\r\n  stack.push(vnode)\r\n}\r\n\r\nexport function popWarningContext() {\r\n  stack.pop()\r\n}\r\n\r\nexport function warn(msg: string, ...args: any[]) {\r\n  // avoid props formatting or warn handler tracking deps that might be mutated\r\n  // during patch, leading to infinite recursion.\r\n  pauseTracking()\r\n\r\n  const instance = stack.length ? stack[stack.length - 1].component : null\r\n  const appWarnHandler = instance && instance.appContext.config.warnHandler\r\n  const trace = getComponentTrace()\r\n\r\n  if (appWarnHandler) {\r\n    callWithErrorHandling(\r\n      appWarnHandler,\r\n      instance,\r\n      ErrorCodes.APP_WARN_HANDLER,\r\n      [\r\n        msg + args.join(''),\r\n        instance && instance.proxy,\r\n        trace\r\n          .map(\r\n            ({ vnode }) => `at <${formatComponentName(instance, vnode.type)}>`\r\n          )\r\n          .join('\\n'),\r\n        trace\r\n      ]\r\n    )\r\n  } else {\r\n    const warnArgs = [`[Vue warn]: ${msg}`, ...args]\r\n    /* istanbul ignore if */\r\n    if (\r\n      trace.length &&\r\n      // avoid spamming console during tests\r\n      !__TEST__\r\n    ) {\r\n      warnArgs.push(`\\n`, ...formatTrace(trace))\r\n    }\r\n    console.warn(...warnArgs)\r\n  }\r\n\r\n  resetTracking()\r\n}\r\n\r\nexport function getComponentTrace(): ComponentTraceStack {\r\n  let currentVNode: VNode | null = stack[stack.length - 1]\r\n  if (!currentVNode) {\r\n    return []\r\n  }\r\n\r\n  // we can't just use the stack because it will be incomplete during updates\r\n  // that did not start from the root. Re-construct the parent chain using\r\n  // instance parent pointers.\r\n  const normalizedStack: ComponentTraceStack = []\r\n\r\n  while (currentVNode) {\r\n    const last = normalizedStack[0]\r\n    if (last && last.vnode === currentVNode) {\r\n      last.recurseCount++\r\n    } else {\r\n      normalizedStack.push({\r\n        vnode: currentVNode as ComponentVNode,\r\n        recurseCount: 0\r\n      })\r\n    }\r\n    const parentInstance: ComponentInternalInstance | null =\r\n      currentVNode.component && currentVNode.component.parent\r\n    currentVNode = parentInstance && parentInstance.vnode\r\n  }\r\n\r\n  return normalizedStack\r\n}\r\n\r\n/* istanbul ignore next */\r\nfunction formatTrace(trace: ComponentTraceStack): any[] {\r\n  const logs: any[] = []\r\n  trace.forEach((entry, i) => {\r\n    logs.push(...(i === 0 ? [] : [`\\n`]), ...formatTraceEntry(entry))\r\n  })\r\n  return logs\r\n}\r\n\r\nfunction formatTraceEntry({ vnode, recurseCount }: TraceEntry): any[] {\r\n  const postfix =\r\n    recurseCount > 0 ? `... (${recurseCount} recursive calls)` : ``\r\n  const isRoot = vnode.component ? vnode.component.parent == null : false\r\n  const open = ` at <${formatComponentName(\r\n    vnode.component,\r\n    vnode.type,\r\n    isRoot\r\n  )}`\r\n  const close = `>` + postfix\r\n  return vnode.props\r\n    ? [open, ...formatProps(vnode.props), close]\r\n    : [open + close]\r\n}\r\n\r\n/* istanbul ignore next */\r\nfunction formatProps(props: Data): any[] {\r\n  const res: any[] = []\r\n  const keys = Object.keys(props)\r\n  keys.slice(0, 3).forEach(key => {\r\n    res.push(...formatProp(key, props[key]))\r\n  })\r\n  if (keys.length > 3) {\r\n    res.push(` ...`)\r\n  }\r\n  return res\r\n}\r\n\r\nfunction formatProp(key: string, value: unknown): any[]\r\nfunction formatProp(key: string, value: unknown, raw: true): any\r\n/* istanbul ignore next */\r\nfunction formatProp(key: string, value: unknown, raw?: boolean): any {\r\n  if (isString(value)) {\r\n    value = JSON.stringify(value)\r\n    return raw ? value : [`${key}=${value}`]\r\n  } else if (\r\n    typeof value === 'number' ||\r\n    typeof value === 'boolean' ||\r\n    value == null\r\n  ) {\r\n    return raw ? value : [`${key}=${value}`]\r\n  } else if (isRef(value)) {\r\n    value = formatProp(key, toRaw(value.value), true)\r\n    return raw ? value : [`${key}=Ref<`, value, `>`]\r\n  } else if (isFunction(value)) {\r\n    return [`${key}=fn${value.name ? `<${value.name}>` : ``}`]\r\n  } else {\r\n    value = toRaw(value)\r\n    return raw ? value : [`${key}=`, value]\r\n  }\r\n}\r\n","import { VNode } from './vnode'\r\nimport { ComponentInternalInstance, LifecycleHooks } from './component'\r\nimport { warn, pushWarningContext, popWarningContext } from './warning'\r\nimport { isPromise, isFunction } from '@vue/shared'\r\n\r\n// contexts where user provided function may be executed, in addition to\r\n// lifecycle hooks.\r\nexport const enum ErrorCodes {\r\n  SETUP_FUNCTION,\r\n  RENDER_FUNCTION,\r\n  WATCH_GETTER,\r\n  WATCH_CALLBACK,\r\n  WATCH_CLEANUP,\r\n  NATIVE_EVENT_HANDLER,\r\n  COMPONENT_EVENT_HANDLER,\r\n  VNODE_HOOK,\r\n  DIRECTIVE_HOOK,\r\n  TRANSITION_HOOK,\r\n  APP_ERROR_HANDLER,\r\n  APP_WARN_HANDLER,\r\n  FUNCTION_REF,\r\n  ASYNC_COMPONENT_LOADER,\r\n  SCHEDULER\r\n}\r\n\r\nexport const ErrorTypeStrings: Record<number | string, string> = {\r\n  [LifecycleHooks.SERVER_PREFETCH]: 'serverPrefetch hook',\r\n  [LifecycleHooks.BEFORE_CREATE]: 'beforeCreate hook',\r\n  [LifecycleHooks.CREATED]: 'created hook',\r\n  [LifecycleHooks.BEFORE_MOUNT]: 'beforeMount hook',\r\n  [LifecycleHooks.MOUNTED]: 'mounted hook',\r\n  [LifecycleHooks.BEFORE_UPDATE]: 'beforeUpdate hook',\r\n  [LifecycleHooks.UPDATED]: 'updated',\r\n  [LifecycleHooks.BEFORE_UNMOUNT]: 'beforeUnmount hook',\r\n  [LifecycleHooks.UNMOUNTED]: 'unmounted hook',\r\n  [LifecycleHooks.ACTIVATED]: 'activated hook',\r\n  [LifecycleHooks.DEACTIVATED]: 'deactivated hook',\r\n  [LifecycleHooks.ERROR_CAPTURED]: 'errorCaptured hook',\r\n  [LifecycleHooks.RENDER_TRACKED]: 'renderTracked hook',\r\n  [LifecycleHooks.RENDER_TRIGGERED]: 'renderTriggered hook',\r\n  [ErrorCodes.SETUP_FUNCTION]: 'setup function',\r\n  [ErrorCodes.RENDER_FUNCTION]: 'render function',\r\n  [ErrorCodes.WATCH_GETTER]: 'watcher getter',\r\n  [ErrorCodes.WATCH_CALLBACK]: 'watcher callback',\r\n  [ErrorCodes.WATCH_CLEANUP]: 'watcher cleanup function',\r\n  [ErrorCodes.NATIVE_EVENT_HANDLER]: 'native event handler',\r\n  [ErrorCodes.COMPONENT_EVENT_HANDLER]: 'component event handler',\r\n  [ErrorCodes.VNODE_HOOK]: 'vnode hook',\r\n  [ErrorCodes.DIRECTIVE_HOOK]: 'directive hook',\r\n  [ErrorCodes.TRANSITION_HOOK]: 'transition hook',\r\n  [ErrorCodes.APP_ERROR_HANDLER]: 'app errorHandler',\r\n  [ErrorCodes.APP_WARN_HANDLER]: 'app warnHandler',\r\n  [ErrorCodes.FUNCTION_REF]: 'ref function',\r\n  [ErrorCodes.ASYNC_COMPONENT_LOADER]: 'async component loader',\r\n  [ErrorCodes.SCHEDULER]:\r\n    'scheduler flush. This is likely a Vue internals bug. ' +\r\n    'Please open an issue at https://new-issue.vuejs.org/?repo=vuejs/vue-next'\r\n}\r\n\r\nexport type ErrorTypes = LifecycleHooks | ErrorCodes\r\n\r\nexport function callWithErrorHandling(\r\n  fn: Function,\r\n  instance: ComponentInternalInstance | null,\r\n  type: ErrorTypes,\r\n  args?: unknown[]\r\n) {\r\n  let res\r\n  try {\r\n    res = args ? fn(...args) : fn()\r\n  } catch (err) {\r\n    handleError(err, instance, type)\r\n  }\r\n  return res\r\n}\r\n\r\nexport function callWithAsyncErrorHandling(\r\n  fn: Function | Function[],\r\n  instance: ComponentInternalInstance | null,\r\n  type: ErrorTypes,\r\n  args?: unknown[]\r\n): any[] {\r\n  if (isFunction(fn)) {\r\n    const res = callWithErrorHandling(fn, instance, type, args)\r\n    if (res && isPromise(res)) {\r\n      res.catch(err => {\r\n        handleError(err, instance, type)\r\n      })\r\n    }\r\n    return res\r\n  }\r\n\r\n  const values = []\r\n  for (let i = 0; i < fn.length; i++) {\r\n    values.push(callWithAsyncErrorHandling(fn[i], instance, type, args))\r\n  }\r\n  return values\r\n}\r\n\r\nexport function handleError(\r\n  err: unknown,\r\n  instance: ComponentInternalInstance | null,\r\n  type: ErrorTypes,\r\n  throwInDev = true\r\n) {\r\n  const contextVNode = instance ? instance.vnode : null\r\n  if (instance) {\r\n    let cur = instance.parent\r\n    // the exposed instance is the render proxy to keep it consistent with 2.x\r\n    const exposedInstance = instance.proxy\r\n    // in production the hook receives only the error code\r\n    const errorInfo = __DEV__ ? ErrorTypeStrings[type] : type\r\n    while (cur) {\r\n      const errorCapturedHooks = cur.ec\r\n      if (errorCapturedHooks) {\r\n        for (let i = 0; i < errorCapturedHooks.length; i++) {\r\n          if (\r\n            errorCapturedHooks[i](err, exposedInstance, errorInfo) === false\r\n          ) {\r\n            return\r\n          }\r\n        }\r\n      }\r\n      cur = cur.parent\r\n    }\r\n    // app-level handling\r\n    const appErrorHandler = instance.appContext.config.errorHandler\r\n    if (appErrorHandler) {\r\n      callWithErrorHandling(\r\n        appErrorHandler,\r\n        null,\r\n        ErrorCodes.APP_ERROR_HANDLER,\r\n        [err, exposedInstance, errorInfo]\r\n      )\r\n      return\r\n    }\r\n  }\r\n  logError(err, type, contextVNode, throwInDev)\r\n}\r\n\r\nfunction logError(\r\n  err: unknown,\r\n  type: ErrorTypes,\r\n  contextVNode: VNode | null,\r\n  throwInDev = true\r\n) {\r\n  if (__DEV__) {\r\n    const info = ErrorTypeStrings[type]\r\n    if (contextVNode) {\r\n      pushWarningContext(contextVNode)\r\n    }\r\n    warn(`Unhandled error${info ? ` during execution of ${info}` : ``}`)\r\n    if (contextVNode) {\r\n      popWarningContext()\r\n    }\r\n    // crash in dev by default so it's more noticeable\r\n    if (throwInDev) {\r\n      throw err\r\n    } else if (!__TEST__) {\r\n      console.error(err)\r\n    }\r\n  } else {\r\n    // recover in prod to reduce the impact on end-user\r\n    console.error(err)\r\n  }\r\n}\r\n","import {\r\n  isRef,\r\n  Ref,\r\n  ComputedRef,\r\n  ReactiveEffect,\r\n  isReactive,\r\n  ReactiveFlags,\r\n  EffectScheduler,\r\n  DebuggerOptions\r\n} from '@vue/reactivity'\r\nimport { SchedulerJob, queuePreFlushCb } from './scheduler'\r\nimport {\r\n  EMPTY_OBJ,\r\n  isObject,\r\n  isArray,\r\n  isFunction,\r\n  isString,\r\n  hasChanged,\r\n  NOOP,\r\n  remove,\r\n  isMap,\r\n  isSet,\r\n  isPlainObject\r\n} from '@vue/shared'\r\nimport {\r\n  currentInstance,\r\n  ComponentInternalInstance,\r\n  isInSSRComponentSetup,\r\n  setCurrentInstance,\r\n  unsetCurrentInstance\r\n} from './component'\r\nimport {\r\n  ErrorCodes,\r\n  callWithErrorHandling,\r\n  callWithAsyncErrorHandling\r\n} from './errorHandling'\r\nimport { queuePostRenderEffect } from './renderer'\r\nimport { warn } from './warning'\r\nimport { DeprecationTypes } from './compat/compatConfig'\r\nimport { checkCompatEnabled, isCompatEnabled } from './compat/compatConfig'\r\nimport { ObjectWatchOptionItem } from './componentOptions'\r\n\r\nexport type WatchEffect = (onInvalidate: InvalidateCbRegistrator) => void\r\n\r\nexport type WatchSource<T = any> = Ref<T> | ComputedRef<T> | (() => T)\r\n\r\nexport type WatchCallback<V = any, OV = any> = (\r\n  value: V,\r\n  oldValue: OV,\r\n  onInvalidate: InvalidateCbRegistrator\r\n) => any\r\n\r\ntype MapSources<T, Immediate> = {\r\n  [K in keyof T]: T[K] extends WatchSource<infer V>\r\n    ? Immediate extends true\r\n      ? V | undefined\r\n      : V\r\n    : T[K] extends object\r\n    ? Immediate extends true\r\n      ? T[K] | undefined\r\n      : T[K]\r\n    : never\r\n}\r\n\r\ntype InvalidateCbRegistrator = (cb: () => void) => void\r\n\r\nexport interface WatchOptionsBase extends DebuggerOptions {\r\n  flush?: 'pre' | 'post' | 'sync'\r\n}\r\n\r\nexport interface WatchOptions<Immediate = boolean> extends WatchOptionsBase {\r\n  immediate?: Immediate\r\n  deep?: boolean\r\n}\r\n\r\nexport type WatchStopHandle = () => void\r\n\r\n// Simple effect.\r\nexport function watchEffect(\r\n  effect: WatchEffect,\r\n  options?: WatchOptionsBase\r\n): WatchStopHandle {\r\n  return doWatch(effect, null, options)\r\n}\r\n\r\nexport function watchPostEffect(\r\n  effect: WatchEffect,\r\n  options?: DebuggerOptions\r\n) {\r\n  return doWatch(\r\n    effect,\r\n    null,\r\n    (__DEV__\r\n      ? Object.assign(options || {}, { flush: 'post' })\r\n      : { flush: 'post' }) as WatchOptionsBase\r\n  )\r\n}\r\n\r\nexport function watchSyncEffect(\r\n  effect: WatchEffect,\r\n  options?: DebuggerOptions\r\n) {\r\n  return doWatch(\r\n    effect,\r\n    null,\r\n    (__DEV__\r\n      ? Object.assign(options || {}, { flush: 'sync' })\r\n      : { flush: 'sync' }) as WatchOptionsBase\r\n  )\r\n}\r\n\r\n// initial value for watchers to trigger on undefined initial values\r\nconst INITIAL_WATCHER_VALUE = {}\r\n\r\ntype MultiWatchSources = (WatchSource<unknown> | object)[]\r\n\r\n// overload: array of multiple sources + cb\r\nexport function watch<\r\n  T extends MultiWatchSources,\r\n  Immediate extends Readonly<boolean> = false\r\n>(\r\n  sources: [...T],\r\n  cb: WatchCallback<MapSources<T, false>, MapSources<T, Immediate>>,\r\n  options?: WatchOptions<Immediate>\r\n): WatchStopHandle\r\n\r\n// overload: multiple sources w/ `as const`\r\n// watch([foo, bar] as const, () => {})\r\n// somehow [...T] breaks when the type is readonly\r\nexport function watch<\r\n  T extends Readonly<MultiWatchSources>,\r\n  Immediate extends Readonly<boolean> = false\r\n>(\r\n  source: T,\r\n  cb: WatchCallback<MapSources<T, false>, MapSources<T, Immediate>>,\r\n  options?: WatchOptions<Immediate>\r\n): WatchStopHandle\r\n\r\n// overload: single source + cb\r\nexport function watch<T, Immediate extends Readonly<boolean> = false>(\r\n  source: WatchSource<T>,\r\n  cb: WatchCallback<T, Immediate extends true ? T | undefined : T>,\r\n  options?: WatchOptions<Immediate>\r\n): WatchStopHandle\r\n\r\n// overload: watching reactive object w/ cb\r\nexport function watch<\r\n  T extends object,\r\n  Immediate extends Readonly<boolean> = false\r\n>(\r\n  source: T,\r\n  cb: WatchCallback<T, Immediate extends true ? T | undefined : T>,\r\n  options?: WatchOptions<Immediate>\r\n): WatchStopHandle\r\n\r\n// implementation\r\nexport function watch<T = any, Immediate extends Readonly<boolean> = false>(\r\n  source: T | WatchSource<T>,\r\n  cb: any,\r\n  options?: WatchOptions<Immediate>\r\n): WatchStopHandle {\r\n  if (__DEV__ && !isFunction(cb)) {\r\n    warn(\r\n      `\\`watch(fn, options?)\\` signature has been moved to a separate API. ` +\r\n        `Use \\`watchEffect(fn, options?)\\` instead. \\`watch\\` now only ` +\r\n        `supports \\`watch(source, cb, options?) signature.`\r\n    )\r\n  }\r\n  return doWatch(source as any, cb, options)\r\n}\r\n\r\nfunction doWatch(\r\n  source: WatchSource | WatchSource[] | WatchEffect | object,\r\n  cb: WatchCallback | null,\r\n  { immediate, deep, flush, onTrack, onTrigger }: WatchOptions = EMPTY_OBJ\r\n): WatchStopHandle {\r\n  if (__DEV__ && !cb) {\r\n    if (immediate !== undefined) {\r\n      warn(\r\n        `watch() \"immediate\" option is only respected when using the ` +\r\n          `watch(source, callback, options?) signature.`\r\n      )\r\n    }\r\n    if (deep !== undefined) {\r\n      warn(\r\n        `watch() \"deep\" option is only respected when using the ` +\r\n          `watch(source, callback, options?) signature.`\r\n      )\r\n    }\r\n  }\r\n\r\n  const warnInvalidSource = (s: unknown) => {\r\n    warn(\r\n      `Invalid watch source: `,\r\n      s,\r\n      `A watch source can only be a getter/effect function, a ref, ` +\r\n        `a reactive object, or an array of these types.`\r\n    )\r\n  }\r\n\r\n  const instance = currentInstance\r\n  let getter: () => any\r\n  let forceTrigger = false\r\n  let isMultiSource = false\r\n\r\n  if (isRef(source)) {\r\n    getter = () => source.value\r\n    forceTrigger = !!source._shallow\r\n  } else if (isReactive(source)) {\r\n    getter = () => source\r\n    deep = true\r\n  } else if (isArray(source)) {\r\n    isMultiSource = true\r\n    forceTrigger = source.some(isReactive)\r\n    getter = () =>\r\n      source.map(s => {\r\n        if (isRef(s)) {\r\n          return s.value\r\n        } else if (isReactive(s)) {\r\n          return traverse(s)\r\n        } else if (isFunction(s)) {\r\n          return callWithErrorHandling(s, instance, ErrorCodes.WATCH_GETTER)\r\n        } else {\r\n          __DEV__ && warnInvalidSource(s)\r\n        }\r\n      })\r\n  } else if (isFunction(source)) {\r\n    if (cb) {\r\n      // getter with cb\r\n      getter = () =>\r\n        callWithErrorHandling(source, instance, ErrorCodes.WATCH_GETTER)\r\n    } else {\r\n      // no cb -> simple effect\r\n      getter = () => {\r\n        if (instance && instance.isUnmounted) {\r\n          return\r\n        }\r\n        if (cleanup) {\r\n          cleanup()\r\n        }\r\n        return callWithAsyncErrorHandling(\r\n          source,\r\n          instance,\r\n          ErrorCodes.WATCH_CALLBACK,\r\n          [onInvalidate]\r\n        )\r\n      }\r\n    }\r\n  } else {\r\n    getter = NOOP\r\n    __DEV__ && warnInvalidSource(source)\r\n  }\r\n\r\n  // 2.x array mutation watch compat\r\n  if (__COMPAT__ && cb && !deep) {\r\n    const baseGetter = getter\r\n    getter = () => {\r\n      const val = baseGetter()\r\n      if (\r\n        isArray(val) &&\r\n        checkCompatEnabled(DeprecationTypes.WATCH_ARRAY, instance)\r\n      ) {\r\n        traverse(val)\r\n      }\r\n      return val\r\n    }\r\n  }\r\n\r\n  if (cb && deep) {\r\n    const baseGetter = getter\r\n    getter = () => traverse(baseGetter())\r\n  }\r\n\r\n  let cleanup: () => void\r\n  let onInvalidate: InvalidateCbRegistrator = (fn: () => void) => {\r\n    cleanup = effect.onStop = () => {\r\n      callWithErrorHandling(fn, instance, ErrorCodes.WATCH_CLEANUP)\r\n    }\r\n  }\r\n\r\n  // in SSR there is no need to setup an actual effect, and it should be noop\r\n  // unless it's eager\r\n  if (__NODE_JS__ && isInSSRComponentSetup) {\r\n    // we will also not call the invalidate callback (+ runner is not set up)\r\n    onInvalidate = NOOP\r\n    if (!cb) {\r\n      getter()\r\n    } else if (immediate) {\r\n      callWithAsyncErrorHandling(cb, instance, ErrorCodes.WATCH_CALLBACK, [\r\n        getter(),\r\n        isMultiSource ? [] : undefined,\r\n        onInvalidate\r\n      ])\r\n    }\r\n    return NOOP\r\n  }\r\n\r\n  let oldValue = isMultiSource ? [] : INITIAL_WATCHER_VALUE\r\n  const job: SchedulerJob = () => {\r\n    if (!effect.active) {\r\n      return\r\n    }\r\n    if (cb) {\r\n      // watch(source, cb)\r\n      const newValue = effect.run()\r\n      if (\r\n        deep ||\r\n        forceTrigger ||\r\n        (isMultiSource\r\n          ? (newValue as any[]).some((v, i) =>\r\n              hasChanged(v, (oldValue as any[])[i])\r\n            )\r\n          : hasChanged(newValue, oldValue)) ||\r\n        (__COMPAT__ &&\r\n          isArray(newValue) &&\r\n          isCompatEnabled(DeprecationTypes.WATCH_ARRAY, instance))\r\n      ) {\r\n        // cleanup before running cb again\r\n        if (cleanup) {\r\n          cleanup()\r\n        }\r\n        callWithAsyncErrorHandling(cb, instance, ErrorCodes.WATCH_CALLBACK, [\r\n          newValue,\r\n          // pass undefined as the old value when it's changed for the first time\r\n          oldValue === INITIAL_WATCHER_VALUE ? undefined : oldValue,\r\n          onInvalidate\r\n        ])\r\n        oldValue = newValue\r\n      }\r\n    } else {\r\n      // watchEffect\r\n      effect.run()\r\n    }\r\n  }\r\n\r\n  // important: mark the job as a watcher callback so that scheduler knows\r\n  // it is allowed to self-trigger (#1727)\r\n  job.allowRecurse = !!cb\r\n\r\n  let scheduler: EffectScheduler\r\n  if (flush === 'sync') {\r\n    scheduler = job as any // the scheduler function gets called directly\r\n  } else if (flush === 'post') {\r\n    scheduler = () => queuePostRenderEffect(job, instance && instance.suspense)\r\n  } else {\r\n    // default: 'pre'\r\n    scheduler = () => {\r\n      if (!instance || instance.isMounted) {\r\n        queuePreFlushCb(job)\r\n      } else {\r\n        // with 'pre' option, the first call must happen before\r\n        // the component is mounted so it is called synchronously.\r\n        job()\r\n      }\r\n    }\r\n  }\r\n\r\n  const effect = new ReactiveEffect(getter, scheduler)\r\n\r\n  if (__DEV__) {\r\n    effect.onTrack = onTrack\r\n    effect.onTrigger = onTrigger\r\n  }\r\n\r\n  // initial run\r\n  if (cb) {\r\n    if (immediate) {\r\n      job()\r\n    } else {\r\n      oldValue = effect.run()\r\n    }\r\n  } else if (flush === 'post') {\r\n    queuePostRenderEffect(\r\n      effect.run.bind(effect),\r\n      instance && instance.suspense\r\n    )\r\n  } else {\r\n    effect.run()\r\n  }\r\n\r\n  return () => {\r\n    effect.stop()\r\n    if (instance && instance.scope) {\r\n      remove(instance.scope.effects!, effect)\r\n    }\r\n  }\r\n}\r\n\r\n// this.$watch\r\nexport function instanceWatch(\r\n  this: ComponentInternalInstance,\r\n  source: string | Function,\r\n  value: WatchCallback | ObjectWatchOptionItem,\r\n  options?: WatchOptions\r\n): WatchStopHandle {\r\n  const publicThis = this.proxy as any\r\n  const getter = isString(source)\r\n    ? source.includes('.')\r\n      ? createPathGetter(publicThis, source)\r\n      : () => publicThis[source]\r\n    : source.bind(publicThis, publicThis)\r\n  let cb\r\n  if (isFunction(value)) {\r\n    cb = value\r\n  } else {\r\n    cb = value.handler as Function\r\n    options = value\r\n  }\r\n  const cur = currentInstance\r\n  setCurrentInstance(this)\r\n  const res = doWatch(getter, cb.bind(publicThis), options)\r\n  if (cur) {\r\n    setCurrentInstance(cur)\r\n  } else {\r\n    unsetCurrentInstance()\r\n  }\r\n  return res\r\n}\r\n\r\nexport function createPathGetter(ctx: any, path: string) {\r\n  const segments = path.split('.')\r\n  return () => {\r\n    let cur = ctx\r\n    for (let i = 0; i < segments.length && cur; i++) {\r\n      cur = cur[segments[i]]\r\n    }\r\n    return cur\r\n  }\r\n}\r\n\r\nexport function traverse(value: unknown, seen: Set<unknown> = new Set()) {\r\n  if (!isObject(value) || (value as any)[ReactiveFlags.SKIP]) {\r\n    return value\r\n  }\r\n  seen = seen || new Set()\r\n  if (seen.has(value)) {\r\n    return value\r\n  }\r\n  seen.add(value)\r\n  if (isRef(value)) {\r\n    traverse(value.value, seen)\r\n  } else if (isArray(value)) {\r\n    for (let i = 0; i < value.length; i++) {\r\n      traverse(value[i], seen)\r\n    }\r\n  } else if (isSet(value) || isMap(value)) {\r\n    value.forEach((v: any) => {\r\n      traverse(v, seen)\r\n    })\r\n  } else if (isPlainObject(value)) {\r\n    for (const key in value) {\r\n      traverse((value as any)[key], seen)\r\n    }\r\n  }\r\n  return value\r\n}\r\n","import { isPromise } from '../../shared/src'\r\nimport {\r\n  getCurrentInstance,\r\n  setCurrentInstance,\r\n  SetupContext,\r\n  createSetupContext,\r\n  unsetCurrentInstance\r\n} from './component'\r\nimport { EmitFn, EmitsOptions } from './componentEmits'\r\nimport {\r\n  ComponentObjectPropsOptions,\r\n  PropOptions,\r\n  ExtractPropTypes\r\n} from './componentProps'\r\nimport { warn } from './warning'\r\n\r\n// dev only\r\nconst warnRuntimeUsage = (method: string) =>\r\n  warn(\r\n    `${method}() is a compiler-hint helper that is only usable inside ` +\r\n      `<script setup> of a single file component. Its arguments should be ` +\r\n      `compiled away and passing it at runtime has no effect.`\r\n  )\r\n\r\n/**\r\n * Vue `<script setup>` compiler macro for declaring component props. The\r\n * expected argument is the same as the component `props` option.\r\n *\r\n * Example runtime declaration:\r\n * ```js\r\n * // using Array syntax\r\n * const props = defineProps(['foo', 'bar'])\r\n * // using Object syntax\r\n * const props = defineProps({\r\n *   foo: String,\r\n *   bar: {\r\n *     type: Number,\r\n *     required: true\r\n *   }\r\n * })\r\n * ```\r\n *\r\n * Equivalent type-based decalration:\r\n * ```ts\r\n * // will be compiled into equivalent runtime declarations\r\n * const props = defineProps<{\r\n *   foo?: string\r\n *   bar: number\r\n * }>()\r\n * ```\r\n *\r\n * This is only usable inside `<script setup>`, is compiled away in the\r\n * output and should **not** be actually called at runtime.\r\n */\r\n// overload 1: runtime props w/ array\r\nexport function defineProps<PropNames extends string = string>(\r\n  props: PropNames[]\r\n): Readonly<{ [key in PropNames]?: any }>\r\n// overload 2: runtime props w/ object\r\nexport function defineProps<\r\n  PP extends ComponentObjectPropsOptions = ComponentObjectPropsOptions\r\n>(props: PP): Readonly<ExtractPropTypes<PP>>\r\n// overload 3: typed-based declaration\r\nexport function defineProps<TypeProps>(): Readonly<TypeProps>\r\n// implementation\r\nexport function defineProps() {\r\n  if (__DEV__) {\r\n    warnRuntimeUsage(`defineProps`)\r\n  }\r\n  return null as any\r\n}\r\n\r\n/**\r\n * Vue `<script setup>` compiler macro for declaring a component's emitted\r\n * events. The expected argument is the same as the component `emits` option.\r\n *\r\n * Example runtime declaration:\r\n * ```js\r\n * const emit = defineEmits(['change', 'update'])\r\n * ```\r\n *\r\n * Example type-based decalration:\r\n * ```ts\r\n * const emit = defineEmits<{\r\n *   (event: 'change'): void\r\n *   (event: 'update', id: number): void\r\n * }>()\r\n *\r\n * emit('change')\r\n * emit('update', 1)\r\n * ```\r\n *\r\n * This is only usable inside `<script setup>`, is compiled away in the\r\n * output and should **not** be actually called at runtime.\r\n */\r\n// overload 1: runtime emits w/ array\r\nexport function defineEmits<EE extends string = string>(\r\n  emitOptions: EE[]\r\n): EmitFn<EE[]>\r\nexport function defineEmits<E extends EmitsOptions = EmitsOptions>(\r\n  emitOptions: E\r\n): EmitFn<E>\r\nexport function defineEmits<TypeEmit>(): TypeEmit\r\n// implementation\r\nexport function defineEmits() {\r\n  if (__DEV__) {\r\n    warnRuntimeUsage(`defineEmits`)\r\n  }\r\n  return null as any\r\n}\r\n\r\n/**\r\n * Vue `<script setup>` compiler macro for declaring a component's exposed\r\n * instance properties when it is accessed by a parent component via template\r\n * refs.\r\n *\r\n * `<script setup>` components are closed by default - i.e. varaibles inside\r\n * the `<script setup>` scope is not exposed to parent unless explicitly exposed\r\n * via `defineExpose`.\r\n *\r\n * This is only usable inside `<script setup>`, is compiled away in the\r\n * output and should **not** be actually called at runtime.\r\n */\r\nexport function defineExpose(exposed?: Record<string, any>) {\r\n  if (__DEV__) {\r\n    warnRuntimeUsage(`defineExpose`)\r\n  }\r\n}\r\n\r\ntype NotUndefined<T> = T extends undefined ? never : T\r\n\r\ntype InferDefaults<T> = {\r\n  [K in keyof T]?: NotUndefined<T[K]> extends\r\n    | number\r\n    | string\r\n    | boolean\r\n    | symbol\r\n    | Function\r\n    ? NotUndefined<T[K]>\r\n    : (props: T) => NotUndefined<T[K]>\r\n}\r\n\r\ntype PropsWithDefaults<Base, Defaults> = Base &\r\n  {\r\n    [K in keyof Defaults]: K extends keyof Base ? NotUndefined<Base[K]> : never\r\n  }\r\n\r\n/**\r\n * Vue `<script setup>` compiler macro for providing props default values when\r\n * using type-based `defineProps` decalration.\r\n *\r\n * Example usage:\r\n * ```ts\r\n * withDefaults(defineProps<{\r\n *   size?: number\r\n *   labels?: string[]\r\n * }>(), {\r\n *   size: 3,\r\n *   labels: () => ['default label']\r\n * })\r\n * ```\r\n *\r\n * This is only usable inside `<script setup>`, is compiled away in the output\r\n * and should **not** be actually called at runtime.\r\n */\r\nexport function withDefaults<Props, Defaults extends InferDefaults<Props>>(\r\n  props: Props,\r\n  defaults: Defaults\r\n): PropsWithDefaults<Props, Defaults> {\r\n  if (__DEV__) {\r\n    warnRuntimeUsage(`withDefaults`)\r\n  }\r\n  return null as any\r\n}\r\n\r\nexport function useSlots(): SetupContext['slots'] {\r\n  return getContext().slots\r\n}\r\n\r\nexport function useAttrs(): SetupContext['attrs'] {\r\n  return getContext().attrs\r\n}\r\n\r\nfunction getContext(): SetupContext {\r\n  const i = getCurrentInstance()!\r\n  if (__DEV__ && !i) {\r\n    warn(`useContext() called without active instance.`)\r\n  }\r\n  return i.setupContext || (i.setupContext = createSetupContext(i))\r\n}\r\n\r\n/**\r\n * Runtime helper for merging default declarations. Imported by compiled code\r\n * only.\r\n * @internal\r\n */\r\nexport function mergeDefaults(\r\n  // the base props is compiler-generated and guaranteed to be in this shape.\r\n  props: Record<string, PropOptions | null>,\r\n  defaults: Record<string, any>\r\n) {\r\n  for (const key in defaults) {\r\n    const val = props[key]\r\n    if (val) {\r\n      val.default = defaults[key]\r\n    } else if (val === null) {\r\n      props[key] = { default: defaults[key] }\r\n    } else if (__DEV__) {\r\n      warn(`props default key \"${key}\" has no corresponding declaration.`)\r\n    }\r\n  }\r\n  return props\r\n}\r\n\r\n/**\r\n * `<script setup>` helper for persisting the current instance context over\r\n * async/await flows.\r\n *\r\n * `@vue/compiler-sfc` converts the following:\r\n *\r\n * ```ts\r\n * const x = await foo()\r\n * ```\r\n *\r\n * into:\r\n *\r\n * ```ts\r\n * let __temp, __restore\r\n * const x = (([__temp, __restore] = withAsyncContext(() => foo())),__temp=await __temp,__restore(),__temp)\r\n * ```\r\n * @internal\r\n */\r\nexport function withAsyncContext(getAwaitable: () => any) {\r\n  const ctx = getCurrentInstance()!\r\n  if (__DEV__ && !ctx) {\r\n    warn(\r\n      `withAsyncContext called without active current instance. ` +\r\n        `This is likely a bug.`\r\n    )\r\n  }\r\n  let awaitable = getAwaitable()\r\n  unsetCurrentInstance()\r\n  if (isPromise(awaitable)) {\r\n    awaitable = awaitable.catch(e => {\r\n      setCurrentInstance(ctx)\r\n      throw e\r\n    })\r\n  }\r\n  return [awaitable, () => setCurrentInstance(ctx)]\r\n}\r\n","import {\r\n  VNode,\r\n  VNodeProps,\r\n  createVNode,\r\n  VNodeArrayChildren,\r\n  Fragment,\r\n  Text,\r\n  Comment,\r\n  isVNode\r\n} from './vnode'\r\nimport { Teleport, TeleportProps } from './components/Teleport'\r\nimport { Suspense, SuspenseProps } from './components/Suspense'\r\nimport { isObject, isArray } from '@vue/shared'\r\nimport { RawSlots } from './componentSlots'\r\nimport {\r\n  FunctionalComponent,\r\n  Component,\r\n  ComponentOptions,\r\n  ConcreteComponent\r\n} from './component'\r\nimport { EmitsOptions } from './componentEmits'\r\nimport { DefineComponent } from './apiDefineComponent'\r\n\r\n// `h` is a more user-friendly version of `createVNode` that allows omitting the\r\n// props when possible. It is intended for manually written render functions.\r\n// Compiler-generated code uses `createVNode` because\r\n// 1. it is monomorphic and avoids the extra call overhead\r\n// 2. it allows specifying patchFlags for optimization\r\n\r\n/*\r\n// type only\r\nh('div')\r\n\r\n// type + props\r\nh('div', {})\r\n\r\n// type + omit props + children\r\n// Omit props does NOT support named slots\r\nh('div', []) // array\r\nh('div', 'foo') // text\r\nh('div', h('br')) // vnode\r\nh(Component, () => {}) // default slot\r\n\r\n// type + props + children\r\nh('div', {}, []) // array\r\nh('div', {}, 'foo') // text\r\nh('div', {}, h('br')) // vnode\r\nh(Component, {}, () => {}) // default slot\r\nh(Component, {}, {}) // named slots\r\n\r\n// named slots without props requires explicit `null` to avoid ambiguity\r\nh(Component, null, {})\r\n**/\r\n\r\ntype RawProps = VNodeProps & {\r\n  // used to differ from a single VNode object as children\r\n  __v_isVNode?: never\r\n  // used to differ from Array children\r\n  [Symbol.iterator]?: never\r\n} & Record<string, any>\r\n\r\ntype RawChildren =\r\n  | string\r\n  | number\r\n  | boolean\r\n  | VNode\r\n  | VNodeArrayChildren\r\n  | (() => any)\r\n\r\n// fake constructor type returned from `defineComponent`\r\ninterface Constructor<P = any> {\r\n  __isFragment?: never\r\n  __isTeleport?: never\r\n  __isSuspense?: never\r\n  new (...args: any[]): { $props: P }\r\n}\r\n\r\n// The following is a series of overloads for providing props validation of\r\n// manually written render functions.\r\n\r\n// element\r\nexport function h(type: string, children?: RawChildren): VNode\r\nexport function h(\r\n  type: string,\r\n  props?: RawProps | null,\r\n  children?: RawChildren | RawSlots\r\n): VNode\r\n\r\n// text/comment\r\nexport function h(\r\n  type: typeof Text | typeof Comment,\r\n  children?: string | number | boolean\r\n): VNode\r\nexport function h(\r\n  type: typeof Text | typeof Comment,\r\n  props?: null,\r\n  children?: string | number | boolean\r\n): VNode\r\n// fragment\r\nexport function h(type: typeof Fragment, children?: VNodeArrayChildren): VNode\r\nexport function h(\r\n  type: typeof Fragment,\r\n  props?: RawProps | null,\r\n  children?: VNodeArrayChildren\r\n): VNode\r\n\r\n// teleport (target prop is required)\r\nexport function h(\r\n  type: typeof Teleport,\r\n  props: RawProps & TeleportProps,\r\n  children: RawChildren\r\n): VNode\r\n\r\n// suspense\r\nexport function h(type: typeof Suspense, children?: RawChildren): VNode\r\nexport function h(\r\n  type: typeof Suspense,\r\n  props?: (RawProps & SuspenseProps) | null,\r\n  children?: RawChildren | RawSlots\r\n): VNode\r\n\r\n// functional component\r\nexport function h<P, E extends EmitsOptions = {}>(\r\n  type: FunctionalComponent<P, E>,\r\n  props?: (RawProps & P) | ({} extends P ? null : never),\r\n  children?: RawChildren | RawSlots\r\n): VNode\r\n\r\n// catch-all for generic component types\r\nexport function h(type: Component, children?: RawChildren): VNode\r\n\r\n// concrete component\r\nexport function h<P>(\r\n  type: ConcreteComponent | string,\r\n  children?: RawChildren\r\n): VNode\r\nexport function h<P>(\r\n  type: ConcreteComponent<P> | string,\r\n  props?: (RawProps & P) | ({} extends P ? null : never),\r\n  children?: RawChildren\r\n): VNode\r\n\r\n// component without props\r\nexport function h(\r\n  type: Component,\r\n  props: null,\r\n  children?: RawChildren | RawSlots\r\n): VNode\r\n\r\n// exclude `defineComponent` constructors\r\nexport function h<P>(\r\n  type: ComponentOptions<P>,\r\n  props?: (RawProps & P) | ({} extends P ? null : never),\r\n  children?: RawChildren | RawSlots\r\n): VNode\r\n\r\n// fake constructor type returned by `defineComponent` or class component\r\nexport function h(type: Constructor, children?: RawChildren): VNode\r\nexport function h<P>(\r\n  type: Constructor<P>,\r\n  props?: (RawProps & P) | ({} extends P ? null : never),\r\n  children?: RawChildren | RawSlots\r\n): VNode\r\n\r\n// fake constructor type returned by `defineComponent`\r\nexport function h(type: DefineComponent, children?: RawChildren): VNode\r\nexport function h<P>(\r\n  type: DefineComponent<P>,\r\n  props?: (RawProps & P) | ({} extends P ? null : never),\r\n  children?: RawChildren | RawSlots\r\n): VNode\r\n\r\n// Actual implementation\r\nexport function h(type: any, propsOrChildren?: any, children?: any): VNode {\r\n  const l = arguments.length\r\n  if (l === 2) {\r\n    if (isObject(propsOrChildren) && !isArray(propsOrChildren)) {\r\n      // single vnode without props\r\n      if (isVNode(propsOrChildren)) {\r\n        return createVNode(type, null, [propsOrChildren])\r\n      }\r\n      // props without children\r\n      return createVNode(type, propsOrChildren)\r\n    } else {\r\n      // omit props\r\n      return createVNode(type, null, propsOrChildren)\r\n    }\r\n  } else {\r\n    if (l > 3) {\r\n      children = Array.prototype.slice.call(arguments, 2)\r\n    } else if (l === 3 && isVNode(children)) {\r\n      children = [children]\r\n    }\r\n    return createVNode(type, propsOrChildren, children)\r\n  }\r\n}\r\n","import { inject } from '../apiInject'\r\nimport { warn } from '../warning'\r\n\r\nexport const ssrContextKey = Symbol(__DEV__ ? `ssrContext` : ``)\r\n\r\nexport const useSSRContext = <T = Record<string, any>>() => {\r\n  if (!__GLOBAL__) {\r\n    const ctx = inject<T>(ssrContextKey)\r\n    if (!ctx) {\r\n      warn(\r\n        `Server rendering context not provided. Make sure to only call ` +\r\n          `useSSRContext() conditionally in the server build.`\r\n      )\r\n    }\r\n    return ctx\r\n  } else if (__DEV__) {\r\n    warn(`useSSRContext() is not supported in the global build.`)\r\n  }\r\n}\r\n","import { currentBlock, isBlockTreeEnabled, VNode } from '../vnode'\r\n\r\nexport function withMemo(\r\n  memo: any[],\r\n  render: () => VNode<any, any>,\r\n  cache: any[],\r\n  index: number\r\n) {\r\n  const cached = cache[index] as VNode | undefined\r\n  if (cached && isMemoSame(cached, memo)) {\r\n    return cached\r\n  }\r\n  const ret = render()\r\n\r\n  // shallow clone\r\n  ret.memo = memo.slice()\r\n  return (cache[index] = ret)\r\n}\r\n\r\nexport function isMemoSame(cached: VNode, memo: any[]) {\r\n  const prev: any[] = cached.memo!\r\n  if (prev.length != memo.length) {\r\n    return false\r\n  }\r\n  for (let i = 0; i < prev.length; i++) {\r\n    if (prev[i] !== memo[i]) {\r\n      return false\r\n    }\r\n  }\r\n\r\n  // make sure to let parent block track it when returning cached\r\n  if (isBlockTreeEnabled > 0 && currentBlock) {\r\n    currentBlock.push(cached)\r\n  }\r\n  return true\r\n}\r\n","// Core API ------------------------------------------------------------------\r\n\r\nexport const version = __VERSION__\r\nexport {\r\n  // core\r\n  computed,\r\n  reactive,\r\n  ref,\r\n  readonly,\r\n  // utilities\r\n  unref,\r\n  proxyRefs,\r\n  isRef,\r\n  toRef,\r\n  toRefs,\r\n  isProxy,\r\n  isReactive,\r\n  isReadonly,\r\n  // advanced\r\n  customRef,\r\n  triggerRef,\r\n  shallowRef,\r\n  shallowReactive,\r\n  shallowReadonly,\r\n  markRaw,\r\n  toRaw,\r\n  // effect\r\n  effect,\r\n  stop,\r\n  ReactiveEffect,\r\n  // effect scope\r\n  effectScope,\r\n  EffectScope,\r\n  getCurrentScope,\r\n  onScopeDispose\r\n} from '@vue/reactivity'\r\nexport {\r\n  watch,\r\n  watchEffect,\r\n  watchPostEffect,\r\n  watchSyncEffect\r\n} from './apiWatch'\r\nexport {\r\n  onBeforeMount,\r\n  onMounted,\r\n  onBeforeUpdate,\r\n  onUpdated,\r\n  onBeforeUnmount,\r\n  onUnmounted,\r\n  onActivated,\r\n  onDeactivated,\r\n  onRenderTracked,\r\n  onRenderTriggered,\r\n  onErrorCaptured,\r\n  onServerPrefetch\r\n} from './apiLifecycle'\r\nexport { provide, inject } from './apiInject'\r\nexport { nextTick } from './scheduler'\r\nexport { defineComponent } from './apiDefineComponent'\r\nexport { defineAsyncComponent } from './apiAsyncComponent'\r\nexport { useAttrs, useSlots } from './apiSetupHelpers'\r\n\r\n// <script setup> API ----------------------------------------------------------\r\n\r\nexport {\r\n  // macros runtime, for typing and warnings only\r\n  defineProps,\r\n  defineEmits,\r\n  defineExpose,\r\n  withDefaults,\r\n  // internal\r\n  mergeDefaults,\r\n  withAsyncContext\r\n} from './apiSetupHelpers'\r\n\r\n// Advanced API ----------------------------------------------------------------\r\n\r\n// For getting a hold of the internal instance in setup() - useful for advanced\r\n// plugins\r\nexport { getCurrentInstance } from './component'\r\n\r\n// For raw render function users\r\nexport { h } from './h'\r\n// Advanced render function utilities\r\nexport { createVNode, cloneVNode, mergeProps, isVNode } from './vnode'\r\n// VNode types\r\nexport { Fragment, Text, Comment, Static } from './vnode'\r\n// Built-in components\r\nexport { Teleport, TeleportProps } from './components/Teleport'\r\nexport { Suspense, SuspenseProps } from './components/Suspense'\r\nexport { KeepAlive, KeepAliveProps } from './components/KeepAlive'\r\nexport {\r\n  BaseTransition,\r\n  BaseTransitionProps\r\n} from './components/BaseTransition'\r\n// For using custom directives\r\nexport { withDirectives } from './directives'\r\n// SSR context\r\nexport { useSSRContext, ssrContextKey } from './helpers/useSsrContext'\r\n\r\n// Custom Renderer API ---------------------------------------------------------\r\n\r\nexport { createRenderer, createHydrationRenderer } from './renderer'\r\nexport { queuePostFlushCb } from './scheduler'\r\nexport { warn } from './warning'\r\nexport {\r\n  handleError,\r\n  callWithErrorHandling,\r\n  callWithAsyncErrorHandling,\r\n  ErrorCodes\r\n} from './errorHandling'\r\nexport {\r\n  resolveComponent,\r\n  resolveDirective,\r\n  resolveDynamicComponent\r\n} from './helpers/resolveAssets'\r\n// For integration with runtime compiler\r\nexport { registerRuntimeCompiler, isRuntimeOnly } from './component'\r\nexport {\r\n  useTransitionState,\r\n  resolveTransitionHooks,\r\n  setTransitionHooks,\r\n  getTransitionRawChildren\r\n} from './components/BaseTransition'\r\nexport { initCustomFormatter } from './customFormatter'\r\n\r\n// For devtools\r\nexport { devtools, setDevtoolsHook } from './devtools'\r\n\r\n// Types -------------------------------------------------------------------------\r\n\r\nimport { VNode } from './vnode'\r\nimport { ComponentInternalInstance } from './component'\r\n\r\n// Augment Ref unwrap bail types.\r\n// Note: if updating this, also update `types/refBail.d.ts`.\r\ndeclare module '@vue/reactivity' {\r\n  export interface RefUnwrapBailTypes {\r\n    runtimeCoreBailTypes:\r\n      | VNode\r\n      | {\r\n          // directly bailing on ComponentPublicInstance results in recursion\r\n          // so we use this as a bail hint\r\n          $: ComponentInternalInstance\r\n        }\r\n  }\r\n}\r\n\r\nexport {\r\n  ReactiveEffectOptions,\r\n  DebuggerEvent,\r\n  TrackOpTypes,\r\n  TriggerOpTypes,\r\n  Ref,\r\n  ComputedRef,\r\n  WritableComputedRef,\r\n  UnwrapRef,\r\n  ShallowUnwrapRef,\r\n  WritableComputedOptions,\r\n  ToRefs,\r\n  DeepReadonly\r\n} from '@vue/reactivity'\r\nexport {\r\n  WatchEffect,\r\n  WatchOptions,\r\n  WatchOptionsBase,\r\n  WatchCallback,\r\n  WatchSource,\r\n  WatchStopHandle\r\n} from './apiWatch'\r\nexport { InjectionKey } from './apiInject'\r\nexport {\r\n  App,\r\n  AppConfig,\r\n  AppContext,\r\n  Plugin,\r\n  CreateAppFunction,\r\n  OptionMergeFunction\r\n} from './apiCreateApp'\r\nexport {\r\n  VNode,\r\n  VNodeChild,\r\n  VNodeTypes,\r\n  VNodeProps,\r\n  VNodeArrayChildren,\r\n  VNodeNormalizedChildren\r\n} from './vnode'\r\nexport {\r\n  Component,\r\n  ConcreteComponent,\r\n  FunctionalComponent,\r\n  ComponentInternalInstance,\r\n  SetupContext,\r\n  ComponentCustomProps,\r\n  AllowedComponentProps\r\n} from './component'\r\nexport { DefineComponent } from './apiDefineComponent'\r\nexport {\r\n  ComponentOptions,\r\n  ComponentOptionsMixin,\r\n  ComponentOptionsWithoutProps,\r\n  ComponentOptionsWithObjectProps,\r\n  ComponentOptionsWithArrayProps,\r\n  ComponentCustomOptions,\r\n  ComponentOptionsBase,\r\n  RenderFunction,\r\n  MethodOptions,\r\n  ComputedOptions,\r\n  RuntimeCompilerOptions\r\n} from './componentOptions'\r\nexport { EmitsOptions, ObjectEmitsOptions } from './componentEmits'\r\nexport {\r\n  ComponentPublicInstance,\r\n  ComponentCustomProperties,\r\n  CreateComponentPublicInstance\r\n} from './componentPublicInstance'\r\nexport {\r\n  Renderer,\r\n  RendererNode,\r\n  RendererElement,\r\n  HydrationRenderer,\r\n  RendererOptions,\r\n  RootRenderFunction\r\n} from './renderer'\r\nexport { RootHydrateFunction } from './hydration'\r\nexport { Slot, Slots } from './componentSlots'\r\nexport {\r\n  Prop,\r\n  PropType,\r\n  ComponentPropsOptions,\r\n  ComponentObjectPropsOptions,\r\n  ExtractPropTypes,\r\n  ExtractDefaultPropTypes\r\n} from './componentProps'\r\nexport {\r\n  Directive,\r\n  DirectiveBinding,\r\n  DirectiveHook,\r\n  ObjectDirective,\r\n  FunctionDirective,\r\n  DirectiveArguments\r\n} from './directives'\r\nexport { SuspenseBoundary } from './components/Suspense'\r\nexport { TransitionState, TransitionHooks } from './components/BaseTransition'\r\nexport {\r\n  AsyncComponentOptions,\r\n  AsyncComponentLoader\r\n} from './apiAsyncComponent'\r\nexport { HMRRuntime } from './hmr'\r\n\r\n// Internal API ----------------------------------------------------------------\r\n\r\n// **IMPORTANT** Internal APIs may change without notice between versions and\r\n// user code should avoid relying on them.\r\n\r\n// For compiler generated code\r\n// should sync with '@vue/compiler-core/src/runtimeHelpers.ts'\r\nexport {\r\n  withCtx,\r\n  pushScopeId,\r\n  popScopeId,\r\n  withScopeId\r\n} from './componentRenderContext'\r\nexport { renderList } from './helpers/renderList'\r\nexport { toHandlers } from './helpers/toHandlers'\r\nexport { renderSlot } from './helpers/renderSlot'\r\nexport { createSlots } from './helpers/createSlots'\r\nexport { withMemo, isMemoSame } from './helpers/withMemo'\r\nexport {\r\n  openBlock,\r\n  createBlock,\r\n  setBlockTracking,\r\n  createTextVNode,\r\n  createCommentVNode,\r\n  createStaticVNode,\r\n  createElementVNode,\r\n  createElementBlock,\r\n  guardReactiveProps\r\n} from './vnode'\r\nexport {\r\n  toDisplayString,\r\n  camelize,\r\n  capitalize,\r\n  toHandlerKey,\r\n  normalizeProps,\r\n  normalizeClass,\r\n  normalizeStyle\r\n} from '@vue/shared'\r\n\r\n// For test-utils\r\nexport { transformVNodeArgs } from './vnode'\r\n\r\n// SSR -------------------------------------------------------------------------\r\n\r\n// **IMPORTANT** These APIs are exposed solely for @vue/server-renderer and may\r\n// change without notice between versions. User code should never rely on them.\r\n\r\nimport { createComponentInstance, setupComponent } from './component'\r\nimport { renderComponentRoot } from './componentRenderUtils'\r\nimport { setCurrentRenderingInstance } from './componentRenderContext'\r\nimport { isVNode, normalizeVNode } from './vnode'\r\n\r\nconst _ssrUtils = {\r\n  createComponentInstance,\r\n  setupComponent,\r\n  renderComponentRoot,\r\n  setCurrentRenderingInstance,\r\n  isVNode,\r\n  normalizeVNode\r\n}\r\n\r\n/**\r\n * SSR utils for \\@vue/server-renderer. Only exposed in cjs builds.\r\n * @internal\r\n */\r\nexport const ssrUtils = (\r\n  __NODE_JS__ || __ESM_BUNDLER__ ? _ssrUtils : null\r\n) as typeof _ssrUtils\r\n\r\n// 2.x COMPAT ------------------------------------------------------------------\r\n\r\nexport { DeprecationTypes } from './compat/compatConfig'\r\nexport { CompatVue } from './compat/global'\r\nexport { LegacyConfig } from './compat/globalConfig'\r\n\r\nimport { warnDeprecation } from './compat/compatConfig'\r\nimport { createCompatVue } from './compat/global'\r\nimport {\r\n  isCompatEnabled,\r\n  checkCompatEnabled,\r\n  softAssertCompatEnabled\r\n} from './compat/compatConfig'\r\nimport { resolveFilter as _resolveFilter } from './helpers/resolveAssets'\r\n\r\n/**\r\n * @internal only exposed in compat builds\r\n */\r\nexport const resolveFilter = __COMPAT__ ? _resolveFilter : null\r\n\r\nconst _compatUtils = {\r\n  warnDeprecation,\r\n  createCompatVue,\r\n  isCompatEnabled,\r\n  checkCompatEnabled,\r\n  softAssertCompatEnabled\r\n}\r\n\r\n/**\r\n * @internal only exposed in compat builds.\r\n */\r\nexport const compatUtils = (\r\n  __COMPAT__ ? _compatUtils : null\r\n) as typeof _compatUtils\r\n\r\n// Ref sugar macros ------------------------------------------------------------\r\n// for dts generation only\r\nexport { $ref, $computed, $raw, $fromRefs } from './helpers/refSugar'\r\n","import { RendererOptions } from '@vue/runtime-core'\r\n\r\nexport const svgNS = 'http://www.w3.org/2000/svg'\r\n\r\nconst doc = (typeof document !== 'undefined' ? document : null) as Document\r\n\r\nconst staticTemplateCache = new Map<string, DocumentFragment>()\r\n\r\nexport const nodeOps: Omit<RendererOptions<Node, Element>, 'patchProp'> = {\r\n  insert: (child, parent, anchor) => {\r\n    parent.insertBefore(child, anchor || null)\r\n  },\r\n\r\n  remove: child => {\r\n    const parent = child.parentNode\r\n    if (parent) {\r\n      parent.removeChild(child)\r\n    }\r\n  },\r\n\r\n  createElement: (tag, isSVG, is, props): Element => {\r\n    const el = isSVG\r\n      ? doc.createElementNS(svgNS, tag)\r\n      : doc.createElement(tag, is ? { is } : undefined)\r\n\r\n    if (tag === 'select' && props && props.multiple != null) {\r\n      ;(el as HTMLSelectElement).setAttribute('multiple', props.multiple)\r\n    }\r\n\r\n    return el\r\n  },\r\n\r\n  createText: text => doc.createTextNode(text),\r\n\r\n  createComment: text => doc.createComment(text),\r\n\r\n  setText: (node, text) => {\r\n    node.nodeValue = text\r\n  },\r\n\r\n  setElementText: (el, text) => {\r\n    el.textContent = text\r\n  },\r\n\r\n  parentNode: node => node.parentNode as Element | null,\r\n\r\n  nextSibling: node => node.nextSibling,\r\n\r\n  querySelector: selector => doc.querySelector(selector),\r\n\r\n  setScopeId(el, id) {\r\n    el.setAttribute(id, '')\r\n  },\r\n\r\n  cloneNode(el) {\r\n    const cloned = el.cloneNode(true)\r\n    // #3072\r\n    // - in `patchDOMProp`, we store the actual value in the `el._value` property.\r\n    // - normally, elements using `:value` bindings will not be hoisted, but if\r\n    //   the bound value is a constant, e.g. `:value=\"true\"` - they do get\r\n    //   hoisted.\r\n    // - in production, hoisted nodes are cloned when subsequent inserts, but\r\n    //   cloneNode() does not copy the custom property we attached.\r\n    // - This may need to account for other custom DOM properties we attach to\r\n    //   elements in addition to `_value` in the future.\r\n    if (`_value` in el) {\r\n      ;(cloned as any)._value = (el as any)._value\r\n    }\r\n    return cloned\r\n  },\r\n\r\n  // __UNSAFE__\r\n  // Reason: innerHTML.\r\n  // Static content here can only come from compiled templates.\r\n  // As long as the user only uses trusted templates, this is safe.\r\n  insertStaticContent(content, parent, anchor, isSVG) {\r\n    // <parent> before | first ... last | anchor </parent>\r\n    const before = anchor ? anchor.previousSibling : parent.lastChild\r\n    let template = staticTemplateCache.get(content)\r\n    if (!template) {\r\n      const t = doc.createElement('template')\r\n      t.innerHTML = isSVG ? `<svg>${content}</svg>` : content\r\n      template = t.content\r\n      if (isSVG) {\r\n        // remove outer svg wrapper\r\n        const wrapper = template.firstChild!\r\n        while (wrapper.firstChild) {\r\n          template.appendChild(wrapper.firstChild)\r\n        }\r\n        template.removeChild(wrapper)\r\n      }\r\n      staticTemplateCache.set(content, template)\r\n    }\r\n    parent.insertBefore(template.cloneNode(true), anchor)\r\n    return [\r\n      // first\r\n      before ? before.nextSibling! : parent.firstChild!,\r\n      // last\r\n      anchor ? anchor.previousSibling! : parent.lastChild!\r\n    ]\r\n  }\r\n}\r\n","import { isString, hyphenate, capitalize, isArray } from '@vue/shared'\r\nimport { camelize } from '@vue/runtime-core'\r\n\r\ntype Style = string | Record<string, string | string[]> | null\r\n\r\nexport function patchStyle(el: Element, prev: Style, next: Style) {\r\n  const style = (el as HTMLElement).style\r\n  if (!next) {\r\n    el.removeAttribute('style')\r\n  } else if (isString(next)) {\r\n    if (prev !== next) {\r\n      const current = style.display\r\n      style.cssText = next\r\n      // indicates that the `display` of the element is controlled by `v-show`,\r\n      // so we always keep the current `display` value regardless of the `style` value,\r\n      // thus handing over control to `v-show`.\r\n      if ('_vod' in el) {\r\n        style.display = current\r\n      }\r\n    }\r\n  } else {\r\n    for (const key in next) {\r\n      setStyle(style, key, next[key])\r\n    }\r\n    if (prev && !isString(prev)) {\r\n      for (const key in prev) {\r\n        if (next[key] == null) {\r\n          setStyle(style, key, '')\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nconst importantRE = /\\s*!important$/\r\n\r\nfunction setStyle(\r\n  style: CSSStyleDeclaration,\r\n  name: string,\r\n  val: string | string[]\r\n) {\r\n  if (isArray(val)) {\r\n    val.forEach(v => setStyle(style, name, v))\r\n  } else {\r\n    if (name.startsWith('--')) {\r\n      // custom property definition\r\n      style.setProperty(name, val)\r\n    } else {\r\n      const prefixed = autoPrefix(style, name)\r\n      if (importantRE.test(val)) {\r\n        // !important\r\n        style.setProperty(\r\n          hyphenate(prefixed),\r\n          val.replace(importantRE, ''),\r\n          'important'\r\n        )\r\n      } else {\r\n        style[prefixed as any] = val\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nconst prefixes = ['Webkit', 'Moz', 'ms']\r\nconst prefixCache: Record<string, string> = {}\r\n\r\nfunction autoPrefix(style: CSSStyleDeclaration, rawName: string): string {\r\n  const cached = prefixCache[rawName]\r\n  if (cached) {\r\n    return cached\r\n  }\r\n  let name = camelize(rawName)\r\n  if (name !== 'filter' && name in style) {\r\n    return (prefixCache[rawName] = name)\r\n  }\r\n  name = capitalize(name)\r\n  for (let i = 0; i < prefixes.length; i++) {\r\n    const prefixed = prefixes[i] + name\r\n    if (prefixed in style) {\r\n      return (prefixCache[rawName] = prefixed)\r\n    }\r\n  }\r\n  return rawName\r\n}\r\n","import { isSpecialBooleanAttr, makeMap, NOOP } from '@vue/shared'\r\nimport {\r\n  compatUtils,\r\n  ComponentInternalInstance,\r\n  DeprecationTypes\r\n} from '@vue/runtime-core'\r\n\r\nexport const xlinkNS = 'http://www.w3.org/1999/xlink'\r\n\r\nexport function patchAttr(\r\n  el: Element,\r\n  key: string,\r\n  value: any,\r\n  isSVG: boolean,\r\n  instance?: ComponentInternalInstance | null\r\n) {\r\n  if (isSVG && key.startsWith('xlink:')) {\r\n    if (value == null) {\r\n      el.removeAttributeNS(xlinkNS, key.slice(6, key.length))\r\n    } else {\r\n      el.setAttributeNS(xlinkNS, key, value)\r\n    }\r\n  } else {\r\n    if (__COMPAT__ && compatCoerceAttr(el, key, value, instance)) {\r\n      return\r\n    }\r\n\r\n    // note we are only checking boolean attributes that don't have a\r\n    // corresponding dom prop of the same name here.\r\n    const isBoolean = isSpecialBooleanAttr(key)\r\n    if (value == null || (isBoolean && value === false)) {\r\n      el.removeAttribute(key)\r\n    } else {\r\n      el.setAttribute(key, isBoolean ? '' : value)\r\n    }\r\n  }\r\n}\r\n\r\n// 2.x compat\r\nconst isEnumeratedAttr = __COMPAT__\r\n  ? /*#__PURE__*/ makeMap('contenteditable,draggable,spellcheck')\r\n  : NOOP\r\n\r\nexport function compatCoerceAttr(\r\n  el: Element,\r\n  key: string,\r\n  value: unknown,\r\n  instance: ComponentInternalInstance | null = null\r\n): boolean {\r\n  if (isEnumeratedAttr(key)) {\r\n    const v2CocercedValue =\r\n      value === null\r\n        ? 'false'\r\n        : typeof value !== 'boolean' && value !== undefined\r\n        ? 'true'\r\n        : null\r\n    if (\r\n      v2CocercedValue &&\r\n      compatUtils.softAssertCompatEnabled(\r\n        DeprecationTypes.ATTR_ENUMERATED_COERCION,\r\n        instance,\r\n        key,\r\n        value,\r\n        v2CocercedValue\r\n      )\r\n    ) {\r\n      el.setAttribute(key, v2CocercedValue)\r\n      return true\r\n    }\r\n  } else if (\r\n    value === false &&\r\n    !isSpecialBooleanAttr(key) &&\r\n    compatUtils.softAssertCompatEnabled(\r\n      DeprecationTypes.ATTR_FALSE_VALUE,\r\n      instance,\r\n      key\r\n    )\r\n  ) {\r\n    el.removeAttribute(key)\r\n    return true\r\n  }\r\n  return false\r\n}\r\n","import { hyphenate, isArray } from '@vue/shared'\r\nimport {\r\n  ComponentInternalInstance,\r\n  callWithAsyncErrorHandling\r\n} from '@vue/runtime-core'\r\nimport { ErrorCodes } from 'packages/runtime-core/src/errorHandling'\r\n\r\ninterface Invoker extends EventListener {\r\n  value: EventValue\r\n  attached: number\r\n}\r\n\r\ntype EventValue = Function | Function[]\r\n\r\n// Async edge case fix requires storing an event listener's attach timestamp.\r\nlet _getNow: () => number = Date.now\r\n\r\nlet skipTimestampCheck = false\r\n\r\nif (typeof window !== 'undefined') {\r\n  // Determine what event timestamp the browser is using. Annoyingly, the\r\n  // timestamp can either be hi-res (relative to page load) or low-res\r\n  // (relative to UNIX epoch), so in order to compare time we have to use the\r\n  // same timestamp type when saving the flush timestamp.\r\n  if (_getNow() > document.createEvent('Event').timeStamp) {\r\n    // if the low-res timestamp which is bigger than the event timestamp\r\n    // (which is evaluated AFTER) it means the event is using a hi-res timestamp,\r\n    // and we need to use the hi-res version for event listeners as well.\r\n    _getNow = () => performance.now()\r\n  }\r\n  // #3485: Firefox <= 53 has incorrect Event.timeStamp implementation\r\n  // and does not fire microtasks in between event propagation, so safe to exclude.\r\n  const ffMatch = navigator.userAgent.match(/firefox\\/(\\d+)/i)\r\n  skipTimestampCheck = !!(ffMatch && Number(ffMatch[1]) <= 53)\r\n}\r\n\r\n// To avoid the overhead of repeatedly calling performance.now(), we cache\r\n// and use the same timestamp for all event listeners attached in the same tick.\r\nlet cachedNow: number = 0\r\nconst p = Promise.resolve()\r\nconst reset = () => {\r\n  cachedNow = 0\r\n}\r\nconst getNow = () => cachedNow || (p.then(reset), (cachedNow = _getNow()))\r\n\r\nexport function addEventListener(\r\n  el: Element,\r\n  event: string,\r\n  handler: EventListener,\r\n  options?: EventListenerOptions\r\n) {\r\n  el.addEventListener(event, handler, options)\r\n}\r\n\r\nexport function removeEventListener(\r\n  el: Element,\r\n  event: string,\r\n  handler: EventListener,\r\n  options?: EventListenerOptions\r\n) {\r\n  el.removeEventListener(event, handler, options)\r\n}\r\n\r\nexport function patchEvent(\r\n  el: Element & { _vei?: Record<string, Invoker | undefined> },\r\n  rawName: string,\r\n  prevValue: EventValue | null,\r\n  nextValue: EventValue | null,\r\n  instance: ComponentInternalInstance | null = null\r\n) {\r\n  // vei = vue event invokers\r\n  const invokers = el._vei || (el._vei = {})\r\n  const existingInvoker = invokers[rawName]\r\n  if (nextValue && existingInvoker) {\r\n    // patch\r\n    existingInvoker.value = nextValue\r\n  } else {\r\n    const [name, options] = parseName(rawName)\r\n    if (nextValue) {\r\n      // add\r\n      const invoker = (invokers[rawName] = createInvoker(nextValue, instance))\r\n      addEventListener(el, name, invoker, options)\r\n    } else if (existingInvoker) {\r\n      // remove\r\n      removeEventListener(el, name, existingInvoker, options)\r\n      invokers[rawName] = undefined\r\n    }\r\n  }\r\n}\r\n\r\nconst optionsModifierRE = /(?:Once|Passive|Capture)$/\r\n\r\nfunction parseName(name: string): [string, EventListenerOptions | undefined] {\r\n  let options: EventListenerOptions | undefined\r\n  if (optionsModifierRE.test(name)) {\r\n    options = {}\r\n    let m\r\n    while ((m = name.match(optionsModifierRE))) {\r\n      name = name.slice(0, name.length - m[0].length)\r\n      ;(options as any)[m[0].toLowerCase()] = true\r\n      options\r\n    }\r\n  }\r\n  return [hyphenate(name.slice(2)), options]\r\n}\r\n\r\nfunction createInvoker(\r\n  initialValue: EventValue,\r\n  instance: ComponentInternalInstance | null\r\n) {\r\n  const invoker: Invoker = (e: Event) => {\r\n    // async edge case #6566: inner click event triggers patch, event handler\r\n    // attached to outer element during patch, and triggered again. This\r\n    // happens because browsers fire microtask ticks between event propagation.\r\n    // the solution is simple: we save the timestamp when a handler is attached,\r\n    // and the handler would only fire if the event passed to it was fired\r\n    // AFTER it was attached.\r\n    const timeStamp = e.timeStamp || _getNow()\r\n\r\n    if (skipTimestampCheck || timeStamp >= invoker.attached - 1) {\r\n      callWithAsyncErrorHandling(\r\n        patchStopImmediatePropagation(e, invoker.value),\r\n        instance,\r\n        ErrorCodes.NATIVE_EVENT_HANDLER,\r\n        [e]\r\n      )\r\n    }\r\n  }\r\n  invoker.value = initialValue\r\n  invoker.attached = getNow()\r\n  return invoker\r\n}\r\n\r\nfunction patchStopImmediatePropagation(\r\n  e: Event,\r\n  value: EventValue\r\n): EventValue {\r\n  if (isArray(value)) {\r\n    const originalStop = e.stopImmediatePropagation\r\n    e.stopImmediatePropagation = () => {\r\n      originalStop.call(e)\r\n      ;(e as any)._stopped = true\r\n    }\r\n    return value.map(fn => (e: Event) => !(e as any)._stopped && fn(e))\r\n  } else {\r\n    return value\r\n  }\r\n}\r\n","import { patchClass } from './modules/class'\r\nimport { patchStyle } from './modules/style'\r\nimport { patchAttr } from './modules/attrs'\r\nimport { patchDOMProp } from './modules/props'\r\nimport { patchEvent } from './modules/events'\r\nimport { isOn, isString, isFunction, isModelListener } from '@vue/shared'\r\nimport { RendererOptions } from '@vue/runtime-core'\r\n\r\nconst nativeOnRE = /^on[a-z]/\r\n\r\ntype DOMRendererOptions = RendererOptions<Node, Element>\r\n\r\nexport const patchProp: DOMRendererOptions['patchProp'] = (\r\n  el,\r\n  key,\r\n  prevValue,\r\n  nextValue,\r\n  isSVG = false,\r\n  prevChildren,\r\n  parentComponent,\r\n  parentSuspense,\r\n  unmountChildren\r\n) => {\r\n  if (key === 'class') {\r\n    patchClass(el, nextValue, isSVG)\r\n  } else if (key === 'style') {\r\n    patchStyle(el, prevValue, nextValue)\r\n  } else if (isOn(key)) {\r\n    // ignore v-model listeners\r\n    if (!isModelListener(key)) {\r\n      patchEvent(el, key, prevValue, nextValue, parentComponent)\r\n    }\r\n  } else if (\r\n    key[0] === '.'\r\n      ? ((key = key.slice(1)), true)\r\n      : key[0] === '^'\r\n      ? ((key = key.slice(1)), false)\r\n      : shouldSetAsProp(el, key, nextValue, isSVG)\r\n  ) {\r\n    patchDOMProp(\r\n      el,\r\n      key,\r\n      nextValue,\r\n      prevChildren,\r\n      parentComponent,\r\n      parentSuspense,\r\n      unmountChildren\r\n    )\r\n  } else {\r\n    // special case for <input v-model type=\"checkbox\"> with\r\n    // :true-value & :false-value\r\n    // store value as dom properties since non-string values will be\r\n    // stringified.\r\n    if (key === 'true-value') {\r\n      ;(el as any)._trueValue = nextValue\r\n    } else if (key === 'false-value') {\r\n      ;(el as any)._falseValue = nextValue\r\n    }\r\n    patchAttr(el, key, nextValue, isSVG, parentComponent)\r\n  }\r\n}\r\n\r\nfunction shouldSetAsProp(\r\n  el: Element,\r\n  key: string,\r\n  value: unknown,\r\n  isSVG: boolean\r\n) {\r\n  if (isSVG) {\r\n    // most keys must be set as attribute on svg elements to work\r\n    // ...except innerHTML\r\n    if (key === 'innerHTML') {\r\n      return true\r\n    }\r\n    // or native onclick with function values\r\n    if (key in el && nativeOnRE.test(key) && isFunction(value)) {\r\n      return true\r\n    }\r\n    return false\r\n  }\r\n\r\n  // spellcheck and draggable are numerated attrs, however their\r\n  // corresponding DOM properties are actually booleans - this leads to\r\n  // setting it with a string \"false\" value leading it to be coerced to\r\n  // `true`, so we need to always treat them as attributes.\r\n  // Note that `contentEditable` doesn't have this problem: its DOM\r\n  // property is also enumerated string values.\r\n  if (key === 'spellcheck' || key === 'draggable') {\r\n    return false\r\n  }\r\n\r\n  // #1787, #2840 form property on form elements is readonly and must be set as\r\n  // attribute.\r\n  if (key === 'form') {\r\n    return false\r\n  }\r\n\r\n  // #1526 <input list> must be set as attribute\r\n  if (key === 'list' && el.tagName === 'INPUT') {\r\n    return false\r\n  }\r\n\r\n  // #2766 <textarea type> must be set as attribute\r\n  if (key === 'type' && el.tagName === 'TEXTAREA') {\r\n    return false\r\n  }\r\n\r\n  // native onclick with string value, must be set as attribute\r\n  if (nativeOnRE.test(key) && isString(value)) {\r\n    return false\r\n  }\r\n\r\n  return key in el\r\n}\r\n","import {\r\n  ComponentOptionsMixin,\r\n  ComponentOptionsWithArrayProps,\r\n  ComponentOptionsWithObjectProps,\r\n  ComponentOptionsWithoutProps,\r\n  ComponentPropsOptions,\r\n  ComponentPublicInstance,\r\n  ComputedOptions,\r\n  EmitsOptions,\r\n  MethodOptions,\r\n  RenderFunction,\r\n  SetupContext,\r\n  ComponentInternalInstance,\r\n  VNode,\r\n  RootHydrateFunction,\r\n  ExtractPropTypes,\r\n  createVNode,\r\n  defineComponent,\r\n  nextTick,\r\n  warn,\r\n  ConcreteComponent,\r\n  ComponentOptions\r\n} from '@vue/runtime-core'\r\nimport { camelize, extend, hyphenate, isArray, toNumber } from '@vue/shared'\r\nimport { hydrate, render } from '.'\r\n\r\nexport type VueElementConstructor<P = {}> = {\r\n  new (initialProps?: Record<string, any>): VueElement & P\r\n}\r\n\r\n// defineCustomElement provides the same type inference as defineComponent\r\n// so most of the following overloads should be kept in sync w/ defineComponent.\r\n\r\n// overload 1: direct setup function\r\nexport function defineCustomElement<Props, RawBindings = object>(\r\n  setup: (\r\n    props: Readonly<Props>,\r\n    ctx: SetupContext\r\n  ) => RawBindings | RenderFunction\r\n): VueElementConstructor<Props>\r\n\r\n// overload 2: object format with no props\r\nexport function defineCustomElement<\r\n  Props = {},\r\n  RawBindings = {},\r\n  D = {},\r\n  C extends ComputedOptions = {},\r\n  M extends MethodOptions = {},\r\n  Mixin extends ComponentOptionsMixin = ComponentOptionsMixin,\r\n  Extends extends ComponentOptionsMixin = ComponentOptionsMixin,\r\n  E extends EmitsOptions = EmitsOptions,\r\n  EE extends string = string\r\n>(\r\n  options: ComponentOptionsWithoutProps<\r\n    Props,\r\n    RawBindings,\r\n    D,\r\n    C,\r\n    M,\r\n    Mixin,\r\n    Extends,\r\n    E,\r\n    EE\r\n  > & { styles?: string[] }\r\n): VueElementConstructor<Props>\r\n\r\n// overload 3: object format with array props declaration\r\nexport function defineCustomElement<\r\n  PropNames extends string,\r\n  RawBindings,\r\n  D,\r\n  C extends ComputedOptions = {},\r\n  M extends MethodOptions = {},\r\n  Mixin extends ComponentOptionsMixin = ComponentOptionsMixin,\r\n  Extends extends ComponentOptionsMixin = ComponentOptionsMixin,\r\n  E extends EmitsOptions = Record<string, any>,\r\n  EE extends string = string\r\n>(\r\n  options: ComponentOptionsWithArrayProps<\r\n    PropNames,\r\n    RawBindings,\r\n    D,\r\n    C,\r\n    M,\r\n    Mixin,\r\n    Extends,\r\n    E,\r\n    EE\r\n  > & { styles?: string[] }\r\n): VueElementConstructor<{ [K in PropNames]: any }>\r\n\r\n// overload 4: object format with object props declaration\r\nexport function defineCustomElement<\r\n  PropsOptions extends Readonly<ComponentPropsOptions>,\r\n  RawBindings,\r\n  D,\r\n  C extends ComputedOptions = {},\r\n  M extends MethodOptions = {},\r\n  Mixin extends ComponentOptionsMixin = ComponentOptionsMixin,\r\n  Extends extends ComponentOptionsMixin = ComponentOptionsMixin,\r\n  E extends EmitsOptions = Record<string, any>,\r\n  EE extends string = string\r\n>(\r\n  options: ComponentOptionsWithObjectProps<\r\n    PropsOptions,\r\n    RawBindings,\r\n    D,\r\n    C,\r\n    M,\r\n    Mixin,\r\n    Extends,\r\n    E,\r\n    EE\r\n  > & { styles?: string[] }\r\n): VueElementConstructor<ExtractPropTypes<PropsOptions>>\r\n\r\n// overload 5: defining a custom element from the returned value of\r\n// `defineComponent`\r\nexport function defineCustomElement(options: {\r\n  new (...args: any[]): ComponentPublicInstance\r\n}): VueElementConstructor\r\n\r\nexport function defineCustomElement(\r\n  options: any,\r\n  hydate?: RootHydrateFunction\r\n): VueElementConstructor {\r\n  const Comp = defineComponent(options as any)\r\n  class VueCustomElement extends VueElement {\r\n    static def = Comp\r\n    constructor(initialProps?: Record<string, any>) {\r\n      super(Comp, initialProps, hydate)\r\n    }\r\n  }\r\n\r\n  return VueCustomElement\r\n}\r\n\r\nexport const defineSSRCustomElement = ((options: any) => {\r\n  // @ts-ignore\r\n  return defineCustomElement(options, hydrate)\r\n}) as typeof defineCustomElement\r\n\r\nconst BaseClass = (\r\n  typeof HTMLElement !== 'undefined' ? HTMLElement : class {}\r\n) as typeof HTMLElement\r\n\r\ntype InnerComponentDef = ConcreteComponent & { styles?: string[] }\r\n\r\nexport class VueElement extends BaseClass {\r\n  /**\r\n   * @internal\r\n   */\r\n  _instance: ComponentInternalInstance | null = null\r\n\r\n  private _connected = false\r\n  private _resolved = false\r\n  private _styles?: HTMLStyleElement[]\r\n\r\n  constructor(\r\n    private _def: InnerComponentDef,\r\n    private _props: Record<string, any> = {},\r\n    hydrate?: RootHydrateFunction\r\n  ) {\r\n    super()\r\n    if (this.shadowRoot && hydrate) {\r\n      hydrate(this._createVNode(), this.shadowRoot)\r\n    } else {\r\n      if (__DEV__ && this.shadowRoot) {\r\n        warn(\r\n          `Custom element has pre-rendered declarative shadow root but is not ` +\r\n            `defined as hydratable. Use \\`defineSSRCustomElement\\`.`\r\n        )\r\n      }\r\n      this.attachShadow({ mode: 'open' })\r\n    }\r\n\r\n    // set initial attrs\r\n    for (let i = 0; i < this.attributes.length; i++) {\r\n      this._setAttr(this.attributes[i].name)\r\n    }\r\n    // watch future attr changes\r\n    const observer = new MutationObserver(mutations => {\r\n      for (const m of mutations) {\r\n        this._setAttr(m.attributeName!)\r\n      }\r\n    })\r\n    observer.observe(this, { attributes: true })\r\n  }\r\n\r\n  connectedCallback() {\r\n    this._connected = true\r\n    if (!this._instance) {\r\n      this._resolveDef()\r\n      render(this._createVNode(), this.shadowRoot!)\r\n    }\r\n  }\r\n\r\n  disconnectedCallback() {\r\n    this._connected = false\r\n    nextTick(() => {\r\n      if (!this._connected) {\r\n        render(null, this.shadowRoot!)\r\n        this._instance = null\r\n      }\r\n    })\r\n  }\r\n\r\n  /**\r\n   * resolve inner component definition (handle possible async component)\r\n   */\r\n  private _resolveDef() {\r\n    if (this._resolved) {\r\n      return\r\n    }\r\n\r\n    const resolve = (def: InnerComponentDef) => {\r\n      this._resolved = true\r\n      // check if there are props set pre-upgrade or connect\r\n      for (const key of Object.keys(this)) {\r\n        if (key[0] !== '_') {\r\n          this._setProp(key, this[key as keyof this])\r\n        }\r\n      }\r\n      const { props, styles } = def\r\n      // defining getter/setters on prototype\r\n      const rawKeys = props ? (isArray(props) ? props : Object.keys(props)) : []\r\n      for (const key of rawKeys.map(camelize)) {\r\n        Object.defineProperty(this, key, {\r\n          get() {\r\n            return this._getProp(key)\r\n          },\r\n          set(val) {\r\n            this._setProp(key, val)\r\n          }\r\n        })\r\n      }\r\n      this._applyStyles(styles)\r\n    }\r\n\r\n    const asyncDef = (this._def as ComponentOptions).__asyncLoader\r\n    if (asyncDef) {\r\n      asyncDef().then(resolve)\r\n    } else {\r\n      resolve(this._def)\r\n    }\r\n  }\r\n\r\n  protected _setAttr(key: string) {\r\n    this._setProp(camelize(key), toNumber(this.getAttribute(key)), false)\r\n  }\r\n\r\n  /**\r\n   * @internal\r\n   */\r\n  protected _getProp(key: string) {\r\n    return this._props[key]\r\n  }\r\n\r\n  /**\r\n   * @internal\r\n   */\r\n  protected _setProp(key: string, val: any, shouldReflect = true) {\r\n    if (val !== this._props[key]) {\r\n      this._props[key] = val\r\n      if (this._instance) {\r\n        render(this._createVNode(), this.shadowRoot!)\r\n      }\r\n      // reflect\r\n      if (shouldReflect) {\r\n        if (val === true) {\r\n          this.setAttribute(hyphenate(key), '')\r\n        } else if (typeof val === 'string' || typeof val === 'number') {\r\n          this.setAttribute(hyphenate(key), val + '')\r\n        } else if (!val) {\r\n          this.removeAttribute(hyphenate(key))\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  private _createVNode(): VNode<any, any> {\r\n    const vnode = createVNode(this._def, extend({}, this._props))\r\n    if (!this._instance) {\r\n      vnode.ce = instance => {\r\n        this._instance = instance\r\n        instance.isCE = true\r\n        // HMR\r\n        if (__DEV__) {\r\n          instance.ceReload = newStyles => {\r\n            // alawys reset styles\r\n            if (this._styles) {\r\n              this._styles.forEach(s => this.shadowRoot!.removeChild(s))\r\n              this._styles.length = 0\r\n            }\r\n            this._applyStyles(newStyles)\r\n            // if this is an async component, ceReload is called from the inner\r\n            // component so no need to reload the async wrapper\r\n            if (!(this._def as ComponentOptions).__asyncLoader) {\r\n              // reload\r\n              this._instance = null\r\n              render(this._createVNode(), this.shadowRoot!)\r\n            }\r\n          }\r\n        }\r\n\r\n        // intercept emit\r\n        instance.emit = (event: string, ...args: any[]) => {\r\n          this.dispatchEvent(\r\n            new CustomEvent(event, {\r\n              detail: args\r\n            })\r\n          )\r\n        }\r\n\r\n        // locate nearest Vue custom element parent for provide/inject\r\n        let parent: Node | null = this\r\n        while (\r\n          (parent =\r\n            parent && (parent.parentNode || (parent as ShadowRoot).host))\r\n        ) {\r\n          if (parent instanceof VueElement) {\r\n            instance.parent = parent._instance\r\n            break\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return vnode\r\n  }\r\n\r\n  private _applyStyles(styles: string[] | undefined) {\r\n    if (styles) {\r\n      styles.forEach(css => {\r\n        const s = document.createElement('style')\r\n        s.textContent = css\r\n        this.shadowRoot!.appendChild(s)\r\n        // record for HMR\r\n        if (__DEV__) {\r\n          ;(this._styles || (this._styles = [])).push(s)\r\n        }\r\n      })\r\n    }\r\n  }\r\n}\r\n","import {\r\n  getCurrentInstance,\r\n  warn,\r\n  VNode,\r\n  Fragment,\r\n  Static,\r\n  watchPostEffect,\r\n  onMounted,\r\n  onUnmounted\r\n} from '@vue/runtime-core'\r\nimport { ShapeFlags } from '@vue/shared'\r\n\r\n/**\r\n * Runtime helper for SFC's CSS variable injection feature.\r\n * @private\r\n */\r\nexport function useCssVars(getter: (ctx: any) => Record<string, string>) {\r\n  if (!__BROWSER__ && !__TEST__) return\r\n\r\n  const instance = getCurrentInstance()\r\n  /* istanbul ignore next */\r\n  if (!instance) {\r\n    __DEV__ &&\r\n      warn(`useCssVars is called without current active component instance.`)\r\n    return\r\n  }\r\n\r\n  const setVars = () =>\r\n    setVarsOnVNode(instance.subTree, getter(instance.proxy!))\r\n  watchPostEffect(setVars)\r\n  onMounted(() => {\r\n    const ob = new MutationObserver(setVars)\r\n    ob.observe(instance.subTree.el!.parentNode, { childList: true })\r\n    onUnmounted(() => ob.disconnect())\r\n  })\r\n}\r\n\r\nfunction setVarsOnVNode(vnode: VNode, vars: Record<string, string>) {\r\n  if (__FEATURE_SUSPENSE__ && vnode.shapeFlag & ShapeFlags.SUSPENSE) {\r\n    const suspense = vnode.suspense!\r\n    vnode = suspense.activeBranch!\r\n    if (suspense.pendingBranch && !suspense.isHydrating) {\r\n      suspense.effects.push(() => {\r\n        setVarsOnVNode(suspense.activeBranch!, vars)\r\n      })\r\n    }\r\n  }\r\n\r\n  // drill down HOCs until it's a non-component vnode\r\n  while (vnode.component) {\r\n    vnode = vnode.component.subTree\r\n  }\r\n\r\n  if (vnode.shapeFlag & ShapeFlags.ELEMENT && vnode.el) {\r\n    setVarsOnNode(vnode.el as Node, vars)\r\n  } else if (vnode.type === Fragment) {\r\n    ;(vnode.children as VNode[]).forEach(c => setVarsOnVNode(c, vars))\r\n  } else if (vnode.type === Static) {\r\n    let { el, anchor } = vnode\r\n    while (el) {\r\n      setVarsOnNode(el as Node, vars)\r\n      if (el === anchor) break\r\n      el = el.nextSibling\r\n    }\r\n  }\r\n}\r\n\r\nfunction setVarsOnNode(el: Node, vars: Record<string, string>) {\r\n  if (el.nodeType === 1) {\r\n    const style = (el as HTMLElement).style\r\n    for (const key in vars) {\r\n      style.setProperty(`--${key}`, vars[key])\r\n    }\r\n  }\r\n}\r\n","import {\r\n  BaseTransition,\r\n  BaseTransitionProps,\r\n  h,\r\n  warn,\r\n  FunctionalComponent,\r\n  compatUtils,\r\n  DeprecationTypes\r\n} from '@vue/runtime-core'\r\nimport { isObject, toNumber, extend, isArray } from '@vue/shared'\r\n\r\nconst TRANSITION = 'transition'\r\nconst ANIMATION = 'animation'\r\n\r\nexport interface TransitionProps extends BaseTransitionProps<Element> {\r\n  name?: string\r\n  type?: typeof TRANSITION | typeof ANIMATION\r\n  css?: boolean\r\n  duration?: number | { enter: number; leave: number }\r\n  // custom transition classes\r\n  enterFromClass?: string\r\n  enterActiveClass?: string\r\n  enterToClass?: string\r\n  appearFromClass?: string\r\n  appearActiveClass?: string\r\n  appearToClass?: string\r\n  leaveFromClass?: string\r\n  leaveActiveClass?: string\r\n  leaveToClass?: string\r\n}\r\n\r\nexport interface ElementWithTransition extends HTMLElement {\r\n  // _vtc = Vue Transition Classes.\r\n  // Store the temporarily-added transition classes on the element\r\n  // so that we can avoid overwriting them if the element's class is patched\r\n  // during the transition.\r\n  _vtc?: Set<string>\r\n}\r\n\r\n// DOM Transition is a higher-order-component based on the platform-agnostic\r\n// base Transition component, with DOM-specific logic.\r\nexport const Transition: FunctionalComponent<TransitionProps> = (\r\n  props,\r\n  { slots }\r\n) => h(BaseTransition, resolveTransitionProps(props), slots)\r\n\r\nTransition.displayName = 'Transition'\r\n\r\nif (__COMPAT__) {\r\n  Transition.__isBuiltIn = true\r\n}\r\n\r\nconst DOMTransitionPropsValidators = {\r\n  name: String,\r\n  type: String,\r\n  css: {\r\n    type: Boolean,\r\n    default: true\r\n  },\r\n  duration: [String, Number, Object],\r\n  enterFromClass: String,\r\n  enterActiveClass: String,\r\n  enterToClass: String,\r\n  appearFromClass: String,\r\n  appearActiveClass: String,\r\n  appearToClass: String,\r\n  leaveFromClass: String,\r\n  leaveActiveClass: String,\r\n  leaveToClass: String\r\n}\r\n\r\nexport const TransitionPropsValidators = (Transition.props =\r\n  /*#__PURE__*/ extend(\r\n    {},\r\n    (BaseTransition as any).props,\r\n    DOMTransitionPropsValidators\r\n  ))\r\n\r\n/**\r\n * #3227 Incoming hooks may be merged into arrays when wrapping Transition\r\n * with custom HOCs.\r\n */\r\nconst callHook = (\r\n  hook: Function | Function[] | undefined,\r\n  args: any[] = []\r\n) => {\r\n  if (isArray(hook)) {\r\n    hook.forEach(h => h(...args))\r\n  } else if (hook) {\r\n    hook(...args)\r\n  }\r\n}\r\n\r\n/**\r\n * Check if a hook expects a callback (2nd arg), which means the user\r\n * intends to explicitly control the end of the transition.\r\n */\r\nconst hasExplicitCallback = (\r\n  hook: Function | Function[] | undefined\r\n): boolean => {\r\n  return hook\r\n    ? isArray(hook)\r\n      ? hook.some(h => h.length > 1)\r\n      : hook.length > 1\r\n    : false\r\n}\r\n\r\nexport function resolveTransitionProps(\r\n  rawProps: TransitionProps\r\n): BaseTransitionProps<Element> {\r\n  const baseProps: BaseTransitionProps<Element> = {}\r\n  for (const key in rawProps) {\r\n    if (!(key in DOMTransitionPropsValidators)) {\r\n      ;(baseProps as any)[key] = (rawProps as any)[key]\r\n    }\r\n  }\r\n\r\n  if (rawProps.css === false) {\r\n    return baseProps\r\n  }\r\n\r\n  const {\r\n    name = 'v',\r\n    type,\r\n    duration,\r\n    enterFromClass = `${name}-enter-from`,\r\n    enterActiveClass = `${name}-enter-active`,\r\n    enterToClass = `${name}-enter-to`,\r\n    appearFromClass = enterFromClass,\r\n    appearActiveClass = enterActiveClass,\r\n    appearToClass = enterToClass,\r\n    leaveFromClass = `${name}-leave-from`,\r\n    leaveActiveClass = `${name}-leave-active`,\r\n    leaveToClass = `${name}-leave-to`\r\n  } = rawProps\r\n\r\n  // legacy transition class compat\r\n  const legacyClassEnabled =\r\n    __COMPAT__ &&\r\n    compatUtils.isCompatEnabled(DeprecationTypes.TRANSITION_CLASSES, null)\r\n  let legacyEnterFromClass: string\r\n  let legacyAppearFromClass: string\r\n  let legacyLeaveFromClass: string\r\n  if (__COMPAT__ && legacyClassEnabled) {\r\n    const toLegacyClass = (cls: string) => cls.replace(/-from$/, '')\r\n    if (!rawProps.enterFromClass) {\r\n      legacyEnterFromClass = toLegacyClass(enterFromClass)\r\n    }\r\n    if (!rawProps.appearFromClass) {\r\n      legacyAppearFromClass = toLegacyClass(appearFromClass)\r\n    }\r\n    if (!rawProps.leaveFromClass) {\r\n      legacyLeaveFromClass = toLegacyClass(leaveFromClass)\r\n    }\r\n  }\r\n\r\n  const durations = normalizeDuration(duration)\r\n  const enterDuration = durations && durations[0]\r\n  const leaveDuration = durations && durations[1]\r\n  const {\r\n    onBeforeEnter,\r\n    onEnter,\r\n    onEnterCancelled,\r\n    onLeave,\r\n    onLeaveCancelled,\r\n    onBeforeAppear = onBeforeEnter,\r\n    onAppear = onEnter,\r\n    onAppearCancelled = onEnterCancelled\r\n  } = baseProps\r\n\r\n  const finishEnter = (el: Element, isAppear: boolean, done?: () => void) => {\r\n    removeTransitionClass(el, isAppear ? appearToClass : enterToClass)\r\n    removeTransitionClass(el, isAppear ? appearActiveClass : enterActiveClass)\r\n    done && done()\r\n  }\r\n\r\n  const finishLeave = (el: Element, done?: () => void) => {\r\n    removeTransitionClass(el, leaveToClass)\r\n    removeTransitionClass(el, leaveActiveClass)\r\n    done && done()\r\n  }\r\n\r\n  const makeEnterHook = (isAppear: boolean) => {\r\n    return (el: Element, done: () => void) => {\r\n      const hook = isAppear ? onAppear : onEnter\r\n      const resolve = () => finishEnter(el, isAppear, done)\r\n      callHook(hook, [el, resolve])\r\n      nextFrame(() => {\r\n        removeTransitionClass(el, isAppear ? appearFromClass : enterFromClass)\r\n        if (__COMPAT__ && legacyClassEnabled) {\r\n          removeTransitionClass(\r\n            el,\r\n            isAppear ? legacyAppearFromClass : legacyEnterFromClass\r\n          )\r\n        }\r\n        addTransitionClass(el, isAppear ? appearToClass : enterToClass)\r\n        if (!hasExplicitCallback(hook)) {\r\n          whenTransitionEnds(el, type, enterDuration, resolve)\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n  return extend(baseProps, {\r\n    onBeforeEnter(el) {\r\n      callHook(onBeforeEnter, [el])\r\n      addTransitionClass(el, enterFromClass)\r\n      if (__COMPAT__ && legacyClassEnabled) {\r\n        addTransitionClass(el, legacyEnterFromClass)\r\n      }\r\n      addTransitionClass(el, enterActiveClass)\r\n    },\r\n    onBeforeAppear(el) {\r\n      callHook(onBeforeAppear, [el])\r\n      addTransitionClass(el, appearFromClass)\r\n      if (__COMPAT__ && legacyClassEnabled) {\r\n        addTransitionClass(el, legacyAppearFromClass)\r\n      }\r\n      addTransitionClass(el, appearActiveClass)\r\n    },\r\n    onEnter: makeEnterHook(false),\r\n    onAppear: makeEnterHook(true),\r\n    onLeave(el, done) {\r\n      const resolve = () => finishLeave(el, done)\r\n      addTransitionClass(el, leaveFromClass)\r\n      if (__COMPAT__ && legacyClassEnabled) {\r\n        addTransitionClass(el, legacyLeaveFromClass)\r\n      }\r\n      // force reflow so *-leave-from classes immediately take effect (#2593)\r\n      forceReflow()\r\n      addTransitionClass(el, leaveActiveClass)\r\n      nextFrame(() => {\r\n        removeTransitionClass(el, leaveFromClass)\r\n        if (__COMPAT__ && legacyClassEnabled) {\r\n          removeTransitionClass(el, legacyLeaveFromClass)\r\n        }\r\n        addTransitionClass(el, leaveToClass)\r\n        if (!hasExplicitCallback(onLeave)) {\r\n          whenTransitionEnds(el, type, leaveDuration, resolve)\r\n        }\r\n      })\r\n      callHook(onLeave, [el, resolve])\r\n    },\r\n    onEnterCancelled(el) {\r\n      finishEnter(el, false)\r\n      callHook(onEnterCancelled, [el])\r\n    },\r\n    onAppearCancelled(el) {\r\n      finishEnter(el, true)\r\n      callHook(onAppearCancelled, [el])\r\n    },\r\n    onLeaveCancelled(el) {\r\n      finishLeave(el)\r\n      callHook(onLeaveCancelled, [el])\r\n    }\r\n  } as BaseTransitionProps<Element>)\r\n}\r\n\r\nfunction normalizeDuration(\r\n  duration: TransitionProps['duration']\r\n): [number, number] | null {\r\n  if (duration == null) {\r\n    return null\r\n  } else if (isObject(duration)) {\r\n    return [NumberOf(duration.enter), NumberOf(duration.leave)]\r\n  } else {\r\n    const n = NumberOf(duration)\r\n    return [n, n]\r\n  }\r\n}\r\n\r\nfunction NumberOf(val: unknown): number {\r\n  const res = toNumber(val)\r\n  if (__DEV__) validateDuration(res)\r\n  return res\r\n}\r\n\r\nfunction validateDuration(val: unknown) {\r\n  if (typeof val !== 'number') {\r\n    warn(\r\n      `<transition> explicit duration is not a valid number - ` +\r\n        `got ${JSON.stringify(val)}.`\r\n    )\r\n  } else if (isNaN(val)) {\r\n    warn(\r\n      `<transition> explicit duration is NaN - ` +\r\n        'the duration expression might be incorrect.'\r\n    )\r\n  }\r\n}\r\n\r\nexport function addTransitionClass(el: Element, cls: string) {\r\n  cls.split(/\\s+/).forEach(c => c && el.classList.add(c))\r\n  ;(\r\n    (el as ElementWithTransition)._vtc ||\r\n    ((el as ElementWithTransition)._vtc = new Set())\r\n  ).add(cls)\r\n}\r\n\r\nexport function removeTransitionClass(el: Element, cls: string) {\r\n  cls.split(/\\s+/).forEach(c => c && el.classList.remove(c))\r\n  const { _vtc } = el as ElementWithTransition\r\n  if (_vtc) {\r\n    _vtc.delete(cls)\r\n    if (!_vtc!.size) {\r\n      ;(el as ElementWithTransition)._vtc = undefined\r\n    }\r\n  }\r\n}\r\n\r\nfunction nextFrame(cb: () => void) {\r\n  requestAnimationFrame(() => {\r\n    requestAnimationFrame(cb)\r\n  })\r\n}\r\n\r\nlet endId = 0\r\n\r\nfunction whenTransitionEnds(\r\n  el: Element & { _endId?: number },\r\n  expectedType: TransitionProps['type'] | undefined,\r\n  explicitTimeout: number | null,\r\n  resolve: () => void\r\n) {\r\n  const id = (el._endId = ++endId)\r\n  const resolveIfNotStale = () => {\r\n    if (id === el._endId) {\r\n      resolve()\r\n    }\r\n  }\r\n\r\n  if (explicitTimeout) {\r\n    return setTimeout(resolveIfNotStale, explicitTimeout)\r\n  }\r\n\r\n  const { type, timeout, propCount } = getTransitionInfo(el, expectedType)\r\n  if (!type) {\r\n    return resolve()\r\n  }\r\n\r\n  const endEvent = type + 'end'\r\n  let ended = 0\r\n  const end = () => {\r\n    el.removeEventListener(endEvent, onEnd)\r\n    resolveIfNotStale()\r\n  }\r\n  const onEnd = (e: Event) => {\r\n    if (e.target === el && ++ended >= propCount) {\r\n      end()\r\n    }\r\n  }\r\n  setTimeout(() => {\r\n    if (ended < propCount) {\r\n      end()\r\n    }\r\n  }, timeout + 1)\r\n  el.addEventListener(endEvent, onEnd)\r\n}\r\n\r\ninterface CSSTransitionInfo {\r\n  type: typeof TRANSITION | typeof ANIMATION | null\r\n  propCount: number\r\n  timeout: number\r\n  hasTransform: boolean\r\n}\r\n\r\nexport function getTransitionInfo(\r\n  el: Element,\r\n  expectedType?: TransitionProps['type']\r\n): CSSTransitionInfo {\r\n  const styles: any = window.getComputedStyle(el)\r\n  // JSDOM may return undefined for transition properties\r\n  const getStyleProperties = (key: string) => (styles[key] || '').split(', ')\r\n  const transitionDelays = getStyleProperties(TRANSITION + 'Delay')\r\n  const transitionDurations = getStyleProperties(TRANSITION + 'Duration')\r\n  const transitionTimeout = getTimeout(transitionDelays, transitionDurations)\r\n  const animationDelays = getStyleProperties(ANIMATION + 'Delay')\r\n  const animationDurations = getStyleProperties(ANIMATION + 'Duration')\r\n  const animationTimeout = getTimeout(animationDelays, animationDurations)\r\n\r\n  let type: CSSTransitionInfo['type'] = null\r\n  let timeout = 0\r\n  let propCount = 0\r\n  /* istanbul ignore if */\r\n  if (expectedType === TRANSITION) {\r\n    if (transitionTimeout > 0) {\r\n      type = TRANSITION\r\n      timeout = transitionTimeout\r\n      propCount = transitionDurations.length\r\n    }\r\n  } else if (expectedType === ANIMATION) {\r\n    if (animationTimeout > 0) {\r\n      type = ANIMATION\r\n      timeout = animationTimeout\r\n      propCount = animationDurations.length\r\n    }\r\n  } else {\r\n    timeout = Math.max(transitionTimeout, animationTimeout)\r\n    type =\r\n      timeout > 0\r\n        ? transitionTimeout > animationTimeout\r\n          ? TRANSITION\r\n          : ANIMATION\r\n        : null\r\n    propCount = type\r\n      ? type === TRANSITION\r\n        ? transitionDurations.length\r\n        : animationDurations.length\r\n      : 0\r\n  }\r\n  const hasTransform =\r\n    type === TRANSITION &&\r\n    /\\b(transform|all)(,|$)/.test(styles[TRANSITION + 'Property'])\r\n  return {\r\n    type,\r\n    timeout,\r\n    propCount,\r\n    hasTransform\r\n  }\r\n}\r\n\r\nfunction getTimeout(delays: string[], durations: string[]): number {\r\n  while (delays.length < durations.length) {\r\n    delays = delays.concat(delays)\r\n  }\r\n  return Math.max(...durations.map((d, i) => toMs(d) + toMs(delays[i])))\r\n}\r\n\r\n// Old versions of Chromium (below 61.0.3163.100) formats floating pointer\r\n// numbers in a locale-dependent way, using a comma instead of a dot.\r\n// If comma is not replaced with a dot, the input will be rounded down\r\n// (i.e. acting as a floor function) causing unexpected behaviors\r\nfunction toMs(s: string): number {\r\n  return Number(s.slice(0, -1).replace(',', '.')) * 1000\r\n}\r\n\r\n// synchronously force layout to put elements into a certain state\r\nexport function forceReflow() {\r\n  return document.body.offsetHeight\r\n}\r\n","import {\r\n  TransitionProps,\r\n  addTransitionClass,\r\n  removeTransitionClass,\r\n  ElementWithTransition,\r\n  getTransitionInfo,\r\n  resolveTransitionProps,\r\n  TransitionPropsValidators,\r\n  forceReflow\r\n} from './Transition'\r\nimport {\r\n  Fragment,\r\n  VNode,\r\n  warn,\r\n  resolveTransitionHooks,\r\n  useTransitionState,\r\n  getTransitionRawChildren,\r\n  getCurrentInstance,\r\n  setTransitionHooks,\r\n  createVNode,\r\n  onUpdated,\r\n  SetupContext,\r\n  toRaw,\r\n  compatUtils,\r\n  DeprecationTypes,\r\n  ComponentOptions\r\n} from '@vue/runtime-core'\r\nimport { extend } from '@vue/shared'\r\n\r\ninterface Position {\r\n  top: number\r\n  left: number\r\n}\r\n\r\nconst positionMap = new WeakMap<VNode, Position>()\r\nconst newPositionMap = new WeakMap<VNode, Position>()\r\n\r\nexport type TransitionGroupProps = Omit<TransitionProps, 'mode'> & {\r\n  tag?: string\r\n  moveClass?: string\r\n}\r\n\r\nconst TransitionGroupImpl: ComponentOptions = {\r\n  name: 'TransitionGroup',\r\n\r\n  props: /*#__PURE__*/ extend({}, TransitionPropsValidators, {\r\n    tag: String,\r\n    moveClass: String\r\n  }),\r\n\r\n  setup(props: TransitionGroupProps, { slots }: SetupContext) {\r\n    const instance = getCurrentInstance()!\r\n    const state = useTransitionState()\r\n    let prevChildren: VNode[]\r\n    let children: VNode[]\r\n\r\n    onUpdated(() => {\r\n      // children is guaranteed to exist after initial render\r\n      if (!prevChildren.length) {\r\n        return\r\n      }\r\n      const moveClass = props.moveClass || `${props.name || 'v'}-move`\r\n\r\n      if (\r\n        !hasCSSTransform(\r\n          prevChildren[0].el as ElementWithTransition,\r\n          instance.vnode.el as Node,\r\n          moveClass\r\n        )\r\n      ) {\r\n        return\r\n      }\r\n\r\n      // we divide the work into three loops to avoid mixing DOM reads and writes\r\n      // in each iteration - which helps prevent layout thrashing.\r\n      prevChildren.forEach(callPendingCbs)\r\n      prevChildren.forEach(recordPosition)\r\n      const movedChildren = prevChildren.filter(applyTranslation)\r\n\r\n      // force reflow to put everything in position\r\n      forceReflow()\r\n\r\n      movedChildren.forEach(c => {\r\n        const el = c.el as ElementWithTransition\r\n        const style = el.style\r\n        addTransitionClass(el, moveClass)\r\n        style.transform = style.webkitTransform = style.transitionDuration = ''\r\n        const cb = ((el as any)._moveCb = (e: TransitionEvent) => {\r\n          if (e && e.target !== el) {\r\n            return\r\n          }\r\n          if (!e || /transform$/.test(e.propertyName)) {\r\n            el.removeEventListener('transitionend', cb)\r\n            ;(el as any)._moveCb = null\r\n            removeTransitionClass(el, moveClass)\r\n          }\r\n        })\r\n        el.addEventListener('transitionend', cb)\r\n      })\r\n    })\r\n\r\n    return () => {\r\n      const rawProps = toRaw(props)\r\n      const cssTransitionProps = resolveTransitionProps(rawProps)\r\n      let tag = rawProps.tag || Fragment\r\n\r\n      if (\r\n        __COMPAT__ &&\r\n        !rawProps.tag &&\r\n        compatUtils.checkCompatEnabled(\r\n          DeprecationTypes.TRANSITION_GROUP_ROOT,\r\n          instance.parent\r\n        )\r\n      ) {\r\n        tag = 'span'\r\n      }\r\n\r\n      prevChildren = children\r\n      children = slots.default ? getTransitionRawChildren(slots.default()) : []\r\n\r\n      for (let i = 0; i < children.length; i++) {\r\n        const child = children[i]\r\n        if (child.key != null) {\r\n          setTransitionHooks(\r\n            child,\r\n            resolveTransitionHooks(child, cssTransitionProps, state, instance)\r\n          )\r\n        } else if (__DEV__) {\r\n          warn(`<TransitionGroup> children must be keyed.`)\r\n        }\r\n      }\r\n\r\n      if (prevChildren) {\r\n        for (let i = 0; i < prevChildren.length; i++) {\r\n          const child = prevChildren[i]\r\n          setTransitionHooks(\r\n            child,\r\n            resolveTransitionHooks(child, cssTransitionProps, state, instance)\r\n          )\r\n          positionMap.set(child, (child.el as Element).getBoundingClientRect())\r\n        }\r\n      }\r\n\r\n      return createVNode(tag, null, children)\r\n    }\r\n  }\r\n}\r\n\r\nif (__COMPAT__) {\r\n  TransitionGroupImpl.__isBuiltIn = true\r\n}\r\n\r\n/**\r\n * TransitionGroup does not support \"mode\" so we need to remove it from the\r\n * props declarations, but direct delete operation is considered a side effect\r\n * and will make the entire transition feature non-tree-shakeable, so we do it\r\n * in a function and mark the function's invocation as pure.\r\n */\r\nconst removeMode = (props: any) => delete props.mode\r\n/*#__PURE__*/ removeMode(TransitionGroupImpl.props)\r\n\r\nexport const TransitionGroup = TransitionGroupImpl as unknown as {\r\n  new (): {\r\n    $props: TransitionGroupProps\r\n  }\r\n}\r\n\r\nfunction callPendingCbs(c: VNode) {\r\n  const el = c.el as any\r\n  if (el._moveCb) {\r\n    el._moveCb()\r\n  }\r\n  if (el._enterCb) {\r\n    el._enterCb()\r\n  }\r\n}\r\n\r\nfunction recordPosition(c: VNode) {\r\n  newPositionMap.set(c, (c.el as Element).getBoundingClientRect())\r\n}\r\n\r\nfunction applyTranslation(c: VNode): VNode | undefined {\r\n  const oldPos = positionMap.get(c)!\r\n  const newPos = newPositionMap.get(c)!\r\n  const dx = oldPos.left - newPos.left\r\n  const dy = oldPos.top - newPos.top\r\n  if (dx || dy) {\r\n    const s = (c.el as HTMLElement).style\r\n    s.transform = s.webkitTransform = `translate(${dx}px,${dy}px)`\r\n    s.transitionDuration = '0s'\r\n    return c\r\n  }\r\n}\r\n\r\nfunction hasCSSTransform(\r\n  el: ElementWithTransition,\r\n  root: Node,\r\n  moveClass: string\r\n): boolean {\r\n  // Detect whether an element with the move class applied has\r\n  // CSS transitions. Since the element may be inside an entering\r\n  // transition at this very moment, we make a clone of it and remove\r\n  // all other transition classes applied to ensure only the move class\r\n  // is applied.\r\n  const clone = el.cloneNode() as HTMLElement\r\n  if (el._vtc) {\r\n    el._vtc.forEach(cls => {\r\n      cls.split(/\\s+/).forEach(c => c && clone.classList.remove(c))\r\n    })\r\n  }\r\n  moveClass.split(/\\s+/).forEach(c => c && clone.classList.add(c))\r\n  clone.style.display = 'none'\r\n  const container = (\r\n    root.nodeType === 1 ? root : root.parentNode\r\n  ) as HTMLElement\r\n  container.appendChild(clone)\r\n  const { hasTransform } = getTransitionInfo(clone)\r\n  container.removeChild(clone)\r\n  return hasTransform\r\n}\r\n","import {\r\n  ObjectDirective,\r\n  VNode,\r\n  DirectiveHook,\r\n  DirectiveBinding,\r\n  warn\r\n} from '@vue/runtime-core'\r\nimport { addEventListener } from '../modules/events'\r\nimport {\r\n  isArray,\r\n  looseEqual,\r\n  looseIndexOf,\r\n  invokeArrayFns,\r\n  toNumber,\r\n  isSet\r\n} from '@vue/shared'\r\n\r\ntype AssignerFn = (value: any) => void\r\n\r\nconst getModelAssigner = (vnode: VNode): AssignerFn => {\r\n  const fn = vnode.props!['onUpdate:modelValue']\r\n  return isArray(fn) ? value => invokeArrayFns(fn, value) : fn\r\n}\r\n\r\nfunction onCompositionStart(e: Event) {\r\n  ;(e.target as any).composing = true\r\n}\r\n\r\nfunction onCompositionEnd(e: Event) {\r\n  const target = e.target as any\r\n  if (target.composing) {\r\n    target.composing = false\r\n    trigger(target, 'input')\r\n  }\r\n}\r\n\r\nfunction trigger(el: HTMLElement, type: string) {\r\n  const e = document.createEvent('HTMLEvents')\r\n  e.initEvent(type, true, true)\r\n  el.dispatchEvent(e)\r\n}\r\n\r\ntype ModelDirective<T> = ObjectDirective<T & { _assign: AssignerFn }>\r\n\r\n// We are exporting the v-model runtime directly as vnode hooks so that it can\r\n// be tree-shaken in case v-model is never used.\r\nexport const vModelText: ModelDirective<\r\n  HTMLInputElement | HTMLTextAreaElement\r\n> = {\r\n  created(el, { modifiers: { lazy, trim, number } }, vnode) {\r\n    el._assign = getModelAssigner(vnode)\r\n    const castToNumber =\r\n      number || (vnode.props && vnode.props.type === 'number')\r\n    addEventListener(el, lazy ? 'change' : 'input', e => {\r\n      if ((e.target as any).composing) return\r\n      let domValue: string | number = el.value\r\n      if (trim) {\r\n        domValue = domValue.trim()\r\n      } else if (castToNumber) {\r\n        domValue = toNumber(domValue)\r\n      }\r\n      el._assign(domValue)\r\n    })\r\n    if (trim) {\r\n      addEventListener(el, 'change', () => {\r\n        el.value = el.value.trim()\r\n      })\r\n    }\r\n    if (!lazy) {\r\n      addEventListener(el, 'compositionstart', onCompositionStart)\r\n      addEventListener(el, 'compositionend', onCompositionEnd)\r\n      // Safari < 10.2 & UIWebView doesn't fire compositionend when\r\n      // switching focus before confirming composition choice\r\n      // this also fixes the issue where some browsers e.g. iOS Chrome\r\n      // fires \"change\" instead of \"input\" on autocomplete.\r\n      addEventListener(el, 'change', onCompositionEnd)\r\n    }\r\n  },\r\n  // set value on mounted so it's after min/max for type=\"range\"\r\n  mounted(el, { value }) {\r\n    el.value = value == null ? '' : value\r\n  },\r\n  beforeUpdate(el, { value, modifiers: { lazy, trim, number } }, vnode) {\r\n    el._assign = getModelAssigner(vnode)\r\n    // avoid clearing unresolved text. #2302\r\n    if ((el as any).composing) return\r\n    if (document.activeElement === el) {\r\n      if (lazy) {\r\n        return\r\n      }\r\n      if (trim && el.value.trim() === value) {\r\n        return\r\n      }\r\n      if ((number || el.type === 'number') && toNumber(el.value) === value) {\r\n        return\r\n      }\r\n    }\r\n    const newValue = value == null ? '' : value\r\n    if (el.value !== newValue) {\r\n      el.value = newValue\r\n    }\r\n  }\r\n}\r\n\r\nexport const vModelCheckbox: ModelDirective<HTMLInputElement> = {\r\n  // #4096 array checkboxes need to be deep traversed\r\n  deep: true,\r\n  created(el, _, vnode) {\r\n    el._assign = getModelAssigner(vnode)\r\n    addEventListener(el, 'change', () => {\r\n      const modelValue = (el as any)._modelValue\r\n      const elementValue = getValue(el)\r\n      const checked = el.checked\r\n      const assign = el._assign\r\n      if (isArray(modelValue)) {\r\n        const index = looseIndexOf(modelValue, elementValue)\r\n        const found = index !== -1\r\n        if (checked && !found) {\r\n          assign(modelValue.concat(elementValue))\r\n        } else if (!checked && found) {\r\n          const filtered = [...modelValue]\r\n          filtered.splice(index, 1)\r\n          assign(filtered)\r\n        }\r\n      } else if (isSet(modelValue)) {\r\n        const cloned = new Set(modelValue)\r\n        if (checked) {\r\n          cloned.add(elementValue)\r\n        } else {\r\n          cloned.delete(elementValue)\r\n        }\r\n        assign(cloned)\r\n      } else {\r\n        assign(getCheckboxValue(el, checked))\r\n      }\r\n    })\r\n  },\r\n  // set initial checked on mount to wait for true-value/false-value\r\n  mounted: setChecked,\r\n  beforeUpdate(el, binding, vnode) {\r\n    el._assign = getModelAssigner(vnode)\r\n    setChecked(el, binding, vnode)\r\n  }\r\n}\r\n\r\nfunction setChecked(\r\n  el: HTMLInputElement,\r\n  { value, oldValue }: DirectiveBinding,\r\n  vnode: VNode\r\n) {\r\n  // store the v-model value on the element so it can be accessed by the\r\n  // change listener.\r\n  ;(el as any)._modelValue = value\r\n  if (isArray(value)) {\r\n    el.checked = looseIndexOf(value, vnode.props!.value) > -1\r\n  } else if (isSet(value)) {\r\n    el.checked = value.has(vnode.props!.value)\r\n  } else if (value !== oldValue) {\r\n    el.checked = looseEqual(value, getCheckboxValue(el, true))\r\n  }\r\n}\r\n\r\nexport const vModelRadio: ModelDirective<HTMLInputElement> = {\r\n  created(el, { value }, vnode) {\r\n    el.checked = looseEqual(value, vnode.props!.value)\r\n    el._assign = getModelAssigner(vnode)\r\n    addEventListener(el, 'change', () => {\r\n      el._assign(getValue(el))\r\n    })\r\n  },\r\n  beforeUpdate(el, { value, oldValue }, vnode) {\r\n    el._assign = getModelAssigner(vnode)\r\n    if (value !== oldValue) {\r\n      el.checked = looseEqual(value, vnode.props!.value)\r\n    }\r\n  }\r\n}\r\n\r\nexport const vModelSelect: ModelDirective<HTMLSelectElement> = {\r\n  // <select multiple> value need to be deep traversed\r\n  deep: true,\r\n  created(el, { value, modifiers: { number } }, vnode) {\r\n    const isSetModel = isSet(value)\r\n    addEventListener(el, 'change', () => {\r\n      const selectedVal = Array.prototype.filter\r\n        .call(el.options, (o: HTMLOptionElement) => o.selected)\r\n        .map((o: HTMLOptionElement) =>\r\n          number ? toNumber(getValue(o)) : getValue(o)\r\n        )\r\n      el._assign(\r\n        el.multiple\r\n          ? isSetModel\r\n            ? new Set(selectedVal)\r\n            : selectedVal\r\n          : selectedVal[0]\r\n      )\r\n    })\r\n    el._assign = getModelAssigner(vnode)\r\n  },\r\n  // set value in mounted & updated because <select> relies on its children\r\n  // <option>s.\r\n  mounted(el, { value }) {\r\n    setSelected(el, value)\r\n  },\r\n  beforeUpdate(el, _binding, vnode) {\r\n    el._assign = getModelAssigner(vnode)\r\n  },\r\n  updated(el, { value }) {\r\n    setSelected(el, value)\r\n  }\r\n}\r\n\r\nfunction setSelected(el: HTMLSelectElement, value: any) {\r\n  const isMultiple = el.multiple\r\n  if (isMultiple && !isArray(value) && !isSet(value)) {\r\n    __DEV__ &&\r\n      warn(\r\n        `<select multiple v-model> expects an Array or Set value for its binding, ` +\r\n          `but got ${Object.prototype.toString.call(value).slice(8, -1)}.`\r\n      )\r\n    return\r\n  }\r\n  for (let i = 0, l = el.options.length; i < l; i++) {\r\n    const option = el.options[i]\r\n    const optionValue = getValue(option)\r\n    if (isMultiple) {\r\n      if (isArray(value)) {\r\n        option.selected = looseIndexOf(value, optionValue) > -1\r\n      } else {\r\n        option.selected = value.has(optionValue)\r\n      }\r\n    } else {\r\n      if (looseEqual(getValue(option), value)) {\r\n        if (el.selectedIndex !== i) el.selectedIndex = i\r\n        return\r\n      }\r\n    }\r\n  }\r\n  if (!isMultiple && el.selectedIndex !== -1) {\r\n    el.selectedIndex = -1\r\n  }\r\n}\r\n\r\n// retrieve raw value set via :value bindings\r\nfunction getValue(el: HTMLOptionElement | HTMLInputElement) {\r\n  return '_value' in el ? (el as any)._value : el.value\r\n}\r\n\r\n// retrieve raw value for true-value and false-value set via :true-value or :false-value bindings\r\nfunction getCheckboxValue(\r\n  el: HTMLInputElement & { _trueValue?: any; _falseValue?: any },\r\n  checked: boolean\r\n) {\r\n  const key = checked ? '_trueValue' : '_falseValue'\r\n  return key in el ? el[key] : checked\r\n}\r\n\r\nexport const vModelDynamic: ObjectDirective<\r\n  HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement\r\n> = {\r\n  created(el, binding, vnode) {\r\n    callModelHook(el, binding, vnode, null, 'created')\r\n  },\r\n  mounted(el, binding, vnode) {\r\n    callModelHook(el, binding, vnode, null, 'mounted')\r\n  },\r\n  beforeUpdate(el, binding, vnode, prevVNode) {\r\n    callModelHook(el, binding, vnode, prevVNode, 'beforeUpdate')\r\n  },\r\n  updated(el, binding, vnode, prevVNode) {\r\n    callModelHook(el, binding, vnode, prevVNode, 'updated')\r\n  }\r\n}\r\n\r\nfunction callModelHook(\r\n  el: HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement,\r\n  binding: DirectiveBinding,\r\n  vnode: VNode,\r\n  prevVNode: VNode | null,\r\n  hook: keyof ObjectDirective\r\n) {\r\n  let modelToUse: ObjectDirective\r\n  switch (el.tagName) {\r\n    case 'SELECT':\r\n      modelToUse = vModelSelect\r\n      break\r\n    case 'TEXTAREA':\r\n      modelToUse = vModelText\r\n      break\r\n    default:\r\n      switch (vnode.props && vnode.props.type) {\r\n        case 'checkbox':\r\n          modelToUse = vModelCheckbox\r\n          break\r\n        case 'radio':\r\n          modelToUse = vModelRadio\r\n          break\r\n        default:\r\n          modelToUse = vModelText\r\n      }\r\n  }\r\n  const fn = modelToUse[hook] as DirectiveHook\r\n  fn && fn(el, binding, vnode, prevVNode)\r\n}\r\n\r\n// SSR vnode transforms\r\nif (__NODE_JS__) {\r\n  vModelText.getSSRProps = ({ value }) => ({ value })\r\n\r\n  vModelRadio.getSSRProps = ({ value }, vnode) => {\r\n    if (vnode.props && looseEqual(vnode.props.value, value)) {\r\n      return { checked: true }\r\n    }\r\n  }\r\n\r\n  vModelCheckbox.getSSRProps = ({ value }, vnode) => {\r\n    if (isArray(value)) {\r\n      if (vnode.props && looseIndexOf(value, vnode.props.value) > -1) {\r\n        return { checked: true }\r\n      }\r\n    } else if (isSet(value)) {\r\n      if (vnode.props && value.has(vnode.props.value)) {\r\n        return { checked: true }\r\n      }\r\n    } else if (value) {\r\n      return { checked: true }\r\n    }\r\n  }\r\n}\r\n","import {\r\n  getCurrentInstance,\r\n  DeprecationTypes,\r\n  LegacyConfig,\r\n  compatUtils,\r\n  ComponentInternalInstance\r\n} from '@vue/runtime-core'\r\nimport { hyphenate, isArray } from '@vue/shared'\r\n\r\nconst systemModifiers = ['ctrl', 'shift', 'alt', 'meta']\r\n\r\ntype KeyedEvent = KeyboardEvent | MouseEvent | TouchEvent\r\n\r\nconst modifierGuards: Record<\r\n  string,\r\n  (e: Event, modifiers: string[]) => void | boolean\r\n> = {\r\n  stop: e => e.stopPropagation(),\r\n  prevent: e => e.preventDefault(),\r\n  self: e => e.target !== e.currentTarget,\r\n  ctrl: e => !(e as KeyedEvent).ctrlKey,\r\n  shift: e => !(e as KeyedEvent).shiftKey,\r\n  alt: e => !(e as KeyedEvent).altKey,\r\n  meta: e => !(e as KeyedEvent).metaKey,\r\n  left: e => 'button' in e && (e as MouseEvent).button !== 0,\r\n  middle: e => 'button' in e && (e as MouseEvent).button !== 1,\r\n  right: e => 'button' in e && (e as MouseEvent).button !== 2,\r\n  exact: (e, modifiers) =>\r\n    systemModifiers.some(m => (e as any)[`${m}Key`] && !modifiers.includes(m))\r\n}\r\n\r\n/**\r\n * @private\r\n */\r\nexport const withModifiers = (fn: Function, modifiers: string[]) => {\r\n  return (event: Event, ...args: unknown[]) => {\r\n    for (let i = 0; i < modifiers.length; i++) {\r\n      const guard = modifierGuards[modifiers[i]]\r\n      if (guard && guard(event, modifiers)) return\r\n    }\r\n    return fn(event, ...args)\r\n  }\r\n}\r\n\r\n// Kept for 2.x compat.\r\n// Note: IE11 compat for `spacebar` and `del` is removed for now.\r\nconst keyNames: Record<string, string | string[]> = {\r\n  esc: 'escape',\r\n  space: ' ',\r\n  up: 'arrow-up',\r\n  left: 'arrow-left',\r\n  right: 'arrow-right',\r\n  down: 'arrow-down',\r\n  delete: 'backspace'\r\n}\r\n\r\n/**\r\n * @private\r\n */\r\nexport const withKeys = (fn: Function, modifiers: string[]) => {\r\n  let globalKeyCodes: LegacyConfig['keyCodes']\r\n  let instance: ComponentInternalInstance | null = null\r\n  if (__COMPAT__) {\r\n    instance = getCurrentInstance()\r\n    if (\r\n      compatUtils.isCompatEnabled(DeprecationTypes.CONFIG_KEY_CODES, instance)\r\n    ) {\r\n      if (instance) {\r\n        globalKeyCodes = (instance.appContext.config as any as LegacyConfig)\r\n          .keyCodes\r\n      }\r\n    }\r\n    if (__DEV__ && modifiers.some(m => /^\\d+$/.test(m))) {\r\n      compatUtils.warnDeprecation(\r\n        DeprecationTypes.V_ON_KEYCODE_MODIFIER,\r\n        instance\r\n      )\r\n    }\r\n  }\r\n\r\n  return (event: KeyboardEvent) => {\r\n    if (!('key' in event)) {\r\n      return\r\n    }\r\n\r\n    const eventKey = hyphenate(event.key)\r\n    if (modifiers.some(k => k === eventKey || keyNames[k] === eventKey)) {\r\n      return fn(event)\r\n    }\r\n\r\n    if (__COMPAT__) {\r\n      const keyCode = String(event.keyCode)\r\n      if (\r\n        compatUtils.isCompatEnabled(\r\n          DeprecationTypes.V_ON_KEYCODE_MODIFIER,\r\n          instance\r\n        ) &&\r\n        modifiers.some(mod => mod == keyCode)\r\n      ) {\r\n        return fn(event)\r\n      }\r\n      if (globalKeyCodes) {\r\n        for (const mod of modifiers) {\r\n          const codes = globalKeyCodes[mod]\r\n          if (codes) {\r\n            const matches = isArray(codes)\r\n              ? codes.some(code => String(code) === keyCode)\r\n              : String(codes) === keyCode\r\n            if (matches) {\r\n              return fn(event)\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n","import { ObjectDirective } from '@vue/runtime-core'\r\n\r\ninterface VShowElement extends HTMLElement {\r\n  // _vod = vue original display\r\n  _vod: string\r\n}\r\n\r\nexport const vShow: ObjectDirective<VShowElement> = {\r\n  beforeMount(el, { value }, { transition }) {\r\n    el._vod = el.style.display === 'none' ? '' : el.style.display\r\n    if (transition && value) {\r\n      transition.beforeEnter(el)\r\n    } else {\r\n      setDisplay(el, value)\r\n    }\r\n  },\r\n  mounted(el, { value }, { transition }) {\r\n    if (transition && value) {\r\n      transition.enter(el)\r\n    }\r\n  },\r\n  updated(el, { value, oldValue }, { transition }) {\r\n    if (!value === !oldValue) return\r\n    if (transition) {\r\n      if (value) {\r\n        transition.beforeEnter(el)\r\n        setDisplay(el, true)\r\n        transition.enter(el)\r\n      } else {\r\n        transition.leave(el, () => {\r\n          setDisplay(el, false)\r\n        })\r\n      }\r\n    } else {\r\n      setDisplay(el, value)\r\n    }\r\n  },\r\n  beforeUnmount(el, { value }) {\r\n    setDisplay(el, value)\r\n  }\r\n}\r\n\r\nif (__NODE_JS__) {\r\n  vShow.getSSRProps = ({ value }) => {\r\n    if (!value) {\r\n      return { style: { display: 'none' } }\r\n    }\r\n  }\r\n}\r\n\r\nfunction setDisplay(el: VShowElement, value: unknown): void {\r\n  el.style.display = value ? el._vod : 'none'\r\n}\r\n","import {\r\n  createRenderer,\r\n  createHydrationRenderer,\r\n  warn,\r\n  RootRenderFunction,\r\n  CreateAppFunction,\r\n  Renderer,\r\n  HydrationRenderer,\r\n  App,\r\n  RootHydrateFunction,\r\n  isRuntimeOnly,\r\n  DeprecationTypes,\r\n  compatUtils\r\n} from '@vue/runtime-core'\r\nimport { nodeOps } from './nodeOps'\r\nimport { patchProp } from './patchProp'\r\n// Importing from the compiler, will be tree-shaken in prod\r\nimport { isFunction, isString, isHTMLTag, isSVGTag, extend } from '@vue/shared'\r\n\r\ndeclare module '@vue/reactivity' {\r\n  export interface RefUnwrapBailTypes {\r\n    // Note: if updating this, also update `types/refBail.d.ts`.\r\n    runtimeDOMBailTypes: Node | Window\r\n  }\r\n}\r\n\r\nconst rendererOptions = extend({ patchProp }, nodeOps)\r\n\r\n// lazy create the renderer - this makes core renderer logic tree-shakable\r\n// in case the user only imports reactivity utilities from Vue.\r\nlet renderer: Renderer<Element | ShadowRoot> | HydrationRenderer\r\n\r\nlet enabledHydration = false\r\n\r\nfunction ensureRenderer() {\r\n  return (\r\n    renderer ||\r\n    (renderer = createRenderer<Node, Element | ShadowRoot>(rendererOptions))\r\n  )\r\n}\r\n\r\nfunction ensureHydrationRenderer() {\r\n  renderer = enabledHydration\r\n    ? renderer\r\n    : createHydrationRenderer(rendererOptions)\r\n  enabledHydration = true\r\n  return renderer as HydrationRenderer\r\n}\r\n\r\n// use explicit type casts here to avoid import() calls in rolled-up d.ts\r\nexport const render = ((...args) => {\r\n  ensureRenderer().render(...args)\r\n}) as RootRenderFunction<Element | ShadowRoot>\r\n\r\nexport const hydrate = ((...args) => {\r\n  ensureHydrationRenderer().hydrate(...args)\r\n}) as RootHydrateFunction\r\n\r\nexport const createApp = ((...args) => {\r\n  const app = ensureRenderer().createApp(...args)\r\n\r\n  if (__DEV__) {\r\n    injectNativeTagCheck(app)\r\n    injectCompilerOptionsCheck(app)\r\n  }\r\n\r\n  const { mount } = app\r\n  app.mount = (containerOrSelector: Element | ShadowRoot | string): any => {\r\n    const container = normalizeContainer(containerOrSelector)\r\n    if (!container) return\r\n\r\n    const component = app._component\r\n    if (!isFunction(component) && !component.render && !component.template) {\r\n      // __UNSAFE__\r\n      // Reason: potential execution of JS expressions in in-DOM template.\r\n      // The user must make sure the in-DOM template is trusted. If it's\r\n      // rendered by the server, the template should not contain any user data.\r\n      component.template = container.innerHTML\r\n      // 2.x compat check\r\n      if (__COMPAT__ && __DEV__) {\r\n        for (let i = 0; i < container.attributes.length; i++) {\r\n          const attr = container.attributes[i]\r\n          if (attr.name !== 'v-cloak' && /^(v-|:|@)/.test(attr.name)) {\r\n            compatUtils.warnDeprecation(\r\n              DeprecationTypes.GLOBAL_MOUNT_CONTAINER,\r\n              null\r\n            )\r\n            break\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    // clear content before mounting\r\n    container.innerHTML = ''\r\n    const proxy = mount(container, false, container instanceof SVGElement)\r\n    if (container instanceof Element) {\r\n      container.removeAttribute('v-cloak')\r\n      container.setAttribute('data-v-app', '')\r\n    }\r\n    return proxy\r\n  }\r\n\r\n  return app\r\n}) as CreateAppFunction<Element>\r\n\r\nexport const createSSRApp = ((...args) => {\r\n  const app = ensureHydrationRenderer().createApp(...args)\r\n\r\n  if (__DEV__) {\r\n    injectNativeTagCheck(app)\r\n    injectCompilerOptionsCheck(app)\r\n  }\r\n\r\n  const { mount } = app\r\n  app.mount = (containerOrSelector: Element | ShadowRoot | string): any => {\r\n    const container = normalizeContainer(containerOrSelector)\r\n    if (container) {\r\n      return mount(container, true, container instanceof SVGElement)\r\n    }\r\n  }\r\n\r\n  return app\r\n}) as CreateAppFunction<Element>\r\n\r\nfunction injectNativeTagCheck(app: App) {\r\n  // Inject `isNativeTag`\r\n  // this is used for component name validation (dev only)\r\n  Object.defineProperty(app.config, 'isNativeTag', {\r\n    value: (tag: string) => isHTMLTag(tag) || isSVGTag(tag),\r\n    writable: false\r\n  })\r\n}\r\n\r\n// dev only\r\nfunction injectCompilerOptionsCheck(app: App) {\r\n  if (isRuntimeOnly()) {\r\n    const isCustomElement = app.config.isCustomElement\r\n    Object.defineProperty(app.config, 'isCustomElement', {\r\n      get() {\r\n        return isCustomElement\r\n      },\r\n      set() {\r\n        warn(\r\n          `The \\`isCustomElement\\` config option is deprecated. Use ` +\r\n            `\\`compilerOptions.isCustomElement\\` instead.`\r\n        )\r\n      }\r\n    })\r\n\r\n    const compilerOptions = app.config.compilerOptions\r\n    const msg =\r\n      `The \\`compilerOptions\\` config option is only respected when using ` +\r\n      `a build of Vue.js that includes the runtime compiler (aka \"full build\"). ` +\r\n      `Since you are using the runtime-only build, \\`compilerOptions\\` ` +\r\n      `must be passed to \\`@vue/compiler-dom\\` in the build setup instead.\\n` +\r\n      `- For vue-loader: pass it via vue-loader's \\`compilerOptions\\` loader option.\\n` +\r\n      `- For vue-cli: see https://cli.vuejs.org/guide/webpack.html#modifying-options-of-a-loader\\n` +\r\n      `- For vite: pass it via @vitejs/plugin-vue options. See https://github.com/vitejs/vite/tree/main/packages/plugin-vue#example-for-passing-options-to-vuecompiler-dom`\r\n\r\n    Object.defineProperty(app.config, 'compilerOptions', {\r\n      get() {\r\n        warn(msg)\r\n        return compilerOptions\r\n      },\r\n      set() {\r\n        warn(msg)\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\nfunction normalizeContainer(\r\n  container: Element | ShadowRoot | string\r\n): Element | null {\r\n  if (isString(container)) {\r\n    const res = document.querySelector(container)\r\n    if (__DEV__ && !res) {\r\n      warn(\r\n        `Failed to mount app: mount target selector \"${container}\" returned null.`\r\n      )\r\n    }\r\n    return res\r\n  }\r\n  if (\r\n    __DEV__ &&\r\n    window.ShadowRoot &&\r\n    container instanceof window.ShadowRoot &&\r\n    container.mode === 'closed'\r\n  ) {\r\n    warn(\r\n      `mounting on a ShadowRoot with \\`{mode: \"closed\"}\\` may lead to unpredictable bugs`\r\n    )\r\n  }\r\n  return container as any\r\n}\r\n\r\n// Custom element support\r\nexport {\r\n  defineCustomElement,\r\n  defineSSRCustomElement,\r\n  VueElement,\r\n  VueElementConstructor\r\n} from './apiCustomElement'\r\n\r\n// SFC CSS utilities\r\nexport { useCssModule } from './helpers/useCssModule'\r\nexport { useCssVars } from './helpers/useCssVars'\r\n\r\n// DOM-only components\r\nexport { Transition, TransitionProps } from './components/Transition'\r\nexport {\r\n  TransitionGroup,\r\n  TransitionGroupProps\r\n} from './components/TransitionGroup'\r\n\r\n// **Internal** DOM-only runtime directive helpers\r\nexport {\r\n  vModelText,\r\n  vModelCheckbox,\r\n  vModelRadio,\r\n  vModelSelect,\r\n  vModelDynamic\r\n} from './directives/vModel'\r\nexport { withModifiers, withKeys } from './directives/vOn'\r\nexport { vShow } from './directives/vShow'\r\n\r\n// re-export everything from core\r\n// h, Component, reactivity API, nextTick, flags & types\r\nexport * from '@vue/runtime-core'\r\n","import { ElementWithTransition } from '../components/Transition'\r\n\r\n// compiler should normalize class + :class bindings on the same element\r\n// into a single binding ['staticClass', dynamic]\r\nexport function patchClass(el: Element, value: string | null, isSVG: boolean) {\r\n  // directly setting className should be faster than setAttribute in theory\r\n  // if this is an element during a transition, take the temporary transition\r\n  // classes into account.\r\n  const transitionClasses = (el as ElementWithTransition)._vtc\r\n  if (transitionClasses) {\r\n    value = (\r\n      value ? [value, ...transitionClasses] : [...transitionClasses]\r\n    ).join(' ')\r\n  }\r\n  if (value == null) {\r\n    el.removeAttribute('class')\r\n  } else if (isSVG) {\r\n    el.setAttribute('class', value)\r\n  } else {\r\n    el.className = value\r\n  }\r\n}\r\n","// __UNSAFE__\r\n// Reason: potentially setting innerHTML.\r\n// This can come from explicit usage of v-html or innerHTML as a prop in render\r\n\r\nimport { warn, DeprecationTypes, compatUtils } from '@vue/runtime-core'\r\n\r\n// functions. The user is responsible for using them with only trusted content.\r\nexport function patchDOMProp(\r\n  el: any,\r\n  key: string,\r\n  value: any,\r\n  // the following args are passed only due to potential innerHTML/textContent\r\n  // overriding existing VNodes, in which case the old tree must be properly\r\n  // unmounted.\r\n  prevChildren: any,\r\n  parentComponent: any,\r\n  parentSuspense: any,\r\n  unmountChildren: any\r\n) {\r\n  if (key === 'innerHTML' || key === 'textContent') {\r\n    if (prevChildren) {\r\n      unmountChildren(prevChildren, parentComponent, parentSuspense)\r\n    }\r\n    el[key] = value == null ? '' : value\r\n    return\r\n  }\r\n\r\n  if (key === 'value' && el.tagName !== 'PROGRESS') {\r\n    // store value as _value as well since\r\n    // non-string values will be stringified.\r\n    el._value = value\r\n    const newValue = value == null ? '' : value\r\n    if (el.value !== newValue) {\r\n      el.value = newValue\r\n    }\r\n    if (value == null) {\r\n      el.removeAttribute(key)\r\n    }\r\n    return\r\n  }\r\n\r\n  if (value === '' || value == null) {\r\n    const type = typeof el[key]\r\n    if (value === '' && type === 'boolean') {\r\n      // e.g. <select multiple> compiles to { multiple: '' }\r\n      el[key] = true\r\n      return\r\n    } else if (value == null && type === 'string') {\r\n      // e.g. <div :id=\"null\">\r\n      el[key] = ''\r\n      el.removeAttribute(key)\r\n      return\r\n    } else if (type === 'number') {\r\n      // e.g. <img :width=\"null\">\r\n      // the value of some IDL attr must be greater than 0, e.g. input.size = 0 -> error\r\n      try {\r\n        el[key] = 0\r\n      } catch {}\r\n      el.removeAttribute(key)\r\n      return\r\n    }\r\n  }\r\n\r\n  if (\r\n    __COMPAT__ &&\r\n    value === false &&\r\n    compatUtils.isCompatEnabled(\r\n      DeprecationTypes.ATTR_FALSE_VALUE,\r\n      parentComponent\r\n    )\r\n  ) {\r\n    const type = typeof el[key]\r\n    if (type === 'string' || type === 'number') {\r\n      __DEV__ &&\r\n        compatUtils.warnDeprecation(\r\n          DeprecationTypes.ATTR_FALSE_VALUE,\r\n          parentComponent,\r\n          key\r\n        )\r\n      el[key] = type === 'number' ? 0 : ''\r\n      el.removeAttribute(key)\r\n      return\r\n    }\r\n  }\r\n\r\n  // some properties perform value validation and throw\r\n  try {\r\n    el[key] = value\r\n  } catch (e) {\r\n    if (__DEV__) {\r\n      warn(\r\n        `Failed setting prop \"${key}\" on <${el.tagName.toLowerCase()}>: ` +\r\n          `value ${value} is invalid.`,\r\n        e\r\n      )\r\n    }\r\n  }\r\n}\r\n","import { SourceLocation } from './ast'\r\n\r\nexport interface CompilerError extends SyntaxError {\r\n  code: number | string\r\n  loc?: SourceLocation\r\n}\r\n\r\nexport interface CoreCompilerError extends CompilerError {\r\n  code: ErrorCodes\r\n}\r\n\r\nexport function defaultOnError(error: CompilerError) {\r\n  throw error\r\n}\r\n\r\nexport function defaultOnWarn(msg: CompilerError) {\r\n  __DEV__ && console.warn(`[Vue warn] ${msg.message}`)\r\n}\r\n\r\ntype InferCompilerError<T> = T extends ErrorCodes\r\n  ? CoreCompilerError\r\n  : CompilerError\r\n\r\nexport function createCompilerError<T extends number>(\r\n  code: T,\r\n  loc?: SourceLocation,\r\n  messages?: { [code: number]: string },\r\n  additionalMessage?: string\r\n): InferCompilerError<T> {\r\n  const msg =\r\n    __DEV__ || !__BROWSER__\r\n      ? (messages || errorMessages)[code] + (additionalMessage || ``)\r\n      : code\r\n  const error = new SyntaxError(String(msg)) as InferCompilerError<T>\r\n  error.code = code\r\n  error.loc = loc\r\n  return error\r\n}\r\n\r\nexport const enum ErrorCodes {\r\n  // parse errors\r\n  ABRUPT_CLOSING_OF_EMPTY_COMMENT,\r\n  CDATA_IN_HTML_CONTENT,\r\n  DUPLICATE_ATTRIBUTE,\r\n  END_TAG_WITH_ATTRIBUTES,\r\n  END_TAG_WITH_TRAILING_SOLIDUS,\r\n  EOF_BEFORE_TAG_NAME,\r\n  EOF_IN_CDATA,\r\n  EOF_IN_COMMENT,\r\n  EOF_IN_SCRIPT_HTML_COMMENT_LIKE_TEXT,\r\n  EOF_IN_TAG,\r\n  INCORRECTLY_CLOSED_COMMENT,\r\n  INCORRECTLY_OPENED_COMMENT,\r\n  INVALID_FIRST_CHARACTER_OF_TAG_NAME,\r\n  MISSING_ATTRIBUTE_VALUE,\r\n  MISSING_END_TAG_NAME,\r\n  MISSING_WHITESPACE_BETWEEN_ATTRIBUTES,\r\n  NESTED_COMMENT,\r\n  UNEXPECTED_CHARACTER_IN_ATTRIBUTE_NAME,\r\n  UNEXPECTED_CHARACTER_IN_UNQUOTED_ATTRIBUTE_VALUE,\r\n  UNEXPECTED_EQUALS_SIGN_BEFORE_ATTRIBUTE_NAME,\r\n  UNEXPECTED_NULL_CHARACTER,\r\n  UNEXPECTED_QUESTION_MARK_INSTEAD_OF_TAG_NAME,\r\n  UNEXPECTED_SOLIDUS_IN_TAG,\r\n\r\n  // Vue-specific parse errors\r\n  X_INVALID_END_TAG,\r\n  X_MISSING_END_TAG,\r\n  X_MISSING_INTERPOLATION_END,\r\n  X_MISSING_DYNAMIC_DIRECTIVE_ARGUMENT_END,\r\n\r\n  // transform errors\r\n  X_V_IF_NO_EXPRESSION,\r\n  X_V_IF_SAME_KEY,\r\n  X_V_ELSE_NO_ADJACENT_IF,\r\n  X_V_FOR_NO_EXPRESSION,\r\n  X_V_FOR_MALFORMED_EXPRESSION,\r\n  X_V_FOR_TEMPLATE_KEY_PLACEMENT,\r\n  X_V_BIND_NO_EXPRESSION,\r\n  X_V_ON_NO_EXPRESSION,\r\n  X_V_SLOT_UNEXPECTED_DIRECTIVE_ON_SLOT_OUTLET,\r\n  X_V_SLOT_MIXED_SLOT_USAGE,\r\n  X_V_SLOT_DUPLICATE_SLOT_NAMES,\r\n  X_V_SLOT_EXTRANEOUS_DEFAULT_SLOT_CHILDREN,\r\n  X_V_SLOT_MISPLACED,\r\n  X_V_MODEL_NO_EXPRESSION,\r\n  X_V_MODEL_MALFORMED_EXPRESSION,\r\n  X_V_MODEL_ON_SCOPE_VARIABLE,\r\n  X_INVALID_EXPRESSION,\r\n  X_KEEP_ALIVE_INVALID_CHILDREN,\r\n\r\n  // generic errors\r\n  X_PREFIX_ID_NOT_SUPPORTED,\r\n  X_MODULE_MODE_NOT_SUPPORTED,\r\n  X_CACHE_HANDLER_NOT_SUPPORTED,\r\n  X_SCOPE_ID_NOT_SUPPORTED,\r\n\r\n  // Special value for higher-order compilers to pick up the last code\r\n  // to avoid collision of error codes. This should always be kept as the last\r\n  // item.\r\n  __EXTEND_POINT__\r\n}\r\n\r\nexport const errorMessages: Record<ErrorCodes, string> = {\r\n  // parse errors\r\n  [ErrorCodes.ABRUPT_CLOSING_OF_EMPTY_COMMENT]: 'Illegal comment.',\r\n  [ErrorCodes.CDATA_IN_HTML_CONTENT]:\r\n    'CDATA section is allowed only in XML context.',\r\n  [ErrorCodes.DUPLICATE_ATTRIBUTE]: 'Duplicate attribute.',\r\n  [ErrorCodes.END_TAG_WITH_ATTRIBUTES]: 'End tag cannot have attributes.',\r\n  [ErrorCodes.END_TAG_WITH_TRAILING_SOLIDUS]: \"Illegal '/' in tags.\",\r\n  [ErrorCodes.EOF_BEFORE_TAG_NAME]: 'Unexpected EOF in tag.',\r\n  [ErrorCodes.EOF_IN_CDATA]: 'Unexpected EOF in CDATA section.',\r\n  [ErrorCodes.EOF_IN_COMMENT]: 'Unexpected EOF in comment.',\r\n  [ErrorCodes.EOF_IN_SCRIPT_HTML_COMMENT_LIKE_TEXT]:\r\n    'Unexpected EOF in script.',\r\n  [ErrorCodes.EOF_IN_TAG]: 'Unexpected EOF in tag.',\r\n  [ErrorCodes.INCORRECTLY_CLOSED_COMMENT]: 'Incorrectly closed comment.',\r\n  [ErrorCodes.INCORRECTLY_OPENED_COMMENT]: 'Incorrectly opened comment.',\r\n  [ErrorCodes.INVALID_FIRST_CHARACTER_OF_TAG_NAME]:\r\n    \"Illegal tag name. Use '&lt;' to print '<'.\",\r\n  [ErrorCodes.MISSING_ATTRIBUTE_VALUE]: 'Attribute value was expected.',\r\n  [ErrorCodes.MISSING_END_TAG_NAME]: 'End tag name was expected.',\r\n  [ErrorCodes.MISSING_WHITESPACE_BETWEEN_ATTRIBUTES]:\r\n    'Whitespace was expected.',\r\n  [ErrorCodes.NESTED_COMMENT]: \"Unexpected '<!--' in comment.\",\r\n  [ErrorCodes.UNEXPECTED_CHARACTER_IN_ATTRIBUTE_NAME]:\r\n    'Attribute name cannot contain U+0022 (\"), U+0027 (\\'), and U+003C (<).',\r\n  [ErrorCodes.UNEXPECTED_CHARACTER_IN_UNQUOTED_ATTRIBUTE_VALUE]:\r\n    'Unquoted attribute value cannot contain U+0022 (\"), U+0027 (\\'), U+003C (<), U+003D (=), and U+0060 (`).',\r\n  [ErrorCodes.UNEXPECTED_EQUALS_SIGN_BEFORE_ATTRIBUTE_NAME]:\r\n    \"Attribute name cannot start with '='.\",\r\n  [ErrorCodes.UNEXPECTED_QUESTION_MARK_INSTEAD_OF_TAG_NAME]:\r\n    \"'<?' is allowed only in XML context.\",\r\n  [ErrorCodes.UNEXPECTED_NULL_CHARACTER]: `Unexpected null cahracter.`,\r\n  [ErrorCodes.UNEXPECTED_SOLIDUS_IN_TAG]: \"Illegal '/' in tags.\",\r\n\r\n  // Vue-specific parse errors\r\n  [ErrorCodes.X_INVALID_END_TAG]: 'Invalid end tag.',\r\n  [ErrorCodes.X_MISSING_END_TAG]: 'Element is missing end tag.',\r\n  [ErrorCodes.X_MISSING_INTERPOLATION_END]:\r\n    'Interpolation end sign was not found.',\r\n  [ErrorCodes.X_MISSING_DYNAMIC_DIRECTIVE_ARGUMENT_END]:\r\n    'End bracket for dynamic directive argument was not found. ' +\r\n    'Note that dynamic directive argument cannot contain spaces.',\r\n\r\n  // transform errors\r\n  [ErrorCodes.X_V_IF_NO_EXPRESSION]: `v-if/v-else-if is missing expression.`,\r\n  [ErrorCodes.X_V_IF_SAME_KEY]: `v-if/else branches must use unique keys.`,\r\n  [ErrorCodes.X_V_ELSE_NO_ADJACENT_IF]: `v-else/v-else-if has no adjacent v-if.`,\r\n  [ErrorCodes.X_V_FOR_NO_EXPRESSION]: `v-for is missing expression.`,\r\n  [ErrorCodes.X_V_FOR_MALFORMED_EXPRESSION]: `v-for has invalid expression.`,\r\n  [ErrorCodes.X_V_FOR_TEMPLATE_KEY_PLACEMENT]: `<template v-for> key should be placed on the <template> tag.`,\r\n  [ErrorCodes.X_V_BIND_NO_EXPRESSION]: `v-bind is missing expression.`,\r\n  [ErrorCodes.X_V_ON_NO_EXPRESSION]: `v-on is missing expression.`,\r\n  [ErrorCodes.X_V_SLOT_UNEXPECTED_DIRECTIVE_ON_SLOT_OUTLET]: `Unexpected custom directive on <slot> outlet.`,\r\n  [ErrorCodes.X_V_SLOT_MIXED_SLOT_USAGE]:\r\n    `Mixed v-slot usage on both the component and nested <template>.` +\r\n    `When there are multiple named slots, all slots should use <template> ` +\r\n    `syntax to avoid scope ambiguity.`,\r\n  [ErrorCodes.X_V_SLOT_DUPLICATE_SLOT_NAMES]: `Duplicate slot names found. `,\r\n  [ErrorCodes.X_V_SLOT_EXTRANEOUS_DEFAULT_SLOT_CHILDREN]:\r\n    `Extraneous children found when component already has explicitly named ` +\r\n    `default slot. These children will be ignored.`,\r\n  [ErrorCodes.X_V_SLOT_MISPLACED]: `v-slot can only be used on components or <template> tags.`,\r\n  [ErrorCodes.X_V_MODEL_NO_EXPRESSION]: `v-model is missing expression.`,\r\n  [ErrorCodes.X_V_MODEL_MALFORMED_EXPRESSION]: `v-model value must be a valid JavaScript member expression.`,\r\n  [ErrorCodes.X_V_MODEL_ON_SCOPE_VARIABLE]: `v-model cannot be used on v-for or v-slot scope variables because they are not writable.`,\r\n  [ErrorCodes.X_INVALID_EXPRESSION]: `Error parsing JavaScript expression: `,\r\n  [ErrorCodes.X_KEEP_ALIVE_INVALID_CHILDREN]: `<KeepAlive> expects exactly one child component.`,\r\n\r\n  // generic errors\r\n  [ErrorCodes.X_PREFIX_ID_NOT_SUPPORTED]: `\"prefixIdentifiers\" option is not supported in this build of compiler.`,\r\n  [ErrorCodes.X_MODULE_MODE_NOT_SUPPORTED]: `ES module mode is not supported in this build of compiler.`,\r\n  [ErrorCodes.X_CACHE_HANDLER_NOT_SUPPORTED]: `\"cacheHandlers\" option is only supported when the \"prefixIdentifiers\" option is enabled.`,\r\n  [ErrorCodes.X_SCOPE_ID_NOT_SUPPORTED]: `\"scopeId\" option is only supported in module mode.`,\r\n\r\n  // just to fullfill types\r\n  [ErrorCodes.__EXTEND_POINT__]: ``\r\n}\r\n","export const FRAGMENT = Symbol(__DEV__ ? `Fragment` : ``)\r\nexport const TELEPORT = Symbol(__DEV__ ? `Teleport` : ``)\r\nexport const SUSPENSE = Symbol(__DEV__ ? `Suspense` : ``)\r\nexport const KEEP_ALIVE = Symbol(__DEV__ ? `KeepAlive` : ``)\r\nexport const BASE_TRANSITION = Symbol(__DEV__ ? `BaseTransition` : ``)\r\nexport const OPEN_BLOCK = Symbol(__DEV__ ? `openBlock` : ``)\r\nexport const CREATE_BLOCK = Symbol(__DEV__ ? `createBlock` : ``)\r\nexport const CREATE_ELEMENT_BLOCK = Symbol(__DEV__ ? `createElementBlock` : ``)\r\nexport const CREATE_VNODE = Symbol(__DEV__ ? `createVNode` : ``)\r\nexport const CREATE_ELEMENT_VNODE = Symbol(__DEV__ ? `createElementVNode` : ``)\r\nexport const CREATE_COMMENT = Symbol(__DEV__ ? `createCommentVNode` : ``)\r\nexport const CREATE_TEXT = Symbol(__DEV__ ? `createTextVNode` : ``)\r\nexport const CREATE_STATIC = Symbol(__DEV__ ? `createStaticVNode` : ``)\r\nexport const RESOLVE_COMPONENT = Symbol(__DEV__ ? `resolveComponent` : ``)\r\nexport const RESOLVE_DYNAMIC_COMPONENT = Symbol(\r\n  __DEV__ ? `resolveDynamicComponent` : ``\r\n)\r\nexport const RESOLVE_DIRECTIVE = Symbol(__DEV__ ? `resolveDirective` : ``)\r\nexport const RESOLVE_FILTER = Symbol(__DEV__ ? `resolveFilter` : ``)\r\nexport const WITH_DIRECTIVES = Symbol(__DEV__ ? `withDirectives` : ``)\r\nexport const RENDER_LIST = Symbol(__DEV__ ? `renderList` : ``)\r\nexport const RENDER_SLOT = Symbol(__DEV__ ? `renderSlot` : ``)\r\nexport const CREATE_SLOTS = Symbol(__DEV__ ? `createSlots` : ``)\r\nexport const TO_DISPLAY_STRING = Symbol(__DEV__ ? `toDisplayString` : ``)\r\nexport const MERGE_PROPS = Symbol(__DEV__ ? `mergeProps` : ``)\r\nexport const NORMALIZE_CLASS = Symbol(__DEV__ ? `normalizeClass` : ``)\r\nexport const NORMALIZE_STYLE = Symbol(__DEV__ ? `normalizeStyle` : ``)\r\nexport const NORMALIZE_PROPS = Symbol(__DEV__ ? `normalizeProps` : ``)\r\nexport const GUARD_REACTIVE_PROPS = Symbol(__DEV__ ? `guardReactiveProps` : ``)\r\nexport const TO_HANDLERS = Symbol(__DEV__ ? `toHandlers` : ``)\r\nexport const CAMELIZE = Symbol(__DEV__ ? `camelize` : ``)\r\nexport const CAPITALIZE = Symbol(__DEV__ ? `capitalize` : ``)\r\nexport const TO_HANDLER_KEY = Symbol(__DEV__ ? `toHandlerKey` : ``)\r\nexport const SET_BLOCK_TRACKING = Symbol(__DEV__ ? `setBlockTracking` : ``)\r\nexport const PUSH_SCOPE_ID = Symbol(__DEV__ ? `pushScopeId` : ``)\r\nexport const POP_SCOPE_ID = Symbol(__DEV__ ? `popScopeId` : ``)\r\nexport const WITH_SCOPE_ID = Symbol(__DEV__ ? `withScopeId` : ``)\r\nexport const WITH_CTX = Symbol(__DEV__ ? `withCtx` : ``)\r\nexport const UNREF = Symbol(__DEV__ ? `unref` : ``)\r\nexport const IS_REF = Symbol(__DEV__ ? `isRef` : ``)\r\nexport const WITH_MEMO = Symbol(__DEV__ ? `withMemo` : ``)\r\nexport const IS_MEMO_SAME = Symbol(__DEV__ ? `isMemoSame` : ``)\r\n\r\n// Name mapping for runtime helpers that need to be imported from 'vue' in\r\n// generated code. Make sure these are correctly exported in the runtime!\r\n// Using `any` here because TS doesn't allow symbols as index type.\r\nexport const helperNameMap: any = {\r\n  [FRAGMENT]: `Fragment`,\r\n  [TELEPORT]: `Teleport`,\r\n  [SUSPENSE]: `Suspense`,\r\n  [KEEP_ALIVE]: `KeepAlive`,\r\n  [BASE_TRANSITION]: `BaseTransition`,\r\n  [OPEN_BLOCK]: `openBlock`,\r\n  [CREATE_BLOCK]: `createBlock`,\r\n  [CREATE_ELEMENT_BLOCK]: `createElementBlock`,\r\n  [CREATE_VNODE]: `createVNode`,\r\n  [CREATE_ELEMENT_VNODE]: `createElementVNode`,\r\n  [CREATE_COMMENT]: `createCommentVNode`,\r\n  [CREATE_TEXT]: `createTextVNode`,\r\n  [CREATE_STATIC]: `createStaticVNode`,\r\n  [RESOLVE_COMPONENT]: `resolveComponent`,\r\n  [RESOLVE_DYNAMIC_COMPONENT]: `resolveDynamicComponent`,\r\n  [RESOLVE_DIRECTIVE]: `resolveDirective`,\r\n  [RESOLVE_FILTER]: `resolveFilter`,\r\n  [WITH_DIRECTIVES]: `withDirectives`,\r\n  [RENDER_LIST]: `renderList`,\r\n  [RENDER_SLOT]: `renderSlot`,\r\n  [CREATE_SLOTS]: `createSlots`,\r\n  [TO_DISPLAY_STRING]: `toDisplayString`,\r\n  [MERGE_PROPS]: `mergeProps`,\r\n  [NORMALIZE_CLASS]: `normalizeClass`,\r\n  [NORMALIZE_STYLE]: `normalizeStyle`,\r\n  [NORMALIZE_PROPS]: `normalizeProps`,\r\n  [GUARD_REACTIVE_PROPS]: `guardReactiveProps`,\r\n  [TO_HANDLERS]: `toHandlers`,\r\n  [CAMELIZE]: `camelize`,\r\n  [CAPITALIZE]: `capitalize`,\r\n  [TO_HANDLER_KEY]: `toHandlerKey`,\r\n  [SET_BLOCK_TRACKING]: `setBlockTracking`,\r\n  [PUSH_SCOPE_ID]: `pushScopeId`,\r\n  [POP_SCOPE_ID]: `popScopeId`,\r\n  [WITH_SCOPE_ID]: `withScopeId`,\r\n  [WITH_CTX]: `withCtx`,\r\n  [UNREF]: `unref`,\r\n  [IS_REF]: `isRef`,\r\n  [WITH_MEMO]: `withMemo`,\r\n  [IS_MEMO_SAME]: `isMemoSame`\r\n}\r\n\r\nexport function registerRuntimeHelpers(helpers: any) {\r\n  Object.getOwnPropertySymbols(helpers).forEach(s => {\r\n    helperNameMap[s] = helpers[s]\r\n  })\r\n}\r\n","import { isString } from '@vue/shared'\r\nimport { ForParseResult } from './transforms/vFor'\r\nimport {\r\n  RENDER_SLOT,\r\n  CREATE_SLOTS,\r\n  RENDER_LIST,\r\n  OPEN_BLOCK,\r\n  FRAGMENT,\r\n  WITH_DIRECTIVES,\r\n  WITH_MEMO\r\n} from './runtimeHelpers'\r\nimport { PropsExpression } from './transforms/transformElement'\r\nimport { ImportItem, TransformContext } from './transform'\r\nimport { getVNodeBlockHelper, getVNodeHelper } from './utils'\r\n\r\n// Vue template is a platform-agnostic superset of HTML (syntax only).\r\n// More namespaces like SVG and MathML are declared by platform specific\r\n// compilers.\r\nexport type Namespace = number\r\n\r\nexport const enum Namespaces {\r\n  HTML\r\n}\r\n\r\nexport const enum NodeTypes {\r\n  ROOT,\r\n  ELEMENT,\r\n  TEXT,\r\n  COMMENT,\r\n  SIMPLE_EXPRESSION,\r\n  INTERPOLATION,\r\n  ATTRIBUTE,\r\n  DIRECTIVE,\r\n  // containers\r\n  COMPOUND_EXPRESSION,\r\n  IF,\r\n  IF_BRANCH,\r\n  FOR,\r\n  TEXT_CALL,\r\n  // codegen\r\n  VNODE_CALL,\r\n  JS_CALL_EXPRESSION,\r\n  JS_OBJECT_EXPRESSION,\r\n  JS_PROPERTY,\r\n  JS_ARRAY_EXPRESSION,\r\n  JS_FUNCTION_EXPRESSION,\r\n  JS_CONDITIONAL_EXPRESSION,\r\n  JS_CACHE_EXPRESSION,\r\n\r\n  // ssr codegen\r\n  JS_BLOCK_STATEMENT,\r\n  JS_TEMPLATE_LITERAL,\r\n  JS_IF_STATEMENT,\r\n  JS_ASSIGNMENT_EXPRESSION,\r\n  JS_SEQUENCE_EXPRESSION,\r\n  JS_RETURN_STATEMENT\r\n}\r\n\r\nexport const enum ElementTypes {\r\n  ELEMENT,\r\n  COMPONENT,\r\n  SLOT,\r\n  TEMPLATE\r\n}\r\n\r\nexport interface Node {\r\n  type: NodeTypes\r\n  loc: SourceLocation\r\n}\r\n\r\n// The node's range. The `start` is inclusive and `end` is exclusive.\r\n// [start, end)\r\nexport interface SourceLocation {\r\n  start: Position\r\n  end: Position\r\n  source: string\r\n}\r\n\r\nexport interface Position {\r\n  offset: number // from start of file\r\n  line: number\r\n  column: number\r\n}\r\n\r\nexport type ParentNode = RootNode | ElementNode | IfBranchNode | ForNode\r\n\r\nexport type ExpressionNode = SimpleExpressionNode | CompoundExpressionNode\r\n\r\nexport type TemplateChildNode =\r\n  | ElementNode\r\n  | InterpolationNode\r\n  | CompoundExpressionNode\r\n  | TextNode\r\n  | CommentNode\r\n  | IfNode\r\n  | IfBranchNode\r\n  | ForNode\r\n  | TextCallNode\r\n\r\nexport interface RootNode extends Node {\r\n  type: NodeTypes.ROOT\r\n  children: TemplateChildNode[]\r\n  helpers: symbol[]\r\n  components: string[]\r\n  directives: string[]\r\n  hoists: (JSChildNode | null)[]\r\n  imports: ImportItem[]\r\n  cached: number\r\n  temps: number\r\n  ssrHelpers?: symbol[]\r\n  codegenNode?: TemplateChildNode | JSChildNode | BlockStatement\r\n\r\n  // v2 compat only\r\n  filters?: string[]\r\n}\r\n\r\nexport type ElementNode =\r\n  | PlainElementNode\r\n  | ComponentNode\r\n  | SlotOutletNode\r\n  | TemplateNode\r\n\r\nexport interface BaseElementNode extends Node {\r\n  type: NodeTypes.ELEMENT\r\n  ns: Namespace\r\n  tag: string\r\n  tagType: ElementTypes\r\n  isSelfClosing: boolean\r\n  props: Array<AttributeNode | DirectiveNode>\r\n  children: TemplateChildNode[]\r\n}\r\n\r\nexport interface PlainElementNode extends BaseElementNode {\r\n  tagType: ElementTypes.ELEMENT\r\n  codegenNode:\r\n    | VNodeCall\r\n    | SimpleExpressionNode // when hoisted\r\n    | CacheExpression // when cached by v-once\r\n    | MemoExpression // when cached by v-memo\r\n    | undefined\r\n  ssrCodegenNode?: TemplateLiteral\r\n}\r\n\r\nexport interface ComponentNode extends BaseElementNode {\r\n  tagType: ElementTypes.COMPONENT\r\n  codegenNode:\r\n    | VNodeCall\r\n    | CacheExpression // when cached by v-once\r\n    | MemoExpression // when cached by v-memo\r\n    | undefined\r\n  ssrCodegenNode?: CallExpression\r\n}\r\n\r\nexport interface SlotOutletNode extends BaseElementNode {\r\n  tagType: ElementTypes.SLOT\r\n  codegenNode:\r\n    | RenderSlotCall\r\n    | CacheExpression // when cached by v-once\r\n    | undefined\r\n  ssrCodegenNode?: CallExpression\r\n}\r\n\r\nexport interface TemplateNode extends BaseElementNode {\r\n  tagType: ElementTypes.TEMPLATE\r\n  // TemplateNode is a container type that always gets compiled away\r\n  codegenNode: undefined\r\n}\r\n\r\nexport interface TextNode extends Node {\r\n  type: NodeTypes.TEXT\r\n  content: string\r\n}\r\n\r\nexport interface CommentNode extends Node {\r\n  type: NodeTypes.COMMENT\r\n  content: string\r\n}\r\n\r\nexport interface AttributeNode extends Node {\r\n  type: NodeTypes.ATTRIBUTE\r\n  name: string\r\n  value: TextNode | undefined\r\n}\r\n\r\nexport interface DirectiveNode extends Node {\r\n  type: NodeTypes.DIRECTIVE\r\n  name: string\r\n  exp: ExpressionNode | undefined\r\n  arg: ExpressionNode | undefined\r\n  modifiers: string[]\r\n  /**\r\n   * optional property to cache the expression parse result for v-for\r\n   */\r\n  parseResult?: ForParseResult\r\n}\r\n\r\n/**\r\n * Static types have several levels.\r\n * Higher levels implies lower levels. e.g. a node that can be stringified\r\n * can always be hoisted and skipped for patch.\r\n */\r\nexport const enum ConstantTypes {\r\n  NOT_CONSTANT = 0,\r\n  CAN_SKIP_PATCH,\r\n  CAN_HOIST,\r\n  CAN_STRINGIFY\r\n}\r\n\r\nexport interface SimpleExpressionNode extends Node {\r\n  type: NodeTypes.SIMPLE_EXPRESSION\r\n  content: string\r\n  isStatic: boolean\r\n  constType: ConstantTypes\r\n  /**\r\n   * Indicates this is an identifier for a hoist vnode call and points to the\r\n   * hoisted node.\r\n   */\r\n  hoisted?: JSChildNode\r\n  /**\r\n   * an expression parsed as the params of a function will track\r\n   * the identifiers declared inside the function body.\r\n   */\r\n  identifiers?: string[]\r\n  isHandlerKey?: boolean\r\n}\r\n\r\nexport interface InterpolationNode extends Node {\r\n  type: NodeTypes.INTERPOLATION\r\n  content: ExpressionNode\r\n}\r\n\r\nexport interface CompoundExpressionNode extends Node {\r\n  type: NodeTypes.COMPOUND_EXPRESSION\r\n  children: (\r\n    | SimpleExpressionNode\r\n    | CompoundExpressionNode\r\n    | InterpolationNode\r\n    | TextNode\r\n    | string\r\n    | symbol\r\n  )[]\r\n\r\n  /**\r\n   * an expression parsed as the params of a function will track\r\n   * the identifiers declared inside the function body.\r\n   */\r\n  identifiers?: string[]\r\n  isHandlerKey?: boolean\r\n}\r\n\r\nexport interface IfNode extends Node {\r\n  type: NodeTypes.IF\r\n  branches: IfBranchNode[]\r\n  codegenNode?: IfConditionalExpression | CacheExpression // <div v-if v-once>\r\n}\r\n\r\nexport interface IfBranchNode extends Node {\r\n  type: NodeTypes.IF_BRANCH\r\n  condition: ExpressionNode | undefined // else\r\n  children: TemplateChildNode[]\r\n  userKey?: AttributeNode | DirectiveNode\r\n}\r\n\r\nexport interface ForNode extends Node {\r\n  type: NodeTypes.FOR\r\n  source: ExpressionNode\r\n  valueAlias: ExpressionNode | undefined\r\n  keyAlias: ExpressionNode | undefined\r\n  objectIndexAlias: ExpressionNode | undefined\r\n  parseResult: ForParseResult\r\n  children: TemplateChildNode[]\r\n  codegenNode?: ForCodegenNode\r\n}\r\n\r\nexport interface TextCallNode extends Node {\r\n  type: NodeTypes.TEXT_CALL\r\n  content: TextNode | InterpolationNode | CompoundExpressionNode\r\n  codegenNode: CallExpression | SimpleExpressionNode // when hoisted\r\n}\r\n\r\nexport type TemplateTextChildNode =\r\n  | TextNode\r\n  | InterpolationNode\r\n  | CompoundExpressionNode\r\n\r\nexport interface VNodeCall extends Node {\r\n  type: NodeTypes.VNODE_CALL\r\n  tag: string | symbol | CallExpression\r\n  props: PropsExpression | undefined\r\n  children:\r\n    | TemplateChildNode[] // multiple children\r\n    | TemplateTextChildNode // single text child\r\n    | SlotsExpression // component slots\r\n    | ForRenderListExpression // v-for fragment call\r\n    | SimpleExpressionNode // hoisted\r\n    | undefined\r\n  patchFlag: string | undefined\r\n  dynamicProps: string | SimpleExpressionNode | undefined\r\n  directives: DirectiveArguments | undefined\r\n  isBlock: boolean\r\n  disableTracking: boolean\r\n  isComponent: boolean\r\n}\r\n\r\n// JS Node Types ---------------------------------------------------------------\r\n\r\n// We also include a number of JavaScript AST nodes for code generation.\r\n// The AST is an intentionally minimal subset just to meet the exact needs of\r\n// Vue render function generation.\r\n\r\nexport type JSChildNode =\r\n  | VNodeCall\r\n  | CallExpression\r\n  | ObjectExpression\r\n  | ArrayExpression\r\n  | ExpressionNode\r\n  | FunctionExpression\r\n  | ConditionalExpression\r\n  | CacheExpression\r\n  | AssignmentExpression\r\n  | SequenceExpression\r\n\r\nexport interface CallExpression extends Node {\r\n  type: NodeTypes.JS_CALL_EXPRESSION\r\n  callee: string | symbol\r\n  arguments: (\r\n    | string\r\n    | symbol\r\n    | JSChildNode\r\n    | SSRCodegenNode\r\n    | TemplateChildNode\r\n    | TemplateChildNode[]\r\n  )[]\r\n}\r\n\r\nexport interface ObjectExpression extends Node {\r\n  type: NodeTypes.JS_OBJECT_EXPRESSION\r\n  properties: Array<Property>\r\n}\r\n\r\nexport interface Property extends Node {\r\n  type: NodeTypes.JS_PROPERTY\r\n  key: ExpressionNode\r\n  value: JSChildNode\r\n}\r\n\r\nexport interface ArrayExpression extends Node {\r\n  type: NodeTypes.JS_ARRAY_EXPRESSION\r\n  elements: Array<string | Node>\r\n}\r\n\r\nexport interface FunctionExpression extends Node {\r\n  type: NodeTypes.JS_FUNCTION_EXPRESSION\r\n  params: ExpressionNode | string | (ExpressionNode | string)[] | undefined\r\n  returns?: TemplateChildNode | TemplateChildNode[] | JSChildNode\r\n  body?: BlockStatement | IfStatement\r\n  newline: boolean\r\n  /**\r\n   * This flag is for codegen to determine whether it needs to generate the\r\n   * withScopeId() wrapper\r\n   */\r\n  isSlot: boolean\r\n  /**\r\n   * __COMPAT__ only, indicates a slot function that should be excluded from\r\n   * the legacy $scopedSlots instance property.\r\n   */\r\n  isNonScopedSlot?: boolean\r\n}\r\n\r\nexport interface ConditionalExpression extends Node {\r\n  type: NodeTypes.JS_CONDITIONAL_EXPRESSION\r\n  test: JSChildNode\r\n  consequent: JSChildNode\r\n  alternate: JSChildNode\r\n  newline: boolean\r\n}\r\n\r\nexport interface CacheExpression extends Node {\r\n  type: NodeTypes.JS_CACHE_EXPRESSION\r\n  index: number\r\n  value: JSChildNode\r\n  isVNode: boolean\r\n}\r\n\r\nexport interface MemoExpression extends CallExpression {\r\n  callee: typeof WITH_MEMO\r\n  arguments: [ExpressionNode, MemoFactory, string, string]\r\n}\r\n\r\ninterface MemoFactory extends FunctionExpression {\r\n  returns: BlockCodegenNode\r\n}\r\n\r\n// SSR-specific Node Types -----------------------------------------------------\r\n\r\nexport type SSRCodegenNode =\r\n  | BlockStatement\r\n  | TemplateLiteral\r\n  | IfStatement\r\n  | AssignmentExpression\r\n  | ReturnStatement\r\n  | SequenceExpression\r\n\r\nexport interface BlockStatement extends Node {\r\n  type: NodeTypes.JS_BLOCK_STATEMENT\r\n  body: (JSChildNode | IfStatement)[]\r\n}\r\n\r\nexport interface TemplateLiteral extends Node {\r\n  type: NodeTypes.JS_TEMPLATE_LITERAL\r\n  elements: (string | JSChildNode)[]\r\n}\r\n\r\nexport interface IfStatement extends Node {\r\n  type: NodeTypes.JS_IF_STATEMENT\r\n  test: ExpressionNode\r\n  consequent: BlockStatement\r\n  alternate: IfStatement | BlockStatement | ReturnStatement | undefined\r\n}\r\n\r\nexport interface AssignmentExpression extends Node {\r\n  type: NodeTypes.JS_ASSIGNMENT_EXPRESSION\r\n  left: SimpleExpressionNode\r\n  right: JSChildNode\r\n}\r\n\r\nexport interface SequenceExpression extends Node {\r\n  type: NodeTypes.JS_SEQUENCE_EXPRESSION\r\n  expressions: JSChildNode[]\r\n}\r\n\r\nexport interface ReturnStatement extends Node {\r\n  type: NodeTypes.JS_RETURN_STATEMENT\r\n  returns: TemplateChildNode | TemplateChildNode[] | JSChildNode\r\n}\r\n\r\n// Codegen Node Types ----------------------------------------------------------\r\n\r\nexport interface DirectiveArguments extends ArrayExpression {\r\n  elements: DirectiveArgumentNode[]\r\n}\r\n\r\nexport interface DirectiveArgumentNode extends ArrayExpression {\r\n  elements: // dir, exp, arg, modifiers\r\n  | [string]\r\n    | [string, ExpressionNode]\r\n    | [string, ExpressionNode, ExpressionNode]\r\n    | [string, ExpressionNode, ExpressionNode, ObjectExpression]\r\n}\r\n\r\n// renderSlot(...)\r\nexport interface RenderSlotCall extends CallExpression {\r\n  callee: typeof RENDER_SLOT\r\n  arguments: // $slots, name, props, fallback\r\n  | [string, string | ExpressionNode]\r\n    | [string, string | ExpressionNode, PropsExpression]\r\n    | [\r\n        string,\r\n        string | ExpressionNode,\r\n        PropsExpression | '{}',\r\n        TemplateChildNode[]\r\n      ]\r\n}\r\n\r\nexport type SlotsExpression = SlotsObjectExpression | DynamicSlotsExpression\r\n\r\n// { foo: () => [...] }\r\nexport interface SlotsObjectExpression extends ObjectExpression {\r\n  properties: SlotsObjectProperty[]\r\n}\r\n\r\nexport interface SlotsObjectProperty extends Property {\r\n  value: SlotFunctionExpression\r\n}\r\n\r\nexport interface SlotFunctionExpression extends FunctionExpression {\r\n  returns: TemplateChildNode[]\r\n}\r\n\r\n// createSlots({ ... }, [\r\n//    foo ? () => [] : undefined,\r\n//    renderList(list, i => () => [i])\r\n// ])\r\nexport interface DynamicSlotsExpression extends CallExpression {\r\n  callee: typeof CREATE_SLOTS\r\n  arguments: [SlotsObjectExpression, DynamicSlotEntries]\r\n}\r\n\r\nexport interface DynamicSlotEntries extends ArrayExpression {\r\n  elements: (ConditionalDynamicSlotNode | ListDynamicSlotNode)[]\r\n}\r\n\r\nexport interface ConditionalDynamicSlotNode extends ConditionalExpression {\r\n  consequent: DynamicSlotNode\r\n  alternate: DynamicSlotNode | SimpleExpressionNode\r\n}\r\n\r\nexport interface ListDynamicSlotNode extends CallExpression {\r\n  callee: typeof RENDER_LIST\r\n  arguments: [ExpressionNode, ListDynamicSlotIterator]\r\n}\r\n\r\nexport interface ListDynamicSlotIterator extends FunctionExpression {\r\n  returns: DynamicSlotNode\r\n}\r\n\r\nexport interface DynamicSlotNode extends ObjectExpression {\r\n  properties: [Property, DynamicSlotFnProperty]\r\n}\r\n\r\nexport interface DynamicSlotFnProperty extends Property {\r\n  value: SlotFunctionExpression\r\n}\r\n\r\nexport type BlockCodegenNode = VNodeCall | RenderSlotCall\r\n\r\nexport interface IfConditionalExpression extends ConditionalExpression {\r\n  consequent: BlockCodegenNode | MemoExpression\r\n  alternate: BlockCodegenNode | IfConditionalExpression | MemoExpression\r\n}\r\n\r\nexport interface ForCodegenNode extends VNodeCall {\r\n  isBlock: true\r\n  tag: typeof FRAGMENT\r\n  props: undefined\r\n  children: ForRenderListExpression\r\n  patchFlag: string\r\n  disableTracking: boolean\r\n}\r\n\r\nexport interface ForRenderListExpression extends CallExpression {\r\n  callee: typeof RENDER_LIST\r\n  arguments: [ExpressionNode, ForIteratorExpression]\r\n}\r\n\r\nexport interface ForIteratorExpression extends FunctionExpression {\r\n  returns: BlockCodegenNode\r\n}\r\n\r\n// AST Utilities ---------------------------------------------------------------\r\n\r\n// Some expressions, e.g. sequence and conditional expressions, are never\r\n// associated with template nodes, so their source locations are just a stub.\r\n// Container types like CompoundExpression also don't need a real location.\r\nexport const locStub: SourceLocation = {\r\n  source: '',\r\n  start: { line: 1, column: 1, offset: 0 },\r\n  end: { line: 1, column: 1, offset: 0 }\r\n}\r\n\r\nexport function createRoot(\r\n  children: TemplateChildNode[],\r\n  loc = locStub\r\n): RootNode {\r\n  return {\r\n    type: NodeTypes.ROOT,\r\n    children,\r\n    helpers: [],\r\n    components: [],\r\n    directives: [],\r\n    hoists: [],\r\n    imports: [],\r\n    cached: 0,\r\n    temps: 0,\r\n    codegenNode: undefined,\r\n    loc\r\n  }\r\n}\r\n\r\nexport function createVNodeCall(\r\n  context: TransformContext | null,\r\n  tag: VNodeCall['tag'],\r\n  props?: VNodeCall['props'],\r\n  children?: VNodeCall['children'],\r\n  patchFlag?: VNodeCall['patchFlag'],\r\n  dynamicProps?: VNodeCall['dynamicProps'],\r\n  directives?: VNodeCall['directives'],\r\n  isBlock: VNodeCall['isBlock'] = false,\r\n  disableTracking: VNodeCall['disableTracking'] = false,\r\n  isComponent: VNodeCall['isComponent'] = false,\r\n  loc = locStub\r\n): VNodeCall {\r\n  if (context) {\r\n    if (isBlock) {\r\n      context.helper(OPEN_BLOCK)\r\n      context.helper(getVNodeBlockHelper(context.inSSR, isComponent))\r\n    } else {\r\n      context.helper(getVNodeHelper(context.inSSR, isComponent))\r\n    }\r\n    if (directives) {\r\n      context.helper(WITH_DIRECTIVES)\r\n    }\r\n  }\r\n\r\n  return {\r\n    type: NodeTypes.VNODE_CALL,\r\n    tag,\r\n    props,\r\n    children,\r\n    patchFlag,\r\n    dynamicProps,\r\n    directives,\r\n    isBlock,\r\n    disableTracking,\r\n    isComponent,\r\n    loc\r\n  }\r\n}\r\n\r\nexport function createArrayExpression(\r\n  elements: ArrayExpression['elements'],\r\n  loc: SourceLocation = locStub\r\n): ArrayExpression {\r\n  return {\r\n    type: NodeTypes.JS_ARRAY_EXPRESSION,\r\n    loc,\r\n    elements\r\n  }\r\n}\r\n\r\nexport function createObjectExpression(\r\n  properties: ObjectExpression['properties'],\r\n  loc: SourceLocation = locStub\r\n): ObjectExpression {\r\n  return {\r\n    type: NodeTypes.JS_OBJECT_EXPRESSION,\r\n    loc,\r\n    properties\r\n  }\r\n}\r\n\r\nexport function createObjectProperty(\r\n  key: Property['key'] | string,\r\n  value: Property['value']\r\n): Property {\r\n  return {\r\n    type: NodeTypes.JS_PROPERTY,\r\n    loc: locStub,\r\n    key: isString(key) ? createSimpleExpression(key, true) : key,\r\n    value\r\n  }\r\n}\r\n\r\nexport function createSimpleExpression(\r\n  content: SimpleExpressionNode['content'],\r\n  isStatic: SimpleExpressionNode['isStatic'] = false,\r\n  loc: SourceLocation = locStub,\r\n  constType: ConstantTypes = ConstantTypes.NOT_CONSTANT\r\n): SimpleExpressionNode {\r\n  return {\r\n    type: NodeTypes.SIMPLE_EXPRESSION,\r\n    loc,\r\n    content,\r\n    isStatic,\r\n    constType: isStatic ? ConstantTypes.CAN_STRINGIFY : constType\r\n  }\r\n}\r\n\r\nexport function createInterpolation(\r\n  content: InterpolationNode['content'] | string,\r\n  loc: SourceLocation\r\n): InterpolationNode {\r\n  return {\r\n    type: NodeTypes.INTERPOLATION,\r\n    loc,\r\n    content: isString(content)\r\n      ? createSimpleExpression(content, false, loc)\r\n      : content\r\n  }\r\n}\r\n\r\nexport function createCompoundExpression(\r\n  children: CompoundExpressionNode['children'],\r\n  loc: SourceLocation = locStub\r\n): CompoundExpressionNode {\r\n  return {\r\n    type: NodeTypes.COMPOUND_EXPRESSION,\r\n    loc,\r\n    children\r\n  }\r\n}\r\n\r\ntype InferCodegenNodeType<T> = T extends typeof RENDER_SLOT\r\n  ? RenderSlotCall\r\n  : CallExpression\r\n\r\nexport function createCallExpression<T extends CallExpression['callee']>(\r\n  callee: T,\r\n  args: CallExpression['arguments'] = [],\r\n  loc: SourceLocation = locStub\r\n): InferCodegenNodeType<T> {\r\n  return {\r\n    type: NodeTypes.JS_CALL_EXPRESSION,\r\n    loc,\r\n    callee,\r\n    arguments: args\r\n  } as InferCodegenNodeType<T>\r\n}\r\n\r\nexport function createFunctionExpression(\r\n  params: FunctionExpression['params'],\r\n  returns: FunctionExpression['returns'] = undefined,\r\n  newline: boolean = false,\r\n  isSlot: boolean = false,\r\n  loc: SourceLocation = locStub\r\n): FunctionExpression {\r\n  return {\r\n    type: NodeTypes.JS_FUNCTION_EXPRESSION,\r\n    params,\r\n    returns,\r\n    newline,\r\n    isSlot,\r\n    loc\r\n  }\r\n}\r\n\r\nexport function createConditionalExpression(\r\n  test: ConditionalExpression['test'],\r\n  consequent: ConditionalExpression['consequent'],\r\n  alternate: ConditionalExpression['alternate'],\r\n  newline = true\r\n): ConditionalExpression {\r\n  return {\r\n    type: NodeTypes.JS_CONDITIONAL_EXPRESSION,\r\n    test,\r\n    consequent,\r\n    alternate,\r\n    newline,\r\n    loc: locStub\r\n  }\r\n}\r\n\r\nexport function createCacheExpression(\r\n  index: number,\r\n  value: JSChildNode,\r\n  isVNode: boolean = false\r\n): CacheExpression {\r\n  return {\r\n    type: NodeTypes.JS_CACHE_EXPRESSION,\r\n    index,\r\n    value,\r\n    isVNode,\r\n    loc: locStub\r\n  }\r\n}\r\n\r\nexport function createBlockStatement(\r\n  body: BlockStatement['body']\r\n): BlockStatement {\r\n  return {\r\n    type: NodeTypes.JS_BLOCK_STATEMENT,\r\n    body,\r\n    loc: locStub\r\n  }\r\n}\r\n\r\nexport function createTemplateLiteral(\r\n  elements: TemplateLiteral['elements']\r\n): TemplateLiteral {\r\n  return {\r\n    type: NodeTypes.JS_TEMPLATE_LITERAL,\r\n    elements,\r\n    loc: locStub\r\n  }\r\n}\r\n\r\nexport function createIfStatement(\r\n  test: IfStatement['test'],\r\n  consequent: IfStatement['consequent'],\r\n  alternate?: IfStatement['alternate']\r\n): IfStatement {\r\n  return {\r\n    type: NodeTypes.JS_IF_STATEMENT,\r\n    test,\r\n    consequent,\r\n    alternate,\r\n    loc: locStub\r\n  }\r\n}\r\n\r\nexport function createAssignmentExpression(\r\n  left: AssignmentExpression['left'],\r\n  right: AssignmentExpression['right']\r\n): AssignmentExpression {\r\n  return {\r\n    type: NodeTypes.JS_ASSIGNMENT_EXPRESSION,\r\n    left,\r\n    right,\r\n    loc: locStub\r\n  }\r\n}\r\n\r\nexport function createSequenceExpression(\r\n  expressions: SequenceExpression['expressions']\r\n): SequenceExpression {\r\n  return {\r\n    type: NodeTypes.JS_SEQUENCE_EXPRESSION,\r\n    expressions,\r\n    loc: locStub\r\n  }\r\n}\r\n\r\nexport function createReturnStatement(\r\n  returns: ReturnStatement['returns']\r\n): ReturnStatement {\r\n  return {\r\n    type: NodeTypes.JS_RETURN_STATEMENT,\r\n    returns,\r\n    loc: locStub\r\n  }\r\n}\r\n","import {\r\n  SourceLocation,\r\n  Position,\r\n  ElementNode,\r\n  NodeTypes,\r\n  CallExpression,\r\n  createCallExpression,\r\n  DirectiveNode,\r\n  ElementTypes,\r\n  TemplateChildNode,\r\n  RootNode,\r\n  ObjectExpression,\r\n  Property,\r\n  JSChildNode,\r\n  createObjectExpression,\r\n  SlotOutletNode,\r\n  TemplateNode,\r\n  RenderSlotCall,\r\n  ExpressionNode,\r\n  IfBranchNode,\r\n  TextNode,\r\n  InterpolationNode,\r\n  VNodeCall,\r\n  SimpleExpressionNode,\r\n  BlockCodegenNode,\r\n  MemoExpression\r\n} from './ast'\r\nimport { TransformContext } from './transform'\r\nimport {\r\n  MERGE_PROPS,\r\n  TELEPORT,\r\n  SUSPENSE,\r\n  KEEP_ALIVE,\r\n  BASE_TRANSITION,\r\n  TO_HANDLERS,\r\n  NORMALIZE_PROPS,\r\n  GUARD_REACTIVE_PROPS,\r\n  CREATE_BLOCK,\r\n  CREATE_ELEMENT_BLOCK,\r\n  CREATE_VNODE,\r\n  CREATE_ELEMENT_VNODE,\r\n  WITH_MEMO,\r\n  OPEN_BLOCK\r\n} from './runtimeHelpers'\r\nimport { isString, isObject, hyphenate, extend } from '@vue/shared'\r\nimport { PropsExpression } from './transforms/transformElement'\r\n\r\nexport const isStaticExp = (p: JSChildNode): p is SimpleExpressionNode =>\r\n  p.type === NodeTypes.SIMPLE_EXPRESSION && p.isStatic\r\n\r\nexport const isBuiltInType = (tag: string, expected: string): boolean =>\r\n  tag === expected || tag === hyphenate(expected)\r\n\r\nexport function isCoreComponent(tag: string): symbol | void {\r\n  if (isBuiltInType(tag, 'Teleport')) {\r\n    return TELEPORT\r\n  } else if (isBuiltInType(tag, 'Suspense')) {\r\n    return SUSPENSE\r\n  } else if (isBuiltInType(tag, 'KeepAlive')) {\r\n    return KEEP_ALIVE\r\n  } else if (isBuiltInType(tag, 'BaseTransition')) {\r\n    return BASE_TRANSITION\r\n  }\r\n}\r\n\r\nconst nonIdentifierRE = /^\\d|[^\\$\\w]/\r\nexport const isSimpleIdentifier = (name: string): boolean =>\r\n  !nonIdentifierRE.test(name)\r\n\r\nconst enum MemberExpLexState {\r\n  inMemberExp,\r\n  inBrackets,\r\n  inParens,\r\n  inString\r\n}\r\n\r\nconst validFirstIdentCharRE = /[A-Za-z_$\\xA0-\\uFFFF]/\r\nconst validIdentCharRE = /[\\.\\?\\w$\\xA0-\\uFFFF]/\r\nconst whitespaceRE = /\\s+[.[]\\s*|\\s*[.[]\\s+/g\r\n\r\n/**\r\n * Simple lexer to check if an expression is a member expression. This is\r\n * lax and only checks validity at the root level (i.e. does not validate exps\r\n * inside square brackets), but it's ok since these are only used on template\r\n * expressions and false positives are invalid expressions in the first place.\r\n */\r\nexport const isMemberExpression = (path: string): boolean => {\r\n  // remove whitespaces around . or [ first\r\n  path = path.trim().replace(whitespaceRE, s => s.trim())\r\n\r\n  let state = MemberExpLexState.inMemberExp\r\n  let stateStack: MemberExpLexState[] = []\r\n  let currentOpenBracketCount = 0\r\n  let currentOpenParensCount = 0\r\n  let currentStringType: \"'\" | '\"' | '`' | null = null\r\n\r\n  for (let i = 0; i < path.length; i++) {\r\n    const char = path.charAt(i)\r\n    switch (state) {\r\n      case MemberExpLexState.inMemberExp:\r\n        if (char === '[') {\r\n          stateStack.push(state)\r\n          state = MemberExpLexState.inBrackets\r\n          currentOpenBracketCount++\r\n        } else if (char === '(') {\r\n          stateStack.push(state)\r\n          state = MemberExpLexState.inParens\r\n          currentOpenParensCount++\r\n        } else if (\r\n          !(i === 0 ? validFirstIdentCharRE : validIdentCharRE).test(char)\r\n        ) {\r\n          return false\r\n        }\r\n        break\r\n      case MemberExpLexState.inBrackets:\r\n        if (char === `'` || char === `\"` || char === '`') {\r\n          stateStack.push(state)\r\n          state = MemberExpLexState.inString\r\n          currentStringType = char\r\n        } else if (char === `[`) {\r\n          currentOpenBracketCount++\r\n        } else if (char === `]`) {\r\n          if (!--currentOpenBracketCount) {\r\n            state = stateStack.pop()!\r\n          }\r\n        }\r\n        break\r\n      case MemberExpLexState.inParens:\r\n        if (char === `'` || char === `\"` || char === '`') {\r\n          stateStack.push(state)\r\n          state = MemberExpLexState.inString\r\n          currentStringType = char\r\n        } else if (char === `(`) {\r\n          currentOpenParensCount++\r\n        } else if (char === `)`) {\r\n          // if the exp ends as a call then it should not be considered valid\r\n          if (i === path.length - 1) {\r\n            return false\r\n          }\r\n          if (!--currentOpenParensCount) {\r\n            state = stateStack.pop()!\r\n          }\r\n        }\r\n        break\r\n      case MemberExpLexState.inString:\r\n        if (char === currentStringType) {\r\n          state = stateStack.pop()!\r\n          currentStringType = null\r\n        }\r\n        break\r\n    }\r\n  }\r\n  return !currentOpenBracketCount && !currentOpenParensCount\r\n}\r\n\r\nexport function getInnerRange(\r\n  loc: SourceLocation,\r\n  offset: number,\r\n  length?: number\r\n): SourceLocation {\r\n  __TEST__ && assert(offset <= loc.source.length)\r\n  const source = loc.source.substr(offset, length)\r\n  const newLoc: SourceLocation = {\r\n    source,\r\n    start: advancePositionWithClone(loc.start, loc.source, offset),\r\n    end: loc.end\r\n  }\r\n\r\n  if (length != null) {\r\n    __TEST__ && assert(offset + length <= loc.source.length)\r\n    newLoc.end = advancePositionWithClone(\r\n      loc.start,\r\n      loc.source,\r\n      offset + length\r\n    )\r\n  }\r\n\r\n  return newLoc\r\n}\r\n\r\nexport function advancePositionWithClone(\r\n  pos: Position,\r\n  source: string,\r\n  numberOfCharacters: number = source.length\r\n): Position {\r\n  return advancePositionWithMutation(\r\n    extend({}, pos),\r\n    source,\r\n    numberOfCharacters\r\n  )\r\n}\r\n\r\n// advance by mutation without cloning (for performance reasons), since this\r\n// gets called a lot in the parser\r\nexport function advancePositionWithMutation(\r\n  pos: Position,\r\n  source: string,\r\n  numberOfCharacters: number = source.length\r\n): Position {\r\n  let linesCount = 0\r\n  let lastNewLinePos = -1\r\n  for (let i = 0; i < numberOfCharacters; i++) {\r\n    if (source.charCodeAt(i) === 10 /* newline char code */) {\r\n      linesCount++\r\n      lastNewLinePos = i\r\n    }\r\n  }\r\n\r\n  pos.offset += numberOfCharacters\r\n  pos.line += linesCount\r\n  pos.column =\r\n    lastNewLinePos === -1\r\n      ? pos.column + numberOfCharacters\r\n      : numberOfCharacters - lastNewLinePos\r\n\r\n  return pos\r\n}\r\n\r\nexport function assert(condition: boolean, msg?: string) {\r\n  /* istanbul ignore if */\r\n  if (!condition) {\r\n    throw new Error(msg || `unexpected compiler condition`)\r\n  }\r\n}\r\n\r\nexport function findDir(\r\n  node: ElementNode,\r\n  name: string | RegExp,\r\n  allowEmpty: boolean = false\r\n): DirectiveNode | undefined {\r\n  for (let i = 0; i < node.props.length; i++) {\r\n    const p = node.props[i]\r\n    if (\r\n      p.type === NodeTypes.DIRECTIVE &&\r\n      (allowEmpty || p.exp) &&\r\n      (isString(name) ? p.name === name : name.test(p.name))\r\n    ) {\r\n      return p\r\n    }\r\n  }\r\n}\r\n\r\nexport function findProp(\r\n  node: ElementNode,\r\n  name: string,\r\n  dynamicOnly: boolean = false,\r\n  allowEmpty: boolean = false\r\n): ElementNode['props'][0] | undefined {\r\n  for (let i = 0; i < node.props.length; i++) {\r\n    const p = node.props[i]\r\n    if (p.type === NodeTypes.ATTRIBUTE) {\r\n      if (dynamicOnly) continue\r\n      if (p.name === name && (p.value || allowEmpty)) {\r\n        return p\r\n      }\r\n    } else if (\r\n      p.name === 'bind' &&\r\n      (p.exp || allowEmpty) &&\r\n      isBindKey(p.arg, name)\r\n    ) {\r\n      return p\r\n    }\r\n  }\r\n}\r\n\r\nexport function isBindKey(arg: DirectiveNode['arg'], name: string): boolean {\r\n  return !!(arg && isStaticExp(arg) && arg.content === name)\r\n}\r\n\r\nexport function hasDynamicKeyVBind(node: ElementNode): boolean {\r\n  return node.props.some(\r\n    p =>\r\n      p.type === NodeTypes.DIRECTIVE &&\r\n      p.name === 'bind' &&\r\n      (!p.arg || // v-bind=\"obj\"\r\n        p.arg.type !== NodeTypes.SIMPLE_EXPRESSION || // v-bind:[_ctx.foo]\r\n        !p.arg.isStatic) // v-bind:[foo]\r\n  )\r\n}\r\n\r\nexport function isText(\r\n  node: TemplateChildNode\r\n): node is TextNode | InterpolationNode {\r\n  return node.type === NodeTypes.INTERPOLATION || node.type === NodeTypes.TEXT\r\n}\r\n\r\nexport function isVSlot(p: ElementNode['props'][0]): p is DirectiveNode {\r\n  return p.type === NodeTypes.DIRECTIVE && p.name === 'slot'\r\n}\r\n\r\nexport function isTemplateNode(\r\n  node: RootNode | TemplateChildNode\r\n): node is TemplateNode {\r\n  return (\r\n    node.type === NodeTypes.ELEMENT && node.tagType === ElementTypes.TEMPLATE\r\n  )\r\n}\r\n\r\nexport function isSlotOutlet(\r\n  node: RootNode | TemplateChildNode\r\n): node is SlotOutletNode {\r\n  return node.type === NodeTypes.ELEMENT && node.tagType === ElementTypes.SLOT\r\n}\r\n\r\nexport function getVNodeHelper(ssr: boolean, isComponent: boolean) {\r\n  return ssr || isComponent ? CREATE_VNODE : CREATE_ELEMENT_VNODE\r\n}\r\n\r\nexport function getVNodeBlockHelper(ssr: boolean, isComponent: boolean) {\r\n  return ssr || isComponent ? CREATE_BLOCK : CREATE_ELEMENT_BLOCK\r\n}\r\n\r\nconst propsHelperSet = new Set([NORMALIZE_PROPS, GUARD_REACTIVE_PROPS])\r\n\r\nfunction getUnnormalizedProps(\r\n  props: PropsExpression | '{}',\r\n  callPath: CallExpression[] = []\r\n): [PropsExpression | '{}', CallExpression[]] {\r\n  if (\r\n    props &&\r\n    !isString(props) &&\r\n    props.type === NodeTypes.JS_CALL_EXPRESSION\r\n  ) {\r\n    const callee = props.callee\r\n    if (!isString(callee) && propsHelperSet.has(callee)) {\r\n      return getUnnormalizedProps(\r\n        props.arguments[0] as PropsExpression,\r\n        callPath.concat(props)\r\n      )\r\n    }\r\n  }\r\n  return [props, callPath]\r\n}\r\nexport function injectProp(\r\n  node: VNodeCall | RenderSlotCall,\r\n  prop: Property,\r\n  context: TransformContext\r\n) {\r\n  let propsWithInjection: ObjectExpression | CallExpression | undefined\r\n  const originalProps =\r\n    node.type === NodeTypes.VNODE_CALL ? node.props : node.arguments[2]\r\n\r\n  /**\r\n   * 1. mergeProps(...)\r\n   * 2. toHandlers(...)\r\n   * 3. normalizeProps(...)\r\n   * 4. normalizeProps(guardReactiveProps(...))\r\n   *\r\n   * we need to get the real props before normalization\r\n   */\r\n  let props = originalProps\r\n  let callPath: CallExpression[] = []\r\n  let parentCall: CallExpression | undefined\r\n  if (\r\n    props &&\r\n    !isString(props) &&\r\n    props.type === NodeTypes.JS_CALL_EXPRESSION\r\n  ) {\r\n    const ret = getUnnormalizedProps(props)\r\n    props = ret[0]\r\n    callPath = ret[1]\r\n    parentCall = callPath[callPath.length - 1]\r\n  }\r\n\r\n  if (props == null || isString(props)) {\r\n    propsWithInjection = createObjectExpression([prop])\r\n  } else if (props.type === NodeTypes.JS_CALL_EXPRESSION) {\r\n    // merged props... add ours\r\n    // only inject key to object literal if it's the first argument so that\r\n    // if doesn't override user provided keys\r\n    const first = props.arguments[0] as string | JSChildNode\r\n    if (!isString(first) && first.type === NodeTypes.JS_OBJECT_EXPRESSION) {\r\n      first.properties.unshift(prop)\r\n    } else {\r\n      if (props.callee === TO_HANDLERS) {\r\n        // #2366\r\n        propsWithInjection = createCallExpression(context.helper(MERGE_PROPS), [\r\n          createObjectExpression([prop]),\r\n          props\r\n        ])\r\n      } else {\r\n        props.arguments.unshift(createObjectExpression([prop]))\r\n      }\r\n    }\r\n    !propsWithInjection && (propsWithInjection = props)\r\n  } else if (props.type === NodeTypes.JS_OBJECT_EXPRESSION) {\r\n    let alreadyExists = false\r\n    // check existing key to avoid overriding user provided keys\r\n    if (prop.key.type === NodeTypes.SIMPLE_EXPRESSION) {\r\n      const propKeyName = prop.key.content\r\n      alreadyExists = props.properties.some(\r\n        p =>\r\n          p.key.type === NodeTypes.SIMPLE_EXPRESSION &&\r\n          p.key.content === propKeyName\r\n      )\r\n    }\r\n    if (!alreadyExists) {\r\n      props.properties.unshift(prop)\r\n    }\r\n    propsWithInjection = props\r\n  } else {\r\n    // single v-bind with expression, return a merged replacement\r\n    propsWithInjection = createCallExpression(context.helper(MERGE_PROPS), [\r\n      createObjectExpression([prop]),\r\n      props\r\n    ])\r\n    // in the case of nested helper call, e.g. `normalizeProps(guardReactiveProps(props))`,\r\n    // it will be rewritten as `normalizeProps(mergeProps({ key: 0 }, props))`,\r\n    // the `guardReactiveProps` will no longer be needed\r\n    if (parentCall && parentCall.callee === GUARD_REACTIVE_PROPS) {\r\n      parentCall = callPath[callPath.length - 2]\r\n    }\r\n  }\r\n  if (node.type === NodeTypes.VNODE_CALL) {\r\n    if (parentCall) {\r\n      parentCall.arguments[0] = propsWithInjection\r\n    } else {\r\n      node.props = propsWithInjection\r\n    }\r\n  } else {\r\n    if (parentCall) {\r\n      parentCall.arguments[0] = propsWithInjection\r\n    } else {\r\n      node.arguments[2] = propsWithInjection\r\n    }\r\n  }\r\n}\r\n\r\nexport function toValidAssetId(\r\n  name: string,\r\n  type: 'component' | 'directive' | 'filter'\r\n): string {\r\n  return `_${type}_${name.replace(/[^\\w]/g, '_')}`\r\n}\r\n\r\n// Check if a node contains expressions that reference current context scope ids\r\nexport function hasScopeRef(\r\n  node: TemplateChildNode | IfBranchNode | ExpressionNode | undefined,\r\n  ids: TransformContext['identifiers']\r\n): boolean {\r\n  if (!node || Object.keys(ids).length === 0) {\r\n    return false\r\n  }\r\n  switch (node.type) {\r\n    case NodeTypes.ELEMENT:\r\n      for (let i = 0; i < node.props.length; i++) {\r\n        const p = node.props[i]\r\n        if (\r\n          p.type === NodeTypes.DIRECTIVE &&\r\n          (hasScopeRef(p.arg, ids) || hasScopeRef(p.exp, ids))\r\n        ) {\r\n          return true\r\n        }\r\n      }\r\n      return node.children.some(c => hasScopeRef(c, ids))\r\n    case NodeTypes.FOR:\r\n      if (hasScopeRef(node.source, ids)) {\r\n        return true\r\n      }\r\n      return node.children.some(c => hasScopeRef(c, ids))\r\n    case NodeTypes.IF:\r\n      return node.branches.some(b => hasScopeRef(b, ids))\r\n    case NodeTypes.IF_BRANCH:\r\n      if (hasScopeRef(node.condition, ids)) {\r\n        return true\r\n      }\r\n      return node.children.some(c => hasScopeRef(c, ids))\r\n    case NodeTypes.SIMPLE_EXPRESSION:\r\n      return (\r\n        !node.isStatic &&\r\n        isSimpleIdentifier(node.content) &&\r\n        !!ids[node.content]\r\n      )\r\n    case NodeTypes.COMPOUND_EXPRESSION:\r\n      return node.children.some(c => isObject(c) && hasScopeRef(c, ids))\r\n    case NodeTypes.INTERPOLATION:\r\n    case NodeTypes.TEXT_CALL:\r\n      return hasScopeRef(node.content, ids)\r\n    case NodeTypes.TEXT:\r\n    case NodeTypes.COMMENT:\r\n      return false\r\n    default:\r\n      if (__DEV__) {\r\n        const exhaustiveCheck: never = node\r\n        exhaustiveCheck\r\n      }\r\n      return false\r\n  }\r\n}\r\n\r\nexport function getMemoedVNodeCall(node: BlockCodegenNode | MemoExpression) {\r\n  if (node.type === NodeTypes.JS_CALL_EXPRESSION && node.callee === WITH_MEMO) {\r\n    return node.arguments[1].returns as VNodeCall\r\n  } else {\r\n    return node\r\n  }\r\n}\r\n\r\nexport function makeBlock(\r\n  node: VNodeCall,\r\n  { helper, removeHelper, inSSR }: TransformContext\r\n) {\r\n  if (!node.isBlock) {\r\n    node.isBlock = true\r\n    removeHelper(getVNodeHelper(inSSR, node.isComponent))\r\n    helper(OPEN_BLOCK)\r\n    helper(getVNodeBlockHelper(inSSR, node.isComponent))\r\n  }\r\n}\r\n","import { ErrorHandlingOptions, ParserOptions } from './options'\r\nimport { NO, isArray, makeMap, extend } from '@vue/shared'\r\nimport {\r\n  ErrorCodes,\r\n  createCompilerError,\r\n  defaultOnError,\r\n  defaultOnWarn\r\n} from './errors'\r\nimport {\r\n  assert,\r\n  advancePositionWithMutation,\r\n  advancePositionWithClone,\r\n  isCoreComponent,\r\n  isBindKey\r\n} from './utils'\r\nimport {\r\n  Namespaces,\r\n  AttributeNode,\r\n  CommentNode,\r\n  DirectiveNode,\r\n  ElementNode,\r\n  ElementTypes,\r\n  ExpressionNode,\r\n  NodeTypes,\r\n  Position,\r\n  RootNode,\r\n  SourceLocation,\r\n  TextNode,\r\n  TemplateChildNode,\r\n  InterpolationNode,\r\n  createRoot,\r\n  ConstantTypes\r\n} from './ast'\r\nimport {\r\n  checkCompatEnabled,\r\n  CompilerCompatOptions,\r\n  CompilerDeprecationTypes,\r\n  isCompatEnabled,\r\n  warnDeprecation\r\n} from './compat/compatConfig'\r\n\r\ntype OptionalOptions =\r\n  | 'whitespace'\r\n  | 'isNativeTag'\r\n  | 'isBuiltInComponent'\r\n  | keyof CompilerCompatOptions\r\ntype MergedParserOptions = Omit<Required<ParserOptions>, OptionalOptions> &\r\n  Pick<ParserOptions, OptionalOptions>\r\ntype AttributeValue =\r\n  | {\r\n      content: string\r\n      isQuoted: boolean\r\n      loc: SourceLocation\r\n    }\r\n  | undefined\r\n\r\n// The default decoder only provides escapes for characters reserved as part of\r\n// the template syntax, and is only used if the custom renderer did not provide\r\n// a platform-specific decoder.\r\nconst decodeRE = /&(gt|lt|amp|apos|quot);/g\r\nconst decodeMap: Record<string, string> = {\r\n  gt: '>',\r\n  lt: '<',\r\n  amp: '&',\r\n  apos: \"'\",\r\n  quot: '\"'\r\n}\r\n\r\nexport const defaultParserOptions: MergedParserOptions = {\r\n  delimiters: [`{{`, `}}`],\r\n  getNamespace: () => Namespaces.HTML,\r\n  getTextMode: () => TextModes.DATA,\r\n  isVoidTag: NO,\r\n  isPreTag: NO,\r\n  isCustomElement: NO,\r\n  decodeEntities: (rawText: string): string =>\r\n    rawText.replace(decodeRE, (_, p1) => decodeMap[p1]),\r\n  onError: defaultOnError,\r\n  onWarn: defaultOnWarn,\r\n  comments: __DEV__\r\n}\r\n\r\nexport const enum TextModes {\r\n  //          | Elements | Entities | End sign              | Inside of\r\n  DATA, //    | ✔        | ✔        | End tags of ancestors |\r\n  RCDATA, //  | ✘        | ✔        | End tag of the parent | <textarea>\r\n  RAWTEXT, // | ✘        | ✘        | End tag of the parent | <style>,<script>\r\n  CDATA,\r\n  ATTRIBUTE_VALUE\r\n}\r\n\r\nexport interface ParserContext {\r\n  options: MergedParserOptions\r\n  readonly originalSource: string\r\n  source: string\r\n  offset: number\r\n  line: number\r\n  column: number\r\n  inPre: boolean // HTML <pre> tag, preserve whitespaces\r\n  inVPre: boolean // v-pre, do not process directives and interpolations\r\n  onWarn: NonNullable<ErrorHandlingOptions['onWarn']>\r\n}\r\n\r\nexport function baseParse(\r\n  content: string,\r\n  options: ParserOptions = {}\r\n): RootNode {\r\n  const context = createParserContext(content, options)\r\n  const start = getCursor(context)\r\n  return createRoot(\r\n    parseChildren(context, TextModes.DATA, []),\r\n    getSelection(context, start)\r\n  )\r\n}\r\n\r\nfunction createParserContext(\r\n  content: string,\r\n  rawOptions: ParserOptions\r\n): ParserContext {\r\n  const options = extend({}, defaultParserOptions)\r\n\r\n  let key: keyof ParserOptions\r\n  for (key in rawOptions) {\r\n    // @ts-ignore\r\n    options[key] =\r\n      rawOptions[key] === undefined\r\n        ? defaultParserOptions[key]\r\n        : rawOptions[key]\r\n  }\r\n  return {\r\n    options,\r\n    column: 1,\r\n    line: 1,\r\n    offset: 0,\r\n    originalSource: content,\r\n    source: content,\r\n    inPre: false,\r\n    inVPre: false,\r\n    onWarn: options.onWarn\r\n  }\r\n}\r\n\r\nfunction parseChildren(\r\n  context: ParserContext,\r\n  mode: TextModes,\r\n  ancestors: ElementNode[]\r\n): TemplateChildNode[] {\r\n  const parent = last(ancestors)\r\n  const ns = parent ? parent.ns : Namespaces.HTML\r\n  const nodes: TemplateChildNode[] = []\r\n\r\n  while (!isEnd(context, mode, ancestors)) {\r\n    __TEST__ && assert(context.source.length > 0)\r\n    const s = context.source\r\n    let node: TemplateChildNode | TemplateChildNode[] | undefined = undefined\r\n\r\n    if (mode === TextModes.DATA || mode === TextModes.RCDATA) {\r\n      if (!context.inVPre && startsWith(s, context.options.delimiters[0])) {\r\n        // '{{'\r\n        node = parseInterpolation(context, mode)\r\n      } else if (mode === TextModes.DATA && s[0] === '<') {\r\n        // https://html.spec.whatwg.org/multipage/parsing.html#tag-open-state\r\n        if (s.length === 1) {\r\n          emitError(context, ErrorCodes.EOF_BEFORE_TAG_NAME, 1)\r\n        } else if (s[1] === '!') {\r\n          // https://html.spec.whatwg.org/multipage/parsing.html#markup-declaration-open-state\r\n          if (startsWith(s, '<!--')) {\r\n            node = parseComment(context)\r\n          } else if (startsWith(s, '<!DOCTYPE')) {\r\n            // Ignore DOCTYPE by a limitation.\r\n            node = parseBogusComment(context)\r\n          } else if (startsWith(s, '<![CDATA[')) {\r\n            if (ns !== Namespaces.HTML) {\r\n              node = parseCDATA(context, ancestors)\r\n            } else {\r\n              emitError(context, ErrorCodes.CDATA_IN_HTML_CONTENT)\r\n              node = parseBogusComment(context)\r\n            }\r\n          } else {\r\n            emitError(context, ErrorCodes.INCORRECTLY_OPENED_COMMENT)\r\n            node = parseBogusComment(context)\r\n          }\r\n        } else if (s[1] === '/') {\r\n          // https://html.spec.whatwg.org/multipage/parsing.html#end-tag-open-state\r\n          if (s.length === 2) {\r\n            emitError(context, ErrorCodes.EOF_BEFORE_TAG_NAME, 2)\r\n          } else if (s[2] === '>') {\r\n            emitError(context, ErrorCodes.MISSING_END_TAG_NAME, 2)\r\n            advanceBy(context, 3)\r\n            continue\r\n          } else if (/[a-z]/i.test(s[2])) {\r\n            emitError(context, ErrorCodes.X_INVALID_END_TAG)\r\n            parseTag(context, TagType.End, parent)\r\n            continue\r\n          } else {\r\n            emitError(\r\n              context,\r\n              ErrorCodes.INVALID_FIRST_CHARACTER_OF_TAG_NAME,\r\n              2\r\n            )\r\n            node = parseBogusComment(context)\r\n          }\r\n        } else if (/[a-z]/i.test(s[1])) {\r\n          node = parseElement(context, ancestors)\r\n\r\n          // 2.x <template> with no directive compat\r\n          if (\r\n            __COMPAT__ &&\r\n            isCompatEnabled(\r\n              CompilerDeprecationTypes.COMPILER_NATIVE_TEMPLATE,\r\n              context\r\n            ) &&\r\n            node &&\r\n            node.tag === 'template' &&\r\n            !node.props.some(\r\n              p =>\r\n                p.type === NodeTypes.DIRECTIVE &&\r\n                isSpecialTemplateDirective(p.name)\r\n            )\r\n          ) {\r\n            __DEV__ &&\r\n              warnDeprecation(\r\n                CompilerDeprecationTypes.COMPILER_NATIVE_TEMPLATE,\r\n                context,\r\n                node.loc\r\n              )\r\n            node = node.children\r\n          }\r\n        } else if (s[1] === '?') {\r\n          emitError(\r\n            context,\r\n            ErrorCodes.UNEXPECTED_QUESTION_MARK_INSTEAD_OF_TAG_NAME,\r\n            1\r\n          )\r\n          node = parseBogusComment(context)\r\n        } else {\r\n          emitError(context, ErrorCodes.INVALID_FIRST_CHARACTER_OF_TAG_NAME, 1)\r\n        }\r\n      }\r\n    }\r\n    if (!node) {\r\n      node = parseText(context, mode)\r\n    }\r\n\r\n    if (isArray(node)) {\r\n      for (let i = 0; i < node.length; i++) {\r\n        pushNode(nodes, node[i])\r\n      }\r\n    } else {\r\n      pushNode(nodes, node)\r\n    }\r\n  }\r\n\r\n  // Whitespace handling strategy like v2\r\n  let removedWhitespace = false\r\n  if (mode !== TextModes.RAWTEXT && mode !== TextModes.RCDATA) {\r\n    const shouldCondense = context.options.whitespace !== 'preserve'\r\n    for (let i = 0; i < nodes.length; i++) {\r\n      const node = nodes[i]\r\n      if (!context.inPre && node.type === NodeTypes.TEXT) {\r\n        if (!/[^\\t\\r\\n\\f ]/.test(node.content)) {\r\n          const prev = nodes[i - 1]\r\n          const next = nodes[i + 1]\r\n          // Remove if:\r\n          // - the whitespace is the first or last node, or:\r\n          // - (condense mode) the whitespace is adjacent to a comment, or:\r\n          // - (condense mode) the whitespace is between two elements AND contains newline\r\n          if (\r\n            !prev ||\r\n            !next ||\r\n            (shouldCondense &&\r\n              (prev.type === NodeTypes.COMMENT ||\r\n                next.type === NodeTypes.COMMENT ||\r\n                (prev.type === NodeTypes.ELEMENT &&\r\n                  next.type === NodeTypes.ELEMENT &&\r\n                  /[\\r\\n]/.test(node.content))))\r\n          ) {\r\n            removedWhitespace = true\r\n            nodes[i] = null as any\r\n          } else {\r\n            // Otherwise, the whitespace is condensed into a single space\r\n            node.content = ' '\r\n          }\r\n        } else if (shouldCondense) {\r\n          // in condense mode, consecutive whitespaces in text are condensed\r\n          // down to a single space.\r\n          node.content = node.content.replace(/[\\t\\r\\n\\f ]+/g, ' ')\r\n        }\r\n      }\r\n      // Remove comment nodes if desired by configuration.\r\n      else if (node.type === NodeTypes.COMMENT && !context.options.comments) {\r\n        removedWhitespace = true\r\n        nodes[i] = null as any\r\n      }\r\n    }\r\n    if (context.inPre && parent && context.options.isPreTag(parent.tag)) {\r\n      // remove leading newline per html spec\r\n      // https://html.spec.whatwg.org/multipage/grouping-content.html#the-pre-element\r\n      const first = nodes[0]\r\n      if (first && first.type === NodeTypes.TEXT) {\r\n        first.content = first.content.replace(/^\\r?\\n/, '')\r\n      }\r\n    }\r\n  }\r\n\r\n  return removedWhitespace ? nodes.filter(Boolean) : nodes\r\n}\r\n\r\nfunction pushNode(nodes: TemplateChildNode[], node: TemplateChildNode): void {\r\n  if (node.type === NodeTypes.TEXT) {\r\n    const prev = last(nodes)\r\n    // Merge if both this and the previous node are text and those are\r\n    // consecutive. This happens for cases like \"a < b\".\r\n    if (\r\n      prev &&\r\n      prev.type === NodeTypes.TEXT &&\r\n      prev.loc.end.offset === node.loc.start.offset\r\n    ) {\r\n      prev.content += node.content\r\n      prev.loc.end = node.loc.end\r\n      prev.loc.source += node.loc.source\r\n      return\r\n    }\r\n  }\r\n\r\n  nodes.push(node)\r\n}\r\n\r\nfunction parseCDATA(\r\n  context: ParserContext,\r\n  ancestors: ElementNode[]\r\n): TemplateChildNode[] {\r\n  __TEST__ &&\r\n    assert(last(ancestors) == null || last(ancestors)!.ns !== Namespaces.HTML)\r\n  __TEST__ && assert(startsWith(context.source, '<![CDATA['))\r\n\r\n  advanceBy(context, 9)\r\n  const nodes = parseChildren(context, TextModes.CDATA, ancestors)\r\n  if (context.source.length === 0) {\r\n    emitError(context, ErrorCodes.EOF_IN_CDATA)\r\n  } else {\r\n    __TEST__ && assert(startsWith(context.source, ']]>'))\r\n    advanceBy(context, 3)\r\n  }\r\n\r\n  return nodes\r\n}\r\n\r\nfunction parseComment(context: ParserContext): CommentNode {\r\n  __TEST__ && assert(startsWith(context.source, '<!--'))\r\n\r\n  const start = getCursor(context)\r\n  let content: string\r\n\r\n  // Regular comment.\r\n  const match = /--(\\!)?>/.exec(context.source)\r\n  if (!match) {\r\n    content = context.source.slice(4)\r\n    advanceBy(context, context.source.length)\r\n    emitError(context, ErrorCodes.EOF_IN_COMMENT)\r\n  } else {\r\n    if (match.index <= 3) {\r\n      emitError(context, ErrorCodes.ABRUPT_CLOSING_OF_EMPTY_COMMENT)\r\n    }\r\n    if (match[1]) {\r\n      emitError(context, ErrorCodes.INCORRECTLY_CLOSED_COMMENT)\r\n    }\r\n    content = context.source.slice(4, match.index)\r\n\r\n    // Advancing with reporting nested comments.\r\n    const s = context.source.slice(0, match.index)\r\n    let prevIndex = 1,\r\n      nestedIndex = 0\r\n    while ((nestedIndex = s.indexOf('<!--', prevIndex)) !== -1) {\r\n      advanceBy(context, nestedIndex - prevIndex + 1)\r\n      if (nestedIndex + 4 < s.length) {\r\n        emitError(context, ErrorCodes.NESTED_COMMENT)\r\n      }\r\n      prevIndex = nestedIndex + 1\r\n    }\r\n    advanceBy(context, match.index + match[0].length - prevIndex + 1)\r\n  }\r\n\r\n  return {\r\n    type: NodeTypes.COMMENT,\r\n    content,\r\n    loc: getSelection(context, start)\r\n  }\r\n}\r\n\r\nfunction parseBogusComment(context: ParserContext): CommentNode | undefined {\r\n  __TEST__ && assert(/^<(?:[\\!\\?]|\\/[^a-z>])/i.test(context.source))\r\n\r\n  const start = getCursor(context)\r\n  const contentStart = context.source[1] === '?' ? 1 : 2\r\n  let content: string\r\n\r\n  const closeIndex = context.source.indexOf('>')\r\n  if (closeIndex === -1) {\r\n    content = context.source.slice(contentStart)\r\n    advanceBy(context, context.source.length)\r\n  } else {\r\n    content = context.source.slice(contentStart, closeIndex)\r\n    advanceBy(context, closeIndex + 1)\r\n  }\r\n\r\n  return {\r\n    type: NodeTypes.COMMENT,\r\n    content,\r\n    loc: getSelection(context, start)\r\n  }\r\n}\r\n\r\nfunction parseElement(\r\n  context: ParserContext,\r\n  ancestors: ElementNode[]\r\n): ElementNode | undefined {\r\n  __TEST__ && assert(/^<[a-z]/i.test(context.source))\r\n\r\n  // Start tag.\r\n  const wasInPre = context.inPre\r\n  const wasInVPre = context.inVPre\r\n  const parent = last(ancestors)\r\n  const element = parseTag(context, TagType.Start, parent)\r\n  const isPreBoundary = context.inPre && !wasInPre\r\n  const isVPreBoundary = context.inVPre && !wasInVPre\r\n\r\n  if (element.isSelfClosing || context.options.isVoidTag(element.tag)) {\r\n    // #4030 self-closing <pre> tag\r\n    if (isPreBoundary) {\r\n      context.inPre = false\r\n    }\r\n    if (isVPreBoundary) {\r\n      context.inVPre = false\r\n    }\r\n    return element\r\n  }\r\n\r\n  // Children.\r\n  ancestors.push(element)\r\n  const mode = context.options.getTextMode(element, parent)\r\n  const children = parseChildren(context, mode, ancestors)\r\n  ancestors.pop()\r\n\r\n  // 2.x inline-template compat\r\n  if (__COMPAT__) {\r\n    const inlineTemplateProp = element.props.find(\r\n      p => p.type === NodeTypes.ATTRIBUTE && p.name === 'inline-template'\r\n    ) as AttributeNode\r\n    if (\r\n      inlineTemplateProp &&\r\n      checkCompatEnabled(\r\n        CompilerDeprecationTypes.COMPILER_INLINE_TEMPLATE,\r\n        context,\r\n        inlineTemplateProp.loc\r\n      )\r\n    ) {\r\n      const loc = getSelection(context, element.loc.end)\r\n      inlineTemplateProp.value = {\r\n        type: NodeTypes.TEXT,\r\n        content: loc.source,\r\n        loc\r\n      }\r\n    }\r\n  }\r\n\r\n  element.children = children\r\n\r\n  // End tag.\r\n  if (startsWithEndTagOpen(context.source, element.tag)) {\r\n    parseTag(context, TagType.End, parent)\r\n  } else {\r\n    emitError(context, ErrorCodes.X_MISSING_END_TAG, 0, element.loc.start)\r\n    if (context.source.length === 0 && element.tag.toLowerCase() === 'script') {\r\n      const first = children[0]\r\n      if (first && startsWith(first.loc.source, '<!--')) {\r\n        emitError(context, ErrorCodes.EOF_IN_SCRIPT_HTML_COMMENT_LIKE_TEXT)\r\n      }\r\n    }\r\n  }\r\n\r\n  element.loc = getSelection(context, element.loc.start)\r\n\r\n  if (isPreBoundary) {\r\n    context.inPre = false\r\n  }\r\n  if (isVPreBoundary) {\r\n    context.inVPre = false\r\n  }\r\n  return element\r\n}\r\n\r\nconst enum TagType {\r\n  Start,\r\n  End\r\n}\r\n\r\nconst isSpecialTemplateDirective = /*#__PURE__*/ makeMap(\r\n  `if,else,else-if,for,slot`\r\n)\r\n\r\n/**\r\n * Parse a tag (E.g. `<div id=a>`) with that type (start tag or end tag).\r\n */\r\nfunction parseTag(\r\n  context: ParserContext,\r\n  type: TagType.Start,\r\n  parent: ElementNode | undefined\r\n): ElementNode\r\nfunction parseTag(\r\n  context: ParserContext,\r\n  type: TagType.End,\r\n  parent: ElementNode | undefined\r\n): void\r\nfunction parseTag(\r\n  context: ParserContext,\r\n  type: TagType,\r\n  parent: ElementNode | undefined\r\n): ElementNode | undefined {\r\n  __TEST__ && assert(/^<\\/?[a-z]/i.test(context.source))\r\n  __TEST__ &&\r\n    assert(\r\n      type === (startsWith(context.source, '</') ? TagType.End : TagType.Start)\r\n    )\r\n\r\n  // Tag open.\r\n  const start = getCursor(context)\r\n  const match = /^<\\/?([a-z][^\\t\\r\\n\\f />]*)/i.exec(context.source)!\r\n  const tag = match[1]\r\n  const ns = context.options.getNamespace(tag, parent)\r\n\r\n  advanceBy(context, match[0].length)\r\n  advanceSpaces(context)\r\n\r\n  // save current state in case we need to re-parse attributes with v-pre\r\n  const cursor = getCursor(context)\r\n  const currentSource = context.source\r\n\r\n  // check <pre> tag\r\n  if (context.options.isPreTag(tag)) {\r\n    context.inPre = true\r\n  }\r\n\r\n  // Attributes.\r\n  let props = parseAttributes(context, type)\r\n\r\n  // check v-pre\r\n  if (\r\n    type === TagType.Start &&\r\n    !context.inVPre &&\r\n    props.some(p => p.type === NodeTypes.DIRECTIVE && p.name === 'pre')\r\n  ) {\r\n    context.inVPre = true\r\n    // reset context\r\n    extend(context, cursor)\r\n    context.source = currentSource\r\n    // re-parse attrs and filter out v-pre itself\r\n    props = parseAttributes(context, type).filter(p => p.name !== 'v-pre')\r\n  }\r\n\r\n  // Tag close.\r\n  let isSelfClosing = false\r\n  if (context.source.length === 0) {\r\n    emitError(context, ErrorCodes.EOF_IN_TAG)\r\n  } else {\r\n    isSelfClosing = startsWith(context.source, '/>')\r\n    if (type === TagType.End && isSelfClosing) {\r\n      emitError(context, ErrorCodes.END_TAG_WITH_TRAILING_SOLIDUS)\r\n    }\r\n    advanceBy(context, isSelfClosing ? 2 : 1)\r\n  }\r\n\r\n  if (type === TagType.End) {\r\n    return\r\n  }\r\n\r\n  // 2.x deprecation checks\r\n  if (\r\n    __COMPAT__ &&\r\n    __DEV__ &&\r\n    isCompatEnabled(\r\n      CompilerDeprecationTypes.COMPILER_V_IF_V_FOR_PRECEDENCE,\r\n      context\r\n    )\r\n  ) {\r\n    let hasIf = false\r\n    let hasFor = false\r\n    for (let i = 0; i < props.length; i++) {\r\n      const p = props[i]\r\n      if (p.type === NodeTypes.DIRECTIVE) {\r\n        if (p.name === 'if') {\r\n          hasIf = true\r\n        } else if (p.name === 'for') {\r\n          hasFor = true\r\n        }\r\n      }\r\n      if (hasIf && hasFor) {\r\n        warnDeprecation(\r\n          CompilerDeprecationTypes.COMPILER_V_IF_V_FOR_PRECEDENCE,\r\n          context,\r\n          getSelection(context, start)\r\n        )\r\n      }\r\n    }\r\n  }\r\n\r\n  let tagType = ElementTypes.ELEMENT\r\n  if (!context.inVPre) {\r\n    if (tag === 'slot') {\r\n      tagType = ElementTypes.SLOT\r\n    } else if (tag === 'template') {\r\n      if (\r\n        props.some(\r\n          p =>\r\n            p.type === NodeTypes.DIRECTIVE && isSpecialTemplateDirective(p.name)\r\n        )\r\n      ) {\r\n        tagType = ElementTypes.TEMPLATE\r\n      }\r\n    } else if (isComponent(tag, props, context)) {\r\n      tagType = ElementTypes.COMPONENT\r\n    }\r\n  }\r\n\r\n  return {\r\n    type: NodeTypes.ELEMENT,\r\n    ns,\r\n    tag,\r\n    tagType,\r\n    props,\r\n    isSelfClosing,\r\n    children: [],\r\n    loc: getSelection(context, start),\r\n    codegenNode: undefined // to be created during transform phase\r\n  }\r\n}\r\n\r\nfunction isComponent(\r\n  tag: string,\r\n  props: (AttributeNode | DirectiveNode)[],\r\n  context: ParserContext\r\n) {\r\n  const options = context.options\r\n  if (options.isCustomElement(tag)) {\r\n    return false\r\n  }\r\n  if (\r\n    tag === 'component' ||\r\n    /^[A-Z]/.test(tag) ||\r\n    isCoreComponent(tag) ||\r\n    (options.isBuiltInComponent && options.isBuiltInComponent(tag)) ||\r\n    (options.isNativeTag && !options.isNativeTag(tag))\r\n  ) {\r\n    return true\r\n  }\r\n  // at this point the tag should be a native tag, but check for potential \"is\"\r\n  // casting\r\n  for (let i = 0; i < props.length; i++) {\r\n    const p = props[i]\r\n    if (p.type === NodeTypes.ATTRIBUTE) {\r\n      if (p.name === 'is' && p.value) {\r\n        if (p.value.content.startsWith('vue:')) {\r\n          return true\r\n        } else if (\r\n          __COMPAT__ &&\r\n          checkCompatEnabled(\r\n            CompilerDeprecationTypes.COMPILER_IS_ON_ELEMENT,\r\n            context,\r\n            p.loc\r\n          )\r\n        ) {\r\n          return true\r\n        }\r\n      }\r\n    } else {\r\n      // directive\r\n      // v-is (TODO Deprecate)\r\n      if (p.name === 'is') {\r\n        return true\r\n      } else if (\r\n        // :is on plain element - only treat as component in compat mode\r\n        p.name === 'bind' &&\r\n        isBindKey(p.arg, 'is') &&\r\n        __COMPAT__ &&\r\n        checkCompatEnabled(\r\n          CompilerDeprecationTypes.COMPILER_IS_ON_ELEMENT,\r\n          context,\r\n          p.loc\r\n        )\r\n      ) {\r\n        return true\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nfunction parseAttributes(\r\n  context: ParserContext,\r\n  type: TagType\r\n): (AttributeNode | DirectiveNode)[] {\r\n  const props = []\r\n  const attributeNames = new Set<string>()\r\n  while (\r\n    context.source.length > 0 &&\r\n    !startsWith(context.source, '>') &&\r\n    !startsWith(context.source, '/>')\r\n  ) {\r\n    if (startsWith(context.source, '/')) {\r\n      emitError(context, ErrorCodes.UNEXPECTED_SOLIDUS_IN_TAG)\r\n      advanceBy(context, 1)\r\n      advanceSpaces(context)\r\n      continue\r\n    }\r\n    if (type === TagType.End) {\r\n      emitError(context, ErrorCodes.END_TAG_WITH_ATTRIBUTES)\r\n    }\r\n\r\n    const attr = parseAttribute(context, attributeNames)\r\n    if (type === TagType.Start) {\r\n      props.push(attr)\r\n    }\r\n\r\n    if (/^[^\\t\\r\\n\\f />]/.test(context.source)) {\r\n      emitError(context, ErrorCodes.MISSING_WHITESPACE_BETWEEN_ATTRIBUTES)\r\n    }\r\n    advanceSpaces(context)\r\n  }\r\n  return props\r\n}\r\n\r\nfunction parseAttribute(\r\n  context: ParserContext,\r\n  nameSet: Set<string>\r\n): AttributeNode | DirectiveNode {\r\n  __TEST__ && assert(/^[^\\t\\r\\n\\f />]/.test(context.source))\r\n\r\n  // Name.\r\n  const start = getCursor(context)\r\n  const match = /^[^\\t\\r\\n\\f />][^\\t\\r\\n\\f />=]*/.exec(context.source)!\r\n  const name = match[0]\r\n\r\n  if (nameSet.has(name)) {\r\n    emitError(context, ErrorCodes.DUPLICATE_ATTRIBUTE)\r\n  }\r\n  nameSet.add(name)\r\n\r\n  if (name[0] === '=') {\r\n    emitError(context, ErrorCodes.UNEXPECTED_EQUALS_SIGN_BEFORE_ATTRIBUTE_NAME)\r\n  }\r\n  {\r\n    const pattern = /[\"'<]/g\r\n    let m: RegExpExecArray | null\r\n    while ((m = pattern.exec(name))) {\r\n      emitError(\r\n        context,\r\n        ErrorCodes.UNEXPECTED_CHARACTER_IN_ATTRIBUTE_NAME,\r\n        m.index\r\n      )\r\n    }\r\n  }\r\n\r\n  advanceBy(context, name.length)\r\n\r\n  // Value\r\n  let value: AttributeValue = undefined\r\n\r\n  if (/^[\\t\\r\\n\\f ]*=/.test(context.source)) {\r\n    advanceSpaces(context)\r\n    advanceBy(context, 1)\r\n    advanceSpaces(context)\r\n    value = parseAttributeValue(context)\r\n    if (!value) {\r\n      emitError(context, ErrorCodes.MISSING_ATTRIBUTE_VALUE)\r\n    }\r\n  }\r\n  const loc = getSelection(context, start)\r\n\r\n  if (!context.inVPre && /^(v-|:|\\.|@|#)/.test(name)) {\r\n    const match =\r\n      /(?:^v-([a-z0-9-]+))?(?:(?::|^\\.|^@|^#)(\\[[^\\]]+\\]|[^\\.]+))?(.+)?$/i.exec(\r\n        name\r\n      )!\r\n\r\n    let isPropShorthand = startsWith(name, '.')\r\n    let dirName =\r\n      match[1] ||\r\n      (isPropShorthand || startsWith(name, ':')\r\n        ? 'bind'\r\n        : startsWith(name, '@')\r\n        ? 'on'\r\n        : 'slot')\r\n    let arg: ExpressionNode | undefined\r\n\r\n    if (match[2]) {\r\n      const isSlot = dirName === 'slot'\r\n      const startOffset = name.lastIndexOf(match[2])\r\n      const loc = getSelection(\r\n        context,\r\n        getNewPosition(context, start, startOffset),\r\n        getNewPosition(\r\n          context,\r\n          start,\r\n          startOffset + match[2].length + ((isSlot && match[3]) || '').length\r\n        )\r\n      )\r\n      let content = match[2]\r\n      let isStatic = true\r\n\r\n      if (content.startsWith('[')) {\r\n        isStatic = false\r\n\r\n        if (!content.endsWith(']')) {\r\n          emitError(\r\n            context,\r\n            ErrorCodes.X_MISSING_DYNAMIC_DIRECTIVE_ARGUMENT_END\r\n          )\r\n        }\r\n\r\n        content = content.substr(1, content.length - 2)\r\n      } else if (isSlot) {\r\n        // #1241 special case for v-slot: vuetify relies extensively on slot\r\n        // names containing dots. v-slot doesn't have any modifiers and Vue 2.x\r\n        // supports such usage so we are keeping it consistent with 2.x.\r\n        content += match[3] || ''\r\n      }\r\n\r\n      arg = {\r\n        type: NodeTypes.SIMPLE_EXPRESSION,\r\n        content,\r\n        isStatic,\r\n        constType: isStatic\r\n          ? ConstantTypes.CAN_STRINGIFY\r\n          : ConstantTypes.NOT_CONSTANT,\r\n        loc\r\n      }\r\n    }\r\n\r\n    if (value && value.isQuoted) {\r\n      const valueLoc = value.loc\r\n      valueLoc.start.offset++\r\n      valueLoc.start.column++\r\n      valueLoc.end = advancePositionWithClone(valueLoc.start, value.content)\r\n      valueLoc.source = valueLoc.source.slice(1, -1)\r\n    }\r\n\r\n    const modifiers = match[3] ? match[3].substr(1).split('.') : []\r\n    if (isPropShorthand) modifiers.push('prop')\r\n\r\n    // 2.x compat v-bind:foo.sync -> v-model:foo\r\n    if (__COMPAT__ && dirName === 'bind' && arg) {\r\n      if (\r\n        modifiers.includes('sync') &&\r\n        checkCompatEnabled(\r\n          CompilerDeprecationTypes.COMPILER_V_BIND_SYNC,\r\n          context,\r\n          loc,\r\n          arg.loc.source\r\n        )\r\n      ) {\r\n        dirName = 'model'\r\n        modifiers.splice(modifiers.indexOf('sync'), 1)\r\n      }\r\n\r\n      if (__DEV__ && modifiers.includes('prop')) {\r\n        checkCompatEnabled(\r\n          CompilerDeprecationTypes.COMPILER_V_BIND_PROP,\r\n          context,\r\n          loc\r\n        )\r\n      }\r\n    }\r\n\r\n    return {\r\n      type: NodeTypes.DIRECTIVE,\r\n      name: dirName,\r\n      exp: value && {\r\n        type: NodeTypes.SIMPLE_EXPRESSION,\r\n        content: value.content,\r\n        isStatic: false,\r\n        // Treat as non-constant by default. This can be potentially set to\r\n        // other values by `transformExpression` to make it eligible for hoisting.\r\n        constType: ConstantTypes.NOT_CONSTANT,\r\n        loc: value.loc\r\n      },\r\n      arg,\r\n      modifiers,\r\n      loc\r\n    }\r\n  }\r\n\r\n  return {\r\n    type: NodeTypes.ATTRIBUTE,\r\n    name,\r\n    value: value && {\r\n      type: NodeTypes.TEXT,\r\n      content: value.content,\r\n      loc: value.loc\r\n    },\r\n    loc\r\n  }\r\n}\r\n\r\nfunction parseAttributeValue(context: ParserContext): AttributeValue {\r\n  const start = getCursor(context)\r\n  let content: string\r\n\r\n  const quote = context.source[0]\r\n  const isQuoted = quote === `\"` || quote === `'`\r\n  if (isQuoted) {\r\n    // Quoted value.\r\n    advanceBy(context, 1)\r\n\r\n    const endIndex = context.source.indexOf(quote)\r\n    if (endIndex === -1) {\r\n      content = parseTextData(\r\n        context,\r\n        context.source.length,\r\n        TextModes.ATTRIBUTE_VALUE\r\n      )\r\n    } else {\r\n      content = parseTextData(context, endIndex, TextModes.ATTRIBUTE_VALUE)\r\n      advanceBy(context, 1)\r\n    }\r\n  } else {\r\n    // Unquoted\r\n    const match = /^[^\\t\\r\\n\\f >]+/.exec(context.source)\r\n    if (!match) {\r\n      return undefined\r\n    }\r\n    const unexpectedChars = /[\"'<=`]/g\r\n    let m: RegExpExecArray | null\r\n    while ((m = unexpectedChars.exec(match[0]))) {\r\n      emitError(\r\n        context,\r\n        ErrorCodes.UNEXPECTED_CHARACTER_IN_UNQUOTED_ATTRIBUTE_VALUE,\r\n        m.index\r\n      )\r\n    }\r\n    content = parseTextData(context, match[0].length, TextModes.ATTRIBUTE_VALUE)\r\n  }\r\n\r\n  return { content, isQuoted, loc: getSelection(context, start) }\r\n}\r\n\r\nfunction parseInterpolation(\r\n  context: ParserContext,\r\n  mode: TextModes\r\n): InterpolationNode | undefined {\r\n  const [open, close] = context.options.delimiters\r\n  __TEST__ && assert(startsWith(context.source, open))\r\n\r\n  const closeIndex = context.source.indexOf(close, open.length)\r\n  if (closeIndex === -1) {\r\n    emitError(context, ErrorCodes.X_MISSING_INTERPOLATION_END)\r\n    return undefined\r\n  }\r\n\r\n  const start = getCursor(context)\r\n  advanceBy(context, open.length)\r\n  const innerStart = getCursor(context)\r\n  const innerEnd = getCursor(context)\r\n  const rawContentLength = closeIndex - open.length\r\n  const rawContent = context.source.slice(0, rawContentLength)\r\n  const preTrimContent = parseTextData(context, rawContentLength, mode)\r\n  const content = preTrimContent.trim()\r\n  const startOffset = preTrimContent.indexOf(content)\r\n  if (startOffset > 0) {\r\n    advancePositionWithMutation(innerStart, rawContent, startOffset)\r\n  }\r\n  const endOffset =\r\n    rawContentLength - (preTrimContent.length - content.length - startOffset)\r\n  advancePositionWithMutation(innerEnd, rawContent, endOffset)\r\n  advanceBy(context, close.length)\r\n\r\n  return {\r\n    type: NodeTypes.INTERPOLATION,\r\n    content: {\r\n      type: NodeTypes.SIMPLE_EXPRESSION,\r\n      isStatic: false,\r\n      // Set `isConstant` to false by default and will decide in transformExpression\r\n      constType: ConstantTypes.NOT_CONSTANT,\r\n      content,\r\n      loc: getSelection(context, innerStart, innerEnd)\r\n    },\r\n    loc: getSelection(context, start)\r\n  }\r\n}\r\n\r\nfunction parseText(context: ParserContext, mode: TextModes): TextNode {\r\n  __TEST__ && assert(context.source.length > 0)\r\n\r\n  const endTokens = ['<', context.options.delimiters[0]]\r\n  if (mode === TextModes.CDATA) {\r\n    endTokens.push(']]>')\r\n  }\r\n\r\n  let endIndex = context.source.length\r\n  for (let i = 0; i < endTokens.length; i++) {\r\n    const index = context.source.indexOf(endTokens[i], 1)\r\n    if (index !== -1 && endIndex > index) {\r\n      endIndex = index\r\n    }\r\n  }\r\n\r\n  __TEST__ && assert(endIndex > 0)\r\n\r\n  const start = getCursor(context)\r\n  const content = parseTextData(context, endIndex, mode)\r\n\r\n  return {\r\n    type: NodeTypes.TEXT,\r\n    content,\r\n    loc: getSelection(context, start)\r\n  }\r\n}\r\n\r\n/**\r\n * Get text data with a given length from the current location.\r\n * This translates HTML entities in the text data.\r\n */\r\nfunction parseTextData(\r\n  context: ParserContext,\r\n  length: number,\r\n  mode: TextModes\r\n): string {\r\n  const rawText = context.source.slice(0, length)\r\n  advanceBy(context, length)\r\n  if (\r\n    mode === TextModes.RAWTEXT ||\r\n    mode === TextModes.CDATA ||\r\n    rawText.indexOf('&') === -1\r\n  ) {\r\n    return rawText\r\n  } else {\r\n    // DATA or RCDATA containing \"&\"\". Entity decoding required.\r\n    return context.options.decodeEntities(\r\n      rawText,\r\n      mode === TextModes.ATTRIBUTE_VALUE\r\n    )\r\n  }\r\n}\r\n\r\nfunction getCursor(context: ParserContext): Position {\r\n  const { column, line, offset } = context\r\n  return { column, line, offset }\r\n}\r\n\r\nfunction getSelection(\r\n  context: ParserContext,\r\n  start: Position,\r\n  end?: Position\r\n): SourceLocation {\r\n  end = end || getCursor(context)\r\n  return {\r\n    start,\r\n    end,\r\n    source: context.originalSource.slice(start.offset, end.offset)\r\n  }\r\n}\r\n\r\nfunction last<T>(xs: T[]): T | undefined {\r\n  return xs[xs.length - 1]\r\n}\r\n\r\nfunction startsWith(source: string, searchString: string): boolean {\r\n  return source.startsWith(searchString)\r\n}\r\n\r\nfunction advanceBy(context: ParserContext, numberOfCharacters: number): void {\r\n  const { source } = context\r\n  __TEST__ && assert(numberOfCharacters <= source.length)\r\n  advancePositionWithMutation(context, source, numberOfCharacters)\r\n  context.source = source.slice(numberOfCharacters)\r\n}\r\n\r\nfunction advanceSpaces(context: ParserContext): void {\r\n  const match = /^[\\t\\r\\n\\f ]+/.exec(context.source)\r\n  if (match) {\r\n    advanceBy(context, match[0].length)\r\n  }\r\n}\r\n\r\nfunction getNewPosition(\r\n  context: ParserContext,\r\n  start: Position,\r\n  numberOfCharacters: number\r\n): Position {\r\n  return advancePositionWithClone(\r\n    start,\r\n    context.originalSource.slice(start.offset, numberOfCharacters),\r\n    numberOfCharacters\r\n  )\r\n}\r\n\r\nfunction emitError(\r\n  context: ParserContext,\r\n  code: ErrorCodes,\r\n  offset?: number,\r\n  loc: Position = getCursor(context)\r\n): void {\r\n  if (offset) {\r\n    loc.offset += offset\r\n    loc.column += offset\r\n  }\r\n  context.options.onError(\r\n    createCompilerError(code, {\r\n      start: loc,\r\n      end: loc,\r\n      source: ''\r\n    })\r\n  )\r\n}\r\n\r\nfunction isEnd(\r\n  context: ParserContext,\r\n  mode: TextModes,\r\n  ancestors: ElementNode[]\r\n): boolean {\r\n  const s = context.source\r\n\r\n  switch (mode) {\r\n    case TextModes.DATA:\r\n      if (startsWith(s, '</')) {\r\n        // TODO: probably bad performance\r\n        for (let i = ancestors.length - 1; i >= 0; --i) {\r\n          if (startsWithEndTagOpen(s, ancestors[i].tag)) {\r\n            return true\r\n          }\r\n        }\r\n      }\r\n      break\r\n\r\n    case TextModes.RCDATA:\r\n    case TextModes.RAWTEXT: {\r\n      const parent = last(ancestors)\r\n      if (parent && startsWithEndTagOpen(s, parent.tag)) {\r\n        return true\r\n      }\r\n      break\r\n    }\r\n\r\n    case TextModes.CDATA:\r\n      if (startsWith(s, ']]>')) {\r\n        return true\r\n      }\r\n      break\r\n  }\r\n\r\n  return !s\r\n}\r\n\r\nfunction startsWithEndTagOpen(source: string, tag: string): boolean {\r\n  return (\r\n    startsWith(source, '</') &&\r\n    source.substr(2, tag.length).toLowerCase() === tag.toLowerCase() &&\r\n    /[\\t\\r\\n\\f />]/.test(source[2 + tag.length] || '>')\r\n  )\r\n}\r\n","import {\r\n  ConstantTypes,\r\n  RootNode,\r\n  NodeTypes,\r\n  TemplateChildNode,\r\n  SimpleExpressionNode,\r\n  ElementTypes,\r\n  PlainElementNode,\r\n  ComponentNode,\r\n  TemplateNode,\r\n  VNodeCall,\r\n  ParentNode,\r\n  JSChildNode,\r\n  CallExpression,\r\n  createArrayExpression\r\n} from '../ast'\r\nimport { TransformContext } from '../transform'\r\nimport { PatchFlags, isString, isSymbol, isArray } from '@vue/shared'\r\nimport { getVNodeBlockHelper, getVNodeHelper, isSlotOutlet } from '../utils'\r\nimport {\r\n  OPEN_BLOCK,\r\n  GUARD_REACTIVE_PROPS,\r\n  NORMALIZE_CLASS,\r\n  NORMALIZE_PROPS,\r\n  NORMALIZE_STYLE\r\n} from '../runtimeHelpers'\r\n\r\nexport function hoistStatic(root: RootNode, context: TransformContext) {\r\n  walk(\r\n    root,\r\n    context,\r\n    // Root node is unfortunately non-hoistable due to potential parent\r\n    // fallthrough attributes.\r\n    isSingleElementRoot(root, root.children[0])\r\n  )\r\n}\r\n\r\nexport function isSingleElementRoot(\r\n  root: RootNode,\r\n  child: TemplateChildNode\r\n): child is PlainElementNode | ComponentNode | TemplateNode {\r\n  const { children } = root\r\n  return (\r\n    children.length === 1 &&\r\n    child.type === NodeTypes.ELEMENT &&\r\n    !isSlotOutlet(child)\r\n  )\r\n}\r\n\r\nfunction walk(\r\n  node: ParentNode,\r\n  context: TransformContext,\r\n  doNotHoistNode: boolean = false\r\n) {\r\n  // Some transforms, e.g. transformAssetUrls from @vue/compiler-sfc, replaces\r\n  // static bindings with expressions. These expressions are guaranteed to be\r\n  // constant so they are still eligible for hoisting, but they are only\r\n  // available at runtime and therefore cannot be evaluated ahead of time.\r\n  // This is only a concern for pre-stringification (via transformHoist by\r\n  // @vue/compiler-dom), but doing it here allows us to perform only one full\r\n  // walk of the AST and allow `stringifyStatic` to stop walking as soon as its\r\n  // stringficiation threshold is met.\r\n  let canStringify = true\r\n\r\n  const { children } = node\r\n  const originalCount = children.length\r\n  let hoistedCount = 0\r\n\r\n  for (let i = 0; i < children.length; i++) {\r\n    const child = children[i]\r\n    // only plain elements & text calls are eligible for hoisting.\r\n    if (\r\n      child.type === NodeTypes.ELEMENT &&\r\n      child.tagType === ElementTypes.ELEMENT\r\n    ) {\r\n      const constantType = doNotHoistNode\r\n        ? ConstantTypes.NOT_CONSTANT\r\n        : getConstantType(child, context)\r\n      if (constantType > ConstantTypes.NOT_CONSTANT) {\r\n        if (constantType < ConstantTypes.CAN_STRINGIFY) {\r\n          canStringify = false\r\n        }\r\n        if (constantType >= ConstantTypes.CAN_HOIST) {\r\n          ;(child.codegenNode as VNodeCall).patchFlag =\r\n            PatchFlags.HOISTED + (__DEV__ ? ` /* HOISTED */` : ``)\r\n          child.codegenNode = context.hoist(child.codegenNode!)\r\n          hoistedCount++\r\n          continue\r\n        }\r\n      } else {\r\n        // node may contain dynamic children, but its props may be eligible for\r\n        // hoisting.\r\n        const codegenNode = child.codegenNode!\r\n        if (codegenNode.type === NodeTypes.VNODE_CALL) {\r\n          const flag = getPatchFlag(codegenNode)\r\n          if (\r\n            (!flag ||\r\n              flag === PatchFlags.NEED_PATCH ||\r\n              flag === PatchFlags.TEXT) &&\r\n            getGeneratedPropsConstantType(child, context) >=\r\n              ConstantTypes.CAN_HOIST\r\n          ) {\r\n            const props = getNodeProps(child)\r\n            if (props) {\r\n              codegenNode.props = context.hoist(props)\r\n            }\r\n          }\r\n          if (codegenNode.dynamicProps) {\r\n            codegenNode.dynamicProps = context.hoist(codegenNode.dynamicProps)\r\n          }\r\n        }\r\n      }\r\n    } else if (child.type === NodeTypes.TEXT_CALL) {\r\n      const contentType = getConstantType(child.content, context)\r\n      if (contentType > 0) {\r\n        if (contentType < ConstantTypes.CAN_STRINGIFY) {\r\n          canStringify = false\r\n        }\r\n        if (contentType >= ConstantTypes.CAN_HOIST) {\r\n          child.codegenNode = context.hoist(child.codegenNode)\r\n          hoistedCount++\r\n        }\r\n      }\r\n    }\r\n\r\n    // walk further\r\n    if (child.type === NodeTypes.ELEMENT) {\r\n      const isComponent = child.tagType === ElementTypes.COMPONENT\r\n      if (isComponent) {\r\n        context.scopes.vSlot++\r\n      }\r\n      walk(child, context)\r\n      if (isComponent) {\r\n        context.scopes.vSlot--\r\n      }\r\n    } else if (child.type === NodeTypes.FOR) {\r\n      // Do not hoist v-for single child because it has to be a block\r\n      walk(child, context, child.children.length === 1)\r\n    } else if (child.type === NodeTypes.IF) {\r\n      for (let i = 0; i < child.branches.length; i++) {\r\n        // Do not hoist v-if single child because it has to be a block\r\n        walk(\r\n          child.branches[i],\r\n          context,\r\n          child.branches[i].children.length === 1\r\n        )\r\n      }\r\n    }\r\n  }\r\n\r\n  if (canStringify && hoistedCount && context.transformHoist) {\r\n    context.transformHoist(children, context, node)\r\n  }\r\n\r\n  // all children were hoisted - the entire children array is hoistable.\r\n  if (\r\n    hoistedCount &&\r\n    hoistedCount === originalCount &&\r\n    node.type === NodeTypes.ELEMENT &&\r\n    node.tagType === ElementTypes.ELEMENT &&\r\n    node.codegenNode &&\r\n    node.codegenNode.type === NodeTypes.VNODE_CALL &&\r\n    isArray(node.codegenNode.children)\r\n  ) {\r\n    node.codegenNode.children = context.hoist(\r\n      createArrayExpression(node.codegenNode.children)\r\n    )\r\n  }\r\n}\r\n\r\nexport function getConstantType(\r\n  node: TemplateChildNode | SimpleExpressionNode,\r\n  context: TransformContext\r\n): ConstantTypes {\r\n  const { constantCache } = context\r\n  switch (node.type) {\r\n    case NodeTypes.ELEMENT:\r\n      if (node.tagType !== ElementTypes.ELEMENT) {\r\n        return ConstantTypes.NOT_CONSTANT\r\n      }\r\n      const cached = constantCache.get(node)\r\n      if (cached !== undefined) {\r\n        return cached\r\n      }\r\n      const codegenNode = node.codegenNode!\r\n      if (codegenNode.type !== NodeTypes.VNODE_CALL) {\r\n        return ConstantTypes.NOT_CONSTANT\r\n      }\r\n      const flag = getPatchFlag(codegenNode)\r\n      if (!flag) {\r\n        let returnType = ConstantTypes.CAN_STRINGIFY\r\n\r\n        // Element itself has no patch flag. However we still need to check:\r\n\r\n        // 1. Even for a node with no patch flag, it is possible for it to contain\r\n        // non-hoistable expressions that refers to scope variables, e.g. compiler\r\n        // injected keys or cached event handlers. Therefore we need to always\r\n        // check the codegenNode's props to be sure.\r\n        const generatedPropsType = getGeneratedPropsConstantType(node, context)\r\n        if (generatedPropsType === ConstantTypes.NOT_CONSTANT) {\r\n          constantCache.set(node, ConstantTypes.NOT_CONSTANT)\r\n          return ConstantTypes.NOT_CONSTANT\r\n        }\r\n        if (generatedPropsType < returnType) {\r\n          returnType = generatedPropsType\r\n        }\r\n\r\n        // 2. its children.\r\n        for (let i = 0; i < node.children.length; i++) {\r\n          const childType = getConstantType(node.children[i], context)\r\n          if (childType === ConstantTypes.NOT_CONSTANT) {\r\n            constantCache.set(node, ConstantTypes.NOT_CONSTANT)\r\n            return ConstantTypes.NOT_CONSTANT\r\n          }\r\n          if (childType < returnType) {\r\n            returnType = childType\r\n          }\r\n        }\r\n\r\n        // 3. if the type is not already CAN_SKIP_PATCH which is the lowest non-0\r\n        // type, check if any of the props can cause the type to be lowered\r\n        // we can skip can_patch because it's guaranteed by the absence of a\r\n        // patchFlag.\r\n        if (returnType > ConstantTypes.CAN_SKIP_PATCH) {\r\n          for (let i = 0; i < node.props.length; i++) {\r\n            const p = node.props[i]\r\n            if (p.type === NodeTypes.DIRECTIVE && p.name === 'bind' && p.exp) {\r\n              const expType = getConstantType(p.exp, context)\r\n              if (expType === ConstantTypes.NOT_CONSTANT) {\r\n                constantCache.set(node, ConstantTypes.NOT_CONSTANT)\r\n                return ConstantTypes.NOT_CONSTANT\r\n              }\r\n              if (expType < returnType) {\r\n                returnType = expType\r\n              }\r\n            }\r\n          }\r\n        }\r\n\r\n        // only svg/foreignObject could be block here, however if they are\r\n        // static then they don't need to be blocks since there will be no\r\n        // nested updates.\r\n        if (codegenNode.isBlock) {\r\n          context.removeHelper(OPEN_BLOCK)\r\n          context.removeHelper(\r\n            getVNodeBlockHelper(context.inSSR, codegenNode.isComponent)\r\n          )\r\n          codegenNode.isBlock = false\r\n          context.helper(getVNodeHelper(context.inSSR, codegenNode.isComponent))\r\n        }\r\n\r\n        constantCache.set(node, returnType)\r\n        return returnType\r\n      } else {\r\n        constantCache.set(node, ConstantTypes.NOT_CONSTANT)\r\n        return ConstantTypes.NOT_CONSTANT\r\n      }\r\n    case NodeTypes.TEXT:\r\n    case NodeTypes.COMMENT:\r\n      return ConstantTypes.CAN_STRINGIFY\r\n    case NodeTypes.IF:\r\n    case NodeTypes.FOR:\r\n    case NodeTypes.IF_BRANCH:\r\n      return ConstantTypes.NOT_CONSTANT\r\n    case NodeTypes.INTERPOLATION:\r\n    case NodeTypes.TEXT_CALL:\r\n      return getConstantType(node.content, context)\r\n    case NodeTypes.SIMPLE_EXPRESSION:\r\n      return node.constType\r\n    case NodeTypes.COMPOUND_EXPRESSION:\r\n      let returnType = ConstantTypes.CAN_STRINGIFY\r\n      for (let i = 0; i < node.children.length; i++) {\r\n        const child = node.children[i]\r\n        if (isString(child) || isSymbol(child)) {\r\n          continue\r\n        }\r\n        const childType = getConstantType(child, context)\r\n        if (childType === ConstantTypes.NOT_CONSTANT) {\r\n          return ConstantTypes.NOT_CONSTANT\r\n        } else if (childType < returnType) {\r\n          returnType = childType\r\n        }\r\n      }\r\n      return returnType\r\n    default:\r\n      if (__DEV__) {\r\n        const exhaustiveCheck: never = node\r\n        exhaustiveCheck\r\n      }\r\n      return ConstantTypes.NOT_CONSTANT\r\n  }\r\n}\r\n\r\nconst allowHoistedHelperSet = new Set([\r\n  NORMALIZE_CLASS,\r\n  NORMALIZE_STYLE,\r\n  NORMALIZE_PROPS,\r\n  GUARD_REACTIVE_PROPS\r\n])\r\n\r\nfunction getConstantTypeOfHelperCall(\r\n  value: CallExpression,\r\n  context: TransformContext\r\n): ConstantTypes {\r\n  if (\r\n    value.type === NodeTypes.JS_CALL_EXPRESSION &&\r\n    !isString(value.callee) &&\r\n    allowHoistedHelperSet.has(value.callee)\r\n  ) {\r\n    const arg = value.arguments[0] as JSChildNode\r\n    if (arg.type === NodeTypes.SIMPLE_EXPRESSION) {\r\n      return getConstantType(arg, context)\r\n    } else if (arg.type === NodeTypes.JS_CALL_EXPRESSION) {\r\n      // in the case of nested helper call, e.g. `normalizeProps(guardReactiveProps(exp))`\r\n      return getConstantTypeOfHelperCall(arg, context)\r\n    }\r\n  }\r\n  return ConstantTypes.NOT_CONSTANT\r\n}\r\n\r\nfunction getGeneratedPropsConstantType(\r\n  node: PlainElementNode,\r\n  context: TransformContext\r\n): ConstantTypes {\r\n  let returnType = ConstantTypes.CAN_STRINGIFY\r\n  const props = getNodeProps(node)\r\n  if (props && props.type === NodeTypes.JS_OBJECT_EXPRESSION) {\r\n    const { properties } = props\r\n    for (let i = 0; i < properties.length; i++) {\r\n      const { key, value } = properties[i]\r\n      const keyType = getConstantType(key, context)\r\n      if (keyType === ConstantTypes.NOT_CONSTANT) {\r\n        return keyType\r\n      }\r\n      if (keyType < returnType) {\r\n        returnType = keyType\r\n      }\r\n      if (value.type !== NodeTypes.SIMPLE_EXPRESSION) {\r\n        // some helper calls can be hoisted,\r\n        // such as the `normalizeProps` generated by the compiler for pre-normalize class,\r\n        // in this case we need to respect the ConstanType of the helper's argments\r\n        if (value.type === NodeTypes.JS_CALL_EXPRESSION) {\r\n          return getConstantTypeOfHelperCall(value, context)\r\n        }\r\n        return ConstantTypes.NOT_CONSTANT\r\n      }\r\n      const valueType = getConstantType(value, context)\r\n      if (valueType === ConstantTypes.NOT_CONSTANT) {\r\n        return valueType\r\n      }\r\n      if (valueType < returnType) {\r\n        returnType = valueType\r\n      }\r\n    }\r\n  }\r\n  return returnType\r\n}\r\n\r\nfunction getNodeProps(node: PlainElementNode) {\r\n  const codegenNode = node.codegenNode!\r\n  if (codegenNode.type === NodeTypes.VNODE_CALL) {\r\n    return codegenNode.props\r\n  }\r\n}\r\n\r\nfunction getPatchFlag(node: VNodeCall): number | undefined {\r\n  const flag = node.patchFlag\r\n  return flag ? parseInt(flag, 10) : undefined\r\n}\r\n","import { TransformOptions } from './options'\r\nimport {\r\n  RootNode,\r\n  NodeTypes,\r\n  ParentNode,\r\n  TemplateChildNode,\r\n  ElementNode,\r\n  DirectiveNode,\r\n  Property,\r\n  ExpressionNode,\r\n  createSimpleExpression,\r\n  JSChildNode,\r\n  SimpleExpressionNode,\r\n  ElementTypes,\r\n  CacheExpression,\r\n  createCacheExpression,\r\n  TemplateLiteral,\r\n  createVNodeCall,\r\n  ConstantTypes,\r\n  ArrayExpression\r\n} from './ast'\r\nimport {\r\n  isString,\r\n  isArray,\r\n  NOOP,\r\n  PatchFlags,\r\n  PatchFlagNames,\r\n  EMPTY_OBJ,\r\n  capitalize,\r\n  camelize\r\n} from '@vue/shared'\r\nimport { defaultOnError, defaultOnWarn } from './errors'\r\nimport {\r\n  TO_DISPLAY_STRING,\r\n  FRAGMENT,\r\n  helperNameMap,\r\n  CREATE_COMMENT\r\n} from './runtimeHelpers'\r\nimport { isVSlot, makeBlock } from './utils'\r\nimport { hoistStatic, isSingleElementRoot } from './transforms/hoistStatic'\r\nimport { CompilerCompatOptions } from './compat/compatConfig'\r\n\r\n// There are two types of transforms:\r\n//\r\n// - NodeTransform:\r\n//   Transforms that operate directly on a ChildNode. NodeTransforms may mutate,\r\n//   replace or remove the node being processed.\r\nexport type NodeTransform = (\r\n  node: RootNode | TemplateChildNode,\r\n  context: TransformContext\r\n) => void | (() => void) | (() => void)[]\r\n\r\n// - DirectiveTransform:\r\n//   Transforms that handles a single directive attribute on an element.\r\n//   It translates the raw directive into actual props for the VNode.\r\nexport type DirectiveTransform = (\r\n  dir: DirectiveNode,\r\n  node: ElementNode,\r\n  context: TransformContext,\r\n  // a platform specific compiler can import the base transform and augment\r\n  // it by passing in this optional argument.\r\n  augmentor?: (ret: DirectiveTransformResult) => DirectiveTransformResult\r\n) => DirectiveTransformResult\r\n\r\nexport interface DirectiveTransformResult {\r\n  props: Property[]\r\n  needRuntime?: boolean | symbol\r\n  ssrTagParts?: TemplateLiteral['elements']\r\n}\r\n\r\n// A structural directive transform is a technically a NodeTransform;\r\n// Only v-if and v-for fall into this category.\r\nexport type StructuralDirectiveTransform = (\r\n  node: ElementNode,\r\n  dir: DirectiveNode,\r\n  context: TransformContext\r\n) => void | (() => void)\r\n\r\nexport interface ImportItem {\r\n  exp: string | ExpressionNode\r\n  path: string\r\n}\r\n\r\nexport interface TransformContext\r\n  extends Required<\r\n      Omit<TransformOptions, 'filename' | keyof CompilerCompatOptions>\r\n    >,\r\n    CompilerCompatOptions {\r\n  selfName: string | null\r\n  root: RootNode\r\n  helpers: Map<symbol, number>\r\n  components: Set<string>\r\n  directives: Set<string>\r\n  hoists: (JSChildNode | null)[]\r\n  imports: ImportItem[]\r\n  temps: number\r\n  cached: number\r\n  identifiers: { [name: string]: number | undefined }\r\n  scopes: {\r\n    vFor: number\r\n    vSlot: number\r\n    vPre: number\r\n    vOnce: number\r\n  }\r\n  parent: ParentNode | null\r\n  childIndex: number\r\n  currentNode: RootNode | TemplateChildNode | null\r\n  inVOnce: boolean\r\n  helper<T extends symbol>(name: T): T\r\n  removeHelper<T extends symbol>(name: T): void\r\n  helperString(name: symbol): string\r\n  replaceNode(node: TemplateChildNode): void\r\n  removeNode(node?: TemplateChildNode): void\r\n  onNodeRemoved(): void\r\n  addIdentifiers(exp: ExpressionNode | string): void\r\n  removeIdentifiers(exp: ExpressionNode | string): void\r\n  hoist(exp: string | JSChildNode | ArrayExpression): SimpleExpressionNode\r\n  cache<T extends JSChildNode>(exp: T, isVNode?: boolean): CacheExpression | T\r\n  constantCache: Map<TemplateChildNode, ConstantTypes>\r\n\r\n  // 2.x Compat only\r\n  filters?: Set<string>\r\n}\r\n\r\nexport function createTransformContext(\r\n  root: RootNode,\r\n  {\r\n    filename = '',\r\n    prefixIdentifiers = false,\r\n    hoistStatic = false,\r\n    cacheHandlers = false,\r\n    nodeTransforms = [],\r\n    directiveTransforms = {},\r\n    transformHoist = null,\r\n    isBuiltInComponent = NOOP,\r\n    isCustomElement = NOOP,\r\n    expressionPlugins = [],\r\n    scopeId = null,\r\n    slotted = true,\r\n    ssr = false,\r\n    inSSR = false,\r\n    ssrCssVars = ``,\r\n    bindingMetadata = EMPTY_OBJ,\r\n    inline = false,\r\n    isTS = false,\r\n    onError = defaultOnError,\r\n    onWarn = defaultOnWarn,\r\n    compatConfig\r\n  }: TransformOptions\r\n): TransformContext {\r\n  const nameMatch = filename.replace(/\\?.*$/, '').match(/([^/\\\\]+)\\.\\w+$/)\r\n  const context: TransformContext = {\r\n    // options\r\n    selfName: nameMatch && capitalize(camelize(nameMatch[1])),\r\n    prefixIdentifiers,\r\n    hoistStatic,\r\n    cacheHandlers,\r\n    nodeTransforms,\r\n    directiveTransforms,\r\n    transformHoist,\r\n    isBuiltInComponent,\r\n    isCustomElement,\r\n    expressionPlugins,\r\n    scopeId,\r\n    slotted,\r\n    ssr,\r\n    inSSR,\r\n    ssrCssVars,\r\n    bindingMetadata,\r\n    inline,\r\n    isTS,\r\n    onError,\r\n    onWarn,\r\n    compatConfig,\r\n\r\n    // state\r\n    root,\r\n    helpers: new Map(),\r\n    components: new Set(),\r\n    directives: new Set(),\r\n    hoists: [],\r\n    imports: [],\r\n    constantCache: new Map(),\r\n    temps: 0,\r\n    cached: 0,\r\n    identifiers: Object.create(null),\r\n    scopes: {\r\n      vFor: 0,\r\n      vSlot: 0,\r\n      vPre: 0,\r\n      vOnce: 0\r\n    },\r\n    parent: null,\r\n    currentNode: root,\r\n    childIndex: 0,\r\n    inVOnce: false,\r\n\r\n    // methods\r\n    helper(name) {\r\n      const count = context.helpers.get(name) || 0\r\n      context.helpers.set(name, count + 1)\r\n      return name\r\n    },\r\n    removeHelper(name) {\r\n      const count = context.helpers.get(name)\r\n      if (count) {\r\n        const currentCount = count - 1\r\n        if (!currentCount) {\r\n          context.helpers.delete(name)\r\n        } else {\r\n          context.helpers.set(name, currentCount)\r\n        }\r\n      }\r\n    },\r\n    helperString(name) {\r\n      return `_${helperNameMap[context.helper(name)]}`\r\n    },\r\n    replaceNode(node) {\r\n      /* istanbul ignore if */\r\n      if (__DEV__) {\r\n        if (!context.currentNode) {\r\n          throw new Error(`Node being replaced is already removed.`)\r\n        }\r\n        if (!context.parent) {\r\n          throw new Error(`Cannot replace root node.`)\r\n        }\r\n      }\r\n      context.parent!.children[context.childIndex] = context.currentNode = node\r\n    },\r\n    removeNode(node) {\r\n      if (__DEV__ && !context.parent) {\r\n        throw new Error(`Cannot remove root node.`)\r\n      }\r\n      const list = context.parent!.children\r\n      const removalIndex = node\r\n        ? list.indexOf(node)\r\n        : context.currentNode\r\n        ? context.childIndex\r\n        : -1\r\n      /* istanbul ignore if */\r\n      if (__DEV__ && removalIndex < 0) {\r\n        throw new Error(`node being removed is not a child of current parent`)\r\n      }\r\n      if (!node || node === context.currentNode) {\r\n        // current node removed\r\n        context.currentNode = null\r\n        context.onNodeRemoved()\r\n      } else {\r\n        // sibling node removed\r\n        if (context.childIndex > removalIndex) {\r\n          context.childIndex--\r\n          context.onNodeRemoved()\r\n        }\r\n      }\r\n      context.parent!.children.splice(removalIndex, 1)\r\n    },\r\n    onNodeRemoved: () => {},\r\n    addIdentifiers(exp) {\r\n      // identifier tracking only happens in non-browser builds.\r\n      if (!__BROWSER__) {\r\n        if (isString(exp)) {\r\n          addId(exp)\r\n        } else if (exp.identifiers) {\r\n          exp.identifiers.forEach(addId)\r\n        } else if (exp.type === NodeTypes.SIMPLE_EXPRESSION) {\r\n          addId(exp.content)\r\n        }\r\n      }\r\n    },\r\n    removeIdentifiers(exp) {\r\n      if (!__BROWSER__) {\r\n        if (isString(exp)) {\r\n          removeId(exp)\r\n        } else if (exp.identifiers) {\r\n          exp.identifiers.forEach(removeId)\r\n        } else if (exp.type === NodeTypes.SIMPLE_EXPRESSION) {\r\n          removeId(exp.content)\r\n        }\r\n      }\r\n    },\r\n    hoist(exp) {\r\n      if (isString(exp)) exp = createSimpleExpression(exp)\r\n      context.hoists.push(exp)\r\n      const identifier = createSimpleExpression(\r\n        `_hoisted_${context.hoists.length}`,\r\n        false,\r\n        exp.loc,\r\n        ConstantTypes.CAN_HOIST\r\n      )\r\n      identifier.hoisted = exp\r\n      return identifier\r\n    },\r\n    cache(exp, isVNode = false) {\r\n      return createCacheExpression(context.cached++, exp, isVNode)\r\n    }\r\n  }\r\n\r\n  if (__COMPAT__) {\r\n    context.filters = new Set()\r\n  }\r\n\r\n  function addId(id: string) {\r\n    const { identifiers } = context\r\n    if (identifiers[id] === undefined) {\r\n      identifiers[id] = 0\r\n    }\r\n    identifiers[id]!++\r\n  }\r\n\r\n  function removeId(id: string) {\r\n    context.identifiers[id]!--\r\n  }\r\n\r\n  return context\r\n}\r\n\r\nexport function transform(root: RootNode, options: TransformOptions) {\r\n  const context = createTransformContext(root, options)\r\n  traverseNode(root, context)\r\n  if (options.hoistStatic) {\r\n    hoistStatic(root, context)\r\n  }\r\n  if (!options.ssr) {\r\n    createRootCodegen(root, context)\r\n  }\r\n  // finalize meta information\r\n  root.helpers = [...context.helpers.keys()]\r\n  root.components = [...context.components]\r\n  root.directives = [...context.directives]\r\n  root.imports = context.imports\r\n  root.hoists = context.hoists\r\n  root.temps = context.temps\r\n  root.cached = context.cached\r\n\r\n  if (__COMPAT__) {\r\n    root.filters = [...context.filters!]\r\n  }\r\n}\r\n\r\nfunction createRootCodegen(root: RootNode, context: TransformContext) {\r\n  const { helper } = context\r\n  const { children } = root\r\n  if (children.length === 1) {\r\n    const child = children[0]\r\n    // if the single child is an element, turn it into a block.\r\n    if (isSingleElementRoot(root, child) && child.codegenNode) {\r\n      // single element root is never hoisted so codegenNode will never be\r\n      // SimpleExpressionNode\r\n      const codegenNode = child.codegenNode\r\n      if (codegenNode.type === NodeTypes.VNODE_CALL) {\r\n        makeBlock(codegenNode, context)\r\n      }\r\n      root.codegenNode = codegenNode\r\n    } else {\r\n      // - single <slot/>, IfNode, ForNode: already blocks.\r\n      // - single text node: always patched.\r\n      // root codegen falls through via genNode()\r\n      root.codegenNode = child\r\n    }\r\n  } else if (children.length > 1) {\r\n    // root has multiple nodes - return a fragment block.\r\n    let patchFlag = PatchFlags.STABLE_FRAGMENT\r\n    let patchFlagText = PatchFlagNames[PatchFlags.STABLE_FRAGMENT]\r\n    // check if the fragment actually contains a single valid child with\r\n    // the rest being comments\r\n    if (\r\n      __DEV__ &&\r\n      children.filter(c => c.type !== NodeTypes.COMMENT).length === 1\r\n    ) {\r\n      patchFlag |= PatchFlags.DEV_ROOT_FRAGMENT\r\n      patchFlagText += `, ${PatchFlagNames[PatchFlags.DEV_ROOT_FRAGMENT]}`\r\n    }\r\n    root.codegenNode = createVNodeCall(\r\n      context,\r\n      helper(FRAGMENT),\r\n      undefined,\r\n      root.children,\r\n      patchFlag + (__DEV__ ? ` /* ${patchFlagText} */` : ``),\r\n      undefined,\r\n      undefined,\r\n      true,\r\n      undefined,\r\n      false /* isComponent */\r\n    )\r\n  } else {\r\n    // no children = noop. codegen will return null.\r\n  }\r\n}\r\n\r\nexport function traverseChildren(\r\n  parent: ParentNode,\r\n  context: TransformContext\r\n) {\r\n  let i = 0\r\n  const nodeRemoved = () => {\r\n    i--\r\n  }\r\n  for (; i < parent.children.length; i++) {\r\n    const child = parent.children[i]\r\n    if (isString(child)) continue\r\n    context.parent = parent\r\n    context.childIndex = i\r\n    context.onNodeRemoved = nodeRemoved\r\n    traverseNode(child, context)\r\n  }\r\n}\r\n\r\nexport function traverseNode(\r\n  node: RootNode | TemplateChildNode,\r\n  context: TransformContext\r\n) {\r\n  context.currentNode = node\r\n  // apply transform plugins\r\n  const { nodeTransforms } = context\r\n  const exitFns = []\r\n  for (let i = 0; i < nodeTransforms.length; i++) {\r\n    const onExit = nodeTransforms[i](node, context)\r\n    if (onExit) {\r\n      if (isArray(onExit)) {\r\n        exitFns.push(...onExit)\r\n      } else {\r\n        exitFns.push(onExit)\r\n      }\r\n    }\r\n    if (!context.currentNode) {\r\n      // node was removed\r\n      return\r\n    } else {\r\n      // node may have been replaced\r\n      node = context.currentNode\r\n    }\r\n  }\r\n\r\n  switch (node.type) {\r\n    case NodeTypes.COMMENT:\r\n      if (!context.ssr) {\r\n        // inject import for the Comment symbol, which is needed for creating\r\n        // comment nodes with `createVNode`\r\n        context.helper(CREATE_COMMENT)\r\n      }\r\n      break\r\n    case NodeTypes.INTERPOLATION:\r\n      // no need to traverse, but we need to inject toString helper\r\n      if (!context.ssr) {\r\n        context.helper(TO_DISPLAY_STRING)\r\n      }\r\n      break\r\n\r\n    // for container types, further traverse downwards\r\n    case NodeTypes.IF:\r\n      for (let i = 0; i < node.branches.length; i++) {\r\n        traverseNode(node.branches[i], context)\r\n      }\r\n      break\r\n    case NodeTypes.IF_BRANCH:\r\n    case NodeTypes.FOR:\r\n    case NodeTypes.ELEMENT:\r\n    case NodeTypes.ROOT:\r\n      traverseChildren(node, context)\r\n      break\r\n  }\r\n\r\n  // exit transforms\r\n  context.currentNode = node\r\n  let i = exitFns.length\r\n  while (i--) {\r\n    exitFns[i]()\r\n  }\r\n}\r\n\r\nexport function createStructuralDirectiveTransform(\r\n  name: string | RegExp,\r\n  fn: StructuralDirectiveTransform\r\n): NodeTransform {\r\n  const matches = isString(name)\r\n    ? (n: string) => n === name\r\n    : (n: string) => name.test(n)\r\n\r\n  return (node, context) => {\r\n    if (node.type === NodeTypes.ELEMENT) {\r\n      const { props } = node\r\n      // structural directive transforms are not concerned with slots\r\n      // as they are handled separately in vSlot.ts\r\n      if (node.tagType === ElementTypes.TEMPLATE && props.some(isVSlot)) {\r\n        return\r\n      }\r\n      const exitFns = []\r\n      for (let i = 0; i < props.length; i++) {\r\n        const prop = props[i]\r\n        if (prop.type === NodeTypes.DIRECTIVE && matches(prop.name)) {\r\n          // structural directives are removed to avoid infinite recursion\r\n          // also we remove them *before* applying so that it can further\r\n          // traverse itself in case it moves the node around\r\n          props.splice(i, 1)\r\n          i--\r\n          const onExit = fn(node, prop, context)\r\n          if (onExit) exitFns.push(onExit)\r\n        }\r\n      }\r\n      return exitFns\r\n    }\r\n  }\r\n}\r\n","import { CodegenOptions } from './options'\r\nimport {\r\n  RootNode,\r\n  TemplateChildNode,\r\n  TextNode,\r\n  CommentNode,\r\n  ExpressionNode,\r\n  NodeTypes,\r\n  JSChildNode,\r\n  CallExpression,\r\n  ArrayExpression,\r\n  ObjectExpression,\r\n  Position,\r\n  InterpolationNode,\r\n  CompoundExpressionNode,\r\n  SimpleExpressionNode,\r\n  FunctionExpression,\r\n  ConditionalExpression,\r\n  CacheExpression,\r\n  locStub,\r\n  SSRCodegenNode,\r\n  TemplateLiteral,\r\n  IfStatement,\r\n  AssignmentExpression,\r\n  ReturnStatement,\r\n  VNodeCall,\r\n  SequenceExpression\r\n} from './ast'\r\nimport { SourceMapGenerator, RawSourceMap } from 'source-map'\r\nimport {\r\n  advancePositionWithMutation,\r\n  assert,\r\n  getVNodeBlockHelper,\r\n  getVNodeHelper,\r\n  isSimpleIdentifier,\r\n  toValidAssetId\r\n} from './utils'\r\nimport { isString, isArray, isSymbol } from '@vue/shared'\r\nimport {\r\n  helperNameMap,\r\n  TO_DISPLAY_STRING,\r\n  CREATE_VNODE,\r\n  RESOLVE_COMPONENT,\r\n  RESOLVE_DIRECTIVE,\r\n  SET_BLOCK_TRACKING,\r\n  CREATE_COMMENT,\r\n  CREATE_TEXT,\r\n  PUSH_SCOPE_ID,\r\n  POP_SCOPE_ID,\r\n  WITH_SCOPE_ID,\r\n  WITH_DIRECTIVES,\r\n  CREATE_ELEMENT_VNODE,\r\n  OPEN_BLOCK,\r\n  CREATE_STATIC,\r\n  WITH_CTX,\r\n  RESOLVE_FILTER\r\n} from './runtimeHelpers'\r\nimport { ImportItem } from './transform'\r\n\r\nconst PURE_ANNOTATION = `/*#__PURE__*/`\r\n\r\ntype CodegenNode = TemplateChildNode | JSChildNode | SSRCodegenNode\r\n\r\nexport interface CodegenResult {\r\n  code: string\r\n  preamble: string\r\n  ast: RootNode\r\n  map?: RawSourceMap\r\n}\r\n\r\nexport interface CodegenContext\r\n  extends Omit<Required<CodegenOptions>, 'bindingMetadata' | 'inline'> {\r\n  source: string\r\n  code: string\r\n  line: number\r\n  column: number\r\n  offset: number\r\n  indentLevel: number\r\n  pure: boolean\r\n  map?: SourceMapGenerator\r\n  helper(key: symbol): string\r\n  push(code: string, node?: CodegenNode): void\r\n  indent(): void\r\n  deindent(withoutNewLine?: boolean): void\r\n  newline(): void\r\n}\r\n\r\nfunction createCodegenContext(\r\n  ast: RootNode,\r\n  {\r\n    mode = 'function',\r\n    prefixIdentifiers = mode === 'module',\r\n    sourceMap = false,\r\n    filename = `template.vue.html`,\r\n    scopeId = null,\r\n    optimizeImports = false,\r\n    runtimeGlobalName = `Vue`,\r\n    runtimeModuleName = `vue`,\r\n    ssr = false,\r\n    isTS = false,\r\n    inSSR = false\r\n  }: CodegenOptions\r\n): CodegenContext {\r\n  const context: CodegenContext = {\r\n    mode,\r\n    prefixIdentifiers,\r\n    sourceMap,\r\n    filename,\r\n    scopeId,\r\n    optimizeImports,\r\n    runtimeGlobalName,\r\n    runtimeModuleName,\r\n    ssr,\r\n    isTS,\r\n    inSSR,\r\n    source: ast.loc.source,\r\n    code: ``,\r\n    column: 1,\r\n    line: 1,\r\n    offset: 0,\r\n    indentLevel: 0,\r\n    pure: false,\r\n    map: undefined,\r\n    helper(key) {\r\n      return `_${helperNameMap[key]}`\r\n    },\r\n    push(code, node) {\r\n      context.code += code\r\n      if (!__BROWSER__ && context.map) {\r\n        if (node) {\r\n          let name\r\n          if (node.type === NodeTypes.SIMPLE_EXPRESSION && !node.isStatic) {\r\n            const content = node.content.replace(/^_ctx\\./, '')\r\n            if (content !== node.content && isSimpleIdentifier(content)) {\r\n              name = content\r\n            }\r\n          }\r\n          addMapping(node.loc.start, name)\r\n        }\r\n        advancePositionWithMutation(context, code)\r\n        if (node && node.loc !== locStub) {\r\n          addMapping(node.loc.end)\r\n        }\r\n      }\r\n    },\r\n    indent() {\r\n      newline(++context.indentLevel)\r\n    },\r\n    deindent(withoutNewLine = false) {\r\n      if (withoutNewLine) {\r\n        --context.indentLevel\r\n      } else {\r\n        newline(--context.indentLevel)\r\n      }\r\n    },\r\n    newline() {\r\n      newline(context.indentLevel)\r\n    }\r\n  }\r\n\r\n  function newline(n: number) {\r\n    context.push('\\n' + `  `.repeat(n))\r\n  }\r\n\r\n  function addMapping(loc: Position, name?: string) {\r\n    context.map!.addMapping({\r\n      name,\r\n      source: context.filename,\r\n      original: {\r\n        line: loc.line,\r\n        column: loc.column - 1 // source-map column is 0 based\r\n      },\r\n      generated: {\r\n        line: context.line,\r\n        column: context.column - 1\r\n      }\r\n    })\r\n  }\r\n\r\n  if (!__BROWSER__ && sourceMap) {\r\n    // lazy require source-map implementation, only in non-browser builds\r\n    context.map = new SourceMapGenerator()\r\n    context.map!.setSourceContent(filename, context.source)\r\n  }\r\n\r\n  return context\r\n}\r\n\r\nexport function generate(\r\n  ast: RootNode,\r\n  options: CodegenOptions & {\r\n    onContextCreated?: (context: CodegenContext) => void\r\n  } = {}\r\n): CodegenResult {\r\n  const context = createCodegenContext(ast, options)\r\n  if (options.onContextCreated) options.onContextCreated(context)\r\n  const {\r\n    mode,\r\n    push,\r\n    prefixIdentifiers,\r\n    indent,\r\n    deindent,\r\n    newline,\r\n    scopeId,\r\n    ssr\r\n  } = context\r\n\r\n  const hasHelpers = ast.helpers.length > 0\r\n  const useWithBlock = !prefixIdentifiers && mode !== 'module'\r\n  const genScopeId = !__BROWSER__ && scopeId != null && mode === 'module'\r\n  const isSetupInlined = !__BROWSER__ && !!options.inline\r\n\r\n  // preambles\r\n  // in setup() inline mode, the preamble is generated in a sub context\r\n  // and returned separately.\r\n  const preambleContext = isSetupInlined\r\n    ? createCodegenContext(ast, options)\r\n    : context\r\n  if (!__BROWSER__ && mode === 'module') {\r\n    genModulePreamble(ast, preambleContext, genScopeId, isSetupInlined)\r\n  } else {\r\n    genFunctionPreamble(ast, preambleContext)\r\n  }\r\n  // enter render function\r\n  const functionName = ssr ? `ssrRender` : `render`\r\n  const args = ssr ? ['_ctx', '_push', '_parent', '_attrs'] : ['_ctx', '_cache']\r\n  if (!__BROWSER__ && options.bindingMetadata && !options.inline) {\r\n    // binding optimization args\r\n    args.push('$props', '$setup', '$data', '$options')\r\n  }\r\n  const signature =\r\n    !__BROWSER__ && options.isTS\r\n      ? args.map(arg => `${arg}: any`).join(',')\r\n      : args.join(', ')\r\n\r\n  if (isSetupInlined) {\r\n    push(`(${signature}) => {`)\r\n  } else {\r\n    push(`function ${functionName}(${signature}) {`)\r\n  }\r\n  indent()\r\n\r\n  if (useWithBlock) {\r\n    push(`with (_ctx) {`)\r\n    indent()\r\n    // function mode const declarations should be inside with block\r\n    // also they should be renamed to avoid collision with user properties\r\n    if (hasHelpers) {\r\n      push(\r\n        `const { ${ast.helpers\r\n          .map(s => `${helperNameMap[s]}: _${helperNameMap[s]}`)\r\n          .join(', ')} } = _Vue`\r\n      )\r\n      push(`\\n`)\r\n      newline()\r\n    }\r\n  }\r\n\r\n  // generate asset resolution statements\r\n  if (ast.components.length) {\r\n    genAssets(ast.components, 'component', context)\r\n    if (ast.directives.length || ast.temps > 0) {\r\n      newline()\r\n    }\r\n  }\r\n  if (ast.directives.length) {\r\n    genAssets(ast.directives, 'directive', context)\r\n    if (ast.temps > 0) {\r\n      newline()\r\n    }\r\n  }\r\n  if (__COMPAT__ && ast.filters && ast.filters.length) {\r\n    newline()\r\n    genAssets(ast.filters, 'filter', context)\r\n    newline()\r\n  }\r\n\r\n  if (ast.temps > 0) {\r\n    push(`let `)\r\n    for (let i = 0; i < ast.temps; i++) {\r\n      push(`${i > 0 ? `, ` : ``}_temp${i}`)\r\n    }\r\n  }\r\n  if (ast.components.length || ast.directives.length || ast.temps) {\r\n    push(`\\n`)\r\n    newline()\r\n  }\r\n\r\n  // generate the VNode tree expression\r\n  if (!ssr) {\r\n    push(`return `)\r\n  }\r\n  if (ast.codegenNode) {\r\n    genNode(ast.codegenNode, context)\r\n  } else {\r\n    push(`null`)\r\n  }\r\n\r\n  if (useWithBlock) {\r\n    deindent()\r\n    push(`}`)\r\n  }\r\n\r\n  deindent()\r\n  push(`}`)\r\n\r\n  return {\r\n    ast,\r\n    code: context.code,\r\n    preamble: isSetupInlined ? preambleContext.code : ``,\r\n    // SourceMapGenerator does have toJSON() method but it's not in the types\r\n    map: context.map ? (context.map as any).toJSON() : undefined\r\n  }\r\n}\r\n\r\nfunction genFunctionPreamble(ast: RootNode, context: CodegenContext) {\r\n  const {\r\n    ssr,\r\n    prefixIdentifiers,\r\n    push,\r\n    newline,\r\n    runtimeModuleName,\r\n    runtimeGlobalName\r\n  } = context\r\n  const VueBinding =\r\n    !__BROWSER__ && ssr\r\n      ? `require(${JSON.stringify(runtimeModuleName)})`\r\n      : runtimeGlobalName\r\n  const aliasHelper = (s: symbol) => `${helperNameMap[s]}: _${helperNameMap[s]}`\r\n  // Generate const declaration for helpers\r\n  // In prefix mode, we place the const declaration at top so it's done\r\n  // only once; But if we not prefixing, we place the declaration inside the\r\n  // with block so it doesn't incur the `in` check cost for every helper access.\r\n  if (ast.helpers.length > 0) {\r\n    if (!__BROWSER__ && prefixIdentifiers) {\r\n      push(\r\n        `const { ${ast.helpers.map(aliasHelper).join(', ')} } = ${VueBinding}\\n`\r\n      )\r\n    } else {\r\n      // \"with\" mode.\r\n      // save Vue in a separate variable to avoid collision\r\n      push(`const _Vue = ${VueBinding}\\n`)\r\n      // in \"with\" mode, helpers are declared inside the with block to avoid\r\n      // has check cost, but hoists are lifted out of the function - we need\r\n      // to provide the helper here.\r\n      if (ast.hoists.length) {\r\n        const staticHelpers = [\r\n          CREATE_VNODE,\r\n          CREATE_ELEMENT_VNODE,\r\n          CREATE_COMMENT,\r\n          CREATE_TEXT,\r\n          CREATE_STATIC\r\n        ]\r\n          .filter(helper => ast.helpers.includes(helper))\r\n          .map(aliasHelper)\r\n          .join(', ')\r\n        push(`const { ${staticHelpers} } = _Vue\\n`)\r\n      }\r\n    }\r\n  }\r\n  // generate variables for ssr helpers\r\n  if (!__BROWSER__ && ast.ssrHelpers && ast.ssrHelpers.length) {\r\n    // ssr guarantees prefixIdentifier: true\r\n    push(\r\n      `const { ${ast.ssrHelpers\r\n        .map(aliasHelper)\r\n        .join(', ')} } = require(\"@vue/server-renderer\")\\n`\r\n    )\r\n  }\r\n  genHoists(ast.hoists, context)\r\n  newline()\r\n  push(`return `)\r\n}\r\n\r\nfunction genModulePreamble(\r\n  ast: RootNode,\r\n  context: CodegenContext,\r\n  genScopeId: boolean,\r\n  inline?: boolean\r\n) {\r\n  const { push, newline, optimizeImports, runtimeModuleName } = context\r\n\r\n  if (genScopeId) {\r\n    ast.helpers.push(WITH_SCOPE_ID)\r\n    if (ast.hoists.length) {\r\n      ast.helpers.push(PUSH_SCOPE_ID, POP_SCOPE_ID)\r\n    }\r\n  }\r\n\r\n  // generate import statements for helpers\r\n  if (ast.helpers.length) {\r\n    if (optimizeImports) {\r\n      // when bundled with webpack with code-split, calling an import binding\r\n      // as a function leads to it being wrapped with `Object(a.b)` or `(0,a.b)`,\r\n      // incurring both payload size increase and potential perf overhead.\r\n      // therefore we assign the imports to variables (which is a constant ~50b\r\n      // cost per-component instead of scaling with template size)\r\n      push(\r\n        `import { ${ast.helpers\r\n          .map(s => helperNameMap[s])\r\n          .join(', ')} } from ${JSON.stringify(runtimeModuleName)}\\n`\r\n      )\r\n      push(\r\n        `\\n// Binding optimization for webpack code-split\\nconst ${ast.helpers\r\n          .map(s => `_${helperNameMap[s]} = ${helperNameMap[s]}`)\r\n          .join(', ')}\\n`\r\n      )\r\n    } else {\r\n      push(\r\n        `import { ${ast.helpers\r\n          .map(s => `${helperNameMap[s]} as _${helperNameMap[s]}`)\r\n          .join(', ')} } from ${JSON.stringify(runtimeModuleName)}\\n`\r\n      )\r\n    }\r\n  }\r\n\r\n  if (ast.ssrHelpers && ast.ssrHelpers.length) {\r\n    push(\r\n      `import { ${ast.ssrHelpers\r\n        .map(s => `${helperNameMap[s]} as _${helperNameMap[s]}`)\r\n        .join(', ')} } from \"@vue/server-renderer\"\\n`\r\n    )\r\n  }\r\n\r\n  if (ast.imports.length) {\r\n    genImports(ast.imports, context)\r\n    newline()\r\n  }\r\n\r\n  genHoists(ast.hoists, context)\r\n  newline()\r\n\r\n  if (!inline) {\r\n    push(`export `)\r\n  }\r\n}\r\n\r\nfunction genAssets(\r\n  assets: string[],\r\n  type: 'component' | 'directive' | 'filter',\r\n  { helper, push, newline, isTS }: CodegenContext\r\n) {\r\n  const resolver = helper(\r\n    __COMPAT__ && type === 'filter'\r\n      ? RESOLVE_FILTER\r\n      : type === 'component'\r\n      ? RESOLVE_COMPONENT\r\n      : RESOLVE_DIRECTIVE\r\n  )\r\n  for (let i = 0; i < assets.length; i++) {\r\n    let id = assets[i]\r\n    // potential component implicit self-reference inferred from SFC filename\r\n    const maybeSelfReference = id.endsWith('__self')\r\n    if (maybeSelfReference) {\r\n      id = id.slice(0, -6)\r\n    }\r\n    push(\r\n      `const ${toValidAssetId(id, type)} = ${resolver}(${JSON.stringify(id)}${\r\n        maybeSelfReference ? `, true` : ``\r\n      })${isTS ? `!` : ``}`\r\n    )\r\n    if (i < assets.length - 1) {\r\n      newline()\r\n    }\r\n  }\r\n}\r\n\r\nfunction genHoists(hoists: (JSChildNode | null)[], context: CodegenContext) {\r\n  if (!hoists.length) {\r\n    return\r\n  }\r\n  context.pure = true\r\n  const { push, newline, helper, scopeId, mode } = context\r\n  const genScopeId = !__BROWSER__ && scopeId != null && mode !== 'function'\r\n  newline()\r\n\r\n  // push scope Id before initializing hoisted vnodes so that these vnodes\r\n  // get the proper scopeId as well.\r\n  if (genScopeId) {\r\n    push(`${helper(PUSH_SCOPE_ID)}(\"${scopeId}\")`)\r\n    newline()\r\n  }\r\n\r\n  hoists.forEach((exp, i) => {\r\n    if (exp) {\r\n      push(`const _hoisted_${i + 1} = `)\r\n      genNode(exp, context)\r\n      newline()\r\n    }\r\n  })\r\n\r\n  if (genScopeId) {\r\n    push(`${helper(POP_SCOPE_ID)}()`)\r\n    newline()\r\n  }\r\n  context.pure = false\r\n}\r\n\r\nfunction genImports(importsOptions: ImportItem[], context: CodegenContext) {\r\n  if (!importsOptions.length) {\r\n    return\r\n  }\r\n  importsOptions.forEach(imports => {\r\n    context.push(`import `)\r\n    genNode(imports.exp, context)\r\n    context.push(` from '${imports.path}'`)\r\n    context.newline()\r\n  })\r\n}\r\n\r\nfunction isText(n: string | CodegenNode) {\r\n  return (\r\n    isString(n) ||\r\n    n.type === NodeTypes.SIMPLE_EXPRESSION ||\r\n    n.type === NodeTypes.TEXT ||\r\n    n.type === NodeTypes.INTERPOLATION ||\r\n    n.type === NodeTypes.COMPOUND_EXPRESSION\r\n  )\r\n}\r\n\r\nfunction genNodeListAsArray(\r\n  nodes: (string | CodegenNode | TemplateChildNode[])[],\r\n  context: CodegenContext\r\n) {\r\n  const multilines =\r\n    nodes.length > 3 ||\r\n    ((!__BROWSER__ || __DEV__) && nodes.some(n => isArray(n) || !isText(n)))\r\n  context.push(`[`)\r\n  multilines && context.indent()\r\n  genNodeList(nodes, context, multilines)\r\n  multilines && context.deindent()\r\n  context.push(`]`)\r\n}\r\n\r\nfunction genNodeList(\r\n  nodes: (string | symbol | CodegenNode | TemplateChildNode[])[],\r\n  context: CodegenContext,\r\n  multilines: boolean = false,\r\n  comma: boolean = true\r\n) {\r\n  const { push, newline } = context\r\n  for (let i = 0; i < nodes.length; i++) {\r\n    const node = nodes[i]\r\n    if (isString(node)) {\r\n      push(node)\r\n    } else if (isArray(node)) {\r\n      genNodeListAsArray(node, context)\r\n    } else {\r\n      genNode(node, context)\r\n    }\r\n    if (i < nodes.length - 1) {\r\n      if (multilines) {\r\n        comma && push(',')\r\n        newline()\r\n      } else {\r\n        comma && push(', ')\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nfunction genNode(node: CodegenNode | symbol | string, context: CodegenContext) {\r\n  if (isString(node)) {\r\n    context.push(node)\r\n    return\r\n  }\r\n  if (isSymbol(node)) {\r\n    context.push(context.helper(node))\r\n    return\r\n  }\r\n  switch (node.type) {\r\n    case NodeTypes.ELEMENT:\r\n    case NodeTypes.IF:\r\n    case NodeTypes.FOR:\r\n      __DEV__ &&\r\n        assert(\r\n          node.codegenNode != null,\r\n          `Codegen node is missing for element/if/for node. ` +\r\n            `Apply appropriate transforms first.`\r\n        )\r\n      genNode(node.codegenNode!, context)\r\n      break\r\n    case NodeTypes.TEXT:\r\n      genText(node, context)\r\n      break\r\n    case NodeTypes.SIMPLE_EXPRESSION:\r\n      genExpression(node, context)\r\n      break\r\n    case NodeTypes.INTERPOLATION:\r\n      genInterpolation(node, context)\r\n      break\r\n    case NodeTypes.TEXT_CALL:\r\n      genNode(node.codegenNode, context)\r\n      break\r\n    case NodeTypes.COMPOUND_EXPRESSION:\r\n      genCompoundExpression(node, context)\r\n      break\r\n    case NodeTypes.COMMENT:\r\n      genComment(node, context)\r\n      break\r\n    case NodeTypes.VNODE_CALL:\r\n      genVNodeCall(node, context)\r\n      break\r\n\r\n    case NodeTypes.JS_CALL_EXPRESSION:\r\n      genCallExpression(node, context)\r\n      break\r\n    case NodeTypes.JS_OBJECT_EXPRESSION:\r\n      genObjectExpression(node, context)\r\n      break\r\n    case NodeTypes.JS_ARRAY_EXPRESSION:\r\n      genArrayExpression(node, context)\r\n      break\r\n    case NodeTypes.JS_FUNCTION_EXPRESSION:\r\n      genFunctionExpression(node, context)\r\n      break\r\n    case NodeTypes.JS_CONDITIONAL_EXPRESSION:\r\n      genConditionalExpression(node, context)\r\n      break\r\n    case NodeTypes.JS_CACHE_EXPRESSION:\r\n      genCacheExpression(node, context)\r\n      break\r\n    case NodeTypes.JS_BLOCK_STATEMENT:\r\n      genNodeList(node.body, context, true, false)\r\n      break\r\n\r\n    // SSR only types\r\n    case NodeTypes.JS_TEMPLATE_LITERAL:\r\n      !__BROWSER__ && genTemplateLiteral(node, context)\r\n      break\r\n    case NodeTypes.JS_IF_STATEMENT:\r\n      !__BROWSER__ && genIfStatement(node, context)\r\n      break\r\n    case NodeTypes.JS_ASSIGNMENT_EXPRESSION:\r\n      !__BROWSER__ && genAssignmentExpression(node, context)\r\n      break\r\n    case NodeTypes.JS_SEQUENCE_EXPRESSION:\r\n      !__BROWSER__ && genSequenceExpression(node, context)\r\n      break\r\n    case NodeTypes.JS_RETURN_STATEMENT:\r\n      !__BROWSER__ && genReturnStatement(node, context)\r\n      break\r\n\r\n    /* istanbul ignore next */\r\n    case NodeTypes.IF_BRANCH:\r\n      // noop\r\n      break\r\n    default:\r\n      if (__DEV__) {\r\n        assert(false, `unhandled codegen node type: ${(node as any).type}`)\r\n        // make sure we exhaust all possible types\r\n        const exhaustiveCheck: never = node\r\n        return exhaustiveCheck\r\n      }\r\n  }\r\n}\r\n\r\nfunction genText(\r\n  node: TextNode | SimpleExpressionNode,\r\n  context: CodegenContext\r\n) {\r\n  context.push(JSON.stringify(node.content), node)\r\n}\r\n\r\nfunction genExpression(node: SimpleExpressionNode, context: CodegenContext) {\r\n  const { content, isStatic } = node\r\n  context.push(isStatic ? JSON.stringify(content) : content, node)\r\n}\r\n\r\nfunction genInterpolation(node: InterpolationNode, context: CodegenContext) {\r\n  const { push, helper, pure } = context\r\n  if (pure) push(PURE_ANNOTATION)\r\n  push(`${helper(TO_DISPLAY_STRING)}(`)\r\n  genNode(node.content, context)\r\n  push(`)`)\r\n}\r\n\r\nfunction genCompoundExpression(\r\n  node: CompoundExpressionNode,\r\n  context: CodegenContext\r\n) {\r\n  for (let i = 0; i < node.children!.length; i++) {\r\n    const child = node.children![i]\r\n    if (isString(child)) {\r\n      context.push(child)\r\n    } else {\r\n      genNode(child, context)\r\n    }\r\n  }\r\n}\r\n\r\nfunction genExpressionAsPropertyKey(\r\n  node: ExpressionNode,\r\n  context: CodegenContext\r\n) {\r\n  const { push } = context\r\n  if (node.type === NodeTypes.COMPOUND_EXPRESSION) {\r\n    push(`[`)\r\n    genCompoundExpression(node, context)\r\n    push(`]`)\r\n  } else if (node.isStatic) {\r\n    // only quote keys if necessary\r\n    const text = isSimpleIdentifier(node.content)\r\n      ? node.content\r\n      : JSON.stringify(node.content)\r\n    push(text, node)\r\n  } else {\r\n    push(`[${node.content}]`, node)\r\n  }\r\n}\r\n\r\nfunction genComment(node: CommentNode, context: CodegenContext) {\r\n  const { push, helper, pure } = context\r\n  if (pure) {\r\n    push(PURE_ANNOTATION)\r\n  }\r\n  push(`${helper(CREATE_COMMENT)}(${JSON.stringify(node.content)})`, node)\r\n}\r\n\r\nfunction genVNodeCall(node: VNodeCall, context: CodegenContext) {\r\n  const { push, helper, pure } = context\r\n  const {\r\n    tag,\r\n    props,\r\n    children,\r\n    patchFlag,\r\n    dynamicProps,\r\n    directives,\r\n    isBlock,\r\n    disableTracking,\r\n    isComponent\r\n  } = node\r\n  if (directives) {\r\n    push(helper(WITH_DIRECTIVES) + `(`)\r\n  }\r\n  if (isBlock) {\r\n    push(`(${helper(OPEN_BLOCK)}(${disableTracking ? `true` : ``}), `)\r\n  }\r\n  if (pure) {\r\n    push(PURE_ANNOTATION)\r\n  }\r\n  const callHelper: symbol = isBlock\r\n    ? getVNodeBlockHelper(context.inSSR, isComponent)\r\n    : getVNodeHelper(context.inSSR, isComponent)\r\n  push(helper(callHelper) + `(`, node)\r\n  genNodeList(\r\n    genNullableArgs([tag, props, children, patchFlag, dynamicProps]),\r\n    context\r\n  )\r\n  push(`)`)\r\n  if (isBlock) {\r\n    push(`)`)\r\n  }\r\n  if (directives) {\r\n    push(`, `)\r\n    genNode(directives, context)\r\n    push(`)`)\r\n  }\r\n}\r\n\r\nfunction genNullableArgs(args: any[]): CallExpression['arguments'] {\r\n  let i = args.length\r\n  while (i--) {\r\n    if (args[i] != null) break\r\n  }\r\n  return args.slice(0, i + 1).map(arg => arg || `null`)\r\n}\r\n\r\n// JavaScript\r\nfunction genCallExpression(node: CallExpression, context: CodegenContext) {\r\n  const { push, helper, pure } = context\r\n  const callee = isString(node.callee) ? node.callee : helper(node.callee)\r\n  if (pure) {\r\n    push(PURE_ANNOTATION)\r\n  }\r\n  push(callee + `(`, node)\r\n  genNodeList(node.arguments, context)\r\n  push(`)`)\r\n}\r\n\r\nfunction genObjectExpression(node: ObjectExpression, context: CodegenContext) {\r\n  const { push, indent, deindent, newline } = context\r\n  const { properties } = node\r\n  if (!properties.length) {\r\n    push(`{}`, node)\r\n    return\r\n  }\r\n  const multilines =\r\n    properties.length > 1 ||\r\n    ((!__BROWSER__ || __DEV__) &&\r\n      properties.some(p => p.value.type !== NodeTypes.SIMPLE_EXPRESSION))\r\n  push(multilines ? `{` : `{ `)\r\n  multilines && indent()\r\n  for (let i = 0; i < properties.length; i++) {\r\n    const { key, value } = properties[i]\r\n    // key\r\n    genExpressionAsPropertyKey(key, context)\r\n    push(`: `)\r\n    // value\r\n    genNode(value, context)\r\n    if (i < properties.length - 1) {\r\n      // will only reach this if it's multilines\r\n      push(`,`)\r\n      newline()\r\n    }\r\n  }\r\n  multilines && deindent()\r\n  push(multilines ? `}` : ` }`)\r\n}\r\n\r\nfunction genArrayExpression(node: ArrayExpression, context: CodegenContext) {\r\n  genNodeListAsArray(node.elements as CodegenNode[], context)\r\n}\r\n\r\nfunction genFunctionExpression(\r\n  node: FunctionExpression,\r\n  context: CodegenContext\r\n) {\r\n  const { push, indent, deindent } = context\r\n  const { params, returns, body, newline, isSlot } = node\r\n  if (isSlot) {\r\n    // wrap slot functions with owner context\r\n    push(`_${helperNameMap[WITH_CTX]}(`)\r\n  }\r\n  push(`(`, node)\r\n  if (isArray(params)) {\r\n    genNodeList(params, context)\r\n  } else if (params) {\r\n    genNode(params, context)\r\n  }\r\n  push(`) => `)\r\n  if (newline || body) {\r\n    push(`{`)\r\n    indent()\r\n  }\r\n  if (returns) {\r\n    if (newline) {\r\n      push(`return `)\r\n    }\r\n    if (isArray(returns)) {\r\n      genNodeListAsArray(returns, context)\r\n    } else {\r\n      genNode(returns, context)\r\n    }\r\n  } else if (body) {\r\n    genNode(body, context)\r\n  }\r\n  if (newline || body) {\r\n    deindent()\r\n    push(`}`)\r\n  }\r\n  if (isSlot) {\r\n    if (__COMPAT__ && node.isNonScopedSlot) {\r\n      push(`, undefined, true`)\r\n    }\r\n    push(`)`)\r\n  }\r\n}\r\n\r\nfunction genConditionalExpression(\r\n  node: ConditionalExpression,\r\n  context: CodegenContext\r\n) {\r\n  const { test, consequent, alternate, newline: needNewline } = node\r\n  const { push, indent, deindent, newline } = context\r\n  if (test.type === NodeTypes.SIMPLE_EXPRESSION) {\r\n    const needsParens = !isSimpleIdentifier(test.content)\r\n    needsParens && push(`(`)\r\n    genExpression(test, context)\r\n    needsParens && push(`)`)\r\n  } else {\r\n    push(`(`)\r\n    genNode(test, context)\r\n    push(`)`)\r\n  }\r\n  needNewline && indent()\r\n  context.indentLevel++\r\n  needNewline || push(` `)\r\n  push(`? `)\r\n  genNode(consequent, context)\r\n  context.indentLevel--\r\n  needNewline && newline()\r\n  needNewline || push(` `)\r\n  push(`: `)\r\n  const isNested = alternate.type === NodeTypes.JS_CONDITIONAL_EXPRESSION\r\n  if (!isNested) {\r\n    context.indentLevel++\r\n  }\r\n  genNode(alternate, context)\r\n  if (!isNested) {\r\n    context.indentLevel--\r\n  }\r\n  needNewline && deindent(true /* without newline */)\r\n}\r\n\r\nfunction genCacheExpression(node: CacheExpression, context: CodegenContext) {\r\n  const { push, helper, indent, deindent, newline } = context\r\n  push(`_cache[${node.index}] || (`)\r\n  if (node.isVNode) {\r\n    indent()\r\n    push(`${helper(SET_BLOCK_TRACKING)}(-1),`)\r\n    newline()\r\n  }\r\n  push(`_cache[${node.index}] = `)\r\n  genNode(node.value, context)\r\n  if (node.isVNode) {\r\n    push(`,`)\r\n    newline()\r\n    push(`${helper(SET_BLOCK_TRACKING)}(1),`)\r\n    newline()\r\n    push(`_cache[${node.index}]`)\r\n    deindent()\r\n  }\r\n  push(`)`)\r\n}\r\n\r\nfunction genTemplateLiteral(node: TemplateLiteral, context: CodegenContext) {\r\n  const { push, indent, deindent } = context\r\n  push('`')\r\n  const l = node.elements.length\r\n  const multilines = l > 3\r\n  for (let i = 0; i < l; i++) {\r\n    const e = node.elements[i]\r\n    if (isString(e)) {\r\n      push(e.replace(/(`|\\$|\\\\)/g, '\\\\$1'))\r\n    } else {\r\n      push('${')\r\n      if (multilines) indent()\r\n      genNode(e, context)\r\n      if (multilines) deindent()\r\n      push('}')\r\n    }\r\n  }\r\n  push('`')\r\n}\r\n\r\nfunction genIfStatement(node: IfStatement, context: CodegenContext) {\r\n  const { push, indent, deindent } = context\r\n  const { test, consequent, alternate } = node\r\n  push(`if (`)\r\n  genNode(test, context)\r\n  push(`) {`)\r\n  indent()\r\n  genNode(consequent, context)\r\n  deindent()\r\n  push(`}`)\r\n  if (alternate) {\r\n    push(` else `)\r\n    if (alternate.type === NodeTypes.JS_IF_STATEMENT) {\r\n      genIfStatement(alternate, context)\r\n    } else {\r\n      push(`{`)\r\n      indent()\r\n      genNode(alternate, context)\r\n      deindent()\r\n      push(`}`)\r\n    }\r\n  }\r\n}\r\n\r\nfunction genAssignmentExpression(\r\n  node: AssignmentExpression,\r\n  context: CodegenContext\r\n) {\r\n  genNode(node.left, context)\r\n  context.push(` = `)\r\n  genNode(node.right, context)\r\n}\r\n\r\nfunction genSequenceExpression(\r\n  node: SequenceExpression,\r\n  context: CodegenContext\r\n) {\r\n  context.push(`(`)\r\n  genNodeList(node.expressions, context)\r\n  context.push(`)`)\r\n}\r\n\r\nfunction genReturnStatement(\r\n  { returns }: ReturnStatement,\r\n  context: CodegenContext\r\n) {\r\n  context.push(`return `)\r\n  if (isArray(returns)) {\r\n    genNodeListAsArray(returns, context)\r\n  } else {\r\n    genNode(returns, context)\r\n  }\r\n}\r\n","import {\r\n  createStructuralDirectiveTransform,\r\n  TransformContext,\r\n  traverseNode\r\n} from '../transform'\r\nimport {\r\n  NodeTypes,\r\n  ElementTypes,\r\n  ElementNode,\r\n  DirectiveNode,\r\n  IfBranchNode,\r\n  SimpleExpressionNode,\r\n  createCallExpression,\r\n  createConditionalExpression,\r\n  createSimpleExpression,\r\n  createObjectProperty,\r\n  createObjectExpression,\r\n  IfConditionalExpression,\r\n  BlockCodegenNode,\r\n  IfNode,\r\n  createVNodeCall,\r\n  AttributeNode,\r\n  locStub,\r\n  CacheExpression,\r\n  ConstantTypes,\r\n  MemoExpression\r\n} from '../ast'\r\nimport { createCompilerError, ErrorCodes } from '../errors'\r\nimport { processExpression } from './transformExpression'\r\nimport { validateBrowserExpression } from '../validateExpression'\r\nimport { FRAGMENT, CREATE_COMMENT } from '../runtimeHelpers'\r\nimport {\r\n  injectProp,\r\n  findDir,\r\n  findProp,\r\n  isBuiltInType,\r\n  makeBlock\r\n} from '../utils'\r\nimport { PatchFlags, PatchFlagNames } from '@vue/shared'\r\nimport { getMemoedVNodeCall } from '..'\r\n\r\nexport const transformIf = createStructuralDirectiveTransform(\r\n  /^(if|else|else-if)$/,\r\n  (node, dir, context) => {\r\n    return processIf(node, dir, context, (ifNode, branch, isRoot) => {\r\n      // #1587: We need to dynamically increment the key based on the current\r\n      // node's sibling nodes, since chained v-if/else branches are\r\n      // rendered at the same depth\r\n      const siblings = context.parent!.children\r\n      let i = siblings.indexOf(ifNode)\r\n      let key = 0\r\n      while (i-- >= 0) {\r\n        const sibling = siblings[i]\r\n        if (sibling && sibling.type === NodeTypes.IF) {\r\n          key += sibling.branches.length\r\n        }\r\n      }\r\n\r\n      // Exit callback. Complete the codegenNode when all children have been\r\n      // transformed.\r\n      return () => {\r\n        if (isRoot) {\r\n          ifNode.codegenNode = createCodegenNodeForBranch(\r\n            branch,\r\n            key,\r\n            context\r\n          ) as IfConditionalExpression\r\n        } else {\r\n          // attach this branch's codegen node to the v-if root.\r\n          const parentCondition = getParentCondition(ifNode.codegenNode!)\r\n          parentCondition.alternate = createCodegenNodeForBranch(\r\n            branch,\r\n            key + ifNode.branches.length - 1,\r\n            context\r\n          )\r\n        }\r\n      }\r\n    })\r\n  }\r\n)\r\n\r\n// target-agnostic transform used for both Client and SSR\r\nexport function processIf(\r\n  node: ElementNode,\r\n  dir: DirectiveNode,\r\n  context: TransformContext,\r\n  processCodegen?: (\r\n    node: IfNode,\r\n    branch: IfBranchNode,\r\n    isRoot: boolean\r\n  ) => (() => void) | undefined\r\n) {\r\n  if (\r\n    dir.name !== 'else' &&\r\n    (!dir.exp || !(dir.exp as SimpleExpressionNode).content.trim())\r\n  ) {\r\n    const loc = dir.exp ? dir.exp.loc : node.loc\r\n    context.onError(\r\n      createCompilerError(ErrorCodes.X_V_IF_NO_EXPRESSION, dir.loc)\r\n    )\r\n    dir.exp = createSimpleExpression(`true`, false, loc)\r\n  }\r\n\r\n  if (!__BROWSER__ && context.prefixIdentifiers && dir.exp) {\r\n    // dir.exp can only be simple expression because vIf transform is applied\r\n    // before expression transform.\r\n    dir.exp = processExpression(dir.exp as SimpleExpressionNode, context)\r\n  }\r\n\r\n  if (__DEV__ && __BROWSER__ && dir.exp) {\r\n    validateBrowserExpression(dir.exp as SimpleExpressionNode, context)\r\n  }\r\n\r\n  if (dir.name === 'if') {\r\n    const branch = createIfBranch(node, dir)\r\n    const ifNode: IfNode = {\r\n      type: NodeTypes.IF,\r\n      loc: node.loc,\r\n      branches: [branch]\r\n    }\r\n    context.replaceNode(ifNode)\r\n    if (processCodegen) {\r\n      return processCodegen(ifNode, branch, true)\r\n    }\r\n  } else {\r\n    // locate the adjacent v-if\r\n    const siblings = context.parent!.children\r\n    const comments = []\r\n    let i = siblings.indexOf(node)\r\n    while (i-- >= -1) {\r\n      const sibling = siblings[i]\r\n      if (__DEV__ && sibling && sibling.type === NodeTypes.COMMENT) {\r\n        context.removeNode(sibling)\r\n        comments.unshift(sibling)\r\n        continue\r\n      }\r\n\r\n      if (\r\n        sibling &&\r\n        sibling.type === NodeTypes.TEXT &&\r\n        !sibling.content.trim().length\r\n      ) {\r\n        context.removeNode(sibling)\r\n        continue\r\n      }\r\n\r\n      if (sibling && sibling.type === NodeTypes.IF) {\r\n        // move the node to the if node's branches\r\n        context.removeNode()\r\n        const branch = createIfBranch(node, dir)\r\n        if (\r\n          __DEV__ &&\r\n          comments.length &&\r\n          // #3619 ignore comments if the v-if is direct child of <transition>\r\n          !(\r\n            context.parent &&\r\n            context.parent.type === NodeTypes.ELEMENT &&\r\n            isBuiltInType(context.parent.tag, 'transition')\r\n          )\r\n        ) {\r\n          branch.children = [...comments, ...branch.children]\r\n        }\r\n\r\n        // check if user is forcing same key on different branches\r\n        if (__DEV__ || !__BROWSER__) {\r\n          const key = branch.userKey\r\n          if (key) {\r\n            sibling.branches.forEach(({ userKey }) => {\r\n              if (isSameKey(userKey, key)) {\r\n                context.onError(\r\n                  createCompilerError(\r\n                    ErrorCodes.X_V_IF_SAME_KEY,\r\n                    branch.userKey!.loc\r\n                  )\r\n                )\r\n              }\r\n            })\r\n          }\r\n        }\r\n\r\n        sibling.branches.push(branch)\r\n        const onExit = processCodegen && processCodegen(sibling, branch, false)\r\n        // since the branch was removed, it will not be traversed.\r\n        // make sure to traverse here.\r\n        traverseNode(branch, context)\r\n        // call on exit\r\n        if (onExit) onExit()\r\n        // make sure to reset currentNode after traversal to indicate this\r\n        // node has been removed.\r\n        context.currentNode = null\r\n      } else {\r\n        context.onError(\r\n          createCompilerError(ErrorCodes.X_V_ELSE_NO_ADJACENT_IF, node.loc)\r\n        )\r\n      }\r\n      break\r\n    }\r\n  }\r\n}\r\n\r\nfunction createIfBranch(node: ElementNode, dir: DirectiveNode): IfBranchNode {\r\n  return {\r\n    type: NodeTypes.IF_BRANCH,\r\n    loc: node.loc,\r\n    condition: dir.name === 'else' ? undefined : dir.exp,\r\n    children:\r\n      node.tagType === ElementTypes.TEMPLATE && !findDir(node, 'for')\r\n        ? node.children\r\n        : [node],\r\n    userKey: findProp(node, `key`)\r\n  }\r\n}\r\n\r\nfunction createCodegenNodeForBranch(\r\n  branch: IfBranchNode,\r\n  keyIndex: number,\r\n  context: TransformContext\r\n): IfConditionalExpression | BlockCodegenNode | MemoExpression {\r\n  if (branch.condition) {\r\n    return createConditionalExpression(\r\n      branch.condition,\r\n      createChildrenCodegenNode(branch, keyIndex, context),\r\n      // make sure to pass in asBlock: true so that the comment node call\r\n      // closes the current block.\r\n      createCallExpression(context.helper(CREATE_COMMENT), [\r\n        __DEV__ ? '\"v-if\"' : '\"\"',\r\n        'true'\r\n      ])\r\n    ) as IfConditionalExpression\r\n  } else {\r\n    return createChildrenCodegenNode(branch, keyIndex, context)\r\n  }\r\n}\r\n\r\nfunction createChildrenCodegenNode(\r\n  branch: IfBranchNode,\r\n  keyIndex: number,\r\n  context: TransformContext\r\n): BlockCodegenNode | MemoExpression {\r\n  const { helper } = context\r\n  const keyProperty = createObjectProperty(\r\n    `key`,\r\n    createSimpleExpression(\r\n      `${keyIndex}`,\r\n      false,\r\n      locStub,\r\n      ConstantTypes.CAN_HOIST\r\n    )\r\n  )\r\n  const { children } = branch\r\n  const firstChild = children[0]\r\n  const needFragmentWrapper =\r\n    children.length !== 1 || firstChild.type !== NodeTypes.ELEMENT\r\n  if (needFragmentWrapper) {\r\n    if (children.length === 1 && firstChild.type === NodeTypes.FOR) {\r\n      // optimize away nested fragments when child is a ForNode\r\n      const vnodeCall = firstChild.codegenNode!\r\n      injectProp(vnodeCall, keyProperty, context)\r\n      return vnodeCall\r\n    } else {\r\n      let patchFlag = PatchFlags.STABLE_FRAGMENT\r\n      let patchFlagText = PatchFlagNames[PatchFlags.STABLE_FRAGMENT]\r\n      // check if the fragment actually contains a single valid child with\r\n      // the rest being comments\r\n      if (\r\n        __DEV__ &&\r\n        children.filter(c => c.type !== NodeTypes.COMMENT).length === 1\r\n      ) {\r\n        patchFlag |= PatchFlags.DEV_ROOT_FRAGMENT\r\n        patchFlagText += `, ${PatchFlagNames[PatchFlags.DEV_ROOT_FRAGMENT]}`\r\n      }\r\n\r\n      return createVNodeCall(\r\n        context,\r\n        helper(FRAGMENT),\r\n        createObjectExpression([keyProperty]),\r\n        children,\r\n        patchFlag + (__DEV__ ? ` /* ${patchFlagText} */` : ``),\r\n        undefined,\r\n        undefined,\r\n        true,\r\n        false,\r\n        false /* isComponent */,\r\n        branch.loc\r\n      )\r\n    }\r\n  } else {\r\n    const ret = (firstChild as ElementNode).codegenNode as\r\n      | BlockCodegenNode\r\n      | MemoExpression\r\n    const vnodeCall = getMemoedVNodeCall(ret)\r\n    // Change createVNode to createBlock.\r\n    if (vnodeCall.type === NodeTypes.VNODE_CALL) {\r\n      makeBlock(vnodeCall, context)\r\n    }\r\n    // inject branch key\r\n    injectProp(vnodeCall, keyProperty, context)\r\n    return ret\r\n  }\r\n}\r\n\r\nfunction isSameKey(\r\n  a: AttributeNode | DirectiveNode | undefined,\r\n  b: AttributeNode | DirectiveNode\r\n): boolean {\r\n  if (!a || a.type !== b.type) {\r\n    return false\r\n  }\r\n  if (a.type === NodeTypes.ATTRIBUTE) {\r\n    if (a.value!.content !== (b as AttributeNode).value!.content) {\r\n      return false\r\n    }\r\n  } else {\r\n    // directive\r\n    const exp = a.exp!\r\n    const branchExp = (b as DirectiveNode).exp!\r\n    if (exp.type !== branchExp.type) {\r\n      return false\r\n    }\r\n    if (\r\n      exp.type !== NodeTypes.SIMPLE_EXPRESSION ||\r\n      exp.isStatic !== (branchExp as SimpleExpressionNode).isStatic ||\r\n      exp.content !== (branchExp as SimpleExpressionNode).content\r\n    ) {\r\n      return false\r\n    }\r\n  }\r\n  return true\r\n}\r\n\r\nfunction getParentCondition(\r\n  node: IfConditionalExpression | CacheExpression\r\n): IfConditionalExpression {\r\n  while (true) {\r\n    if (node.type === NodeTypes.JS_CONDITIONAL_EXPRESSION) {\r\n      if (node.alternate.type === NodeTypes.JS_CONDITIONAL_EXPRESSION) {\r\n        node = node.alternate\r\n      } else {\r\n        return node\r\n      }\r\n    } else if (node.type === NodeTypes.JS_CACHE_EXPRESSION) {\r\n      node = node.value as IfConditionalExpression\r\n    }\r\n  }\r\n}\r\n","import {\r\n  createStructuralDirectiveTransform,\r\n  TransformContext\r\n} from '../transform'\r\nimport {\r\n  NodeTypes,\r\n  ExpressionNode,\r\n  createSimpleExpression,\r\n  SourceLocation,\r\n  SimpleExpressionNode,\r\n  createCallExpression,\r\n  createFunctionExpression,\r\n  createObjectExpression,\r\n  createObjectProperty,\r\n  ForCodegenNode,\r\n  RenderSlotCall,\r\n  SlotOutletNode,\r\n  ElementNode,\r\n  DirectiveNode,\r\n  ForNode,\r\n  PlainElementNode,\r\n  createVNodeCall,\r\n  VNodeCall,\r\n  ForRenderListExpression,\r\n  BlockCodegenNode,\r\n  ForIteratorExpression,\r\n  ConstantTypes,\r\n  createBlockStatement,\r\n  createCompoundExpression\r\n} from '../ast'\r\nimport { createCompilerError, ErrorCodes } from '../errors'\r\nimport {\r\n  getInnerRange,\r\n  findProp,\r\n  isTemplateNode,\r\n  isSlotOutlet,\r\n  injectProp,\r\n  getVNodeBlockHelper,\r\n  getVNodeHelper,\r\n  findDir\r\n} from '../utils'\r\nimport {\r\n  RENDER_LIST,\r\n  OPEN_BLOCK,\r\n  FRAGMENT,\r\n  IS_MEMO_SAME\r\n} from '../runtimeHelpers'\r\nimport { processExpression } from './transformExpression'\r\nimport { validateBrowserExpression } from '../validateExpression'\r\nimport { PatchFlags, PatchFlagNames } from '@vue/shared'\r\n\r\nexport const transformFor = createStructuralDirectiveTransform(\r\n  'for',\r\n  (node, dir, context) => {\r\n    const { helper, removeHelper } = context\r\n    return processFor(node, dir, context, forNode => {\r\n      // create the loop render function expression now, and add the\r\n      // iterator on exit after all children have been traversed\r\n      const renderExp = createCallExpression(helper(RENDER_LIST), [\r\n        forNode.source\r\n      ]) as ForRenderListExpression\r\n      const memo = findDir(node, 'memo')\r\n      const keyProp = findProp(node, `key`)\r\n      const keyExp =\r\n        keyProp &&\r\n        (keyProp.type === NodeTypes.ATTRIBUTE\r\n          ? createSimpleExpression(keyProp.value!.content, true)\r\n          : keyProp.exp!)\r\n      const keyProperty = keyProp ? createObjectProperty(`key`, keyExp!) : null\r\n\r\n      if (!__BROWSER__ && context.prefixIdentifiers && keyProperty) {\r\n        // #2085 process :key expression needs to be processed in order for it\r\n        // to behave consistently for <template v-for> and <div v-for>.\r\n        // In the case of `<template v-for>`, the node is discarded and never\r\n        // traversed so its key expression won't be processed by the normal\r\n        // transforms.\r\n        keyProperty.value = processExpression(\r\n          keyProperty.value as SimpleExpressionNode,\r\n          context\r\n        )\r\n      }\r\n\r\n      const isStableFragment =\r\n        forNode.source.type === NodeTypes.SIMPLE_EXPRESSION &&\r\n        forNode.source.constType > ConstantTypes.NOT_CONSTANT\r\n      const fragmentFlag = isStableFragment\r\n        ? PatchFlags.STABLE_FRAGMENT\r\n        : keyProp\r\n        ? PatchFlags.KEYED_FRAGMENT\r\n        : PatchFlags.UNKEYED_FRAGMENT\r\n\r\n      forNode.codegenNode = createVNodeCall(\r\n        context,\r\n        helper(FRAGMENT),\r\n        undefined,\r\n        renderExp,\r\n        fragmentFlag +\r\n          (__DEV__ ? ` /* ${PatchFlagNames[fragmentFlag]} */` : ``),\r\n        undefined,\r\n        undefined,\r\n        true /* isBlock */,\r\n        !isStableFragment /* disableTracking */,\r\n        false /* isComponent */,\r\n        node.loc\r\n      ) as ForCodegenNode\r\n\r\n      return () => {\r\n        // finish the codegen now that all children have been traversed\r\n        let childBlock: BlockCodegenNode\r\n        const isTemplate = isTemplateNode(node)\r\n        const { children } = forNode\r\n\r\n        // check <template v-for> key placement\r\n        if ((__DEV__ || !__BROWSER__) && isTemplate) {\r\n          node.children.some(c => {\r\n            if (c.type === NodeTypes.ELEMENT) {\r\n              const key = findProp(c, 'key')\r\n              if (key) {\r\n                context.onError(\r\n                  createCompilerError(\r\n                    ErrorCodes.X_V_FOR_TEMPLATE_KEY_PLACEMENT,\r\n                    key.loc\r\n                  )\r\n                )\r\n                return true\r\n              }\r\n            }\r\n          })\r\n        }\r\n\r\n        const needFragmentWrapper =\r\n          children.length !== 1 || children[0].type !== NodeTypes.ELEMENT\r\n        const slotOutlet = isSlotOutlet(node)\r\n          ? node\r\n          : isTemplate &&\r\n            node.children.length === 1 &&\r\n            isSlotOutlet(node.children[0])\r\n          ? (node.children[0] as SlotOutletNode) // api-extractor somehow fails to infer this\r\n          : null\r\n\r\n        if (slotOutlet) {\r\n          // <slot v-for=\"...\"> or <template v-for=\"...\"><slot/></template>\r\n          childBlock = slotOutlet.codegenNode as RenderSlotCall\r\n          if (isTemplate && keyProperty) {\r\n            // <template v-for=\"...\" :key=\"...\"><slot/></template>\r\n            // we need to inject the key to the renderSlot() call.\r\n            // the props for renderSlot is passed as the 3rd argument.\r\n            injectProp(childBlock, keyProperty, context)\r\n          }\r\n        } else if (needFragmentWrapper) {\r\n          // <template v-for=\"...\"> with text or multi-elements\r\n          // should generate a fragment block for each loop\r\n          childBlock = createVNodeCall(\r\n            context,\r\n            helper(FRAGMENT),\r\n            keyProperty ? createObjectExpression([keyProperty]) : undefined,\r\n            node.children,\r\n            PatchFlags.STABLE_FRAGMENT +\r\n              (__DEV__\r\n                ? ` /* ${PatchFlagNames[PatchFlags.STABLE_FRAGMENT]} */`\r\n                : ``),\r\n            undefined,\r\n            undefined,\r\n            true,\r\n            undefined,\r\n            false /* isComponent */\r\n          )\r\n        } else {\r\n          // Normal element v-for. Directly use the child's codegenNode\r\n          // but mark it as a block.\r\n          childBlock = (children[0] as PlainElementNode)\r\n            .codegenNode as VNodeCall\r\n          if (isTemplate && keyProperty) {\r\n            injectProp(childBlock, keyProperty, context)\r\n          }\r\n          if (childBlock.isBlock !== !isStableFragment) {\r\n            if (childBlock.isBlock) {\r\n              // switch from block to vnode\r\n              removeHelper(OPEN_BLOCK)\r\n              removeHelper(\r\n                getVNodeBlockHelper(context.inSSR, childBlock.isComponent)\r\n              )\r\n            } else {\r\n              // switch from vnode to block\r\n              removeHelper(\r\n                getVNodeHelper(context.inSSR, childBlock.isComponent)\r\n              )\r\n            }\r\n          }\r\n          childBlock.isBlock = !isStableFragment\r\n          if (childBlock.isBlock) {\r\n            helper(OPEN_BLOCK)\r\n            helper(getVNodeBlockHelper(context.inSSR, childBlock.isComponent))\r\n          } else {\r\n            helper(getVNodeHelper(context.inSSR, childBlock.isComponent))\r\n          }\r\n        }\r\n\r\n        if (memo) {\r\n          const loop = createFunctionExpression(\r\n            createForLoopParams(forNode.parseResult, [\r\n              createSimpleExpression(`_cached`)\r\n            ])\r\n          )\r\n          loop.body = createBlockStatement([\r\n            createCompoundExpression([`const _memo = (`, memo.exp!, `)`]),\r\n            createCompoundExpression([\r\n              `if (_cached`,\r\n              ...(keyExp ? [` && _cached.key === `, keyExp] : []),\r\n              ` && ${context.helperString(\r\n                IS_MEMO_SAME\r\n              )}(_cached, _memo)) return _cached`\r\n            ]),\r\n            createCompoundExpression([`const _item = `, childBlock as any]),\r\n            createSimpleExpression(`_item.memo = _memo`),\r\n            createSimpleExpression(`return _item`)\r\n          ])\r\n          renderExp.arguments.push(\r\n            loop as ForIteratorExpression,\r\n            createSimpleExpression(`_cache`),\r\n            createSimpleExpression(String(context.cached++))\r\n          )\r\n        } else {\r\n          renderExp.arguments.push(\r\n            createFunctionExpression(\r\n              createForLoopParams(forNode.parseResult),\r\n              childBlock,\r\n              true /* force newline */\r\n            ) as ForIteratorExpression\r\n          )\r\n        }\r\n      }\r\n    })\r\n  }\r\n)\r\n\r\n// target-agnostic transform used for both Client and SSR\r\nexport function processFor(\r\n  node: ElementNode,\r\n  dir: DirectiveNode,\r\n  context: TransformContext,\r\n  processCodegen?: (forNode: ForNode) => (() => void) | undefined\r\n) {\r\n  if (!dir.exp) {\r\n    context.onError(\r\n      createCompilerError(ErrorCodes.X_V_FOR_NO_EXPRESSION, dir.loc)\r\n    )\r\n    return\r\n  }\r\n\r\n  const parseResult = parseForExpression(\r\n    // can only be simple expression because vFor transform is applied\r\n    // before expression transform.\r\n    dir.exp as SimpleExpressionNode,\r\n    context\r\n  )\r\n\r\n  if (!parseResult) {\r\n    context.onError(\r\n      createCompilerError(ErrorCodes.X_V_FOR_MALFORMED_EXPRESSION, dir.loc)\r\n    )\r\n    return\r\n  }\r\n\r\n  const { addIdentifiers, removeIdentifiers, scopes } = context\r\n  const { source, value, key, index } = parseResult\r\n\r\n  const forNode: ForNode = {\r\n    type: NodeTypes.FOR,\r\n    loc: dir.loc,\r\n    source,\r\n    valueAlias: value,\r\n    keyAlias: key,\r\n    objectIndexAlias: index,\r\n    parseResult,\r\n    children: isTemplateNode(node) ? node.children : [node]\r\n  }\r\n\r\n  context.replaceNode(forNode)\r\n\r\n  // bookkeeping\r\n  scopes.vFor++\r\n  if (!__BROWSER__ && context.prefixIdentifiers) {\r\n    // scope management\r\n    // inject identifiers to context\r\n    value && addIdentifiers(value)\r\n    key && addIdentifiers(key)\r\n    index && addIdentifiers(index)\r\n  }\r\n\r\n  const onExit = processCodegen && processCodegen(forNode)\r\n\r\n  return () => {\r\n    scopes.vFor--\r\n    if (!__BROWSER__ && context.prefixIdentifiers) {\r\n      value && removeIdentifiers(value)\r\n      key && removeIdentifiers(key)\r\n      index && removeIdentifiers(index)\r\n    }\r\n    if (onExit) onExit()\r\n  }\r\n}\r\n\r\nconst forAliasRE = /([\\s\\S]*?)\\s+(?:in|of)\\s+([\\s\\S]*)/\r\n// This regex doesn't cover the case if key or index aliases have destructuring,\r\n// but those do not make sense in the first place, so this works in practice.\r\nconst forIteratorRE = /,([^,\\}\\]]*)(?:,([^,\\}\\]]*))?$/\r\nconst stripParensRE = /^\\(|\\)$/g\r\n\r\nexport interface ForParseResult {\r\n  source: ExpressionNode\r\n  value: ExpressionNode | undefined\r\n  key: ExpressionNode | undefined\r\n  index: ExpressionNode | undefined\r\n}\r\n\r\nexport function parseForExpression(\r\n  input: SimpleExpressionNode,\r\n  context: TransformContext\r\n): ForParseResult | undefined {\r\n  const loc = input.loc\r\n  const exp = input.content\r\n  const inMatch = exp.match(forAliasRE)\r\n  if (!inMatch) return\r\n\r\n  const [, LHS, RHS] = inMatch\r\n\r\n  const result: ForParseResult = {\r\n    source: createAliasExpression(\r\n      loc,\r\n      RHS.trim(),\r\n      exp.indexOf(RHS, LHS.length)\r\n    ),\r\n    value: undefined,\r\n    key: undefined,\r\n    index: undefined\r\n  }\r\n  if (!__BROWSER__ && context.prefixIdentifiers) {\r\n    result.source = processExpression(\r\n      result.source as SimpleExpressionNode,\r\n      context\r\n    )\r\n  }\r\n  if (__DEV__ && __BROWSER__) {\r\n    validateBrowserExpression(result.source as SimpleExpressionNode, context)\r\n  }\r\n\r\n  let valueContent = LHS.trim().replace(stripParensRE, '').trim()\r\n  const trimmedOffset = LHS.indexOf(valueContent)\r\n\r\n  const iteratorMatch = valueContent.match(forIteratorRE)\r\n  if (iteratorMatch) {\r\n    valueContent = valueContent.replace(forIteratorRE, '').trim()\r\n\r\n    const keyContent = iteratorMatch[1].trim()\r\n    let keyOffset: number | undefined\r\n    if (keyContent) {\r\n      keyOffset = exp.indexOf(keyContent, trimmedOffset + valueContent.length)\r\n      result.key = createAliasExpression(loc, keyContent, keyOffset)\r\n      if (!__BROWSER__ && context.prefixIdentifiers) {\r\n        result.key = processExpression(result.key, context, true)\r\n      }\r\n      if (__DEV__ && __BROWSER__) {\r\n        validateBrowserExpression(\r\n          result.key as SimpleExpressionNode,\r\n          context,\r\n          true\r\n        )\r\n      }\r\n    }\r\n\r\n    if (iteratorMatch[2]) {\r\n      const indexContent = iteratorMatch[2].trim()\r\n\r\n      if (indexContent) {\r\n        result.index = createAliasExpression(\r\n          loc,\r\n          indexContent,\r\n          exp.indexOf(\r\n            indexContent,\r\n            result.key\r\n              ? keyOffset! + keyContent.length\r\n              : trimmedOffset + valueContent.length\r\n          )\r\n        )\r\n        if (!__BROWSER__ && context.prefixIdentifiers) {\r\n          result.index = processExpression(result.index, context, true)\r\n        }\r\n        if (__DEV__ && __BROWSER__) {\r\n          validateBrowserExpression(\r\n            result.index as SimpleExpressionNode,\r\n            context,\r\n            true\r\n          )\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  if (valueContent) {\r\n    result.value = createAliasExpression(loc, valueContent, trimmedOffset)\r\n    if (!__BROWSER__ && context.prefixIdentifiers) {\r\n      result.value = processExpression(result.value, context, true)\r\n    }\r\n    if (__DEV__ && __BROWSER__) {\r\n      validateBrowserExpression(\r\n        result.value as SimpleExpressionNode,\r\n        context,\r\n        true\r\n      )\r\n    }\r\n  }\r\n\r\n  return result\r\n}\r\n\r\nfunction createAliasExpression(\r\n  range: SourceLocation,\r\n  content: string,\r\n  offset: number\r\n): SimpleExpressionNode {\r\n  return createSimpleExpression(\r\n    content,\r\n    false,\r\n    getInnerRange(range, offset, content.length)\r\n  )\r\n}\r\n\r\nexport function createForLoopParams(\r\n  { value, key, index }: ForParseResult,\r\n  memoArgs: ExpressionNode[] = []\r\n): ExpressionNode[] {\r\n  return createParamsList([value, key, index, ...memoArgs])\r\n}\r\n\r\nfunction createParamsList(\r\n  args: (ExpressionNode | undefined)[]\r\n): ExpressionNode[] {\r\n  let i = args.length\r\n  while (i--) {\r\n    if (args[i]) break\r\n  }\r\n  return args\r\n    .slice(0, i + 1)\r\n    .map((arg, i) => arg || createSimpleExpression(`_`.repeat(i + 1), false))\r\n}\r\n","import {\r\n  ElementNode,\r\n  ObjectExpression,\r\n  createObjectExpression,\r\n  NodeTypes,\r\n  createObjectProperty,\r\n  createSimpleExpression,\r\n  createFunctionExpression,\r\n  DirectiveNode,\r\n  ElementTypes,\r\n  ExpressionNode,\r\n  Property,\r\n  TemplateChildNode,\r\n  SourceLocation,\r\n  createConditionalExpression,\r\n  ConditionalExpression,\r\n  SimpleExpressionNode,\r\n  FunctionExpression,\r\n  CallExpression,\r\n  createCallExpression,\r\n  createArrayExpression,\r\n  SlotsExpression\r\n} from '../ast'\r\nimport { TransformContext, NodeTransform } from '../transform'\r\nimport { createCompilerError, ErrorCodes } from '../errors'\r\nimport {\r\n  findDir,\r\n  isTemplateNode,\r\n  assert,\r\n  isVSlot,\r\n  hasScopeRef,\r\n  isStaticExp\r\n} from '../utils'\r\nimport { CREATE_SLOTS, RENDER_LIST, WITH_CTX } from '../runtimeHelpers'\r\nimport { parseForExpression, createForLoopParams } from './vFor'\r\nimport { SlotFlags, slotFlagsText } from '@vue/shared'\r\n\r\nconst defaultFallback = createSimpleExpression(`undefined`, false)\r\n\r\n// A NodeTransform that:\r\n// 1. Tracks scope identifiers for scoped slots so that they don't get prefixed\r\n//    by transformExpression. This is only applied in non-browser builds with\r\n//    { prefixIdentifiers: true }.\r\n// 2. Track v-slot depths so that we know a slot is inside another slot.\r\n//    Note the exit callback is executed before buildSlots() on the same node,\r\n//    so only nested slots see positive numbers.\r\nexport const trackSlotScopes: NodeTransform = (node, context) => {\r\n  if (\r\n    node.type === NodeTypes.ELEMENT &&\r\n    (node.tagType === ElementTypes.COMPONENT ||\r\n      node.tagType === ElementTypes.TEMPLATE)\r\n  ) {\r\n    // We are only checking non-empty v-slot here\r\n    // since we only care about slots that introduce scope variables.\r\n    const vSlot = findDir(node, 'slot')\r\n    if (vSlot) {\r\n      const slotProps = vSlot.exp\r\n      if (!__BROWSER__ && context.prefixIdentifiers) {\r\n        slotProps && context.addIdentifiers(slotProps)\r\n      }\r\n      context.scopes.vSlot++\r\n      return () => {\r\n        if (!__BROWSER__ && context.prefixIdentifiers) {\r\n          slotProps && context.removeIdentifiers(slotProps)\r\n        }\r\n        context.scopes.vSlot--\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n// A NodeTransform that tracks scope identifiers for scoped slots with v-for.\r\n// This transform is only applied in non-browser builds with { prefixIdentifiers: true }\r\nexport const trackVForSlotScopes: NodeTransform = (node, context) => {\r\n  let vFor\r\n  if (\r\n    isTemplateNode(node) &&\r\n    node.props.some(isVSlot) &&\r\n    (vFor = findDir(node, 'for'))\r\n  ) {\r\n    const result = (vFor.parseResult = parseForExpression(\r\n      vFor.exp as SimpleExpressionNode,\r\n      context\r\n    ))\r\n    if (result) {\r\n      const { value, key, index } = result\r\n      const { addIdentifiers, removeIdentifiers } = context\r\n      value && addIdentifiers(value)\r\n      key && addIdentifiers(key)\r\n      index && addIdentifiers(index)\r\n\r\n      return () => {\r\n        value && removeIdentifiers(value)\r\n        key && removeIdentifiers(key)\r\n        index && removeIdentifiers(index)\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport type SlotFnBuilder = (\r\n  slotProps: ExpressionNode | undefined,\r\n  slotChildren: TemplateChildNode[],\r\n  loc: SourceLocation\r\n) => FunctionExpression\r\n\r\nconst buildClientSlotFn: SlotFnBuilder = (props, children, loc) =>\r\n  createFunctionExpression(\r\n    props,\r\n    children,\r\n    false /* newline */,\r\n    true /* isSlot */,\r\n    children.length ? children[0].loc : loc\r\n  )\r\n\r\n// Instead of being a DirectiveTransform, v-slot processing is called during\r\n// transformElement to build the slots object for a component.\r\nexport function buildSlots(\r\n  node: ElementNode,\r\n  context: TransformContext,\r\n  buildSlotFn: SlotFnBuilder = buildClientSlotFn\r\n): {\r\n  slots: SlotsExpression\r\n  hasDynamicSlots: boolean\r\n} {\r\n  context.helper(WITH_CTX)\r\n\r\n  const { children, loc } = node\r\n  const slotsProperties: Property[] = []\r\n  const dynamicSlots: (ConditionalExpression | CallExpression)[] = []\r\n\r\n  // If the slot is inside a v-for or another v-slot, force it to be dynamic\r\n  // since it likely uses a scope variable.\r\n  let hasDynamicSlots = context.scopes.vSlot > 0 || context.scopes.vFor > 0\r\n  // with `prefixIdentifiers: true`, this can be further optimized to make\r\n  // it dynamic only when the slot actually uses the scope variables.\r\n  if (!__BROWSER__ && !context.ssr && context.prefixIdentifiers) {\r\n    hasDynamicSlots = hasScopeRef(node, context.identifiers)\r\n  }\r\n\r\n  // 1. Check for slot with slotProps on component itself.\r\n  //    <Comp v-slot=\"{ prop }\"/>\r\n  const onComponentSlot = findDir(node, 'slot', true)\r\n  if (onComponentSlot) {\r\n    const { arg, exp } = onComponentSlot\r\n    if (arg && !isStaticExp(arg)) {\r\n      hasDynamicSlots = true\r\n    }\r\n    slotsProperties.push(\r\n      createObjectProperty(\r\n        arg || createSimpleExpression('default', true),\r\n        buildSlotFn(exp, children, loc)\r\n      )\r\n    )\r\n  }\r\n\r\n  // 2. Iterate through children and check for template slots\r\n  //    <template v-slot:foo=\"{ prop }\">\r\n  let hasTemplateSlots = false\r\n  let hasNamedDefaultSlot = false\r\n  const implicitDefaultChildren: TemplateChildNode[] = []\r\n  const seenSlotNames = new Set<string>()\r\n\r\n  for (let i = 0; i < children.length; i++) {\r\n    const slotElement = children[i]\r\n    let slotDir\r\n\r\n    if (\r\n      !isTemplateNode(slotElement) ||\r\n      !(slotDir = findDir(slotElement, 'slot', true))\r\n    ) {\r\n      // not a <template v-slot>, skip.\r\n      if (slotElement.type !== NodeTypes.COMMENT) {\r\n        implicitDefaultChildren.push(slotElement)\r\n      }\r\n      continue\r\n    }\r\n\r\n    if (onComponentSlot) {\r\n      // already has on-component slot - this is incorrect usage.\r\n      context.onError(\r\n        createCompilerError(ErrorCodes.X_V_SLOT_MIXED_SLOT_USAGE, slotDir.loc)\r\n      )\r\n      break\r\n    }\r\n\r\n    hasTemplateSlots = true\r\n    const { children: slotChildren, loc: slotLoc } = slotElement\r\n    const {\r\n      arg: slotName = createSimpleExpression(`default`, true),\r\n      exp: slotProps,\r\n      loc: dirLoc\r\n    } = slotDir\r\n\r\n    // check if name is dynamic.\r\n    let staticSlotName: string | undefined\r\n    if (isStaticExp(slotName)) {\r\n      staticSlotName = slotName ? slotName.content : `default`\r\n    } else {\r\n      hasDynamicSlots = true\r\n    }\r\n\r\n    const slotFunction = buildSlotFn(slotProps, slotChildren, slotLoc)\r\n    // check if this slot is conditional (v-if/v-for)\r\n    let vIf: DirectiveNode | undefined\r\n    let vElse: DirectiveNode | undefined\r\n    let vFor: DirectiveNode | undefined\r\n    if ((vIf = findDir(slotElement, 'if'))) {\r\n      hasDynamicSlots = true\r\n      dynamicSlots.push(\r\n        createConditionalExpression(\r\n          vIf.exp!,\r\n          buildDynamicSlot(slotName, slotFunction),\r\n          defaultFallback\r\n        )\r\n      )\r\n    } else if (\r\n      (vElse = findDir(slotElement, /^else(-if)?$/, true /* allowEmpty */))\r\n    ) {\r\n      // find adjacent v-if\r\n      let j = i\r\n      let prev\r\n      while (j--) {\r\n        prev = children[j]\r\n        if (prev.type !== NodeTypes.COMMENT) {\r\n          break\r\n        }\r\n      }\r\n      if (prev && isTemplateNode(prev) && findDir(prev, 'if')) {\r\n        // remove node\r\n        children.splice(i, 1)\r\n        i--\r\n        __TEST__ && assert(dynamicSlots.length > 0)\r\n        // attach this slot to previous conditional\r\n        let conditional = dynamicSlots[\r\n          dynamicSlots.length - 1\r\n        ] as ConditionalExpression\r\n        while (\r\n          conditional.alternate.type === NodeTypes.JS_CONDITIONAL_EXPRESSION\r\n        ) {\r\n          conditional = conditional.alternate\r\n        }\r\n        conditional.alternate = vElse.exp\r\n          ? createConditionalExpression(\r\n              vElse.exp,\r\n              buildDynamicSlot(slotName, slotFunction),\r\n              defaultFallback\r\n            )\r\n          : buildDynamicSlot(slotName, slotFunction)\r\n      } else {\r\n        context.onError(\r\n          createCompilerError(ErrorCodes.X_V_ELSE_NO_ADJACENT_IF, vElse.loc)\r\n        )\r\n      }\r\n    } else if ((vFor = findDir(slotElement, 'for'))) {\r\n      hasDynamicSlots = true\r\n      const parseResult =\r\n        vFor.parseResult ||\r\n        parseForExpression(vFor.exp as SimpleExpressionNode, context)\r\n      if (parseResult) {\r\n        // Render the dynamic slots as an array and add it to the createSlot()\r\n        // args. The runtime knows how to handle it appropriately.\r\n        dynamicSlots.push(\r\n          createCallExpression(context.helper(RENDER_LIST), [\r\n            parseResult.source,\r\n            createFunctionExpression(\r\n              createForLoopParams(parseResult),\r\n              buildDynamicSlot(slotName, slotFunction),\r\n              true /* force newline */\r\n            )\r\n          ])\r\n        )\r\n      } else {\r\n        context.onError(\r\n          createCompilerError(ErrorCodes.X_V_FOR_MALFORMED_EXPRESSION, vFor.loc)\r\n        )\r\n      }\r\n    } else {\r\n      // check duplicate static names\r\n      if (staticSlotName) {\r\n        if (seenSlotNames.has(staticSlotName)) {\r\n          context.onError(\r\n            createCompilerError(\r\n              ErrorCodes.X_V_SLOT_DUPLICATE_SLOT_NAMES,\r\n              dirLoc\r\n            )\r\n          )\r\n          continue\r\n        }\r\n        seenSlotNames.add(staticSlotName)\r\n        if (staticSlotName === 'default') {\r\n          hasNamedDefaultSlot = true\r\n        }\r\n      }\r\n      slotsProperties.push(createObjectProperty(slotName, slotFunction))\r\n    }\r\n  }\r\n\r\n  if (!onComponentSlot) {\r\n    const buildDefaultSlotProperty = (\r\n      props: ExpressionNode | undefined,\r\n      children: TemplateChildNode[]\r\n    ) => {\r\n      const fn = buildSlotFn(props, children, loc)\r\n      if (__COMPAT__ && context.compatConfig) {\r\n        fn.isNonScopedSlot = true\r\n      }\r\n      return createObjectProperty(`default`, fn)\r\n    }\r\n\r\n    if (!hasTemplateSlots) {\r\n      // implicit default slot (on component)\r\n      slotsProperties.push(buildDefaultSlotProperty(undefined, children))\r\n    } else if (\r\n      implicitDefaultChildren.length &&\r\n      // #3766\r\n      // with whitespace: 'preserve', whitespaces between slots will end up in\r\n      // implicitDefaultChildren. Ignore if all implicit children are whitespaces.\r\n      implicitDefaultChildren.some(node => isNonWhitespaceContent(node))\r\n    ) {\r\n      // implicit default slot (mixed with named slots)\r\n      if (hasNamedDefaultSlot) {\r\n        context.onError(\r\n          createCompilerError(\r\n            ErrorCodes.X_V_SLOT_EXTRANEOUS_DEFAULT_SLOT_CHILDREN,\r\n            implicitDefaultChildren[0].loc\r\n          )\r\n        )\r\n      } else {\r\n        slotsProperties.push(\r\n          buildDefaultSlotProperty(undefined, implicitDefaultChildren)\r\n        )\r\n      }\r\n    }\r\n  }\r\n\r\n  const slotFlag = hasDynamicSlots\r\n    ? SlotFlags.DYNAMIC\r\n    : hasForwardedSlots(node.children)\r\n    ? SlotFlags.FORWARDED\r\n    : SlotFlags.STABLE\r\n\r\n  let slots = createObjectExpression(\r\n    slotsProperties.concat(\r\n      createObjectProperty(\r\n        `_`,\r\n        // 2 = compiled but dynamic = can skip normalization, but must run diff\r\n        // 1 = compiled and static = can skip normalization AND diff as optimized\r\n        createSimpleExpression(\r\n          slotFlag + (__DEV__ ? ` /* ${slotFlagsText[slotFlag]} */` : ``),\r\n          false\r\n        )\r\n      )\r\n    ),\r\n    loc\r\n  ) as SlotsExpression\r\n  if (dynamicSlots.length) {\r\n    slots = createCallExpression(context.helper(CREATE_SLOTS), [\r\n      slots,\r\n      createArrayExpression(dynamicSlots)\r\n    ]) as SlotsExpression\r\n  }\r\n\r\n  return {\r\n    slots,\r\n    hasDynamicSlots\r\n  }\r\n}\r\n\r\nfunction buildDynamicSlot(\r\n  name: ExpressionNode,\r\n  fn: FunctionExpression\r\n): ObjectExpression {\r\n  return createObjectExpression([\r\n    createObjectProperty(`name`, name),\r\n    createObjectProperty(`fn`, fn)\r\n  ])\r\n}\r\n\r\nfunction hasForwardedSlots(children: TemplateChildNode[]): boolean {\r\n  for (let i = 0; i < children.length; i++) {\r\n    const child = children[i]\r\n    switch (child.type) {\r\n      case NodeTypes.ELEMENT:\r\n        if (\r\n          child.tagType === ElementTypes.SLOT ||\r\n          hasForwardedSlots(child.children)\r\n        ) {\r\n          return true\r\n        }\r\n        break\r\n      case NodeTypes.IF:\r\n        if (hasForwardedSlots(child.branches)) return true\r\n        break\r\n      case NodeTypes.IF_BRANCH:\r\n      case NodeTypes.FOR:\r\n        if (hasForwardedSlots(child.children)) return true\r\n        break\r\n      default:\r\n        break\r\n    }\r\n  }\r\n  return false\r\n}\r\n\r\nfunction isNonWhitespaceContent(node: TemplateChildNode): boolean {\r\n  if (node.type !== NodeTypes.TEXT && node.type !== NodeTypes.TEXT_CALL)\r\n    return true\r\n  return node.type === NodeTypes.TEXT\r\n    ? !!node.content.trim()\r\n    : isNonWhitespaceContent(node.content)\r\n}\r\n","import { NodeTransform, TransformContext } from '../transform'\r\nimport {\r\n  NodeTypes,\r\n  ElementTypes,\r\n  CallExpression,\r\n  ObjectExpression,\r\n  ElementNode,\r\n  DirectiveNode,\r\n  ExpressionNode,\r\n  ArrayExpression,\r\n  createCallExpression,\r\n  createArrayExpression,\r\n  createObjectProperty,\r\n  createSimpleExpression,\r\n  createObjectExpression,\r\n  Property,\r\n  ComponentNode,\r\n  VNodeCall,\r\n  TemplateTextChildNode,\r\n  DirectiveArguments,\r\n  createVNodeCall,\r\n  ConstantTypes\r\n} from '../ast'\r\nimport {\r\n  PatchFlags,\r\n  PatchFlagNames,\r\n  isSymbol,\r\n  isOn,\r\n  isObject,\r\n  isReservedProp,\r\n  capitalize,\r\n  camelize\r\n} from '@vue/shared'\r\nimport { createCompilerError, ErrorCodes } from '../errors'\r\nimport {\r\n  RESOLVE_DIRECTIVE,\r\n  RESOLVE_COMPONENT,\r\n  RESOLVE_DYNAMIC_COMPONENT,\r\n  MERGE_PROPS,\r\n  NORMALIZE_CLASS,\r\n  NORMALIZE_STYLE,\r\n  NORMALIZE_PROPS,\r\n  TO_HANDLERS,\r\n  TELEPORT,\r\n  KEEP_ALIVE,\r\n  SUSPENSE,\r\n  UNREF,\r\n  GUARD_REACTIVE_PROPS\r\n} from '../runtimeHelpers'\r\nimport {\r\n  getInnerRange,\r\n  toValidAssetId,\r\n  findProp,\r\n  isCoreComponent,\r\n  isBindKey,\r\n  findDir,\r\n  isStaticExp\r\n} from '../utils'\r\nimport { buildSlots } from './vSlot'\r\nimport { getConstantType } from './hoistStatic'\r\nimport { BindingTypes } from '../options'\r\nimport {\r\n  checkCompatEnabled,\r\n  CompilerDeprecationTypes,\r\n  isCompatEnabled\r\n} from '../compat/compatConfig'\r\n\r\n// some directive transforms (e.g. v-model) may return a symbol for runtime\r\n// import, which should be used instead of a resolveDirective call.\r\nconst directiveImportMap = new WeakMap<DirectiveNode, symbol>()\r\n\r\n// generate a JavaScript AST for this element's codegen\r\nexport const transformElement: NodeTransform = (node, context) => {\r\n  // perform the work on exit, after all child expressions have been\r\n  // processed and merged.\r\n  return function postTransformElement() {\r\n    node = context.currentNode!\r\n\r\n    if (\r\n      !(\r\n        node.type === NodeTypes.ELEMENT &&\r\n        (node.tagType === ElementTypes.ELEMENT ||\r\n          node.tagType === ElementTypes.COMPONENT)\r\n      )\r\n    ) {\r\n      return\r\n    }\r\n\r\n    const { tag, props } = node\r\n    const isComponent = node.tagType === ElementTypes.COMPONENT\r\n\r\n    // The goal of the transform is to create a codegenNode implementing the\r\n    // VNodeCall interface.\r\n    let vnodeTag = isComponent\r\n      ? resolveComponentType(node as ComponentNode, context)\r\n      : `\"${tag}\"`\r\n\r\n    const isDynamicComponent =\r\n      isObject(vnodeTag) && vnodeTag.callee === RESOLVE_DYNAMIC_COMPONENT\r\n\r\n    let vnodeProps: VNodeCall['props']\r\n    let vnodeChildren: VNodeCall['children']\r\n    let vnodePatchFlag: VNodeCall['patchFlag']\r\n    let patchFlag: number = 0\r\n    let vnodeDynamicProps: VNodeCall['dynamicProps']\r\n    let dynamicPropNames: string[] | undefined\r\n    let vnodeDirectives: VNodeCall['directives']\r\n\r\n    let shouldUseBlock =\r\n      // dynamic component may resolve to plain elements\r\n      isDynamicComponent ||\r\n      vnodeTag === TELEPORT ||\r\n      vnodeTag === SUSPENSE ||\r\n      (!isComponent &&\r\n        // <svg> and <foreignObject> must be forced into blocks so that block\r\n        // updates inside get proper isSVG flag at runtime. (#639, #643)\r\n        // This is technically web-specific, but splitting the logic out of core\r\n        // leads to too much unnecessary complexity.\r\n        (tag === 'svg' ||\r\n          tag === 'foreignObject' ||\r\n          // #938: elements with dynamic keys should be forced into blocks\r\n          findProp(node, 'key', true)))\r\n\r\n    // props\r\n    if (props.length > 0) {\r\n      const propsBuildResult = buildProps(node, context)\r\n      vnodeProps = propsBuildResult.props\r\n      patchFlag = propsBuildResult.patchFlag\r\n      dynamicPropNames = propsBuildResult.dynamicPropNames\r\n      const directives = propsBuildResult.directives\r\n      vnodeDirectives =\r\n        directives && directives.length\r\n          ? (createArrayExpression(\r\n              directives.map(dir => buildDirectiveArgs(dir, context))\r\n            ) as DirectiveArguments)\r\n          : undefined\r\n    }\r\n\r\n    // children\r\n    if (node.children.length > 0) {\r\n      if (vnodeTag === KEEP_ALIVE) {\r\n        // Although a built-in component, we compile KeepAlive with raw children\r\n        // instead of slot functions so that it can be used inside Transition\r\n        // or other Transition-wrapping HOCs.\r\n        // To ensure correct updates with block optimizations, we need to:\r\n        // 1. Force keep-alive into a block. This avoids its children being\r\n        //    collected by a parent block.\r\n        shouldUseBlock = true\r\n        // 2. Force keep-alive to always be updated, since it uses raw children.\r\n        patchFlag |= PatchFlags.DYNAMIC_SLOTS\r\n        if (__DEV__ && node.children.length > 1) {\r\n          context.onError(\r\n            createCompilerError(ErrorCodes.X_KEEP_ALIVE_INVALID_CHILDREN, {\r\n              start: node.children[0].loc.start,\r\n              end: node.children[node.children.length - 1].loc.end,\r\n              source: ''\r\n            })\r\n          )\r\n        }\r\n      }\r\n\r\n      const shouldBuildAsSlots =\r\n        isComponent &&\r\n        // Teleport is not a real component and has dedicated runtime handling\r\n        vnodeTag !== TELEPORT &&\r\n        // explained above.\r\n        vnodeTag !== KEEP_ALIVE\r\n\r\n      if (shouldBuildAsSlots) {\r\n        const { slots, hasDynamicSlots } = buildSlots(node, context)\r\n        vnodeChildren = slots\r\n        if (hasDynamicSlots) {\r\n          patchFlag |= PatchFlags.DYNAMIC_SLOTS\r\n        }\r\n      } else if (node.children.length === 1 && vnodeTag !== TELEPORT) {\r\n        const child = node.children[0]\r\n        const type = child.type\r\n        // check for dynamic text children\r\n        const hasDynamicTextChild =\r\n          type === NodeTypes.INTERPOLATION ||\r\n          type === NodeTypes.COMPOUND_EXPRESSION\r\n        if (\r\n          hasDynamicTextChild &&\r\n          getConstantType(child, context) === ConstantTypes.NOT_CONSTANT\r\n        ) {\r\n          patchFlag |= PatchFlags.TEXT\r\n        }\r\n        // pass directly if the only child is a text node\r\n        // (plain / interpolation / expression)\r\n        if (hasDynamicTextChild || type === NodeTypes.TEXT) {\r\n          vnodeChildren = child as TemplateTextChildNode\r\n        } else {\r\n          vnodeChildren = node.children\r\n        }\r\n      } else {\r\n        vnodeChildren = node.children\r\n      }\r\n    }\r\n\r\n    // patchFlag & dynamicPropNames\r\n    if (patchFlag !== 0) {\r\n      if (__DEV__) {\r\n        if (patchFlag < 0) {\r\n          // special flags (negative and mutually exclusive)\r\n          vnodePatchFlag = patchFlag + ` /* ${PatchFlagNames[patchFlag]} */`\r\n        } else {\r\n          // bitwise flags\r\n          const flagNames = Object.keys(PatchFlagNames)\r\n            .map(Number)\r\n            .filter(n => n > 0 && patchFlag & n)\r\n            .map(n => PatchFlagNames[n])\r\n            .join(`, `)\r\n          vnodePatchFlag = patchFlag + ` /* ${flagNames} */`\r\n        }\r\n      } else {\r\n        vnodePatchFlag = String(patchFlag)\r\n      }\r\n      if (dynamicPropNames && dynamicPropNames.length) {\r\n        vnodeDynamicProps = stringifyDynamicPropNames(dynamicPropNames)\r\n      }\r\n    }\r\n\r\n    node.codegenNode = createVNodeCall(\r\n      context,\r\n      vnodeTag,\r\n      vnodeProps,\r\n      vnodeChildren,\r\n      vnodePatchFlag,\r\n      vnodeDynamicProps,\r\n      vnodeDirectives,\r\n      !!shouldUseBlock,\r\n      false /* disableTracking */,\r\n      isComponent,\r\n      node.loc\r\n    )\r\n  }\r\n}\r\n\r\nexport function resolveComponentType(\r\n  node: ComponentNode,\r\n  context: TransformContext,\r\n  ssr = false\r\n) {\r\n  let { tag } = node\r\n\r\n  // 1. dynamic component\r\n  const isExplicitDynamic = isComponentTag(tag)\r\n  const isProp = findProp(node, 'is')\r\n  if (isProp) {\r\n    if (\r\n      isExplicitDynamic ||\r\n      (__COMPAT__ &&\r\n        isCompatEnabled(\r\n          CompilerDeprecationTypes.COMPILER_IS_ON_ELEMENT,\r\n          context\r\n        ))\r\n    ) {\r\n      const exp =\r\n        isProp.type === NodeTypes.ATTRIBUTE\r\n          ? isProp.value && createSimpleExpression(isProp.value.content, true)\r\n          : isProp.exp\r\n      if (exp) {\r\n        return createCallExpression(context.helper(RESOLVE_DYNAMIC_COMPONENT), [\r\n          exp\r\n        ])\r\n      }\r\n    } else if (\r\n      isProp.type === NodeTypes.ATTRIBUTE &&\r\n      isProp.value!.content.startsWith('vue:')\r\n    ) {\r\n      // <button is=\"vue:xxx\">\r\n      // if not <component>, only is value that starts with \"vue:\" will be\r\n      // treated as component by the parse phase and reach here, unless it's\r\n      // compat mode where all is values are considered components\r\n      tag = isProp.value!.content.slice(4)\r\n    }\r\n  }\r\n\r\n  // 1.5 v-is (TODO: Deprecate)\r\n  const isDir = !isExplicitDynamic && findDir(node, 'is')\r\n  if (isDir && isDir.exp) {\r\n    return createCallExpression(context.helper(RESOLVE_DYNAMIC_COMPONENT), [\r\n      isDir.exp\r\n    ])\r\n  }\r\n\r\n  // 2. built-in components (Teleport, Transition, KeepAlive, Suspense...)\r\n  const builtIn = isCoreComponent(tag) || context.isBuiltInComponent(tag)\r\n  if (builtIn) {\r\n    // built-ins are simply fallthroughs / have special handling during ssr\r\n    // so we don't need to import their runtime equivalents\r\n    if (!ssr) context.helper(builtIn)\r\n    return builtIn\r\n  }\r\n\r\n  // 3. user component (from setup bindings)\r\n  // this is skipped in browser build since browser builds do not perform\r\n  // binding analysis.\r\n  if (!__BROWSER__) {\r\n    const fromSetup = resolveSetupReference(tag, context)\r\n    if (fromSetup) {\r\n      return fromSetup\r\n    }\r\n    const dotIndex = tag.indexOf('.')\r\n    if (dotIndex > 0) {\r\n      const ns = resolveSetupReference(tag.slice(0, dotIndex), context)\r\n      if (ns) {\r\n        return ns + tag.slice(dotIndex)\r\n      }\r\n    }\r\n  }\r\n\r\n  // 4. Self referencing component (inferred from filename)\r\n  if (\r\n    !__BROWSER__ &&\r\n    context.selfName &&\r\n    capitalize(camelize(tag)) === context.selfName\r\n  ) {\r\n    context.helper(RESOLVE_COMPONENT)\r\n    // codegen.ts has special check for __self postfix when generating\r\n    // component imports, which will pass additional `maybeSelfReference` flag\r\n    // to `resolveComponent`.\r\n    context.components.add(tag + `__self`)\r\n    return toValidAssetId(tag, `component`)\r\n  }\r\n\r\n  // 5. user component (resolve)\r\n  context.helper(RESOLVE_COMPONENT)\r\n  context.components.add(tag)\r\n  return toValidAssetId(tag, `component`)\r\n}\r\n\r\nfunction resolveSetupReference(name: string, context: TransformContext) {\r\n  const bindings = context.bindingMetadata\r\n  if (!bindings || bindings.__isScriptSetup === false) {\r\n    return\r\n  }\r\n\r\n  const camelName = camelize(name)\r\n  const PascalName = capitalize(camelName)\r\n  const checkType = (type: BindingTypes) => {\r\n    if (bindings[name] === type) {\r\n      return name\r\n    }\r\n    if (bindings[camelName] === type) {\r\n      return camelName\r\n    }\r\n    if (bindings[PascalName] === type) {\r\n      return PascalName\r\n    }\r\n  }\r\n\r\n  const fromConst = checkType(BindingTypes.SETUP_CONST)\r\n  if (fromConst) {\r\n    return context.inline\r\n      ? // in inline mode, const setup bindings (e.g. imports) can be used as-is\r\n        fromConst\r\n      : `$setup[${JSON.stringify(fromConst)}]`\r\n  }\r\n\r\n  const fromMaybeRef =\r\n    checkType(BindingTypes.SETUP_LET) ||\r\n    checkType(BindingTypes.SETUP_REF) ||\r\n    checkType(BindingTypes.SETUP_MAYBE_REF)\r\n  if (fromMaybeRef) {\r\n    return context.inline\r\n      ? // setup scope bindings that may be refs need to be unrefed\r\n        `${context.helperString(UNREF)}(${fromMaybeRef})`\r\n      : `$setup[${JSON.stringify(fromMaybeRef)}]`\r\n  }\r\n}\r\n\r\nexport type PropsExpression = ObjectExpression | CallExpression | ExpressionNode\r\n\r\nexport function buildProps(\r\n  node: ElementNode,\r\n  context: TransformContext,\r\n  props: ElementNode['props'] = node.props,\r\n  ssr = false\r\n): {\r\n  props: PropsExpression | undefined\r\n  directives: DirectiveNode[]\r\n  patchFlag: number\r\n  dynamicPropNames: string[]\r\n} {\r\n  const { tag, loc: elementLoc } = node\r\n  const isComponent = node.tagType === ElementTypes.COMPONENT\r\n  let properties: ObjectExpression['properties'] = []\r\n  const mergeArgs: PropsExpression[] = []\r\n  const runtimeDirectives: DirectiveNode[] = []\r\n\r\n  // patchFlag analysis\r\n  let patchFlag = 0\r\n  let hasRef = false\r\n  let hasClassBinding = false\r\n  let hasStyleBinding = false\r\n  let hasHydrationEventBinding = false\r\n  let hasDynamicKeys = false\r\n  let hasVnodeHook = false\r\n  const dynamicPropNames: string[] = []\r\n\r\n  const analyzePatchFlag = ({ key, value }: Property) => {\r\n    if (isStaticExp(key)) {\r\n      const name = key.content\r\n      const isEventHandler = isOn(name)\r\n      if (\r\n        !isComponent &&\r\n        isEventHandler &&\r\n        // omit the flag for click handlers because hydration gives click\r\n        // dedicated fast path.\r\n        name.toLowerCase() !== 'onclick' &&\r\n        // omit v-model handlers\r\n        name !== 'onUpdate:modelValue' &&\r\n        // omit onVnodeXXX hooks\r\n        !isReservedProp(name)\r\n      ) {\r\n        hasHydrationEventBinding = true\r\n      }\r\n\r\n      if (isEventHandler && isReservedProp(name)) {\r\n        hasVnodeHook = true\r\n      }\r\n\r\n      if (\r\n        value.type === NodeTypes.JS_CACHE_EXPRESSION ||\r\n        ((value.type === NodeTypes.SIMPLE_EXPRESSION ||\r\n          value.type === NodeTypes.COMPOUND_EXPRESSION) &&\r\n          getConstantType(value, context) > 0)\r\n      ) {\r\n        // skip if the prop is a cached handler or has constant value\r\n        return\r\n      }\r\n\r\n      if (name === 'ref') {\r\n        hasRef = true\r\n      } else if (name === 'class') {\r\n        hasClassBinding = true\r\n      } else if (name === 'style') {\r\n        hasStyleBinding = true\r\n      } else if (name !== 'key' && !dynamicPropNames.includes(name)) {\r\n        dynamicPropNames.push(name)\r\n      }\r\n\r\n      // treat the dynamic class and style binding of the component as dynamic props\r\n      if (\r\n        isComponent &&\r\n        (name === 'class' || name === 'style') &&\r\n        !dynamicPropNames.includes(name)\r\n      ) {\r\n        dynamicPropNames.push(name)\r\n      }\r\n    } else {\r\n      hasDynamicKeys = true\r\n    }\r\n  }\r\n\r\n  for (let i = 0; i < props.length; i++) {\r\n    // static attribute\r\n    const prop = props[i]\r\n    if (prop.type === NodeTypes.ATTRIBUTE) {\r\n      const { loc, name, value } = prop\r\n      let isStatic = true\r\n      if (name === 'ref') {\r\n        hasRef = true\r\n        // in inline mode there is no setupState object, so we can't use string\r\n        // keys to set the ref. Instead, we need to transform it to pass the\r\n        // acrtual ref instead.\r\n        if (!__BROWSER__ && context.inline) {\r\n          isStatic = false\r\n        }\r\n      }\r\n      // skip is on <component>, or is=\"vue:xxx\"\r\n      if (\r\n        name === 'is' &&\r\n        (isComponentTag(tag) ||\r\n          (value && value.content.startsWith('vue:')) ||\r\n          (__COMPAT__ &&\r\n            isCompatEnabled(\r\n              CompilerDeprecationTypes.COMPILER_IS_ON_ELEMENT,\r\n              context\r\n            )))\r\n      ) {\r\n        continue\r\n      }\r\n      properties.push(\r\n        createObjectProperty(\r\n          createSimpleExpression(\r\n            name,\r\n            true,\r\n            getInnerRange(loc, 0, name.length)\r\n          ),\r\n          createSimpleExpression(\r\n            value ? value.content : '',\r\n            isStatic,\r\n            value ? value.loc : loc\r\n          )\r\n        )\r\n      )\r\n    } else {\r\n      // directives\r\n      const { name, arg, exp, loc } = prop\r\n      const isVBind = name === 'bind'\r\n      const isVOn = name === 'on'\r\n\r\n      // skip v-slot - it is handled by its dedicated transform.\r\n      if (name === 'slot') {\r\n        if (!isComponent) {\r\n          context.onError(\r\n            createCompilerError(ErrorCodes.X_V_SLOT_MISPLACED, loc)\r\n          )\r\n        }\r\n        continue\r\n      }\r\n      // skip v-once/v-memo - they are handled by dedicated transforms.\r\n      if (name === 'once' || name === 'memo') {\r\n        continue\r\n      }\r\n      // skip v-is and :is on <component>\r\n      if (\r\n        name === 'is' ||\r\n        (isVBind &&\r\n          isBindKey(arg, 'is') &&\r\n          (isComponentTag(tag) ||\r\n            (__COMPAT__ &&\r\n              isCompatEnabled(\r\n                CompilerDeprecationTypes.COMPILER_IS_ON_ELEMENT,\r\n                context\r\n              ))))\r\n      ) {\r\n        continue\r\n      }\r\n      // skip v-on in SSR compilation\r\n      if (isVOn && ssr) {\r\n        continue\r\n      }\r\n\r\n      // special case for v-bind and v-on with no argument\r\n      if (!arg && (isVBind || isVOn)) {\r\n        hasDynamicKeys = true\r\n        if (exp) {\r\n          if (properties.length) {\r\n            mergeArgs.push(\r\n              createObjectExpression(dedupeProperties(properties), elementLoc)\r\n            )\r\n            properties = []\r\n          }\r\n          if (isVBind) {\r\n            if (__COMPAT__) {\r\n              // 2.x v-bind object order compat\r\n              if (__DEV__) {\r\n                const hasOverridableKeys = mergeArgs.some(arg => {\r\n                  if (arg.type === NodeTypes.JS_OBJECT_EXPRESSION) {\r\n                    return arg.properties.some(({ key }) => {\r\n                      if (\r\n                        key.type !== NodeTypes.SIMPLE_EXPRESSION ||\r\n                        !key.isStatic\r\n                      ) {\r\n                        return true\r\n                      }\r\n                      return (\r\n                        key.content !== 'class' &&\r\n                        key.content !== 'style' &&\r\n                        !isOn(key.content)\r\n                      )\r\n                    })\r\n                  } else {\r\n                    // dynamic expression\r\n                    return true\r\n                  }\r\n                })\r\n                if (hasOverridableKeys) {\r\n                  checkCompatEnabled(\r\n                    CompilerDeprecationTypes.COMPILER_V_BIND_OBJECT_ORDER,\r\n                    context,\r\n                    loc\r\n                  )\r\n                }\r\n              }\r\n\r\n              if (\r\n                isCompatEnabled(\r\n                  CompilerDeprecationTypes.COMPILER_V_BIND_OBJECT_ORDER,\r\n                  context\r\n                )\r\n              ) {\r\n                mergeArgs.unshift(exp)\r\n                continue\r\n              }\r\n            }\r\n\r\n            mergeArgs.push(exp)\r\n          } else {\r\n            // v-on=\"obj\" -> toHandlers(obj)\r\n            mergeArgs.push({\r\n              type: NodeTypes.JS_CALL_EXPRESSION,\r\n              loc,\r\n              callee: context.helper(TO_HANDLERS),\r\n              arguments: [exp]\r\n            })\r\n          }\r\n        } else {\r\n          context.onError(\r\n            createCompilerError(\r\n              isVBind\r\n                ? ErrorCodes.X_V_BIND_NO_EXPRESSION\r\n                : ErrorCodes.X_V_ON_NO_EXPRESSION,\r\n              loc\r\n            )\r\n          )\r\n        }\r\n        continue\r\n      }\r\n\r\n      const directiveTransform = context.directiveTransforms[name]\r\n      if (directiveTransform) {\r\n        // has built-in directive transform.\r\n        const { props, needRuntime } = directiveTransform(prop, node, context)\r\n        !ssr && props.forEach(analyzePatchFlag)\r\n        properties.push(...props)\r\n        if (needRuntime) {\r\n          runtimeDirectives.push(prop)\r\n          if (isSymbol(needRuntime)) {\r\n            directiveImportMap.set(prop, needRuntime)\r\n          }\r\n        }\r\n      } else {\r\n        // no built-in transform, this is a user custom directive.\r\n        runtimeDirectives.push(prop)\r\n      }\r\n    }\r\n\r\n    if (\r\n      __COMPAT__ &&\r\n      prop.type === NodeTypes.ATTRIBUTE &&\r\n      prop.name === 'ref' &&\r\n      context.scopes.vFor > 0 &&\r\n      checkCompatEnabled(\r\n        CompilerDeprecationTypes.COMPILER_V_FOR_REF,\r\n        context,\r\n        prop.loc\r\n      )\r\n    ) {\r\n      properties.push(\r\n        createObjectProperty(\r\n          createSimpleExpression('refInFor', true),\r\n          createSimpleExpression('true', false)\r\n        )\r\n      )\r\n    }\r\n  }\r\n\r\n  let propsExpression: PropsExpression | undefined = undefined\r\n\r\n  // has v-bind=\"object\" or v-on=\"object\", wrap with mergeProps\r\n  if (mergeArgs.length) {\r\n    if (properties.length) {\r\n      mergeArgs.push(\r\n        createObjectExpression(dedupeProperties(properties), elementLoc)\r\n      )\r\n    }\r\n    if (mergeArgs.length > 1) {\r\n      propsExpression = createCallExpression(\r\n        context.helper(MERGE_PROPS),\r\n        mergeArgs,\r\n        elementLoc\r\n      )\r\n    } else {\r\n      // single v-bind with nothing else - no need for a mergeProps call\r\n      propsExpression = mergeArgs[0]\r\n    }\r\n  } else if (properties.length) {\r\n    propsExpression = createObjectExpression(\r\n      dedupeProperties(properties),\r\n      elementLoc\r\n    )\r\n  }\r\n\r\n  // patchFlag analysis\r\n  if (hasDynamicKeys) {\r\n    patchFlag |= PatchFlags.FULL_PROPS\r\n  } else {\r\n    if (hasClassBinding && !isComponent) {\r\n      patchFlag |= PatchFlags.CLASS\r\n    }\r\n    if (hasStyleBinding && !isComponent) {\r\n      patchFlag |= PatchFlags.STYLE\r\n    }\r\n    if (dynamicPropNames.length) {\r\n      patchFlag |= PatchFlags.PROPS\r\n    }\r\n    if (hasHydrationEventBinding) {\r\n      patchFlag |= PatchFlags.HYDRATE_EVENTS\r\n    }\r\n  }\r\n  if (\r\n    (patchFlag === 0 || patchFlag === PatchFlags.HYDRATE_EVENTS) &&\r\n    (hasRef || hasVnodeHook || runtimeDirectives.length > 0)\r\n  ) {\r\n    patchFlag |= PatchFlags.NEED_PATCH\r\n  }\r\n\r\n  // pre-normalize props, SSR is skipped for now\r\n  if (!context.inSSR && propsExpression) {\r\n    switch (propsExpression.type) {\r\n      case NodeTypes.JS_OBJECT_EXPRESSION:\r\n        // means that there is no v-bind,\r\n        // but still need to deal with dynamic key binding\r\n        let classKeyIndex = -1\r\n        let styleKeyIndex = -1\r\n        let hasDynamicKey = false\r\n\r\n        for (let i = 0; i < propsExpression.properties.length; i++) {\r\n          const key = propsExpression.properties[i].key\r\n          if (isStaticExp(key)) {\r\n            if (key.content === 'class') {\r\n              classKeyIndex = i\r\n            } else if (key.content === 'style') {\r\n              styleKeyIndex = i\r\n            }\r\n          } else if (!key.isHandlerKey) {\r\n            hasDynamicKey = true\r\n          }\r\n        }\r\n\r\n        const classProp = propsExpression.properties[classKeyIndex]\r\n        const styleProp = propsExpression.properties[styleKeyIndex]\r\n\r\n        // no dynamic key\r\n        if (!hasDynamicKey) {\r\n          if (classProp && !isStaticExp(classProp.value)) {\r\n            classProp.value = createCallExpression(\r\n              context.helper(NORMALIZE_CLASS),\r\n              [classProp.value]\r\n            )\r\n          }\r\n          if (\r\n            styleProp &&\r\n            !isStaticExp(styleProp.value) &&\r\n            // the static style is compiled into an object,\r\n            // so use `hasStyleBinding` to ensure that it is a dynamic style binding\r\n            hasStyleBinding\r\n          ) {\r\n            styleProp.value = createCallExpression(\r\n              context.helper(NORMALIZE_STYLE),\r\n              [styleProp.value]\r\n            )\r\n          }\r\n        } else {\r\n          // dynamic key binding, wrap with `normalizeProps`\r\n          propsExpression = createCallExpression(\r\n            context.helper(NORMALIZE_PROPS),\r\n            [propsExpression]\r\n          )\r\n        }\r\n        break\r\n      case NodeTypes.JS_CALL_EXPRESSION:\r\n        // mergeProps call, do nothing\r\n        break\r\n      default:\r\n        // single v-bind\r\n        propsExpression = createCallExpression(\r\n          context.helper(NORMALIZE_PROPS),\r\n          [\r\n            createCallExpression(context.helper(GUARD_REACTIVE_PROPS), [\r\n              propsExpression\r\n            ])\r\n          ]\r\n        )\r\n        break\r\n    }\r\n  }\r\n\r\n  return {\r\n    props: propsExpression,\r\n    directives: runtimeDirectives,\r\n    patchFlag,\r\n    dynamicPropNames\r\n  }\r\n}\r\n\r\n// Dedupe props in an object literal.\r\n// Literal duplicated attributes would have been warned during the parse phase,\r\n// however, it's possible to encounter duplicated `onXXX` handlers with different\r\n// modifiers. We also need to merge static and dynamic class / style attributes.\r\n// - onXXX handlers / style: merge into array\r\n// - class: merge into single expression with concatenation\r\nfunction dedupeProperties(properties: Property[]): Property[] {\r\n  const knownProps: Map<string, Property> = new Map()\r\n  const deduped: Property[] = []\r\n  for (let i = 0; i < properties.length; i++) {\r\n    const prop = properties[i]\r\n    // dynamic keys are always allowed\r\n    if (prop.key.type === NodeTypes.COMPOUND_EXPRESSION || !prop.key.isStatic) {\r\n      deduped.push(prop)\r\n      continue\r\n    }\r\n    const name = prop.key.content\r\n    const existing = knownProps.get(name)\r\n    if (existing) {\r\n      if (name === 'style' || name === 'class' || name.startsWith('on')) {\r\n        mergeAsArray(existing, prop)\r\n      }\r\n      // unexpected duplicate, should have emitted error during parse\r\n    } else {\r\n      knownProps.set(name, prop)\r\n      deduped.push(prop)\r\n    }\r\n  }\r\n  return deduped\r\n}\r\n\r\nfunction mergeAsArray(existing: Property, incoming: Property) {\r\n  if (existing.value.type === NodeTypes.JS_ARRAY_EXPRESSION) {\r\n    existing.value.elements.push(incoming.value)\r\n  } else {\r\n    existing.value = createArrayExpression(\r\n      [existing.value, incoming.value],\r\n      existing.loc\r\n    )\r\n  }\r\n}\r\n\r\nfunction buildDirectiveArgs(\r\n  dir: DirectiveNode,\r\n  context: TransformContext\r\n): ArrayExpression {\r\n  const dirArgs: ArrayExpression['elements'] = []\r\n  const runtime = directiveImportMap.get(dir)\r\n  if (runtime) {\r\n    // built-in directive with runtime\r\n    dirArgs.push(context.helperString(runtime))\r\n  } else {\r\n    // user directive.\r\n    // see if we have directives exposed via <script setup>\r\n    const fromSetup =\r\n      !__BROWSER__ && resolveSetupReference('v-' + dir.name, context)\r\n    if (fromSetup) {\r\n      dirArgs.push(fromSetup)\r\n    } else {\r\n      // inject statement for resolving directive\r\n      context.helper(RESOLVE_DIRECTIVE)\r\n      context.directives.add(dir.name)\r\n      dirArgs.push(toValidAssetId(dir.name, `directive`))\r\n    }\r\n  }\r\n  const { loc } = dir\r\n  if (dir.exp) dirArgs.push(dir.exp)\r\n  if (dir.arg) {\r\n    if (!dir.exp) {\r\n      dirArgs.push(`void 0`)\r\n    }\r\n    dirArgs.push(dir.arg)\r\n  }\r\n  if (Object.keys(dir.modifiers).length) {\r\n    if (!dir.arg) {\r\n      if (!dir.exp) {\r\n        dirArgs.push(`void 0`)\r\n      }\r\n      dirArgs.push(`void 0`)\r\n    }\r\n    const trueExpression = createSimpleExpression(`true`, false, loc)\r\n    dirArgs.push(\r\n      createObjectExpression(\r\n        dir.modifiers.map(modifier =>\r\n          createObjectProperty(modifier, trueExpression)\r\n        ),\r\n        loc\r\n      )\r\n    )\r\n  }\r\n  return createArrayExpression(dirArgs, dir.loc)\r\n}\r\n\r\nfunction stringifyDynamicPropNames(props: string[]): string {\r\n  let propsNamesString = `[`\r\n  for (let i = 0, l = props.length; i < l; i++) {\r\n    propsNamesString += JSON.stringify(props[i])\r\n    if (i < l - 1) propsNamesString += ', '\r\n  }\r\n  return propsNamesString + `]`\r\n}\r\n\r\nfunction isComponentTag(tag: string) {\r\n  return tag[0].toLowerCase() + tag.slice(1) === 'component'\r\n}\r\n","import { NodeTransform, TransformContext } from '../transform'\r\nimport {\r\n  NodeTypes,\r\n  CallExpression,\r\n  createCallExpression,\r\n  ExpressionNode,\r\n  SlotOutletNode,\r\n  createFunctionExpression\r\n} from '../ast'\r\nimport { isSlotOutlet, isBindKey, isStaticExp } from '../utils'\r\nimport { buildProps, PropsExpression } from './transformElement'\r\nimport { createCompilerError, ErrorCodes } from '../errors'\r\nimport { RENDER_SLOT } from '../runtimeHelpers'\r\nimport { camelize } from '@vue/shared/'\r\n\r\nexport const transformSlotOutlet: NodeTransform = (node, context) => {\r\n  if (isSlotOutlet(node)) {\r\n    const { children, loc } = node\r\n    const { slotName, slotProps } = processSlotOutlet(node, context)\r\n\r\n    const slotArgs: CallExpression['arguments'] = [\r\n      context.prefixIdentifiers ? `_ctx.$slots` : `$slots`,\r\n      slotName\r\n    ]\r\n\r\n    if (slotProps) {\r\n      slotArgs.push(slotProps)\r\n    }\r\n\r\n    if (children.length) {\r\n      if (!slotProps) {\r\n        slotArgs.push(`{}`)\r\n      }\r\n      slotArgs.push(createFunctionExpression([], children, false, false, loc))\r\n    }\r\n\r\n    if (context.scopeId && !context.slotted) {\r\n      if (!slotProps) {\r\n        slotArgs.push(`{}`)\r\n      }\r\n      if (!children.length) {\r\n        slotArgs.push(`undefined`)\r\n      }\r\n      slotArgs.push(`true`)\r\n    }\r\n\r\n    node.codegenNode = createCallExpression(\r\n      context.helper(RENDER_SLOT),\r\n      slotArgs,\r\n      loc\r\n    )\r\n  }\r\n}\r\n\r\ninterface SlotOutletProcessResult {\r\n  slotName: string | ExpressionNode\r\n  slotProps: PropsExpression | undefined\r\n}\r\n\r\nexport function processSlotOutlet(\r\n  node: SlotOutletNode,\r\n  context: TransformContext\r\n): SlotOutletProcessResult {\r\n  let slotName: string | ExpressionNode = `\"default\"`\r\n  let slotProps: PropsExpression | undefined = undefined\r\n\r\n  const nonNameProps = []\r\n  for (let i = 0; i < node.props.length; i++) {\r\n    const p = node.props[i]\r\n    if (p.type === NodeTypes.ATTRIBUTE) {\r\n      if (p.value) {\r\n        if (p.name === 'name') {\r\n          slotName = JSON.stringify(p.value.content)\r\n        } else {\r\n          p.name = camelize(p.name)\r\n          nonNameProps.push(p)\r\n        }\r\n      }\r\n    } else {\r\n      if (p.name === 'bind' && isBindKey(p.arg, 'name')) {\r\n        if (p.exp) slotName = p.exp\r\n      } else {\r\n        if (p.name === 'bind' && p.arg && isStaticExp(p.arg)) {\r\n          p.arg.content = camelize(p.arg.content)\r\n        }\r\n        nonNameProps.push(p)\r\n      }\r\n    }\r\n  }\r\n\r\n  if (nonNameProps.length > 0) {\r\n    const { props, directives } = buildProps(node, context, nonNameProps)\r\n    slotProps = props\r\n\r\n    if (directives.length) {\r\n      context.onError(\r\n        createCompilerError(\r\n          ErrorCodes.X_V_SLOT_UNEXPECTED_DIRECTIVE_ON_SLOT_OUTLET,\r\n          directives[0].loc\r\n        )\r\n      )\r\n    }\r\n  }\r\n\r\n  return {\r\n    slotName,\r\n    slotProps\r\n  }\r\n}\r\n","import { DirectiveTransform, DirectiveTransformResult } from '../transform'\r\nimport {\r\n  createCompoundExpression,\r\n  createObjectProperty,\r\n  createSimpleExpression,\r\n  DirectiveNode,\r\n  ElementTypes,\r\n  ExpressionNode,\r\n  NodeTypes,\r\n  SimpleExpressionNode\r\n} from '../ast'\r\nimport { camelize, toHandlerKey } from '@vue/shared'\r\nimport { createCompilerError, ErrorCodes } from '../errors'\r\nimport { processExpression } from './transformExpression'\r\nimport { validateBrowserExpression } from '../validateExpression'\r\nimport { hasScopeRef, isMemberExpression } from '../utils'\r\nimport { TO_HANDLER_KEY } from '../runtimeHelpers'\r\n\r\nconst fnExpRE = /^\\s*([\\w$_]+|\\([^)]*?\\))\\s*=>|^\\s*function(?:\\s+[\\w$]+)?\\s*\\(/\r\n\r\nexport interface VOnDirectiveNode extends DirectiveNode {\r\n  // v-on without arg is handled directly in ./transformElements.ts due to it affecting\r\n  // codegen for the entire props object. This transform here is only for v-on\r\n  // *with* args.\r\n  arg: ExpressionNode\r\n  // exp is guaranteed to be a simple expression here because v-on w/ arg is\r\n  // skipped by transformExpression as a special case.\r\n  exp: SimpleExpressionNode | undefined\r\n}\r\n\r\nexport const transformOn: DirectiveTransform = (\r\n  dir,\r\n  node,\r\n  context,\r\n  augmentor\r\n) => {\r\n  const { loc, modifiers, arg } = dir as VOnDirectiveNode\r\n  if (!dir.exp && !modifiers.length) {\r\n    context.onError(createCompilerError(ErrorCodes.X_V_ON_NO_EXPRESSION, loc))\r\n  }\r\n  let eventName: ExpressionNode\r\n  if (arg.type === NodeTypes.SIMPLE_EXPRESSION) {\r\n    if (arg.isStatic) {\r\n      const rawName = arg.content\r\n      // for all event listeners, auto convert it to camelCase. See issue #2249\r\n      eventName = createSimpleExpression(\r\n        toHandlerKey(camelize(rawName)),\r\n        true,\r\n        arg.loc\r\n      )\r\n    } else {\r\n      // #2388\r\n      eventName = createCompoundExpression([\r\n        `${context.helperString(TO_HANDLER_KEY)}(`,\r\n        arg,\r\n        `)`\r\n      ])\r\n    }\r\n  } else {\r\n    // already a compound expression.\r\n    eventName = arg\r\n    eventName.children.unshift(`${context.helperString(TO_HANDLER_KEY)}(`)\r\n    eventName.children.push(`)`)\r\n  }\r\n\r\n  // handler processing\r\n  let exp: ExpressionNode | undefined = dir.exp as\r\n    | SimpleExpressionNode\r\n    | undefined\r\n  if (exp && !exp.content.trim()) {\r\n    exp = undefined\r\n  }\r\n  let shouldCache: boolean = context.cacheHandlers && !exp && !context.inVOnce\r\n  if (exp) {\r\n    const isMemberExp = isMemberExpression(exp.content)\r\n    const isInlineStatement = !(isMemberExp || fnExpRE.test(exp.content))\r\n    const hasMultipleStatements = exp.content.includes(`;`)\r\n\r\n    // process the expression since it's been skipped\r\n    if (!__BROWSER__ && context.prefixIdentifiers) {\r\n      isInlineStatement && context.addIdentifiers(`$event`)\r\n      exp = dir.exp = processExpression(\r\n        exp,\r\n        context,\r\n        false,\r\n        hasMultipleStatements\r\n      )\r\n      isInlineStatement && context.removeIdentifiers(`$event`)\r\n      // with scope analysis, the function is hoistable if it has no reference\r\n      // to scope variables.\r\n      shouldCache =\r\n        context.cacheHandlers &&\r\n        // unnecessary to cache inside v-once\r\n        !context.inVOnce &&\r\n        // runtime constants don't need to be cached\r\n        // (this is analyzed by compileScript in SFC <script setup>)\r\n        !(exp.type === NodeTypes.SIMPLE_EXPRESSION && exp.constType > 0) &&\r\n        // #1541 bail if this is a member exp handler passed to a component -\r\n        // we need to use the original function to preserve arity,\r\n        // e.g. <transition> relies on checking cb.length to determine\r\n        // transition end handling. Inline function is ok since its arity\r\n        // is preserved even when cached.\r\n        !(isMemberExp && node.tagType === ElementTypes.COMPONENT) &&\r\n        // bail if the function references closure variables (v-for, v-slot)\r\n        // it must be passed fresh to avoid stale values.\r\n        !hasScopeRef(exp, context.identifiers)\r\n      // If the expression is optimizable and is a member expression pointing\r\n      // to a function, turn it into invocation (and wrap in an arrow function\r\n      // below) so that it always accesses the latest value when called - thus\r\n      // avoiding the need to be patched.\r\n      if (shouldCache && isMemberExp) {\r\n        if (exp.type === NodeTypes.SIMPLE_EXPRESSION) {\r\n          exp.content = `${exp.content} && ${exp.content}(...args)`\r\n        } else {\r\n          exp.children = [...exp.children, ` && `, ...exp.children, `(...args)`]\r\n        }\r\n      }\r\n    }\r\n\r\n    if (__DEV__ && __BROWSER__) {\r\n      validateBrowserExpression(\r\n        exp as SimpleExpressionNode,\r\n        context,\r\n        false,\r\n        hasMultipleStatements\r\n      )\r\n    }\r\n\r\n    if (isInlineStatement || (shouldCache && isMemberExp)) {\r\n      // wrap inline statement in a function expression\r\n      exp = createCompoundExpression([\r\n        `${\r\n          isInlineStatement\r\n            ? !__BROWSER__ && context.isTS\r\n              ? `($event: any)`\r\n              : `$event`\r\n            : `${\r\n                !__BROWSER__ && context.isTS ? `\\n//@ts-ignore\\n` : ``\r\n              }(...args)`\r\n        } => ${hasMultipleStatements ? `{` : `(`}`,\r\n        exp,\r\n        hasMultipleStatements ? `}` : `)`\r\n      ])\r\n    }\r\n  }\r\n\r\n  let ret: DirectiveTransformResult = {\r\n    props: [\r\n      createObjectProperty(\r\n        eventName,\r\n        exp || createSimpleExpression(`() => {}`, false, loc)\r\n      )\r\n    ]\r\n  }\r\n\r\n  // apply extended compiler augmentor\r\n  if (augmentor) {\r\n    ret = augmentor(ret)\r\n  }\r\n\r\n  if (shouldCache) {\r\n    // cache handlers so that it's always the same handler being passed down.\r\n    // this avoids unnecessary re-renders when users use inline handlers on\r\n    // components.\r\n    ret.props[0].value = context.cache(ret.props[0].value)\r\n  }\r\n\r\n  // mark the key as handler for props normalization check\r\n  ret.props.forEach(p => (p.key.isHandlerKey = true))\r\n  return ret\r\n}\r\n","import { DirectiveTransform } from '../transform'\r\nimport {\r\n  createObjectProperty,\r\n  createSimpleExpression,\r\n  ExpressionNode,\r\n  NodeTypes\r\n} from '../ast'\r\nimport { createCompilerError, ErrorCodes } from '../errors'\r\nimport { camelize } from '@vue/shared'\r\nimport { CAMELIZE } from '../runtimeHelpers'\r\n\r\n// v-bind without arg is handled directly in ./transformElements.ts due to it affecting\r\n// codegen for the entire props object. This transform here is only for v-bind\r\n// *with* args.\r\nexport const transformBind: DirectiveTransform = (dir, _node, context) => {\r\n  const { exp, modifiers, loc } = dir\r\n  const arg = dir.arg!\r\n\r\n  if (arg.type !== NodeTypes.SIMPLE_EXPRESSION) {\r\n    arg.children.unshift(`(`)\r\n    arg.children.push(`) || \"\"`)\r\n  } else if (!arg.isStatic) {\r\n    arg.content = `${arg.content} || \"\"`\r\n  }\r\n\r\n  // .sync is replaced by v-model:arg\r\n  if (modifiers.includes('camel')) {\r\n    if (arg.type === NodeTypes.SIMPLE_EXPRESSION) {\r\n      if (arg.isStatic) {\r\n        arg.content = camelize(arg.content)\r\n      } else {\r\n        arg.content = `${context.helperString(CAMELIZE)}(${arg.content})`\r\n      }\r\n    } else {\r\n      arg.children.unshift(`${context.helperString(CAMELIZE)}(`)\r\n      arg.children.push(`)`)\r\n    }\r\n  }\r\n\r\n  if (!context.inSSR) {\r\n    if (modifiers.includes('prop')) {\r\n      injectPrefix(arg, '.')\r\n    }\r\n    if (modifiers.includes('attr')) {\r\n      injectPrefix(arg, '^')\r\n    }\r\n  }\r\n\r\n  if (\r\n    !exp ||\r\n    (exp.type === NodeTypes.SIMPLE_EXPRESSION && !exp.content.trim())\r\n  ) {\r\n    context.onError(createCompilerError(ErrorCodes.X_V_BIND_NO_EXPRESSION, loc))\r\n    return {\r\n      props: [createObjectProperty(arg, createSimpleExpression('', true, loc))]\r\n    }\r\n  }\r\n\r\n  return {\r\n    props: [createObjectProperty(arg, exp)]\r\n  }\r\n}\r\n\r\nconst injectPrefix = (arg: ExpressionNode, prefix: string) => {\r\n  if (arg.type === NodeTypes.SIMPLE_EXPRESSION) {\r\n    if (arg.isStatic) {\r\n      arg.content = prefix + arg.content\r\n    } else {\r\n      arg.content = `\\`${prefix}\\${${arg.content}}\\``\r\n    }\r\n  } else {\r\n    arg.children.unshift(`'${prefix}' + (`)\r\n    arg.children.push(`)`)\r\n  }\r\n}\r\n","import { NodeTransform } from '../transform'\r\nimport {\r\n  NodeTypes,\r\n  CompoundExpressionNode,\r\n  createCallExpression,\r\n  CallExpression,\r\n  ElementTypes,\r\n  ConstantTypes\r\n} from '../ast'\r\nimport { isText } from '../utils'\r\nimport { CREATE_TEXT } from '../runtimeHelpers'\r\nimport { PatchFlags, PatchFlagNames } from '@vue/shared'\r\nimport { getConstantType } from './hoistStatic'\r\n\r\n// Merge adjacent text nodes and expressions into a single expression\r\n// e.g. <div>abc {{ d }} {{ e }}</div> should have a single expression node as child.\r\nexport const transformText: NodeTransform = (node, context) => {\r\n  if (\r\n    node.type === NodeTypes.ROOT ||\r\n    node.type === NodeTypes.ELEMENT ||\r\n    node.type === NodeTypes.FOR ||\r\n    node.type === NodeTypes.IF_BRANCH\r\n  ) {\r\n    // perform the transform on node exit so that all expressions have already\r\n    // been processed.\r\n    return () => {\r\n      const children = node.children\r\n      let currentContainer: CompoundExpressionNode | undefined = undefined\r\n      let hasText = false\r\n\r\n      for (let i = 0; i < children.length; i++) {\r\n        const child = children[i]\r\n        if (isText(child)) {\r\n          hasText = true\r\n          for (let j = i + 1; j < children.length; j++) {\r\n            const next = children[j]\r\n            if (isText(next)) {\r\n              if (!currentContainer) {\r\n                currentContainer = children[i] = {\r\n                  type: NodeTypes.COMPOUND_EXPRESSION,\r\n                  loc: child.loc,\r\n                  children: [child]\r\n                }\r\n              }\r\n              // merge adjacent text node into current\r\n              currentContainer.children.push(` + `, next)\r\n              children.splice(j, 1)\r\n              j--\r\n            } else {\r\n              currentContainer = undefined\r\n              break\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      if (\r\n        !hasText ||\r\n        // if this is a plain element with a single text child, leave it\r\n        // as-is since the runtime has dedicated fast path for this by directly\r\n        // setting textContent of the element.\r\n        // for component root it's always normalized anyway.\r\n        (children.length === 1 &&\r\n          (node.type === NodeTypes.ROOT ||\r\n            (node.type === NodeTypes.ELEMENT &&\r\n              node.tagType === ElementTypes.ELEMENT &&\r\n              // #3756\r\n              // custom directives can potentially add DOM elements arbitrarily,\r\n              // we need to avoid setting textContent of the element at runtime\r\n              // to avoid accidentally overwriting the DOM elements added\r\n              // by the user through custom directives.\r\n              !node.props.find(\r\n                p =>\r\n                  p.type === NodeTypes.DIRECTIVE &&\r\n                  !context.directiveTransforms[p.name]\r\n              ) &&\r\n              // in compat mode, <template> tags with no special directives\r\n              // will be rendered as a fragment so its children must be\r\n              // converted into vnodes.\r\n              !(__COMPAT__ && node.tag === 'template'))))\r\n      ) {\r\n        return\r\n      }\r\n\r\n      // pre-convert text nodes into createTextVNode(text) calls to avoid\r\n      // runtime normalization.\r\n      for (let i = 0; i < children.length; i++) {\r\n        const child = children[i]\r\n        if (isText(child) || child.type === NodeTypes.COMPOUND_EXPRESSION) {\r\n          const callArgs: CallExpression['arguments'] = []\r\n          // createTextVNode defaults to single whitespace, so if it is a\r\n          // single space the code could be an empty call to save bytes.\r\n          if (child.type !== NodeTypes.TEXT || child.content !== ' ') {\r\n            callArgs.push(child)\r\n          }\r\n          // mark dynamic text with flag so it gets patched inside a block\r\n          if (\r\n            !context.ssr &&\r\n            getConstantType(child, context) === ConstantTypes.NOT_CONSTANT\r\n          ) {\r\n            callArgs.push(\r\n              PatchFlags.TEXT +\r\n                (__DEV__ ? ` /* ${PatchFlagNames[PatchFlags.TEXT]} */` : ``)\r\n            )\r\n          }\r\n          children[i] = {\r\n            type: NodeTypes.TEXT_CALL,\r\n            content: child,\r\n            loc: child.loc,\r\n            codegenNode: createCallExpression(\r\n              context.helper(CREATE_TEXT),\r\n              callArgs\r\n            )\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n","import { NodeTransform } from '../transform'\r\nimport { findDir } from '../utils'\r\nimport { ElementNode, ForNode, IfNode, NodeTypes } from '../ast'\r\nimport { SET_BLOCK_TRACKING } from '../runtimeHelpers'\r\n\r\nconst seen = new WeakSet()\r\n\r\nexport const transformOnce: NodeTransform = (node, context) => {\r\n  if (node.type === NodeTypes.ELEMENT && findDir(node, 'once', true)) {\r\n    if (seen.has(node) || context.inVOnce) {\r\n      return\r\n    }\r\n    seen.add(node)\r\n    context.inVOnce = true\r\n    context.helper(SET_BLOCK_TRACKING)\r\n    return () => {\r\n      context.inVOnce = false\r\n      const cur = context.currentNode as ElementNode | IfNode | ForNode\r\n      if (cur.codegenNode) {\r\n        cur.codegenNode = context.cache(cur.codegenNode, true /* isVNode */)\r\n      }\r\n    }\r\n  }\r\n}\r\n","import { DirectiveTransform } from '../transform'\r\nimport {\r\n  createSimpleExpression,\r\n  createObjectProperty,\r\n  createCompoundExpression,\r\n  NodeTypes,\r\n  Property,\r\n  ElementTypes,\r\n  ExpressionNode,\r\n  ConstantTypes\r\n} from '../ast'\r\nimport { createCompilerError, ErrorCodes } from '../errors'\r\nimport {\r\n  isMemberExpression,\r\n  isSimpleIdentifier,\r\n  hasScopeRef,\r\n  isStaticExp\r\n} from '../utils'\r\nimport { IS_REF } from '../runtimeHelpers'\r\nimport { BindingTypes } from '../options'\r\n\r\nexport const transformModel: DirectiveTransform = (dir, node, context) => {\r\n  const { exp, arg } = dir\r\n  if (!exp) {\r\n    context.onError(\r\n      createCompilerError(ErrorCodes.X_V_MODEL_NO_EXPRESSION, dir.loc)\r\n    )\r\n    return createTransformProps()\r\n  }\r\n\r\n  const rawExp = exp.loc.source\r\n  const expString =\r\n    exp.type === NodeTypes.SIMPLE_EXPRESSION ? exp.content : rawExp\r\n\r\n  // im SFC <script setup> inline mode, the exp may have been transformed into\r\n  // _unref(exp)\r\n  const bindingType = context.bindingMetadata[rawExp]\r\n  const maybeRef =\r\n    !__BROWSER__ &&\r\n    context.inline &&\r\n    bindingType &&\r\n    bindingType !== BindingTypes.SETUP_CONST\r\n\r\n  if (!expString.trim() || (!isMemberExpression(expString) && !maybeRef)) {\r\n    context.onError(\r\n      createCompilerError(ErrorCodes.X_V_MODEL_MALFORMED_EXPRESSION, exp.loc)\r\n    )\r\n    return createTransformProps()\r\n  }\r\n\r\n  if (\r\n    !__BROWSER__ &&\r\n    context.prefixIdentifiers &&\r\n    isSimpleIdentifier(expString) &&\r\n    context.identifiers[expString]\r\n  ) {\r\n    context.onError(\r\n      createCompilerError(ErrorCodes.X_V_MODEL_ON_SCOPE_VARIABLE, exp.loc)\r\n    )\r\n    return createTransformProps()\r\n  }\r\n\r\n  const propName = arg ? arg : createSimpleExpression('modelValue', true)\r\n  const eventName = arg\r\n    ? isStaticExp(arg)\r\n      ? `onUpdate:${arg.content}`\r\n      : createCompoundExpression(['\"onUpdate:\" + ', arg])\r\n    : `onUpdate:modelValue`\r\n\r\n  let assignmentExp: ExpressionNode\r\n  const eventArg = context.isTS ? `($event: any)` : `$event`\r\n  if (maybeRef) {\r\n    if (bindingType === BindingTypes.SETUP_REF) {\r\n      // v-model used on known ref.\r\n      assignmentExp = createCompoundExpression([\r\n        `${eventArg} => (`,\r\n        createSimpleExpression(rawExp, false, exp.loc),\r\n        `.value = $event)`\r\n      ])\r\n    } else {\r\n      // v-model used on a potentially ref binding in <script setup> inline mode.\r\n      // the assignment needs to check whether the binding is actually a ref.\r\n      const altAssignment =\r\n        bindingType === BindingTypes.SETUP_LET ? `${rawExp} = $event` : `null`\r\n      assignmentExp = createCompoundExpression([\r\n        `${eventArg} => (${context.helperString(IS_REF)}(${rawExp}) ? `,\r\n        createSimpleExpression(rawExp, false, exp.loc),\r\n        `.value = $event : ${altAssignment})`\r\n      ])\r\n    }\r\n  } else {\r\n    assignmentExp = createCompoundExpression([\r\n      `${eventArg} => (`,\r\n      exp,\r\n      ` = $event)`\r\n    ])\r\n  }\r\n\r\n  const props = [\r\n    // modelValue: foo\r\n    createObjectProperty(propName, dir.exp!),\r\n    // \"onUpdate:modelValue\": $event => (foo = $event)\r\n    createObjectProperty(eventName, assignmentExp)\r\n  ]\r\n\r\n  // cache v-model handler if applicable (when it doesn't refer any scope vars)\r\n  if (\r\n    !__BROWSER__ &&\r\n    context.prefixIdentifiers &&\r\n    !context.inVOnce &&\r\n    context.cacheHandlers &&\r\n    !hasScopeRef(exp, context.identifiers)\r\n  ) {\r\n    props[1].value = context.cache(props[1].value)\r\n  }\r\n\r\n  // modelModifiers: { foo: true, \"bar-baz\": true }\r\n  if (dir.modifiers.length && node.tagType === ElementTypes.COMPONENT) {\r\n    const modifiers = dir.modifiers\r\n      .map(m => (isSimpleIdentifier(m) ? m : JSON.stringify(m)) + `: true`)\r\n      .join(`, `)\r\n    const modifiersKey = arg\r\n      ? isStaticExp(arg)\r\n        ? `${arg.content}Modifiers`\r\n        : createCompoundExpression([arg, ' + \"Modifiers\"'])\r\n      : `modelModifiers`\r\n    props.push(\r\n      createObjectProperty(\r\n        modifiersKey,\r\n        createSimpleExpression(\r\n          `{ ${modifiers} }`,\r\n          false,\r\n          dir.loc,\r\n          ConstantTypes.CAN_HOIST\r\n        )\r\n      )\r\n    )\r\n  }\r\n\r\n  return createTransformProps(props)\r\n}\r\n\r\nfunction createTransformProps(props: Property[] = []) {\r\n  return { props }\r\n}\r\n","import { NodeTransform } from '../transform'\r\nimport { findDir, makeBlock } from '../utils'\r\nimport {\r\n  createCallExpression,\r\n  createFunctionExpression,\r\n  ElementTypes,\r\n  MemoExpression,\r\n  NodeTypes,\r\n  PlainElementNode\r\n} from '../ast'\r\nimport { WITH_MEMO } from '../runtimeHelpers'\r\n\r\nconst seen = new WeakSet()\r\n\r\nexport const transformMemo: NodeTransform = (node, context) => {\r\n  if (node.type === NodeTypes.ELEMENT) {\r\n    const dir = findDir(node, 'memo')\r\n    if (!dir || seen.has(node)) {\r\n      return\r\n    }\r\n    seen.add(node)\r\n    return () => {\r\n      const codegenNode =\r\n        node.codegenNode ||\r\n        (context.currentNode as PlainElementNode).codegenNode\r\n      if (codegenNode && codegenNode.type === NodeTypes.VNODE_CALL) {\r\n        // non-component sub tree should be turned into a block\r\n        if (node.tagType !== ElementTypes.COMPONENT) {\r\n          makeBlock(codegenNode, context)\r\n        }\r\n        node.codegenNode = createCallExpression(context.helper(WITH_MEMO), [\r\n          dir.exp!,\r\n          createFunctionExpression(undefined, codegenNode),\r\n          `_cache`,\r\n          String(context.cached++)\r\n        ]) as MemoExpression\r\n      }\r\n    }\r\n  }\r\n}\r\n","import { CompilerOptions } from './options'\r\nimport { baseParse } from './parse'\r\nimport { transform, NodeTransform, DirectiveTransform } from './transform'\r\nimport { generate, CodegenResult } from './codegen'\r\nimport { RootNode } from './ast'\r\nimport { isString, extend } from '@vue/shared'\r\nimport { transformIf } from './transforms/vIf'\r\nimport { transformFor } from './transforms/vFor'\r\nimport { transformExpression } from './transforms/transformExpression'\r\nimport { transformSlotOutlet } from './transforms/transformSlotOutlet'\r\nimport { transformElement } from './transforms/transformElement'\r\nimport { transformOn } from './transforms/vOn'\r\nimport { transformBind } from './transforms/vBind'\r\nimport { trackSlotScopes, trackVForSlotScopes } from './transforms/vSlot'\r\nimport { transformText } from './transforms/transformText'\r\nimport { transformOnce } from './transforms/vOnce'\r\nimport { transformModel } from './transforms/vModel'\r\nimport { transformFilter } from './compat/transformFilter'\r\nimport { defaultOnError, createCompilerError, ErrorCodes } from './errors'\r\nimport { transformMemo } from './transforms/vMemo'\r\n\r\nexport type TransformPreset = [\r\n  NodeTransform[],\r\n  Record<string, DirectiveTransform>\r\n]\r\n\r\nexport function getBaseTransformPreset(\r\n  prefixIdentifiers?: boolean\r\n): TransformPreset {\r\n  return [\r\n    [\r\n      transformOnce,\r\n      transformIf,\r\n      transformMemo,\r\n      transformFor,\r\n      ...(__COMPAT__ ? [transformFilter] : []),\r\n      ...(!__BROWSER__ && prefixIdentifiers\r\n        ? [\r\n            // order is important\r\n            trackVForSlotScopes,\r\n            transformExpression\r\n          ]\r\n        : __BROWSER__ && __DEV__\r\n        ? [transformExpression]\r\n        : []),\r\n      transformSlotOutlet,\r\n      transformElement,\r\n      trackSlotScopes,\r\n      transformText\r\n    ],\r\n    {\r\n      on: transformOn,\r\n      bind: transformBind,\r\n      model: transformModel\r\n    }\r\n  ]\r\n}\r\n\r\n// we name it `baseCompile` so that higher order compilers like\r\n// @vue/compiler-dom can export `compile` while re-exporting everything else.\r\nexport function baseCompile(\r\n  template: string | RootNode,\r\n  options: CompilerOptions = {}\r\n): CodegenResult {\r\n  const onError = options.onError || defaultOnError\r\n  const isModuleMode = options.mode === 'module'\r\n  /* istanbul ignore if */\r\n  if (__BROWSER__) {\r\n    if (options.prefixIdentifiers === true) {\r\n      onError(createCompilerError(ErrorCodes.X_PREFIX_ID_NOT_SUPPORTED))\r\n    } else if (isModuleMode) {\r\n      onError(createCompilerError(ErrorCodes.X_MODULE_MODE_NOT_SUPPORTED))\r\n    }\r\n  }\r\n\r\n  const prefixIdentifiers =\r\n    !__BROWSER__ && (options.prefixIdentifiers === true || isModuleMode)\r\n  if (!prefixIdentifiers && options.cacheHandlers) {\r\n    onError(createCompilerError(ErrorCodes.X_CACHE_HANDLER_NOT_SUPPORTED))\r\n  }\r\n  if (options.scopeId && !isModuleMode) {\r\n    onError(createCompilerError(ErrorCodes.X_SCOPE_ID_NOT_SUPPORTED))\r\n  }\r\n\r\n  const ast = isString(template) ? baseParse(template, options) : template\r\n  const [nodeTransforms, directiveTransforms] =\r\n    getBaseTransformPreset(prefixIdentifiers)\r\n  transform(\r\n    ast,\r\n    extend({}, options, {\r\n      prefixIdentifiers,\r\n      nodeTransforms: [\r\n        ...nodeTransforms,\r\n        ...(options.nodeTransforms || []) // user transforms\r\n      ],\r\n      directiveTransforms: extend(\r\n        {},\r\n        directiveTransforms,\r\n        options.directiveTransforms || {} // user transforms\r\n      )\r\n    })\r\n  )\r\n\r\n  return generate(\r\n    ast,\r\n    extend({}, options, {\r\n      prefixIdentifiers\r\n    })\r\n  )\r\n}\r\n","import { DirectiveTransform } from '../transform'\r\n\r\nexport const noopDirectiveTransform: DirectiveTransform = () => ({ props: [] })\r\n","import { registerRuntimeHelpers } from '@vue/compiler-core'\r\n\r\nexport const V_MODEL_RADIO = Symbol(__DEV__ ? `vModelRadio` : ``)\r\nexport const V_MODEL_CHECKBOX = Symbol(__DEV__ ? `vModelCheckbox` : ``)\r\nexport const V_MODEL_TEXT = Symbol(__DEV__ ? `vModelText` : ``)\r\nexport const V_MODEL_SELECT = Symbol(__DEV__ ? `vModelSelect` : ``)\r\nexport const V_MODEL_DYNAMIC = Symbol(__DEV__ ? `vModelDynamic` : ``)\r\n\r\nexport const V_ON_WITH_MODIFIERS = Symbol(__DEV__ ? `vOnModifiersGuard` : ``)\r\nexport const V_ON_WITH_KEYS = Symbol(__DEV__ ? `vOnKeysGuard` : ``)\r\n\r\nexport const V_SHOW = Symbol(__DEV__ ? `vShow` : ``)\r\n\r\nexport const TRANSITION = Symbol(__DEV__ ? `Transition` : ``)\r\nexport const TRANSITION_GROUP = Symbol(__DEV__ ? `TransitionGroup` : ``)\r\n\r\nregisterRuntimeHelpers({\r\n  [V_MODEL_RADIO]: `vModelRadio`,\r\n  [V_MODEL_CHECKBOX]: `vModelCheckbox`,\r\n  [V_MODEL_TEXT]: `vModelText`,\r\n  [V_MODEL_SELECT]: `vModelSelect`,\r\n  [V_MODEL_DYNAMIC]: `vModelDynamic`,\r\n  [V_ON_WITH_MODIFIERS]: `withModifiers`,\r\n  [V_ON_WITH_KEYS]: `withKeys`,\r\n  [V_SHOW]: `vShow`,\r\n  [TRANSITION]: `Transition`,\r\n  [TRANSITION_GROUP]: `TransitionGroup`\r\n})\r\n","/* eslint-disable no-restricted-globals */\r\n\r\nlet decoder: HTMLDivElement\r\n\r\nexport function decodeHtmlBrowser(raw: string, asAttr = false): string {\r\n  if (!decoder) {\r\n    decoder = document.createElement('div')\r\n  }\r\n  if (asAttr) {\r\n    decoder.innerHTML = `<div foo=\"${raw.replace(/\"/g, '&quot;')}\">`\r\n    return decoder.children[0].getAttribute('foo') as string\r\n  } else {\r\n    decoder.innerHTML = raw\r\n    return decoder.textContent as string\r\n  }\r\n}\r\n","import {\r\n  TextModes,\r\n  ParserOptions,\r\n  ElementNode,\r\n  Namespaces,\r\n  NodeTypes,\r\n  isBuiltInType\r\n} from '@vue/compiler-core'\r\nimport { makeMap, isVoidTag, isHTMLTag, isSVGTag } from '@vue/shared'\r\nimport { TRANSITION, TRANSITION_GROUP } from './runtimeHelpers'\r\nimport { decodeHtml } from './decodeHtml'\r\nimport { decodeHtmlBrowser } from './decodeHtmlBrowser'\r\n\r\nconst isRawTextContainer = /*#__PURE__*/ makeMap(\r\n  'style,iframe,script,noscript',\r\n  true\r\n)\r\n\r\nexport const enum DOMNamespaces {\r\n  HTML = Namespaces.HTML,\r\n  SVG,\r\n  MATH_ML\r\n}\r\n\r\nexport const parserOptions: ParserOptions = {\r\n  isVoidTag,\r\n  isNativeTag: tag => isHTMLTag(tag) || isSVGTag(tag),\r\n  isPreTag: tag => tag === 'pre',\r\n  decodeEntities: __BROWSER__ ? decodeHtmlBrowser : decodeHtml,\r\n\r\n  isBuiltInComponent: (tag: string): symbol | undefined => {\r\n    if (isBuiltInType(tag, `Transition`)) {\r\n      return TRANSITION\r\n    } else if (isBuiltInType(tag, `TransitionGroup`)) {\r\n      return TRANSITION_GROUP\r\n    }\r\n  },\r\n\r\n  // https://html.spec.whatwg.org/multipage/parsing.html#tree-construction-dispatcher\r\n  getNamespace(tag: string, parent: ElementNode | undefined): DOMNamespaces {\r\n    let ns = parent ? parent.ns : DOMNamespaces.HTML\r\n\r\n    if (parent && ns === DOMNamespaces.MATH_ML) {\r\n      if (parent.tag === 'annotation-xml') {\r\n        if (tag === 'svg') {\r\n          return DOMNamespaces.SVG\r\n        }\r\n        if (\r\n          parent.props.some(\r\n            a =>\r\n              a.type === NodeTypes.ATTRIBUTE &&\r\n              a.name === 'encoding' &&\r\n              a.value != null &&\r\n              (a.value.content === 'text/html' ||\r\n                a.value.content === 'application/xhtml+xml')\r\n          )\r\n        ) {\r\n          ns = DOMNamespaces.HTML\r\n        }\r\n      } else if (\r\n        /^m(?:[ions]|text)$/.test(parent.tag) &&\r\n        tag !== 'mglyph' &&\r\n        tag !== 'malignmark'\r\n      ) {\r\n        ns = DOMNamespaces.HTML\r\n      }\r\n    } else if (parent && ns === DOMNamespaces.SVG) {\r\n      if (\r\n        parent.tag === 'foreignObject' ||\r\n        parent.tag === 'desc' ||\r\n        parent.tag === 'title'\r\n      ) {\r\n        ns = DOMNamespaces.HTML\r\n      }\r\n    }\r\n\r\n    if (ns === DOMNamespaces.HTML) {\r\n      if (tag === 'svg') {\r\n        return DOMNamespaces.SVG\r\n      }\r\n      if (tag === 'math') {\r\n        return DOMNamespaces.MATH_ML\r\n      }\r\n    }\r\n    return ns\r\n  },\r\n\r\n  // https://html.spec.whatwg.org/multipage/parsing.html#parsing-html-fragments\r\n  getTextMode({ tag, ns }: ElementNode): TextModes {\r\n    if (ns === DOMNamespaces.HTML) {\r\n      if (tag === 'textarea' || tag === 'title') {\r\n        return TextModes.RCDATA\r\n      }\r\n      if (isRawTextContainer(tag)) {\r\n        return TextModes.RAWTEXT\r\n      }\r\n    }\r\n    return TextModes.DATA\r\n  }\r\n}\r\n","import {\r\n  NodeTransform,\r\n  NodeTypes,\r\n  createSimpleExpression,\r\n  SimpleExpressionNode,\r\n  SourceLocation,\r\n  ConstantTypes\r\n} from '@vue/compiler-core'\r\nimport { parseStringStyle } from '@vue/shared'\r\n\r\n// Parse inline CSS strings for static style attributes into an object.\r\n// This is a NodeTransform since it works on the static `style` attribute and\r\n// converts it into a dynamic equivalent:\r\n// style=\"color: red\" -> :style='{ \"color\": \"red\" }'\r\n// It is then processed by `transformElement` and included in the generated\r\n// props.\r\nexport const transformStyle: NodeTransform = node => {\r\n  if (node.type === NodeTypes.ELEMENT) {\r\n    node.props.forEach((p, i) => {\r\n      if (p.type === NodeTypes.ATTRIBUTE && p.name === 'style' && p.value) {\r\n        // replace p with an expression node\r\n        node.props[i] = {\r\n          type: NodeTypes.DIRECTIVE,\r\n          name: `bind`,\r\n          arg: createSimpleExpression(`style`, true, p.loc),\r\n          exp: parseInlineCSS(p.value.content, p.loc),\r\n          modifiers: [],\r\n          loc: p.loc\r\n        }\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\nconst parseInlineCSS = (\r\n  cssText: string,\r\n  loc: SourceLocation\r\n): SimpleExpressionNode => {\r\n  const normalized = parseStringStyle(cssText)\r\n  return createSimpleExpression(\r\n    JSON.stringify(normalized),\r\n    false,\r\n    loc,\r\n    ConstantTypes.CAN_STRINGIFY\r\n  )\r\n}\r\n","import {\r\n  DirectiveTransform,\r\n  createObjectProperty,\r\n  createSimpleExpression\r\n} from '@vue/compiler-core'\r\nimport { createDOMCompilerError, DOMErrorCodes } from '../errors'\r\n\r\nexport const transformVHtml: DirectiveTransform = (dir, node, context) => {\r\n  const { exp, loc } = dir\r\n  if (!exp) {\r\n    context.onError(\r\n      createDOMCompilerError(DOMErrorCodes.X_V_HTML_NO_EXPRESSION, loc)\r\n    )\r\n  }\r\n  if (node.children.length) {\r\n    context.onError(\r\n      createDOMCompilerError(DOMErrorCodes.X_V_HTML_WITH_CHILDREN, loc)\r\n    )\r\n    node.children.length = 0\r\n  }\r\n  return {\r\n    props: [\r\n      createObjectProperty(\r\n        createSimpleExpression(`innerHTML`, true, loc),\r\n        exp || createSimpleExpression('', true)\r\n      )\r\n    ]\r\n  }\r\n}\r\n","import {\r\n  transformOn as baseTransform,\r\n  DirectiveTransform,\r\n  createObjectProperty,\r\n  createCallExpression,\r\n  createSimpleExpression,\r\n  NodeTypes,\r\n  createCompoundExpression,\r\n  ExpressionNode,\r\n  SimpleExpressionNode,\r\n  isStaticExp,\r\n  CompilerDeprecationTypes,\r\n  TransformContext,\r\n  SourceLocation,\r\n  checkCompatEnabled\r\n} from '@vue/compiler-core'\r\nimport { V_ON_WITH_MODIFIERS, V_ON_WITH_KEYS } from '../runtimeHelpers'\r\nimport { makeMap, capitalize } from '@vue/shared'\r\n\r\nconst isEventOptionModifier = /*#__PURE__*/ makeMap(`passive,once,capture`)\r\nconst isNonKeyModifier = /*#__PURE__*/ makeMap(\r\n  // event propagation management\r\n  `stop,prevent,self,` +\r\n    // system modifiers + exact\r\n    `ctrl,shift,alt,meta,exact,` +\r\n    // mouse\r\n    `middle`\r\n)\r\n// left & right could be mouse or key modifiers based on event type\r\nconst maybeKeyModifier = /*#__PURE__*/ makeMap('left,right')\r\nconst isKeyboardEvent = /*#__PURE__*/ makeMap(\r\n  `onkeyup,onkeydown,onkeypress`,\r\n  true\r\n)\r\n\r\nconst resolveModifiers = (\r\n  key: ExpressionNode,\r\n  modifiers: string[],\r\n  context: TransformContext,\r\n  loc: SourceLocation\r\n) => {\r\n  const keyModifiers = []\r\n  const nonKeyModifiers = []\r\n  const eventOptionModifiers = []\r\n\r\n  for (let i = 0; i < modifiers.length; i++) {\r\n    const modifier = modifiers[i]\r\n\r\n    if (\r\n      __COMPAT__ &&\r\n      modifier === 'native' &&\r\n      checkCompatEnabled(\r\n        CompilerDeprecationTypes.COMPILER_V_ON_NATIVE,\r\n        context,\r\n        loc\r\n      )\r\n    ) {\r\n      eventOptionModifiers.push(modifier)\r\n    } else if (isEventOptionModifier(modifier)) {\r\n      // eventOptionModifiers: modifiers for addEventListener() options,\r\n      // e.g. .passive & .capture\r\n      eventOptionModifiers.push(modifier)\r\n    } else {\r\n      // runtimeModifiers: modifiers that needs runtime guards\r\n      if (maybeKeyModifier(modifier)) {\r\n        if (isStaticExp(key)) {\r\n          if (isKeyboardEvent((key as SimpleExpressionNode).content)) {\r\n            keyModifiers.push(modifier)\r\n          } else {\r\n            nonKeyModifiers.push(modifier)\r\n          }\r\n        } else {\r\n          keyModifiers.push(modifier)\r\n          nonKeyModifiers.push(modifier)\r\n        }\r\n      } else {\r\n        if (isNonKeyModifier(modifier)) {\r\n          nonKeyModifiers.push(modifier)\r\n        } else {\r\n          keyModifiers.push(modifier)\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  return {\r\n    keyModifiers,\r\n    nonKeyModifiers,\r\n    eventOptionModifiers\r\n  }\r\n}\r\n\r\nconst transformClick = (key: ExpressionNode, event: string) => {\r\n  const isStaticClick =\r\n    isStaticExp(key) && key.content.toLowerCase() === 'onclick'\r\n  return isStaticClick\r\n    ? createSimpleExpression(event, true)\r\n    : key.type !== NodeTypes.SIMPLE_EXPRESSION\r\n    ? createCompoundExpression([\r\n        `(`,\r\n        key,\r\n        `) === \"onClick\" ? \"${event}\" : (`,\r\n        key,\r\n        `)`\r\n      ])\r\n    : key\r\n}\r\n\r\nexport const transformOn: DirectiveTransform = (dir, node, context) => {\r\n  return baseTransform(dir, node, context, baseResult => {\r\n    const { modifiers } = dir\r\n    if (!modifiers.length) return baseResult\r\n\r\n    let { key, value: handlerExp } = baseResult.props[0]\r\n    const { keyModifiers, nonKeyModifiers, eventOptionModifiers } =\r\n      resolveModifiers(key, modifiers, context, dir.loc)\r\n\r\n    // normalize click.right and click.middle since they don't actually fire\r\n    if (nonKeyModifiers.includes('right')) {\r\n      key = transformClick(key, `onContextmenu`)\r\n    }\r\n    if (nonKeyModifiers.includes('middle')) {\r\n      key = transformClick(key, `onMouseup`)\r\n    }\r\n\r\n    if (nonKeyModifiers.length) {\r\n      handlerExp = createCallExpression(context.helper(V_ON_WITH_MODIFIERS), [\r\n        handlerExp,\r\n        JSON.stringify(nonKeyModifiers)\r\n      ])\r\n    }\r\n\r\n    if (\r\n      keyModifiers.length &&\r\n      // if event name is dynamic, always wrap with keys guard\r\n      (!isStaticExp(key) || isKeyboardEvent(key.content))\r\n    ) {\r\n      handlerExp = createCallExpression(context.helper(V_ON_WITH_KEYS), [\r\n        handlerExp,\r\n        JSON.stringify(keyModifiers)\r\n      ])\r\n    }\r\n\r\n    if (eventOptionModifiers.length) {\r\n      const modifierPostfix = eventOptionModifiers.map(capitalize).join('')\r\n      key = isStaticExp(key)\r\n        ? createSimpleExpression(`${key.content}${modifierPostfix}`, true)\r\n        : createCompoundExpression([`(`, key, `) + \"${modifierPostfix}\"`])\r\n    }\r\n\r\n    return {\r\n      props: [createObjectProperty(key, handlerExp)]\r\n    }\r\n  })\r\n}\r\n","import { NodeTransform, NodeTypes, ElementTypes } from '@vue/compiler-core'\r\nimport { DOMErrorCodes, createDOMCompilerError } from '../errors'\r\n\r\nexport const ignoreSideEffectTags: NodeTransform = (node, context) => {\r\n  if (\r\n    node.type === NodeTypes.ELEMENT &&\r\n    node.tagType === ElementTypes.ELEMENT &&\r\n    (node.tag === 'script' || node.tag === 'style')\r\n  ) {\r\n    context.onError(\r\n      createDOMCompilerError(DOMErrorCodes.X_IGNORED_SIDE_EFFECT_TAG, node.loc)\r\n    )\r\n    context.removeNode()\r\n  }\r\n}\r\n","import {\r\n  baseCompile,\r\n  baseParse,\r\n  CompilerOptions,\r\n  CodegenResult,\r\n  ParserOptions,\r\n  RootNode,\r\n  noopDirectiveTransform,\r\n  NodeTransform,\r\n  DirectiveTransform\r\n} from '@vue/compiler-core'\r\nimport { parserOptions } from './parserOptions'\r\nimport { transformStyle } from './transforms/transformStyle'\r\nimport { transformVHtml } from './transforms/vHtml'\r\nimport { transformVText } from './transforms/vText'\r\nimport { transformModel } from './transforms/vModel'\r\nimport { transformOn } from './transforms/vOn'\r\nimport { transformShow } from './transforms/vShow'\r\nimport { warnTransitionChildren } from './transforms/warnTransitionChildren'\r\nimport { stringifyStatic } from './transforms/stringifyStatic'\r\nimport { ignoreSideEffectTags } from './transforms/ignoreSideEffectTags'\r\nimport { extend } from '@vue/shared'\r\n\r\nexport { parserOptions }\r\n\r\nexport const DOMNodeTransforms: NodeTransform[] = [\r\n  transformStyle,\r\n  ...(__DEV__ ? [warnTransitionChildren] : [])\r\n]\r\n\r\nexport const DOMDirectiveTransforms: Record<string, DirectiveTransform> = {\r\n  cloak: noopDirectiveTransform,\r\n  html: transformVHtml,\r\n  text: transformVText,\r\n  model: transformModel, // override compiler-core\r\n  on: transformOn, // override compiler-core\r\n  show: transformShow\r\n}\r\n\r\nexport function compile(\r\n  template: string,\r\n  options: CompilerOptions = {}\r\n): CodegenResult {\r\n  return baseCompile(\r\n    template,\r\n    extend({}, parserOptions, options, {\r\n      nodeTransforms: [\r\n        // ignore <script> and <tag>\r\n        // this is not put inside DOMNodeTransforms because that list is used\r\n        // by compiler-ssr to generate vnode fallback branches\r\n        ignoreSideEffectTags,\r\n        ...DOMNodeTransforms,\r\n        ...(options.nodeTransforms || [])\r\n      ],\r\n      directiveTransforms: extend(\r\n        {},\r\n        DOMDirectiveTransforms,\r\n        options.directiveTransforms || {}\r\n      ),\r\n      transformHoist: __BROWSER__ ? null : stringifyStatic\r\n    })\r\n  )\r\n}\r\n\r\nexport function parse(template: string, options: ParserOptions = {}): RootNode {\r\n  return baseParse(template, extend({}, parserOptions, options))\r\n}\r\n\r\nexport * from './runtimeHelpers'\r\nexport { transformStyle } from './transforms/transformStyle'\r\nexport { createDOMCompilerError, DOMErrorCodes } from './errors'\r\nexport * from '@vue/compiler-core'\r\n","import {\r\n  DirectiveTransform,\r\n  createObjectProperty,\r\n  createSimpleExpression,\r\n  TO_DISPLAY_STRING,\r\n  createCallExpression\r\n} from '@vue/compiler-core'\r\nimport { createDOMCompilerError, DOMErrorCodes } from '../errors'\r\n\r\nexport const transformVText: DirectiveTransform = (dir, node, context) => {\r\n  const { exp, loc } = dir\r\n  if (!exp) {\r\n    context.onError(\r\n      createDOMCompilerError(DOMErrorCodes.X_V_TEXT_NO_EXPRESSION, loc)\r\n    )\r\n  }\r\n  if (node.children.length) {\r\n    context.onError(\r\n      createDOMCompilerError(DOMErrorCodes.X_V_TEXT_WITH_CHILDREN, loc)\r\n    )\r\n    node.children.length = 0\r\n  }\r\n  return {\r\n    props: [\r\n      createObjectProperty(\r\n        createSimpleExpression(`textContent`, true),\r\n        exp\r\n          ? createCallExpression(\r\n              context.helperString(TO_DISPLAY_STRING),\r\n              [exp],\r\n              loc\r\n            )\r\n          : createSimpleExpression('', true)\r\n      )\r\n    ]\r\n  }\r\n}\r\n","import {\r\n  transformModel as baseTransform,\r\n  DirectiveTransform,\r\n  ElementTypes,\r\n  findProp,\r\n  NodeTypes,\r\n  hasDynamicKeyVBind\r\n} from '@vue/compiler-core'\r\nimport { createDOMCompilerError, DOMErrorCodes } from '../errors'\r\nimport {\r\n  V_MODEL_CHECKBOX,\r\n  V_MODEL_RADIO,\r\n  V_MODEL_SELECT,\r\n  V_MODEL_TEXT,\r\n  V_MODEL_DYNAMIC\r\n} from '../runtimeHelpers'\r\n\r\nexport const transformModel: DirectiveTransform = (dir, node, context) => {\r\n  const baseResult = baseTransform(dir, node, context)\r\n  // base transform has errors OR component v-model (only need props)\r\n  if (!baseResult.props.length || node.tagType === ElementTypes.COMPONENT) {\r\n    return baseResult\r\n  }\r\n\r\n  if (dir.arg) {\r\n    context.onError(\r\n      createDOMCompilerError(\r\n        DOMErrorCodes.X_V_MODEL_ARG_ON_ELEMENT,\r\n        dir.arg.loc\r\n      )\r\n    )\r\n  }\r\n\r\n  function checkDuplicatedValue() {\r\n    const value = findProp(node, 'value')\r\n    if (value) {\r\n      context.onError(\r\n        createDOMCompilerError(\r\n          DOMErrorCodes.X_V_MODEL_UNNECESSARY_VALUE,\r\n          value.loc\r\n        )\r\n      )\r\n    }\r\n  }\r\n\r\n  const { tag } = node\r\n  const isCustomElement = context.isCustomElement(tag)\r\n  if (\r\n    tag === 'input' ||\r\n    tag === 'textarea' ||\r\n    tag === 'select' ||\r\n    isCustomElement\r\n  ) {\r\n    let directiveToUse = V_MODEL_TEXT\r\n    let isInvalidType = false\r\n    if (tag === 'input' || isCustomElement) {\r\n      const type = findProp(node, `type`)\r\n      if (type) {\r\n        if (type.type === NodeTypes.DIRECTIVE) {\r\n          // :type=\"foo\"\r\n          directiveToUse = V_MODEL_DYNAMIC\r\n        } else if (type.value) {\r\n          switch (type.value.content) {\r\n            case 'radio':\r\n              directiveToUse = V_MODEL_RADIO\r\n              break\r\n            case 'checkbox':\r\n              directiveToUse = V_MODEL_CHECKBOX\r\n              break\r\n            case 'file':\r\n              isInvalidType = true\r\n              context.onError(\r\n                createDOMCompilerError(\r\n                  DOMErrorCodes.X_V_MODEL_ON_FILE_INPUT_ELEMENT,\r\n                  dir.loc\r\n                )\r\n              )\r\n              break\r\n            default:\r\n              // text type\r\n              __DEV__ && checkDuplicatedValue()\r\n              break\r\n          }\r\n        }\r\n      } else if (hasDynamicKeyVBind(node)) {\r\n        // element has bindings with dynamic keys, which can possibly contain\r\n        // \"type\".\r\n        directiveToUse = V_MODEL_DYNAMIC\r\n      } else {\r\n        // text type\r\n        __DEV__ && checkDuplicatedValue()\r\n      }\r\n    } else if (tag === 'select') {\r\n      directiveToUse = V_MODEL_SELECT\r\n    } else {\r\n      // textarea\r\n      __DEV__ && checkDuplicatedValue()\r\n    }\r\n    // inject runtime directive\r\n    // by returning the helper symbol via needRuntime\r\n    // the import will replaced a resolveDirective call.\r\n    if (!isInvalidType) {\r\n      baseResult.needRuntime = context.helper(directiveToUse)\r\n    }\r\n  } else {\r\n    context.onError(\r\n      createDOMCompilerError(\r\n        DOMErrorCodes.X_V_MODEL_ON_INVALID_ELEMENT,\r\n        dir.loc\r\n      )\r\n    )\r\n  }\r\n\r\n  // native vmodel doesn't need the `modelValue` props since they are also\r\n  // passed to the runtime as `binding.value`. removing it reduces code size.\r\n  baseResult.props = baseResult.props.filter(\r\n    p =>\r\n      !(\r\n        p.key.type === NodeTypes.SIMPLE_EXPRESSION &&\r\n        p.key.content === 'modelValue'\r\n      )\r\n  )\r\n\r\n  return baseResult\r\n}\r\n","import { DirectiveTransform } from '@vue/compiler-core'\r\nimport { createDOMCompilerError, DOMErrorCodes } from '../errors'\r\nimport { V_SHOW } from '../runtimeHelpers'\r\n\r\nexport const transformShow: DirectiveTransform = (dir, node, context) => {\r\n  const { exp, loc } = dir\r\n  if (!exp) {\r\n    context.onError(\r\n      createDOMCompilerError(DOMErrorCodes.X_V_SHOW_NO_EXPRESSION, loc)\r\n    )\r\n  }\r\n\r\n  return {\r\n    props: [],\r\n    needRuntime: context.helper(V_SHOW)\r\n  }\r\n}\r\n","// This entry is the \"full-build\" that includes both the runtime\r\n// and the compiler, and supports on-the-fly compilation of the template option.\r\nimport { initDev } from './dev'\r\nimport { compile, CompilerOptions, CompilerError } from '@vue/compiler-dom'\r\nimport { registerRuntimeCompiler, RenderFunction, warn } from '@vue/runtime-dom'\r\nimport * as runtimeDom from '@vue/runtime-dom'\r\nimport { isString, NOOP, generateCodeFrame, extend } from '@vue/shared'\r\nimport { InternalRenderFunction } from 'packages/runtime-core/src/component'\r\n\r\nif (__DEV__) {\r\n  initDev()\r\n}\r\n\r\nconst compileCache: Record<string, RenderFunction> = Object.create(null)\r\n\r\nfunction compileToFunction(\r\n  template: string | HTMLElement,\r\n  options?: CompilerOptions\r\n): RenderFunction {\r\n  if (!isString(template)) {\r\n    if (template.nodeType) {\r\n      template = template.innerHTML\r\n    } else {\r\n      __DEV__ && warn(`invalid template option: `, template)\r\n      return NOOP\r\n    }\r\n  }\r\n\r\n  const key = template\r\n  const cached = compileCache[key]\r\n  if (cached) {\r\n    return cached\r\n  }\r\n\r\n  if (template[0] === '#') {\r\n    const el = document.querySelector(template)\r\n    if (__DEV__ && !el) {\r\n      warn(`Template element not found or is empty: ${template}`)\r\n    }\r\n    // __UNSAFE__\r\n    // Reason: potential execution of JS expressions in in-DOM template.\r\n    // The user must make sure the in-DOM template is trusted. If it's rendered\r\n    // by the server, the template should not contain any user data.\r\n    template = el ? el.innerHTML : ``\r\n  }\r\n\r\n  const { code } = compile(\r\n    template,\r\n    extend(\r\n      {\r\n        hoistStatic: true,\r\n        onError: __DEV__ ? onError : undefined,\r\n        onWarn: __DEV__ ? e => onError(e, true) : NOOP\r\n      } as CompilerOptions,\r\n      options\r\n    )\r\n  )\r\n\r\n  function onError(err: CompilerError, asWarning = false) {\r\n    const message = asWarning\r\n      ? err.message\r\n      : `Template compilation error: ${err.message}`\r\n    const codeFrame =\r\n      err.loc &&\r\n      generateCodeFrame(\r\n        template as string,\r\n        err.loc.start.offset,\r\n        err.loc.end.offset\r\n      )\r\n    warn(codeFrame ? `${message}\\n${codeFrame}` : message)\r\n  }\r\n\r\n  // The wildcard import results in a huge object with every export\r\n  // with keys that cannot be mangled, and can be quite heavy size-wise.\r\n  // In the global build we know `Vue` is available globally so we can avoid\r\n  // the wildcard object.\r\n  const render = (\r\n    __GLOBAL__ ? new Function(code)() : new Function('Vue', code)(runtimeDom)\r\n  ) as RenderFunction\r\n\r\n  // mark the function as runtime compiled\r\n  ;(render as InternalRenderFunction)._rc = true\r\n\r\n  return (compileCache[key] = render)\r\n}\r\n\r\nregisterRuntimeCompiler(compileToFunction)\r\n\r\nexport { compileToFunction as compile }\r\nexport * from '@vue/runtime-dom'\r\n","import { Ref, UnwrapRef, ShallowUnwrapRef, ComputedRef } from '@vue/reactivity'\r\n\r\nexport function $ref<T>(arg: T | Ref<T>): UnwrapRef<T>\r\nexport function $ref() {}\r\n\r\ndeclare const ComputedRefMarker: unique symbol\r\ntype ComputedRefValue<T> = T & { [ComputedRefMarker]?: any }\r\n\r\nexport function $computed<T>(getter: () => T): ComputedRefValue<T>\r\nexport function $computed() {}\r\n\r\nexport function $fromRefs<T>(source: T): ShallowUnwrapRef<T>\r\nexport function $fromRefs() {\r\n  return null as any\r\n}\r\n\r\nexport function $raw<T>(value: ComputedRefValue<T>): ComputedRef<T>\r\nexport function $raw<T>(value: T): Ref<T>\r\nexport function $raw() {\r\n  return null as any\r\n}\r\n","import { Slot } from '../componentSlots'\r\nimport { isArray } from '@vue/shared'\r\n\r\ninterface CompiledSlotDescriptor {\r\n  name: string\r\n  fn: Slot\r\n}\r\n\r\n/**\r\n * Compiler runtime helper for creating dynamic slots object\r\n * @private\r\n */\r\nexport function createSlots(\r\n  slots: Record<string, Slot>,\r\n  dynamicSlots: (\r\n    | CompiledSlotDescriptor\r\n    | CompiledSlotDescriptor[]\r\n    | undefined\r\n  )[]\r\n): Record<string, Slot> {\r\n  for (let i = 0; i < dynamicSlots.length; i++) {\r\n    const slot = dynamicSlots[i]\r\n    // array of dynamic slot generated by <template v-for=\"...\" #[...]>\r\n    if (isArray(slot)) {\r\n      for (let j = 0; j < slot.length; j++) {\r\n        slots[slot[j].name] = slot[j].fn\r\n      }\r\n    } else if (slot) {\r\n      // conditional single slot generated by <template v-if=\"...\" #foo>\r\n      slots[slot.name] = slot.fn\r\n    }\r\n  }\r\n  return slots\r\n}\r\n","import { VNode, VNodeChild } from '../vnode'\r\nimport { isArray, isString, isObject } from '@vue/shared'\r\nimport { warn } from '../warning'\r\n\r\n/**\r\n * v-for string\r\n * @private\r\n */\r\nexport function renderList(\r\n  source: string,\r\n  renderItem: (value: string, index: number) => VNodeChild\r\n): VNodeChild[]\r\n\r\n/**\r\n * v-for number\r\n */\r\nexport function renderList(\r\n  source: number,\r\n  renderItem: (value: number, index: number) => VNodeChild\r\n): VNodeChild[]\r\n\r\n/**\r\n * v-for array\r\n */\r\nexport function renderList<T>(\r\n  source: T[],\r\n  renderItem: (value: T, index: number) => VNodeChild\r\n): VNodeChild[]\r\n\r\n/**\r\n * v-for iterable\r\n */\r\nexport function renderList<T>(\r\n  source: Iterable<T>,\r\n  renderItem: (value: T, index: number) => VNodeChild\r\n): VNodeChild[]\r\n\r\n/**\r\n * v-for object\r\n */\r\nexport function renderList<T>(\r\n  source: T,\r\n  renderItem: <K extends keyof T>(\r\n    value: T[K],\r\n    key: K,\r\n    index: number\r\n  ) => VNodeChild\r\n): VNodeChild[]\r\n\r\n/**\r\n * Actual implementation\r\n */\r\nexport function renderList(\r\n  source: any,\r\n  renderItem: (...args: any[]) => VNodeChild,\r\n  cache?: any[],\r\n  index?: number\r\n): VNodeChild[] {\r\n  let ret: VNodeChild[]\r\n  const cached = (cache && cache[index!]) as VNode[] | undefined\r\n\r\n  if (isArray(source) || isString(source)) {\r\n    ret = new Array(source.length)\r\n    for (let i = 0, l = source.length; i < l; i++) {\r\n      ret[i] = renderItem(source[i], i, undefined, cached && cached[i])\r\n    }\r\n  } else if (typeof source === 'number') {\r\n    if (__DEV__ && !Number.isInteger(source)) {\r\n      warn(`The v-for range expect an integer value but got ${source}.`)\r\n      return []\r\n    }\r\n    ret = new Array(source)\r\n    for (let i = 0; i < source; i++) {\r\n      ret[i] = renderItem(i + 1, i, undefined, cached && cached[i])\r\n    }\r\n  } else if (isObject(source)) {\r\n    if (source[Symbol.iterator as any]) {\r\n      ret = Array.from(source as Iterable<any>, (item, i) =>\r\n        renderItem(item, i, undefined, cached && cached[i])\r\n      )\r\n    } else {\r\n      const keys = Object.keys(source)\r\n      ret = new Array(keys.length)\r\n      for (let i = 0, l = keys.length; i < l; i++) {\r\n        const key = keys[i]\r\n        ret[i] = renderItem(source[key], key, i, cached && cached[i])\r\n      }\r\n    }\r\n  } else {\r\n    ret = []\r\n  }\r\n\r\n  if (cache) {\r\n    cache[index!] = ret\r\n  }\r\n  return ret\r\n}\r\n","import { App } from './apiCreateApp'\r\nimport { Fragment, Text, Comment, Static } from './vnode'\r\nimport { ComponentInternalInstance } from './component'\r\n\r\ninterface AppRecord {\r\n  id: number\r\n  app: App\r\n  version: string\r\n  types: Record<string, string | Symbol>\r\n}\r\n\r\nconst enum DevtoolsHooks {\r\n  APP_INIT = 'app:init',\r\n  APP_UNMOUNT = 'app:unmount',\r\n  COMPONENT_UPDATED = 'component:updated',\r\n  COMPONENT_ADDED = 'component:added',\r\n  COMPONENT_REMOVED = 'component:removed',\r\n  COMPONENT_EMIT = 'component:emit',\r\n  PERFORMANCE_START = 'perf:start',\r\n  PERFORMANCE_END = 'perf:end'\r\n}\r\n\r\ninterface DevtoolsHook {\r\n  emit: (event: string, ...payload: any[]) => void\r\n  on: (event: string, handler: Function) => void\r\n  once: (event: string, handler: Function) => void\r\n  off: (event: string, handler: Function) => void\r\n  appRecords: AppRecord[]\r\n}\r\n\r\nexport let devtools: DevtoolsHook\r\n\r\nexport function setDevtoolsHook(hook: DevtoolsHook) {\r\n  devtools = hook\r\n}\r\n\r\nexport function devtoolsInitApp(app: App, version: string) {\r\n  // TODO queue if devtools is undefined\r\n  if (!devtools) return\r\n  devtools.emit(DevtoolsHooks.APP_INIT, app, version, {\r\n    Fragment,\r\n    Text,\r\n    Comment,\r\n    Static\r\n  })\r\n}\r\n\r\nexport function devtoolsUnmountApp(app: App) {\r\n  if (!devtools) return\r\n  devtools.emit(DevtoolsHooks.APP_UNMOUNT, app)\r\n}\r\n\r\nexport const devtoolsComponentAdded = /*#__PURE__*/ createDevtoolsComponentHook(\r\n  DevtoolsHooks.COMPONENT_ADDED\r\n)\r\n\r\nexport const devtoolsComponentUpdated =\r\n  /*#__PURE__*/ createDevtoolsComponentHook(DevtoolsHooks.COMPONENT_UPDATED)\r\n\r\nexport const devtoolsComponentRemoved =\r\n  /*#__PURE__*/ createDevtoolsComponentHook(DevtoolsHooks.COMPONENT_REMOVED)\r\n\r\nfunction createDevtoolsComponentHook(hook: DevtoolsHooks) {\r\n  return (component: ComponentInternalInstance) => {\r\n    if (!devtools) return\r\n    devtools.emit(\r\n      hook,\r\n      component.appContext.app,\r\n      component.uid,\r\n      component.parent ? component.parent.uid : undefined,\r\n      component\r\n    )\r\n  }\r\n}\r\n\r\nexport const devtoolsPerfStart = /*#__PURE__*/ createDevtoolsPerformanceHook(\r\n  DevtoolsHooks.PERFORMANCE_START\r\n)\r\n\r\nexport const devtoolsPerfEnd = /*#__PURE__*/ createDevtoolsPerformanceHook(\r\n  DevtoolsHooks.PERFORMANCE_END\r\n)\r\n\r\nfunction createDevtoolsPerformanceHook(hook: DevtoolsHooks) {\r\n  return (component: ComponentInternalInstance, type: string, time: number) => {\r\n    if (!devtools) return\r\n    devtools.emit(\r\n      hook,\r\n      component.appContext.app,\r\n      component.uid,\r\n      component,\r\n      type,\r\n      time\r\n    )\r\n  }\r\n}\r\n\r\nexport function devtoolsComponentEmit(\r\n  component: ComponentInternalInstance,\r\n  event: string,\r\n  params: any[]\r\n) {\r\n  if (!devtools) return\r\n  devtools.emit(\r\n    DevtoolsHooks.COMPONENT_EMIT,\r\n    component.appContext.app,\r\n    component,\r\n    event,\r\n    params\r\n  )\r\n}\r\n","import { toHandlerKey, isObject } from '@vue/shared'\r\nimport { warn } from '../warning'\r\n\r\n/**\r\n * For prefixing keys in v-on=\"obj\" with \"on\"\r\n * @private\r\n */\r\nexport function toHandlers(obj: Record<string, any>): Record<string, any> {\r\n  const ret: Record<string, any> = {}\r\n  if (__DEV__ && !isObject(obj)) {\r\n    warn(`v-on with no argument expects an object value.`)\r\n    return ret\r\n  }\r\n  for (const key in obj) {\r\n    ret[toHandlerKey(key)] = obj[key]\r\n  }\r\n  return ret\r\n}\r\n","import { warn, getCurrentInstance } from '@vue/runtime-core'\r\nimport { EMPTY_OBJ } from '@vue/shared'\r\n\r\nexport function useCssModule(name = '$style'): Record<string, string> {\r\n  /* istanbul ignore else */\r\n  if (!__GLOBAL__) {\r\n    const instance = getCurrentInstance()!\r\n    if (!instance) {\r\n      __DEV__ && warn(`useCssModule must be called inside setup()`)\r\n      return EMPTY_OBJ\r\n    }\r\n    const modules = instance.type.__cssModules\r\n    if (!modules) {\r\n      __DEV__ && warn(`Current instance does not have CSS modules injected.`)\r\n      return EMPTY_OBJ\r\n    }\r\n    const mod = modules[name]\r\n    if (!mod) {\r\n      __DEV__ &&\r\n        warn(`Current instance does not have CSS module named \"${name}\".`)\r\n      return EMPTY_OBJ\r\n    }\r\n    return mod as Record<string, string>\r\n  } else {\r\n    if (__DEV__) {\r\n      warn(`useCssModule() is not supported in the global build.`)\r\n    }\r\n    return EMPTY_OBJ\r\n  }\r\n}\r\n"],"names":["makeMap","str","expectsLowerCase","map","Object","create","list","split","i","length","val","toLowerCase","isGloballyWhitelisted","isSpecialBooleanAttr","normalizeStyle","value","isArray","res","item","normalized","isString","parseStringStyle","key","isObject","listDelimiterRE","propertyDelimiterRE","cssText","ret","forEach","tmp","trim","normalizeClass","name","isHTMLTag","isSVGTag","isVoidTag","looseEqual","a","b","aValidType","isDate","bValidType","getTime","equal","looseCompareArrays","keys","aHasKey","hasOwnProperty","bHasKey","String","looseIndexOf","arr","findIndex","replacer","_key","__v_isRef","isMap","[object Object]","size","entries","reduce","isSet","values","isPlainObject","EMPTY_OBJ","EMPTY_ARR","NOOP","NO","onRE","isOn","test","isModelListener","startsWith","extend","assign","remove","el","indexOf","splice","prototype","hasOwn","call","Array","toTypeString","Date","isFunction","isSymbol","isPromise","then","catch","objectToString","toString","isIntegerKey","parseInt","isReservedProp","cacheStringFunction","fn","cache","camelizeRE","camelize","replace","_","c","toUpperCase","hyphenateRE","hyphenate","capitalize","charAt","slice","toHandlerKey","hasChanged","oldValue","is","invokeArrayFns","fns","arg","def","obj","defineProperty","configurable","enumerable","toNumber","n","parseFloat","isNaN","createDep","effects","dep","Set","w","wasTracked","trackOpBit","newTracked","activeEffectScope","effectScopeStack","EffectScope","detached","this","parent","index","scopes","push","active","on","off","pop","fromParent","e","stop","cleanups","cleanup","last","recordEffectScope","effect","scope","targetMap","WeakMap","effectTrackDepth","effectStack","activeEffect","ITERATE_KEY","Symbol","MAP_KEY_ITERATE_KEY","ReactiveEffect","scheduler","includes","trackStack","shouldTrack","deps","initDepMarkers","cleanupEffect","ptr","delete","finalizeDepMarkers","resetTracking","undefined","onStop","pauseTracking","track","target","type","isTracking","depsMap","get","set","Map","trackEffects","debuggerEventExtraInfo","has","add","trigger","newValue","oldTarget","triggerEffects","allowRecurse","run","isNonTrackableKeys","builtInSymbols","getOwnPropertyNames","filter","createGetter","shallowGet","readonlyGet","shallowReadonlyGet","arrayInstrumentations","createArrayInstrumentations","instrumentations","args","toRaw","l","apply","isReadonly","shallow","receiver","shallowReadonlyMap","readonlyMap","shallowReactiveMap","reactiveMap","targetIsArray","Reflect","isRef","readonly","reactive","createSetter","hadKey","Number","result","mutableHandlers","deleteProperty","ownKeys","readonlyHandlers","shallowReactiveHandlers","shallowReadonlyHandlers","toReactive","toReadonly","toShallow","getProto","v","getPrototypeOf","isShallow","rawTarget","rawKey","wrap","deleteEntry","clear","hadItems","createForEach","callback","thisArg","observed","createIterableMethod","method","targetIsMap","isPair","iterator","isKeyOnly","innerIterator","done","next","createReadonlyMethod","createInstrumentations","mutableInstrumentations","shallowInstrumentations","readonlyInstrumentations","shallowReadonlyInstrumentations","createInstrumentationGetter","mutableCollectionHandlers","shallowCollectionHandlers","readonlyCollectionHandlers","shallowReadonlyCollectionHandlers","getTargetType","isExtensible","rawType","targetTypeMap","toRawType","createReactiveObject","shallowReactive","baseHandlers","collectionHandlers","proxyMap","existingProxy","targetType","proxy","Proxy","isReactive","isProxy","raw","markRaw","trackRefValue","ref","triggerRefValue","newVal","convert","r","Boolean","createRef","RefImpl","_shallow","_rawValue","_value","rawValue","unref","shallowUnwrapHandlers","proxyRefs","objectWithRefs","CustomRefImpl","factory","_get","_set","ObjectRefImpl","_object","toRef","object","ComputedRefImpl","getter","_setter","_dirty","self","computed","getterOrOptions","debugOptions","setter","emit","instance","event","rawArgs","props","vnode","modelArg","modifiersKey","number","handlerName","handler","callWithAsyncErrorHandling","onceHandler","emitted","normalizeEmitsOptions","comp","appContext","asMixin","emitsCache","cached","emits","hasExtends","extendEmits","normalizedFromExtend","mixins","extends","isEmitListener","options","currentRenderingInstance","currentScopeId","setCurrentRenderingInstance","prev","__scopeId","withCtx","ctx","isNonScopedSlot","_n","renderFnWithContext","_d","setBlockTracking","prevInstance","_c","renderComponentRoot","Component","withProxy","propsOptions","slots","attrs","render","renderCache","data","setupState","inheritAttrs","fallthroughAttrs","shapeFlag","proxyToUse","normalizeVNode","getFunctionalFallthrough","root","some","filterModelListeners","cloneVNode","dirs","concat","transition","err","blockStack","handleError","createVNode","Comment","filterSingleRoot","children","singleRoot","child","isVNode","hasPropsChanged","prevProps","nextProps","emitsOptions","nextKeys","updateHOCHostEl","subTree","Suspense","__isSuspense","n1","n2","container","anchor","parentComponent","parentSuspense","isSVG","slotScopeIds","optimized","rendererInternals","p","patch","o","createElement","hiddenContainer","suspense","createSuspenseBoundary","pendingBranch","ssContent","triggerEvent","ssFallback","setActiveBranch","resolve","mountSuspense","um","unmount","newBranch","newFallback","activeBranch","isInFallback","isHydrating","isSameVNodeType","pendingId","timeout","setTimeout","fallback","patchSuspense","hydrate","node","hydrateNode","parentNode","document","normalize","isSlotChildren","normalizeSuspenseSlot","default","eventListener","m","move","isUnmounted","resume","delayEnter","mode","afterLeave","hasUnresolvedAncestor","queuePostFlushCb","fallbackVNode","mountFallback","setupRenderEffect","isInPendingSuspense","hydratedEl","asyncDep","asyncSetupResult","suspenseId","asyncResolved","handleSetupResult","placeholder","doRemove","s","block","isCompiledSlot","openBlock","currentBlock","closeBlock","singleChild","dynamicChildren","queueEffectWithSuspense","branch","provide","currentInstance","provides","parentProvides","inject","defaultValue","treatDefaultAsFactory","arguments","useTransitionState","state","isMounted","isLeaving","isUnmounting","leavingVNodes","onMounted","onBeforeUnmount","TransitionHookValidator","Function","BaseTransition","appear","persisted","onBeforeEnter","onEnter","onAfterEnter","onEnterCancelled","onBeforeLeave","onLeave","onAfterLeave","onLeaveCancelled","onBeforeAppear","onAppear","onAfterAppear","onAppearCancelled","getCurrentInstance","prevTransitionKey","getTransitionRawChildren","rawProps","emptyPlaceholder","innerChild","getKeepAliveChild","enterHooks","resolveTransitionHooks","setTransitionHooks","oldChild","oldInnerChild","transitionKeyChanged","getTransitionKey","leavingHooks","update","delayLeave","earlyRemove","delayedLeave","getLeavingNodesForType","_leaveCb","leavingVNodesCache","callHook","hook","hooks","leavingVNode","afterHook","cancelHook","called","_enterCb","cancelled","clone","isKeepAlive","component","keepComment","keyedFragmentCount","Fragment","patchFlag","defineComponent","setup","isAsyncWrapper","__asyncLoader","createInnerComp","__isKeepAlive","KeepAlive","include","RegExp","exclude","max","sharedContext","renderer","current","_unmount","storageContainer","resetShapeFlag","pruneCache","getComponentName","pruneCacheEntry","activate","queuePostRenderEffect","isDeactivated","vnodeHook","onVnodeMounted","invokeVNodeHook","deactivate","da","onVnodeUnmounted","watch","matches","flush","deep","pendingCacheKey","cacheSubtree","getInnerChild","onUpdated","rawVNode","__asyncResolved","cachedVNode","pattern","onActivated","registerKeepAliveHook","onDeactivated","wrappedHook","__wdc","injectHook","injectToKeepAliveRoot","keepAliveRoot","injected","onUnmounted","prepend","__weh","setCurrentInstance","unsetCurrentInstance","unshift","createHook","lifecycle","isInSSRComponentSetup","onBeforeMount","onBeforeUpdate","onServerPrefetch","onRenderTriggered","onRenderTracked","onErrorCaptured","shouldCacheAccess","applyOptions","resolveMergedOptions","publicThis","beforeCreate","dataOptions","computedOptions","methods","watchOptions","provideOptions","injectOptions","created","beforeMount","mounted","beforeUpdate","updated","activated","deactivated","beforeUnmount","unmounted","renderTracked","renderTriggered","errorCaptured","serverPrefetch","expose","components","directives","checkDuplicateProperties","unwrapRef","normalizeInject","opt","from","resolveInjections","config","unwrapInjectedRef","methodHandler","bind","createWatcher","registerLifecycleHook","register","_hook","exposed","h","createPathGetter","base","extendsOptions","globalMixins","optionsCache","optionMergeStrategies","resolved","mergeOptions","to","strats","strat","internalOptionMergeStrats","mergeDataFn","mergeObjectOptions","mergeAsArray","beforeDestroy","destroyed","merged","setFullProps","needCastKeys","rawCastValues","hasAttrsChanged","camelKey","rawCurrentProps","castValues","resolvePropValue","isAbsent","hasDefault","propsDefaults","normalizePropsOptions","propsCache","extendProps","normalizedKey","validatePropName","prop","booleanIndex","getTypeIndex","stringIndex","getType","ctor","match","isSameType","expectedTypes","t","isInternalKey","normalizeSlotValue","normalizeSlot","rawSlot","normalizeObjectSlots","rawSlots","_ctx","normalizeVNodeSlots","invokeDirectiveHook","prevVNode","bindings","oldBindings","binding","dir","createAppContext","app","isNativeTag","performance","globalProperties","errorHandler","warnHandler","compilerOptions","uid","createAppAPI","rootComponent","rootProps","context","installedPlugins","_uid","_component","_props","_container","_context","_instance","version","use","plugin","install","mixin","directive","rootContainer","isHydrate","__vue_app__","hasMismatch","isSVGContainer","namespaceURI","tagName","isComment","nodeType","createHydrationFunctions","mt","mountComponent","patchProp","nextSibling","insert","createComment","isFragmentStart","onMismatch","handleMismatch","domType","nextNode","Text","Static","needToAdoptContent","staticCount","outerHTML","hydrateFragment","hydrateElement","locateClosingAsyncAnchor","previousSibling","lastChild","createTextVNode","hydrateChildren","setRef","forcePatchValue","endsWith","onClick","vnodeHooks","onVnodeBeforeMount","innerHTML","textContent","firstChild","cur","parentVNode","fragmentSlotScopeIds","isFragment","end","hasChildNodes","flushPostFlushCbs","console","error","createRenderer","baseCreateRenderer","createHydrationRenderer","createHydrationFns","hostInsert","hostRemove","hostPatchProp","hostCreateElement","createText","hostCreateText","hostCreateComment","setText","hostSetText","setElementText","hostSetElementText","hostParentNode","hostNextSibling","setScopeId","hostSetScopeId","cloneNode","hostCloneNode","insertStaticContent","hostInsertStaticContent","getNextHostNode","processText","processCommentNode","mountStaticNode","processFragment","processElement","processComponent","process","internals","mountElement","patchElement","mountChildren","unmountChildren","scopeId","needCallTransitionHooks","beforeEnter","enter","start","cloneIfMounted","oldProps","newProps","onVnodeBeforeUpdate","patchProps","class","style","propsToUpdate","dynamicProps","areChildrenSVG","patchBlockChildren","patchChildren","onVnodeUpdated","oldChildren","newChildren","fallbackContainer","oldVNode","newVNode","fragmentStartAnchor","fragmentEndAnchor","traverseStaticChildren","updateComponent","initialVNode","emptyAppContext","exposeProxy","accessCache","refs","setupContext","bc","bm","bu","u","bum","rtg","rtc","ec","sp","ce","createComponentInstance","isSSR","isStateful","isStatefulComponent","InternalObjectKey","initProps","initSlots","setupResult","PublicInstanceProxyHandlers","createSetupContext","callWithErrorHandling","resolvedResult","finishComponentSetup","setupStatefulComponent","setupComponent","registerDep","nextVNode","prevChildren","nextChildren","$stable","shouldUpdateComponent","updateComponentPreRender","job","queue","flushIndex","invalidateJob","originNext","nextTree","prevTree","hydrateSubTree","scopedInitialVNode","queueJob","id","rawPrevProps","kebabKey","camelizedKey","updateProps","needDeletionCheck","deletionComparisonTarget","updateSlots","flushPreFlushCbs","c1","prevShapeFlag","c2","patchKeyedChildren","patchUnkeyedChildren","oldLength","newLength","commonLength","Math","min","nextChild","parentAnchor","l2","e1","e2","nextPos","s1","s2","keyToNewIndexMap","j","patched","toBePatched","moved","maxNewIndexSoFar","newIndexToOldIndexMap","prevChild","newIndex","increasingNewIndexSequence","len","arrI","getSequence","nextIndex","moveType","moveStaticNode","leave","performLeave","shouldInvokeDirs","onVnodeBeforeUnmount","unmountComponent","removeFragment","removeStaticNode","performRemove","_vnode","mc","pc","pbc","createApp","rawRef","oldRawRef","isUnmount","refValue","getExposeProxy","owner","oldRef","doSet","ch1","ch2","isTeleportDisabled","disabled","isTargetSVG","SVGElement","resolveTarget","select","targetSelector","moveTeleport","targetAnchor","isReorder","Teleport","__isTeleport","querySelector","mainAnchor","mount","wasDisabled","currentContainer","currentAnchor","nextTarget","targetNode","_lpa","COMPONENTS","NULL_DYNAMIC_COMPONENT","resolveAsset","warnMissing","maybeSelfReference","selfName","registry","disableTracking","isBlockTreeEnabled","setupBlock","createBlock","__v_isVNode","normalizeKey","normalizeRef","createBaseVNode","isBlockNode","needFullChildrenNormalization","__v_skip","normalizeChildren","cloned","__vccOpts","guardReactiveProps","klass","isSuspense","isTeleport","extraProps","mergeRef","mergedProps","mergeProps","text","flag","memo","slot","slotFlag","toMerge","existing","incoming","ensureValidVNode","vnodes","getPublicInstance","publicPropertiesMap","$","$el","$data","$props","$attrs","$slots","$refs","$parent","$root","$emit","$options","$forceUpdate","$nextTick","nextTick","$watch","instanceWatch","normalizedProps","publicGetter","cssModule","__cssModules","RuntimeCompiledPublicInstanceProxyHandlers","unscopables","compile","installWithProxy","registerRuntimeCompiler","_compile","_rc","skipOptions","template","isCustomElement","delimiters","componentCompilerOptions","finalCompilerOptions","createAttrsProxy","classifyRE","displayName","formatComponentName","isRoot","__file","inferFromRegistry","stack","warn","msg","appWarnHandler","trace","currentVNode","normalizedStack","recurseCount","parentInstance","getComponentTrace","join","warnArgs","logs","entry","postfix","open","close","formatProps","formatTraceEntry","formatTrace","formatProp","JSON","stringify","throwInDev","exposedInstance","errorInfo","errorCapturedHooks","appErrorHandler","contextVNode","logError","isFlushing","isFlushPending","pendingPreFlushCbs","activePreFlushCbs","preFlushIndex","pendingPostFlushCbs","activePostFlushCbs","postFlushIndex","resolvedPromise","Promise","currentFlushPromise","currentPreFlushParentJob","middle","getId","findInsertionIndex","queueFlush","flushJobs","queueCb","cb","activeQueue","pendingQueue","seen","parentJob","deduped","sort","Infinity","watchPostEffect","doWatch","INITIAL_WATCHER_VALUE","source","immediate","forceTrigger","isMultiSource","traverse","onInvalidate","baseGetter","queuePreFlushCb","path","segments","getContext","propsOrChildren","ssrContextKey","isMemoSame","doc","staticTemplateCache","nodeOps","insertBefore","removeChild","tag","createElementNS","multiple","setAttribute","createTextNode","nodeValue","selector","content","before","wrapper","appendChild","importantRE","setStyle","setProperty","prefixed","rawName","prefixCache","prefixes","autoPrefix","xlinkNS","_getNow","now","skipTimestampCheck","window","createEvent","timeStamp","ffMatch","navigator","userAgent","cachedNow","reset","addEventListener","patchEvent","prevValue","nextValue","invokers","_vei","existingInvoker","optionsModifierRE","parseName","initialValue","invoker","attached","originalStop","stopImmediatePropagation","_stopped","patchStopImmediatePropagation","getNow","createInvoker","removeEventListener","nativeOnRE","defineCustomElement","hydate","Comp","VueCustomElement","VueElement","initialProps","super","BaseClass","HTMLElement","_def","shadowRoot","_createVNode","attachShadow","attributes","_setAttr","MutationObserver","mutations","attributeName","observe","_connected","_resolveDef","_resolved","_setProp","styles","rawKeys","_getProp","_applyStyles","asyncDef","getAttribute","shouldReflect","removeAttribute","isCE","dispatchEvent","CustomEvent","detail","host","css","setVarsOnVNode","vars","setVarsOnNode","TRANSITION","ANIMATION","Transition","resolveTransitionProps","DOMTransitionPropsValidators","duration","enterFromClass","enterActiveClass","enterToClass","appearFromClass","appearActiveClass","appearToClass","leaveFromClass","leaveActiveClass","leaveToClass","TransitionPropsValidators","hasExplicitCallback","baseProps","durations","NumberOf","normalizeDuration","enterDuration","leaveDuration","finishEnter","isAppear","removeTransitionClass","finishLeave","makeEnterHook","nextFrame","addTransitionClass","whenTransitionEnds","forceReflow","cls","classList","_vtc","requestAnimationFrame","endId","expectedType","explicitTimeout","_endId","resolveIfNotStale","propCount","getTransitionInfo","endEvent","ended","onEnd","getComputedStyle","getStyleProperties","transitionDelays","transitionDurations","transitionTimeout","getTimeout","animationDelays","animationDurations","animationTimeout","hasTransform","delays","d","toMs","body","offsetHeight","positionMap","newPositionMap","TransitionGroup","moveClass","display","hasCSSTransform","callPendingCbs","recordPosition","movedChildren","applyTranslation","transform","webkitTransform","transitionDuration","_moveCb","propertyName","cssTransitionProps","getBoundingClientRect","oldPos","newPos","dx","left","dy","top","getModelAssigner","onCompositionStart","composing","onCompositionEnd","initEvent","vModelText","modifiers","lazy","_assign","castToNumber","domValue","activeElement","vModelCheckbox","modelValue","_modelValue","elementValue","getValue","checked","found","filtered","getCheckboxValue","setChecked","vModelRadio","vModelSelect","isSetModel","selectedVal","selected","setSelected","_binding","isMultiple","option","optionValue","selectedIndex","vModelDynamic","callModelHook","modelToUse","systemModifiers","modifierGuards","stopPropagation","prevent","preventDefault","currentTarget","ctrl","ctrlKey","shift","shiftKey","alt","altKey","meta","metaKey","button","right","exact","keyNames","esc","space","up","down","vShow","_vod","setDisplay","rendererOptions","transitionClasses","className","patchClass","patchStyle","shouldSetAsProp","patchDOMProp","_trueValue","_falseValue","removeAttributeNS","setAttributeNS","isBoolean","patchAttr","enabledHydration","ensureRenderer","ensureHydrationRenderer","normalizeContainer","defaultOnError","defaultOnWarn","code","loc","messages","additionalMessage","SyntaxError","FRAGMENT","TELEPORT","SUSPENSE","KEEP_ALIVE","BASE_TRANSITION","OPEN_BLOCK","CREATE_BLOCK","CREATE_ELEMENT_BLOCK","CREATE_VNODE","CREATE_ELEMENT_VNODE","CREATE_COMMENT","CREATE_TEXT","CREATE_STATIC","RESOLVE_COMPONENT","RESOLVE_DYNAMIC_COMPONENT","RESOLVE_DIRECTIVE","RESOLVE_FILTER","WITH_DIRECTIVES","RENDER_LIST","RENDER_SLOT","CREATE_SLOTS","TO_DISPLAY_STRING","MERGE_PROPS","NORMALIZE_CLASS","NORMALIZE_STYLE","NORMALIZE_PROPS","GUARD_REACTIVE_PROPS","TO_HANDLERS","CAMELIZE","CAPITALIZE","TO_HANDLER_KEY","SET_BLOCK_TRACKING","PUSH_SCOPE_ID","POP_SCOPE_ID","WITH_SCOPE_ID","WITH_CTX","UNREF","IS_REF","WITH_MEMO","IS_MEMO_SAME","helperNameMap","locStub","line","column","offset","createVNodeCall","isBlock","isComponent","helper","getVNodeBlockHelper","inSSR","getVNodeHelper","createArrayExpression","elements","createObjectExpression","properties","createObjectProperty","createSimpleExpression","isStatic","constType","createCompoundExpression","createCallExpression","callee","createFunctionExpression","params","returns","newline","isSlot","createConditionalExpression","consequent","alternate","isStaticExp","isBuiltInType","expected","isCoreComponent","nonIdentifierRE","isSimpleIdentifier","validFirstIdentCharRE","validIdentCharRE","whitespaceRE","isMemberExpression","stateStack","currentOpenBracketCount","currentOpenParensCount","currentStringType","char","getInnerRange","newLoc","substr","advancePositionWithClone","pos","numberOfCharacters","advancePositionWithMutation","linesCount","lastNewLinePos","charCodeAt","findDir","allowEmpty","exp","findProp","dynamicOnly","isBindKey","isText","isVSlot","isTemplateNode","tagType","isSlotOutlet","ssr","propsHelperSet","getUnnormalizedProps","callPath","injectProp","propsWithInjection","parentCall","first","alreadyExists","propKeyName","toValidAssetId","makeBlock","removeHelper","decodeRE","decodeMap","gt","lt","amp","apos","quot","defaultParserOptions","getNamespace","getTextMode","isPreTag","decodeEntities","rawText","p1","onError","onWarn","comments","baseParse","rawOptions","originalSource","inPre","inVPre","createParserContext","getCursor","helpers","hoists","imports","temps","codegenNode","createRoot","parseChildren","getSelection","ancestors","ns","nodes","isEnd","parseInterpolation","parseComment","parseBogusComment","parseCDATA","advanceBy","parseTag","parseElement","parseText","pushNode","removedWhitespace","shouldCondense","whitespace","exec","prevIndex","nestedIndex","contentStart","closeIndex","wasInPre","wasInVPre","element","isPreBoundary","isVPreBoundary","isSelfClosing","startsWithEndTagOpen","isSpecialTemplateDirective","advanceSpaces","cursor","currentSource","parseAttributes","isBuiltInComponent","attributeNames","attr","parseAttribute","nameSet","quote","isQuoted","endIndex","parseTextData","unexpectedChars","parseAttributeValue","isPropShorthand","dirName","startOffset","lastIndexOf","getNewPosition","valueLoc","innerStart","innerEnd","rawContentLength","rawContent","preTrimContent","endTokens","xs","searchString","hoistStatic","walk","isSingleElementRoot","doNotHoistNode","canStringify","originalCount","hoistedCount","constantType","getConstantType","hoist","getPatchFlag","getGeneratedPropsConstantType","getNodeProps","contentType","vSlot","branches","transformHoist","constantCache","returnType","generatedPropsType","childType","expType","allowHoistedHelperSet","getConstantTypeOfHelperCall","keyType","valueType","createTransformContext","filename","prefixIdentifiers","cacheHandlers","nodeTransforms","directiveTransforms","expressionPlugins","slotted","ssrCssVars","bindingMetadata","inline","isTS","compatConfig","nameMatch","identifiers","vFor","vPre","vOnce","currentNode","childIndex","inVOnce","count","currentCount","helperString","removalIndex","onNodeRemoved","identifier","hoisted","createCacheExpression","traverseNode","createRootCodegen","exitFns","onExit","nodeRemoved","traverseChildren","createStructuralDirectiveTransform","PURE_ANNOTATION","generate","ast","sourceMap","optimizeImports","runtimeGlobalName","runtimeModuleName","indentLevel","pure","withoutNewLine","repeat","createCodegenContext","onContextCreated","indent","deindent","hasHelpers","useWithBlock","VueBinding","aliasHelper","genNode","genHoists","genFunctionPreamble","genAssets","preamble","toJSON","assets","resolver","genNodeListAsArray","multilines","genNodeList","comma","genText","genExpression","genInterpolation","genCompoundExpression","genComment","callHelper","genNullableArgs","genVNodeCall","genCallExpression","genExpressionAsPropertyKey","genObjectExpression","genArrayExpression","genFunctionExpression","needNewline","needsParens","isNested","genConditionalExpression","genCacheExpression","transformIf","processCodegen","createIfBranch","ifNode","replaceNode","siblings","sibling","removeNode","processIf","createCodegenNodeForBranch","getParentCondition","condition","userKey","keyIndex","createChildrenCodegenNode","keyProperty","vnodeCall","transformFor","parseResult","parseForExpression","forNode","valueAlias","keyAlias","objectIndexAlias","processFor","renderExp","keyProp","keyExp","isStableFragment","fragmentFlag","childBlock","isTemplate","needFragmentWrapper","slotOutlet","loop","createForLoopParams","forAliasRE","forIteratorRE","stripParensRE","input","inMatch","LHS","RHS","createAliasExpression","valueContent","trimmedOffset","iteratorMatch","keyContent","keyOffset","indexContent","range","memoArgs","createParamsList","defaultFallback","trackSlotScopes","buildClientSlotFn","buildSlots","buildSlotFn","slotsProperties","dynamicSlots","hasDynamicSlots","onComponentSlot","hasTemplateSlots","hasNamedDefaultSlot","implicitDefaultChildren","seenSlotNames","slotElement","slotDir","slotChildren","slotLoc","slotName","slotProps","staticSlotName","slotFunction","vIf","vElse","buildDynamicSlot","conditional","buildDefaultSlotProperty","isNonWhitespaceContent","hasForwardedSlots","directiveImportMap","transformElement","vnodeTag","isExplicitDynamic","isComponentTag","isProp","isDir","builtIn","resolveComponentType","vnodeProps","vnodeChildren","vnodePatchFlag","vnodeDynamicProps","dynamicPropNames","vnodeDirectives","shouldUseBlock","propsBuildResult","buildProps","dirArgs","runtime","trueExpression","modifier","buildDirectiveArgs","hasDynamicTextChild","propsNamesString","stringifyDynamicPropNames","elementLoc","mergeArgs","runtimeDirectives","hasRef","hasClassBinding","hasStyleBinding","hasHydrationEventBinding","hasDynamicKeys","hasVnodeHook","analyzePatchFlag","isEventHandler","isVBind","isVOn","dedupeProperties","directiveTransform","needRuntime","propsExpression","classKeyIndex","styleKeyIndex","hasDynamicKey","isHandlerKey","classProp","styleProp","knownProps","transformSlotOutlet","nonNameProps","processSlotOutlet","slotArgs","fnExpRE","transformOn","augmentor","eventName","shouldCache","isMemberExp","isInlineStatement","hasMultipleStatements","transformBind","_node","injectPrefix","prefix","transformText","hasText","find","callArgs","WeakSet","transformOnce","transformModel","createTransformProps","rawExp","expString","propName","assignmentExp","transformMemo","baseCompile","isModuleMode","model","V_MODEL_RADIO","V_MODEL_CHECKBOX","V_MODEL_TEXT","V_MODEL_SELECT","V_MODEL_DYNAMIC","V_ON_WITH_MODIFIERS","V_ON_WITH_KEYS","V_SHOW","TRANSITION_GROUP","decoder","getOwnPropertySymbols","isRawTextContainer","parserOptions","asAttr","parseInlineCSS","isEventOptionModifier","isNonKeyModifier","maybeKeyModifier","isKeyboardEvent","transformClick","ignoreSideEffectTags","DOMNodeTransforms","DOMDirectiveTransforms","cloak","html","baseResult","baseTransform","directiveToUse","isInvalidType","hasDynamicKeyVBind","handlerExp","keyModifiers","nonKeyModifiers","eventOptionModifiers","resolveModifiers","modifierPostfix","show","compileCache","compileToFunction","containerOrSelector","Element","asBlock","numberOfNodes","loader","loadingComponent","errorComponent","delay","suspensible","userOnError","resolvedComp","pendingRequest","retries","load","thisRequest","Error","reject","__esModule","toStringTag","loaded","delayed","_effect","runner","defaults","renderItem","noSlotted","validSlotContent","rendered","devtools","transformer","setVars","ob","childList","disconnect","getAwaitable","awaitable","eventKey","k","guard","_id"],"mappings":"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"}